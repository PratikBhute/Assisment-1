{
	"id": "1ba0941198fe5395503b7d26a5e64311",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.18",
	"solcLongVersion": "0.8.18+commit.87f61d96",
	"input": {
		"language": "Solidity",
		"sources": {
			"MY MainNFT/Art_Gallary_flattened.sol": {
				"content": "\n// File: @openzeppelin/contracts/utils/Counters.sol\n\n\n// OpenZeppelin Contracts v4.4.1 (utils/Counters.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @title Counters\n * @author Matt Condon (@shrugs)\n * @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n * of elements in a mapping, issuing ERC721 ids, or counting request ids.\n *\n * Include with `using Counters for Counters.Counter;`\n */\nlibrary Counters {\n    struct Counter {\n        // This variable should never be directly accessed by users of the library: interactions must be restricted to\n        // the library's function. As of Solidity v0.5.2, this cannot be enforced, though there is a proposal to add\n        // this feature: see https://github.com/ethereum/solidity/issues/4637\n        uint256 _value; // default: 0\n    }\n\n    function current(Counter storage counter) internal view returns (uint256) {\n        return counter._value;\n    }\n\n    function increment(Counter storage counter) internal {\n        unchecked {\n            counter._value += 1;\n        }\n    }\n\n    function decrement(Counter storage counter) internal {\n        uint256 value = counter._value;\n        require(value > 0, \"Counter: decrement overflow\");\n        unchecked {\n            counter._value = value - 1;\n        }\n    }\n\n    function reset(Counter storage counter) internal {\n        counter._value = 0;\n    }\n}\n\n// File: @openzeppelin/contracts/utils/math/Math.sol\n\n\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Down, // Toward negative infinity\n        Up, // Toward infinity\n        Zero // Toward zero\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds up instead\n     * of rounding down.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n     * with further edits by Uniswap Labs also under MIT license.\n     */\n    function mulDiv(\n        uint256 x,\n        uint256 y,\n        uint256 denominator\n    ) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod0 := mul(x, y)\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            require(denominator > prod1);\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\n            // See https://cs.stackexchange.com/q/138556/92363.\n\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\n            uint256 twos = denominator & (~denominator + 1);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\n            // in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(\n        uint256 x,\n        uint256 y,\n        uint256 denominator,\n        Rounding rounding\n    ) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10**64) {\n                value /= 10**64;\n                result += 64;\n            }\n            if (value >= 10**32) {\n                value /= 10**32;\n                result += 32;\n            }\n            if (value >= 10**16) {\n                value /= 10**16;\n                result += 16;\n            }\n            if (value >= 10**8) {\n                value /= 10**8;\n                result += 8;\n            }\n            if (value >= 10**4) {\n                value /= 10**4;\n                result += 4;\n            }\n            if (value >= 10**2) {\n                value /= 10**2;\n                result += 2;\n            }\n            if (value >= 10**1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (rounding == Rounding.Up && 10**result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (rounding == Rounding.Up && 1 << (result * 8) < value ? 1 : 0);\n        }\n    }\n}\n\n// File: @openzeppelin/contracts/utils/Strings.sol\n\n\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant _SYMBOLS = \"0123456789abcdef\";\n    uint8 private constant _ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\n    }\n}\n\n// File: @openzeppelin/contracts/utils/Context.sol\n\n\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\n// File: @openzeppelin/contracts/access/Ownable.sol\n\n\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n\n// File: @openzeppelin/contracts/utils/Address.sol\n\n\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n\n// File: @openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\n\n\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @title ERC721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n\n// File: @openzeppelin/contracts/utils/introspection/IERC165.sol\n\n\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n\n// File: @openzeppelin/contracts/utils/introspection/ERC165.sol\n\n\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.0;\n\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n\n// File: @openzeppelin/contracts/token/ERC721/IERC721.sol\n\n\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.0;\n\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes calldata data\n    ) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool _approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n\n// File: @openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol\n\n\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC721/extensions/IERC721Enumerable.sol)\n\npragma solidity ^0.8.0;\n\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional enumeration extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Enumerable is IERC721 {\n    /**\n     * @dev Returns the total amount of tokens stored by the contract.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns a token ID owned by `owner` at a given `index` of its token list.\n     * Use along with {balanceOf} to enumerate all of ``owner``'s tokens.\n     */\n    function tokenOfOwnerByIndex(address owner, uint256 index) external view returns (uint256);\n\n    /**\n     * @dev Returns a token ID at a given `index` of all the tokens stored by the contract.\n     * Use along with {totalSupply} to enumerate all tokens.\n     */\n    function tokenByIndex(uint256 index) external view returns (uint256);\n}\n\n// File: @openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\n\n\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/IERC721Metadata.sol)\n\npragma solidity ^0.8.0;\n\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Metadata is IERC721 {\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n}\n\n// File: @openzeppelin/contracts/token/ERC721/ERC721.sol\n\n\n// OpenZeppelin Contracts (last updated v4.8.2) (token/ERC721/ERC721.sol)\n\npragma solidity ^0.8.0;\n\n\n\n\n\n\n\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\n * {ERC721Enumerable}.\n */\ncontract ERC721 is Context, ERC165, IERC721, IERC721Metadata {\n    using Address for address;\n    using Strings for uint256;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    // Mapping from token ID to owner address\n    mapping(uint256 => address) private _owners;\n\n    // Mapping owner address to token count\n    mapping(address => uint256) private _balances;\n\n    // Mapping from token ID to approved address\n    mapping(uint256 => address) private _tokenApprovals;\n\n    // Mapping from owner to operator approvals\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\n\n    /**\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC721).interfaceId ||\n            interfaceId == type(IERC721Metadata).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721-balanceOf}.\n     */\n    function balanceOf(address owner) public view virtual override returns (uint256) {\n        require(owner != address(0), \"ERC721: address zero is not a valid owner\");\n        return _balances[owner];\n    }\n\n    /**\n     * @dev See {IERC721-ownerOf}.\n     */\n    function ownerOf(uint256 tokenId) public view virtual override returns (address) {\n        address owner = _ownerOf(tokenId);\n        require(owner != address(0), \"ERC721: invalid token ID\");\n        return owner;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-name}.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-symbol}.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\n        _requireMinted(tokenId);\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \"\";\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, can be overridden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return \"\";\n    }\n\n    /**\n     * @dev See {IERC721-approve}.\n     */\n    function approve(address to, uint256 tokenId) public virtual override {\n        address owner = ERC721.ownerOf(tokenId);\n        require(to != owner, \"ERC721: approval to current owner\");\n\n        require(\n            _msgSender() == owner || isApprovedForAll(owner, _msgSender()),\n            \"ERC721: approve caller is not token owner or approved for all\"\n        );\n\n        _approve(to, tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-getApproved}.\n     */\n    function getApproved(uint256 tokenId) public view virtual override returns (address) {\n        _requireMinted(tokenId);\n\n        return _tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev See {IERC721-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual override {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC721-isApprovedForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev See {IERC721-transferFrom}.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) public virtual override {\n        //solhint-disable-next-line max-line-length\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: caller is not token owner or approved\");\n\n        _transfer(from, to, tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) public virtual override {\n        safeTransferFrom(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory data\n    ) public virtual override {\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: caller is not token owner or approved\");\n        _safeTransfer(from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\n     *\n     * This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeTransfer(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory data\n    ) internal virtual {\n        _transfer(from, to, tokenId);\n        require(_checkOnERC721Received(from, to, tokenId, data), \"ERC721: transfer to non ERC721Receiver implementer\");\n    }\n\n    /**\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n     */\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\n        return _owners[tokenId];\n    }\n\n    /**\n     * @dev Returns whether `tokenId` exists.\n     *\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n     *\n     * Tokens start existing when they are minted (`_mint`),\n     * and stop existing when they are burned (`_burn`).\n     */\n    function _exists(uint256 tokenId) internal view virtual returns (bool) {\n        return _ownerOf(tokenId) != address(0);\n    }\n\n    /**\n     * @dev Returns whether `spender` is allowed to manage `tokenId`.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {\n        address owner = ERC721.ownerOf(tokenId);\n        return (spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender);\n    }\n\n    /**\n     * @dev Safely mints `tokenId` and transfers it to `to`.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMint(address to, uint256 tokenId) internal virtual {\n        _safeMint(to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeMint(\n        address to,\n        uint256 tokenId,\n        bytes memory data\n    ) internal virtual {\n        _mint(to, tokenId);\n        require(\n            _checkOnERC721Received(address(0), to, tokenId, data),\n            \"ERC721: transfer to non ERC721Receiver implementer\"\n        );\n    }\n\n    /**\n     * @dev Mints `tokenId` and transfers it to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - `to` cannot be the zero address.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _mint(address to, uint256 tokenId) internal virtual {\n        require(to != address(0), \"ERC721: mint to the zero address\");\n        require(!_exists(tokenId), \"ERC721: token already minted\");\n\n        _beforeTokenTransfer(address(0), to, tokenId, 1);\n\n        // Check that tokenId was not minted by `_beforeTokenTransfer` hook\n        require(!_exists(tokenId), \"ERC721: token already minted\");\n\n        unchecked {\n            // Will not overflow unless all 2**256 token ids are minted to the same owner.\n            // Given that tokens are minted one by one, it is impossible in practice that\n            // this ever happens. Might change if we allow batch minting.\n            // The ERC fails to describe this case.\n            _balances[to] += 1;\n        }\n\n        _owners[tokenId] = to;\n\n        emit Transfer(address(0), to, tokenId);\n\n        _afterTokenTransfer(address(0), to, tokenId, 1);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId) internal virtual {\n        address owner = ERC721.ownerOf(tokenId);\n\n        _beforeTokenTransfer(owner, address(0), tokenId, 1);\n\n        // Update ownership in case tokenId was transferred by `_beforeTokenTransfer` hook\n        owner = ERC721.ownerOf(tokenId);\n\n        // Clear approvals\n        delete _tokenApprovals[tokenId];\n\n        unchecked {\n            // Cannot overflow, as that would require more tokens to be burned/transferred\n            // out than the owner initially received through minting and transferring in.\n            _balances[owner] -= 1;\n        }\n        delete _owners[tokenId];\n\n        emit Transfer(owner, address(0), tokenId);\n\n        _afterTokenTransfer(owner, address(0), tokenId, 1);\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _transfer(\n        address from,\n        address to,\n        uint256 tokenId\n    ) internal virtual {\n        require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer from incorrect owner\");\n        require(to != address(0), \"ERC721: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, tokenId, 1);\n\n        // Check that tokenId was not transferred by `_beforeTokenTransfer` hook\n        require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer from incorrect owner\");\n\n        // Clear approvals from the previous owner\n        delete _tokenApprovals[tokenId];\n\n        unchecked {\n            // `_balances[from]` cannot overflow for the same reason as described in `_burn`:\n            // `from`'s balance is the number of token held, which is at least one before the current\n            // transfer.\n            // `_balances[to]` could overflow in the conditions described in `_mint`. That would require\n            // all 2**256 token ids to be minted, which in practice is impossible.\n            _balances[from] -= 1;\n            _balances[to] += 1;\n        }\n        _owners[tokenId] = to;\n\n        emit Transfer(from, to, tokenId);\n\n        _afterTokenTransfer(from, to, tokenId, 1);\n    }\n\n    /**\n     * @dev Approve `to` to operate on `tokenId`\n     *\n     * Emits an {Approval} event.\n     */\n    function _approve(address to, uint256 tokenId) internal virtual {\n        _tokenApprovals[tokenId] = to;\n        emit Approval(ERC721.ownerOf(tokenId), to, tokenId);\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(\n        address owner,\n        address operator,\n        bool approved\n    ) internal virtual {\n        require(owner != operator, \"ERC721: approve to caller\");\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Reverts if the `tokenId` has not been minted yet.\n     */\n    function _requireMinted(uint256 tokenId) internal view virtual {\n        require(_exists(tokenId), \"ERC721: invalid token ID\");\n    }\n\n    /**\n     * @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\n     * The call is not executed if the target address is not a contract.\n     *\n     * @param from address representing the previous owner of the given token ID\n     * @param to target address that will receive the tokens\n     * @param tokenId uint256 ID of the token to be transferred\n     * @param data bytes optional data to send along with the call\n     * @return bool whether the call correctly returned the expected magic value\n     */\n    function _checkOnERC721Received(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory data\n    ) private returns (bool) {\n        if (to.isContract()) {\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {\n                return retval == IERC721Receiver.onERC721Received.selector;\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    revert(\"ERC721: transfer to non ERC721Receiver implementer\");\n                } else {\n                    /// @solidity memory-safe-assembly\n                    assembly {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        } else {\n            return true;\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any token transfer. This includes minting and burning. If {ERC721Consecutive} is\n     * used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, ``from``'s tokens will be transferred to `to`.\n     * - When `from` is zero, the tokens will be minted for `to`.\n     * - When `to` is zero, ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     * - `batchSize` is non-zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 firstTokenId,\n        uint256 batchSize\n    ) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any token transfer. This includes minting and burning. If {ERC721Consecutive} is\n     * used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, ``from``'s tokens were transferred to `to`.\n     * - When `from` is zero, the tokens were minted for `to`.\n     * - When `to` is zero, ``from``'s tokens were burned.\n     * - `from` and `to` are never both zero.\n     * - `batchSize` is non-zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(\n        address from,\n        address to,\n        uint256 firstTokenId,\n        uint256 batchSize\n    ) internal virtual {}\n\n    /**\n     * @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n     *\n     * WARNING: Anyone calling this MUST ensure that the balances remain consistent with the ownership. The invariant\n     * being that for any address `a` the value returned by `balanceOf(a)` must be equal to the number of tokens such\n     * that `ownerOf(tokenId)` is `a`.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function __unsafe_increaseBalance(address account, uint256 amount) internal {\n        _balances[account] += amount;\n    }\n}\n\n// File: @openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\n\n\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC721/extensions/ERC721Enumerable.sol)\n\npragma solidity ^0.8.0;\n\n\n\n/**\n * @dev This implements an optional extension of {ERC721} defined in the EIP that adds\n * enumerability of all the token ids in the contract as well as all token ids owned by each\n * account.\n */\nabstract contract ERC721Enumerable is ERC721, IERC721Enumerable {\n    // Mapping from owner to list of owned token IDs\n    mapping(address => mapping(uint256 => uint256)) private _ownedTokens;\n\n    // Mapping from token ID to index of the owner tokens list\n    mapping(uint256 => uint256) private _ownedTokensIndex;\n\n    // Array with all token ids, used for enumeration\n    uint256[] private _allTokens;\n\n    // Mapping from token id to position in the allTokens array\n    mapping(uint256 => uint256) private _allTokensIndex;\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(IERC165, ERC721) returns (bool) {\n        return interfaceId == type(IERC721Enumerable).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721Enumerable-tokenOfOwnerByIndex}.\n     */\n    function tokenOfOwnerByIndex(address owner, uint256 index) public view virtual override returns (uint256) {\n        require(index < ERC721.balanceOf(owner), \"ERC721Enumerable: owner index out of bounds\");\n        return _ownedTokens[owner][index];\n    }\n\n    /**\n     * @dev See {IERC721Enumerable-totalSupply}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _allTokens.length;\n    }\n\n    /**\n     * @dev See {IERC721Enumerable-tokenByIndex}.\n     */\n    function tokenByIndex(uint256 index) public view virtual override returns (uint256) {\n        require(index < ERC721Enumerable.totalSupply(), \"ERC721Enumerable: global index out of bounds\");\n        return _allTokens[index];\n    }\n\n    /**\n     * @dev See {ERC721-_beforeTokenTransfer}.\n     */\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 firstTokenId,\n        uint256 batchSize\n    ) internal virtual override {\n        super._beforeTokenTransfer(from, to, firstTokenId, batchSize);\n\n        if (batchSize > 1) {\n            // Will only trigger during construction. Batch transferring (minting) is not available afterwards.\n            revert(\"ERC721Enumerable: consecutive transfers not supported\");\n        }\n\n        uint256 tokenId = firstTokenId;\n\n        if (from == address(0)) {\n            _addTokenToAllTokensEnumeration(tokenId);\n        } else if (from != to) {\n            _removeTokenFromOwnerEnumeration(from, tokenId);\n        }\n        if (to == address(0)) {\n            _removeTokenFromAllTokensEnumeration(tokenId);\n        } else if (to != from) {\n            _addTokenToOwnerEnumeration(to, tokenId);\n        }\n    }\n\n    /**\n     * @dev Private function to add a token to this extension's ownership-tracking data structures.\n     * @param to address representing the new owner of the given token ID\n     * @param tokenId uint256 ID of the token to be added to the tokens list of the given address\n     */\n    function _addTokenToOwnerEnumeration(address to, uint256 tokenId) private {\n        uint256 length = ERC721.balanceOf(to);\n        _ownedTokens[to][length] = tokenId;\n        _ownedTokensIndex[tokenId] = length;\n    }\n\n    /**\n     * @dev Private function to add a token to this extension's token tracking data structures.\n     * @param tokenId uint256 ID of the token to be added to the tokens list\n     */\n    function _addTokenToAllTokensEnumeration(uint256 tokenId) private {\n        _allTokensIndex[tokenId] = _allTokens.length;\n        _allTokens.push(tokenId);\n    }\n\n    /**\n     * @dev Private function to remove a token from this extension's ownership-tracking data structures. Note that\n     * while the token is not assigned a new owner, the `_ownedTokensIndex` mapping is _not_ updated: this allows for\n     * gas optimizations e.g. when performing a transfer operation (avoiding double writes).\n     * This has O(1) time complexity, but alters the order of the _ownedTokens array.\n     * @param from address representing the previous owner of the given token ID\n     * @param tokenId uint256 ID of the token to be removed from the tokens list of the given address\n     */\n    function _removeTokenFromOwnerEnumeration(address from, uint256 tokenId) private {\n        // To prevent a gap in from's tokens array, we store the last token in the index of the token to delete, and\n        // then delete the last slot (swap and pop).\n\n        uint256 lastTokenIndex = ERC721.balanceOf(from) - 1;\n        uint256 tokenIndex = _ownedTokensIndex[tokenId];\n\n        // When the token to delete is the last token, the swap operation is unnecessary\n        if (tokenIndex != lastTokenIndex) {\n            uint256 lastTokenId = _ownedTokens[from][lastTokenIndex];\n\n            _ownedTokens[from][tokenIndex] = lastTokenId; // Move the last token to the slot of the to-delete token\n            _ownedTokensIndex[lastTokenId] = tokenIndex; // Update the moved token's index\n        }\n\n        // This also deletes the contents at the last position of the array\n        delete _ownedTokensIndex[tokenId];\n        delete _ownedTokens[from][lastTokenIndex];\n    }\n\n    /**\n     * @dev Private function to remove a token from this extension's token tracking data structures.\n     * This has O(1) time complexity, but alters the order of the _allTokens array.\n     * @param tokenId uint256 ID of the token to be removed from the tokens list\n     */\n    function _removeTokenFromAllTokensEnumeration(uint256 tokenId) private {\n        // To prevent a gap in the tokens array, we store the last token in the index of the token to delete, and\n        // then delete the last slot (swap and pop).\n\n        uint256 lastTokenIndex = _allTokens.length - 1;\n        uint256 tokenIndex = _allTokensIndex[tokenId];\n\n        // When the token to delete is the last token, the swap operation is unnecessary. However, since this occurs so\n        // rarely (when the last minted token is burnt) that we still do the swap here to avoid the gas cost of adding\n        // an 'if' statement (like in _removeTokenFromOwnerEnumeration)\n        uint256 lastTokenId = _allTokens[lastTokenIndex];\n\n        _allTokens[tokenIndex] = lastTokenId; // Move the last token to the slot of the to-delete token\n        _allTokensIndex[lastTokenId] = tokenIndex; // Update the moved token's index\n\n        // This also deletes the contents at the last position of the array\n        delete _allTokensIndex[tokenId];\n        _allTokens.pop();\n    }\n}\n\n// File: MY MainNFT/Art_Gallary.sol\n\n\npragma solidity ^0.8.9;\n\n\n\n\n\ncontract Art_Gallary is ERC721, ERC721Enumerable, Ownable {\n    using Counters for Counters.Counter;\n\n    Counters.Counter private _tokenIdCounter;\n\n    constructor() ERC721(\"Art_Gallary\", \"ARTG\") {}\n\n    function _baseURI() internal pure override returns (string memory) {\n        return \"https://api.npoint.io/275d82eb076064cd71e0\";\n    }\n\n    function safeMint(address to) public onlyOwner {\n        uint256 tokenId = _tokenIdCounter.current();\n        _tokenIdCounter.increment();\n        _safeMint(to, tokenId);\n    }\n\n    // The following functions are overrides required by Solidity.\n\n    function _beforeTokenTransfer(address from, address to, uint256 tokenId, uint256 batchSize)\n        internal\n        override(ERC721, ERC721Enumerable)\n    {\n        super._beforeTokenTransfer(from, to, tokenId, batchSize);\n    }\n\n    function supportsInterface(bytes4 interfaceId)\n        public\n        view\n        override(ERC721, ERC721Enumerable)\n        returns (bool)\n    {\n        return super.supportsInterface(interfaceId);\n    }\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"MY MainNFT/Art_Gallary_flattened.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"MY MainNFT/Art_Gallary_flattened.sol\":19895:28859  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":19895:28859  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220e56fcf1c710df2220c1b02cfa08b3966889b1824f84284a2f2c0321cd2c37a0c64736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e56fcf1c710df2220c1b02cfa08b3966889b1824f84284a2f2c0321cd2c37a0c64736f6c63430008120033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE5 PUSH16 0xCF1C710DF2220C1B02CFA08B3966889B XOR 0x24 0xF8 TIMESTAMP DUP5 LOG2 CALLCODE 0xC0 ORIGIN SHR 0xD2 0xC3 PUSH27 0xC64736F6C63430008120033000000000000000000000000000000 ",
							"sourceMap": "19895:8964:0:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;19895:8964:0;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e56fcf1c710df2220c1b02cfa08b3966889b1824f84284a2f2c0321cd2c37a0c64736f6c63430008120033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE5 PUSH16 0xCF1C710DF2220C1B02CFA08B3966889B XOR 0x24 0xF8 TIMESTAMP DUP5 LOG2 CALLCODE 0xC0 ORIGIN SHR 0xD2 0xC3 PUSH27 0xC64736F6C63430008120033000000000000000000000000000000 ",
							"sourceMap": "19895:8964:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"_revert(bytes memory,string memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 19895,
									"end": 28859,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 19895,
									"end": 28859,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 19895,
									"end": 28859,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 19895,
									"end": 28859,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 19895,
									"end": 28859,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 19895,
									"end": 28859,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 19895,
									"end": 28859,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 19895,
									"end": 28859,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 19895,
									"end": 28859,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 19895,
									"end": 28859,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 19895,
									"end": 28859,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 19895,
									"end": 28859,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 19895,
									"end": 28859,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 19895,
									"end": 28859,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 19895,
									"end": 28859,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 19895,
									"end": 28859,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 19895,
									"end": 28859,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 19895,
									"end": 28859,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 19895,
									"end": 28859,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 19895,
									"end": 28859,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 19895,
									"end": 28859,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 19895,
									"end": 28859,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 19895,
									"end": 28859,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 19895,
									"end": 28859,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 19895,
									"end": 28859,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 19895,
									"end": 28859,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 19895,
									"end": 28859,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 19895,
									"end": 28859,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 19895,
									"end": 28859,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 19895,
									"end": 28859,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 19895,
									"end": 28859,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 19895,
									"end": 28859,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 19895,
									"end": 28859,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 19895,
									"end": 28859,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e56fcf1c710df2220c1b02cfa08b3966889b1824f84284a2f2c0321cd2c37a0c64736f6c63430008120033",
									".code": [
										{
											"begin": 19895,
											"end": 28859,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 19895,
											"end": 28859,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 19895,
											"end": 28859,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 19895,
											"end": 28859,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 19895,
											"end": 28859,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19895,
											"end": 28859,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19895,
											"end": 28859,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19895,
											"end": 28859,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19895,
											"end": 28859,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"MY MainNFT/Art_Gallary_flattened.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"MY MainNFT/Art_Gallary_flattened.sol\":\"Address\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"MY MainNFT/Art_Gallary_flattened.sol\":{\"keccak256\":\"0xaf5042eaa850dd12634ada6c4a80f9eac944cbf1a07306ac12ad88fb4ebdf638\",\"urls\":[\"bzz-raw://92d8b46669fb9a8ae9be91f30bae3e59b90f4f3d79266cb86bcc26fafe432e46\",\"dweb:/ipfs/QmTFBZv39VF38YMNmvi1QeXEe9S3A16qk8Xr8tiBwghQu5\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Art_Gallary": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "safeMint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "tokenByIndex",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "tokenOfOwnerByIndex",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenByIndex(uint256)": {
								"details": "See {IERC721Enumerable-tokenByIndex}."
							},
							"tokenOfOwnerByIndex(address,uint256)": {
								"details": "See {IERC721Enumerable-tokenOfOwnerByIndex}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"totalSupply()": {
								"details": "See {IERC721Enumerable-totalSupply}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"MY MainNFT/Art_Gallary_flattened.sol\":62523:63561  contract Art_Gallary is ERC721, ERC721Enumerable, Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"MY MainNFT/Art_Gallary_flattened.sol\":62676:62722  constructor() ERC721(\"Art_Gallary\", \"ARTG\") {} */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"MY MainNFT/Art_Gallary_flattened.sol\":39737:39850  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x0b\n  dup2\n  mstore\n  0x20\n  add\n  shl(0xa8, 0x4172745f47616c6c617279)\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x04\n  dup2\n  mstore\n  0x20\n  add\n  shl(0xe0, 0x41525447)\n  dup2\n  mstore\n  pop\n    /* \"MY MainNFT/Art_Gallary_flattened.sol\":39811:39816  name_ */\n  dup2\n    /* \"MY MainNFT/Art_Gallary_flattened.sol\":39803:39808  _name */\n  0x00\n    /* \"MY MainNFT/Art_Gallary_flattened.sol\":39803:39816  _name = name_ */\n  swap1\n  dup2\n  tag_6\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \"MY MainNFT/Art_Gallary_flattened.sol\":39826:39833  _symbol */\n  0x01\n    /* \"MY MainNFT/Art_Gallary_flattened.sol\":39826:39843  _symbol = symbol_ */\n  tag_8\n    /* \"MY MainNFT/Art_Gallary_flattened.sol\":39836:39843  symbol_ */\n  dup3\n    /* \"MY MainNFT/Art_Gallary_flattened.sol\":39826:39833  _symbol */\n  dup3\n    /* \"MY MainNFT/Art_Gallary_flattened.sol\":39826:39843  _symbol = symbol_ */\n  tag_7\n  jump\t// in\ntag_8:\n  pop\n    /* \"MY MainNFT/Art_Gallary_flattened.sol\":39737:39850  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"MY MainNFT/Art_Gallary_flattened.sol\":17992:18024  _transferOwnership(_msgSender()) */\n  tag_10\n    /* \"MY MainNFT/Art_Gallary_flattened.sol\":18011:18023  _msgSender() */\n  tag_11\n    /* \"MY MainNFT/Art_Gallary_flattened.sol\":18011:18021  _msgSender */\n  shl(0x20, tag_12)\n    /* \"MY MainNFT/Art_Gallary_flattened.sol\":18011:18023  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_11:\n    /* \"MY MainNFT/Art_Gallary_flattened.sol\":17992:18010  _transferOwnership */\n  tag_13\n    /* \"MY MainNFT/Art_Gallary_flattened.sol\":17992:18024  _transferOwnership(_msgSender()) */\n  jump\t// in\ntag_10:\n    /* \"MY MainNFT/Art_Gallary_flattened.sol\":62523:63561  contract Art_Gallary is ERC721, ERC721Enumerable, Ownable {... */\n  jump(tag_23)\n    /* \"MY MainNFT/Art_Gallary_flattened.sol\":16860:16956  function _msgSender() internal view virtual returns (address) {... */\ntag_12:\n    /* \"MY MainNFT/Art_Gallary_flattened.sol\":16939:16949  msg.sender */\n  caller\n  swap1\n    /* \"MY MainNFT/Art_Gallary_flattened.sol\":16860:16956  function _msgSender() internal view virtual returns (address) {... */\n  jump\t// out\n    /* \"MY MainNFT/Art_Gallary_flattened.sol\":19489:19676  function _transferOwnership(address newOwner) internal virtual {... */\ntag_13:\n    /* \"MY MainNFT/Art_Gallary_flattened.sol\":19581:19587  _owner */\n  0x0a\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"MY MainNFT/Art_Gallary_flattened.sol\":19597:19614  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  swap1\n  swap4\n  sstore\n    /* \"MY MainNFT/Art_Gallary_flattened.sol\":19629:19669  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"MY MainNFT/Art_Gallary_flattened.sol\":19581:19587  _owner */\n  swap2\n  and\n  swap2\n    /* \"MY MainNFT/Art_Gallary_flattened.sol\":19597:19614  _owner = newOwner */\n  swap1\n    /* \"MY MainNFT/Art_Gallary_flattened.sol\":19581:19587  _owner */\n  dup3\n  swap1\n    /* \"MY MainNFT/Art_Gallary_flattened.sol\":19629:19669  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap1\n    /* \"MY MainNFT/Art_Gallary_flattened.sol\":19562:19578  address oldOwner */\n  0x00\n  swap1\n    /* \"MY MainNFT/Art_Gallary_flattened.sol\":19629:19669  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"MY MainNFT/Art_Gallary_flattened.sol\":19552:19676  {... */\n  pop\n    /* \"MY MainNFT/Art_Gallary_flattened.sol\":19489:19676  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:141   */\ntag_18:\n    /* \"#utility.yul\":75:85   */\n  0x4e487b71\n    /* \"#utility.yul\":70:73   */\n  0xe0\n    /* \"#utility.yul\":66:86   */\n  shl\n    /* \"#utility.yul\":63:64   */\n  0x00\n    /* \"#utility.yul\":56:87   */\n  mstore\n    /* \"#utility.yul\":106:110   */\n  0x41\n    /* \"#utility.yul\":103:104   */\n  0x04\n    /* \"#utility.yul\":96:111   */\n  mstore\n    /* \"#utility.yul\":130:134   */\n  0x24\n    /* \"#utility.yul\":127:128   */\n  0x00\n    /* \"#utility.yul\":120:135   */\n  revert\n    /* \"#utility.yul\":146:526   */\ntag_19:\n    /* \"#utility.yul\":225:226   */\n  0x01\n    /* \"#utility.yul\":221:233   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":268:280   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":289:350   */\n  tag_26\n  jumpi\n    /* \"#utility.yul\":343:347   */\n  0x7f\n    /* \"#utility.yul\":335:341   */\n  dup3\n    /* \"#utility.yul\":331:348   */\n  and\n    /* \"#utility.yul\":321:348   */\n  swap2\n  pop\n    /* \"#utility.yul\":289:350   */\ntag_26:\n    /* \"#utility.yul\":396:398   */\n  0x20\n    /* \"#utility.yul\":388:394   */\n  dup3\n    /* \"#utility.yul\":385:399   */\n  lt\n    /* \"#utility.yul\":365:383   */\n  dup2\n    /* \"#utility.yul\":362:400   */\n  sub\n    /* \"#utility.yul\":359:520   */\n  tag_27\n  jumpi\n    /* \"#utility.yul\":442:452   */\n  0x4e487b71\n    /* \"#utility.yul\":437:440   */\n  0xe0\n    /* \"#utility.yul\":433:453   */\n  shl\n    /* \"#utility.yul\":430:431   */\n  0x00\n    /* \"#utility.yul\":423:454   */\n  mstore\n    /* \"#utility.yul\":477:481   */\n  0x22\n    /* \"#utility.yul\":474:475   */\n  0x04\n    /* \"#utility.yul\":467:482   */\n  mstore\n    /* \"#utility.yul\":505:509   */\n  0x24\n    /* \"#utility.yul\":502:503   */\n  0x00\n    /* \"#utility.yul\":495:510   */\n  revert\n    /* \"#utility.yul\":359:520   */\ntag_27:\n  pop\n    /* \"#utility.yul\":146:526   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":657:1202   */\ntag_21:\n    /* \"#utility.yul\":759:761   */\n  0x1f\n    /* \"#utility.yul\":754:757   */\n  dup3\n    /* \"#utility.yul\":751:762   */\n  gt\n    /* \"#utility.yul\":748:1196   */\n  iszero\n  tag_30\n  jumpi\n    /* \"#utility.yul\":795:796   */\n  0x00\n    /* \"#utility.yul\":820:825   */\n  dup2\n    /* \"#utility.yul\":816:818   */\n  dup2\n    /* \"#utility.yul\":809:826   */\n  mstore\n    /* \"#utility.yul\":865:869   */\n  0x20\n    /* \"#utility.yul\":861:863   */\n  dup2\n    /* \"#utility.yul\":851:870   */\n  keccak256\n    /* \"#utility.yul\":935:937   */\n  0x1f\n    /* \"#utility.yul\":923:933   */\n  dup6\n    /* \"#utility.yul\":919:938   */\n  add\n    /* \"#utility.yul\":916:917   */\n  0x05\n    /* \"#utility.yul\":912:939   */\n  shr\n    /* \"#utility.yul\":906:910   */\n  dup2\n    /* \"#utility.yul\":902:940   */\n  add\n    /* \"#utility.yul\":971:975   */\n  0x20\n    /* \"#utility.yul\":959:969   */\n  dup7\n    /* \"#utility.yul\":956:976   */\n  lt\n    /* \"#utility.yul\":953:1000   */\n  iszero\n  tag_31\n  jumpi\n  pop\n    /* \"#utility.yul\":994:998   */\n  dup1\n    /* \"#utility.yul\":953:1000   */\ntag_31:\n    /* \"#utility.yul\":1049:1051   */\n  0x1f\n    /* \"#utility.yul\":1044:1047   */\n  dup6\n    /* \"#utility.yul\":1040:1052   */\n  add\n    /* \"#utility.yul\":1037:1038   */\n  0x05\n    /* \"#utility.yul\":1033:1053   */\n  shr\n    /* \"#utility.yul\":1027:1031   */\n  dup3\n    /* \"#utility.yul\":1023:1054   */\n  add\n    /* \"#utility.yul\":1013:1054   */\n  swap2\n  pop\n    /* \"#utility.yul\":1104:1186   */\ntag_32:\n    /* \"#utility.yul\":1122:1124   */\n  dup2\n    /* \"#utility.yul\":1115:1120   */\n  dup2\n    /* \"#utility.yul\":1112:1125   */\n  lt\n    /* \"#utility.yul\":1104:1186   */\n  iszero\n  tag_34\n  jumpi\n    /* \"#utility.yul\":1167:1184   */\n  dup3\n  dup2\n  sstore\n    /* \"#utility.yul\":1148:1149   */\n  0x01\n    /* \"#utility.yul\":1137:1150   */\n  add\n    /* \"#utility.yul\":1104:1186   */\n  jump(tag_32)\ntag_34:\n    /* \"#utility.yul\":1108:1111   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":748:1196   */\ntag_30:\n    /* \"#utility.yul\":657:1202   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1378:2730   */\ntag_7:\n    /* \"#utility.yul\":1498:1508   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1520:1550   */\n  dup2\n  gt\n    /* \"#utility.yul\":1517:1573   */\n  iszero\n  tag_38\n  jumpi\n    /* \"#utility.yul\":1553:1571   */\n  tag_38\n  tag_18\n  jump\t// in\ntag_38:\n    /* \"#utility.yul\":1582:1679   */\n  tag_39\n    /* \"#utility.yul\":1672:1678   */\n  dup2\n    /* \"#utility.yul\":1632:1670   */\n  tag_40\n    /* \"#utility.yul\":1664:1668   */\n  dup5\n    /* \"#utility.yul\":1658:1669   */\n  sload\n    /* \"#utility.yul\":1632:1670   */\n  tag_19\n  jump\t// in\ntag_40:\n    /* \"#utility.yul\":1626:1630   */\n  dup5\n    /* \"#utility.yul\":1582:1679   */\n  tag_21\n  jump\t// in\ntag_39:\n    /* \"#utility.yul\":1734:1738   */\n  0x20\n  dup1\n    /* \"#utility.yul\":1798:1800   */\n  0x1f\n    /* \"#utility.yul\":1787:1801   */\n  dup4\n  gt\n    /* \"#utility.yul\":1815:1816   */\n  0x01\n    /* \"#utility.yul\":1810:2473   */\n  dup2\n  eq\n  tag_42\n  jumpi\n    /* \"#utility.yul\":2517:2518   */\n  0x00\n    /* \"#utility.yul\":2534:2540   */\n  dup5\n    /* \"#utility.yul\":2531:2620   */\n  iszero\n  tag_43\n  jumpi\n  pop\n    /* \"#utility.yul\":2586:2605   */\n  dup6\n  dup4\n  add\n    /* \"#utility.yul\":2580:2606   */\n  mload\n    /* \"#utility.yul\":2531:2620   */\ntag_43:\n  not(0x00)\n    /* \"#utility.yul\":1335:1336   */\n  0x03\n    /* \"#utility.yul\":1331:1342   */\n  dup7\n  swap1\n  shl\n    /* \"#utility.yul\":1327:1351   */\n  shr\n    /* \"#utility.yul\":1323:1352   */\n  not\n    /* \"#utility.yul\":1313:1353   */\n  and\n    /* \"#utility.yul\":1359:1360   */\n  0x01\n    /* \"#utility.yul\":1355:1366   */\n  dup6\n  swap1\n  shl\n    /* \"#utility.yul\":1310:1367   */\n  or\n    /* \"#utility.yul\":2633:2714   */\n  dup6\n  sstore\n    /* \"#utility.yul\":1780:2724   */\n  jump(tag_34)\n    /* \"#utility.yul\":1810:2473   */\ntag_42:\n    /* \"#utility.yul\":604:605   */\n  0x00\n    /* \"#utility.yul\":597:611   */\n  dup6\n  dup2\n  mstore\n    /* \"#utility.yul\":641:645   */\n  0x20\n    /* \"#utility.yul\":628:646   */\n  dup2\n  keccak256\n  not(0x1f)\n    /* \"#utility.yul\":1846:1866   */\n  dup7\n  and\n  swap2\n    /* \"#utility.yul\":1964:2200   */\ntag_46:\n    /* \"#utility.yul\":1978:1985   */\n  dup3\n    /* \"#utility.yul\":1975:1976   */\n  dup2\n    /* \"#utility.yul\":1972:1986   */\n  lt\n    /* \"#utility.yul\":1964:2200   */\n  iszero\n  tag_48\n  jumpi\n    /* \"#utility.yul\":2067:2086   */\n  dup9\n  dup7\n  add\n    /* \"#utility.yul\":2061:2087   */\n  mload\n    /* \"#utility.yul\":2046:2088   */\n  dup3\n  sstore\n    /* \"#utility.yul\":2159:2186   */\n  swap5\n  dup5\n  add\n  swap5\n    /* \"#utility.yul\":2127:2128   */\n  0x01\n    /* \"#utility.yul\":2115:2129   */\n  swap1\n  swap2\n  add\n  swap1\n    /* \"#utility.yul\":1994:2013   */\n  dup5\n  add\n    /* \"#utility.yul\":1964:2200   */\n  jump(tag_46)\ntag_48:\n    /* \"#utility.yul\":1968:1971   */\n  pop\n    /* \"#utility.yul\":2228:2234   */\n  dup6\n    /* \"#utility.yul\":2219:2226   */\n  dup3\n    /* \"#utility.yul\":2216:2235   */\n  lt\n    /* \"#utility.yul\":2213:2414   */\n  iszero\n  tag_49\n  jumpi\n    /* \"#utility.yul\":2289:2308   */\n  dup8\n  dup6\n  add\n    /* \"#utility.yul\":2283:2309   */\n  mload\n  not(0x00)\n    /* \"#utility.yul\":2372:2373   */\n  0x03\n    /* \"#utility.yul\":2368:2382   */\n  dup9\n  swap1\n  shl\n    /* \"#utility.yul\":2384:2387   */\n  0xf8\n    /* \"#utility.yul\":2364:2388   */\n  and\n    /* \"#utility.yul\":2360:2397   */\n  shr\n    /* \"#utility.yul\":2356:2398   */\n  not\n    /* \"#utility.yul\":2341:2399   */\n  and\n    /* \"#utility.yul\":2326:2400   */\n  dup2\n  sstore\n    /* \"#utility.yul\":2213:2414   */\ntag_49:\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":2460:2461   */\n  0x01\n    /* \"#utility.yul\":2444:2458   */\n  swap1\n  dup2\n  shl\n    /* \"#utility.yul\":2440:2462   */\n  add\n    /* \"#utility.yul\":2427:2463   */\n  swap1\n  sstore\n  pop\n    /* \"#utility.yul\":1378:2730   */\n  jump\t// out\ntag_23:\n    /* \"MY MainNFT/Art_Gallary_flattened.sol\":62523:63561  contract Art_Gallary is ERC721, ERC721Enumerable, Ownable {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":62523:63561  contract Art_Gallary is ERC721, ERC721Enumerable, Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x6352211e\n      gt\n      tag_23\n      jumpi\n      dup1\n      0xa22cb465\n      gt\n      tag_24\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xb88d4fde\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xc87b56dd\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_22\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_24:\n      dup1\n      0x6352211e\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_17\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_23:\n      dup1\n      0x23b872dd\n      gt\n      tag_25\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x2f745c59\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x40d097c3\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x42842e0e\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x4f6ccce7\n      eq\n      tag_12\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_25:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x081812fc\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":63354:63559  function supportsInterface(bytes4 interfaceId)... */\n    tag_3:\n      tag_26\n      tag_27\n      calldatasize\n      0x04\n      tag_28\n      jump\t// in\n    tag_27:\n      tag_29\n      jump\t// in\n    tag_26:\n      mload(0x40)\n        /* \"#utility.yul\":565:579   */\n      swap1\n      iszero\n        /* \"#utility.yul\":558:580   */\n      iszero\n        /* \"#utility.yul\":540:581   */\n      dup2\n      mstore\n        /* \"#utility.yul\":528:530   */\n      0x20\n        /* \"#utility.yul\":513:531   */\n      add\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":63354:63559  function supportsInterface(bytes4 interfaceId)... */\n    tag_30:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":40818:40916  function name() public view virtual override returns (string memory) {... */\n    tag_4:\n      tag_32\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      tag_30\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":42282:42449  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_5:\n      tag_36\n      tag_37\n      calldatasize\n      0x04\n      tag_38\n      jump\t// in\n    tag_37:\n      tag_39\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1697:1729   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1679:1730   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1667:1669   */\n      0x20\n        /* \"#utility.yul\":1652:1670   */\n      add\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":42282:42449  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n      tag_30\n        /* \"#utility.yul\":1533:1736   */\n      jump\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":41815:42221  function approve(address to, uint256 tokenId) public virtual override {... */\n    tag_6:\n      tag_42\n      tag_43\n      calldatasize\n      0x04\n      tag_44\n      jump\t// in\n    tag_43:\n      tag_45\n      jump\t// in\n    tag_42:\n      stop\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":57277:57388  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_7:\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":57364:57374  _allTokens */\n      0x08\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":57364:57381  _allTokens.length */\n      sload\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":57277:57388  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_46:\n      mload(0x40)\n        /* \"#utility.yul\":2324:2349   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":2312:2314   */\n      0x20\n        /* \"#utility.yul\":2297:2315   */\n      add\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":57277:57388  function totalSupply() public view virtual override returns (uint256) {... */\n      tag_30\n        /* \"#utility.yul\":2178:2355   */\n      jump\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":42959:43285  function transferFrom(... */\n    tag_8:\n      tag_42\n      tag_51\n      calldatasize\n      0x04\n      tag_52\n      jump\t// in\n    tag_51:\n      tag_53\n      jump\t// in\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":56953:57206  function tokenOfOwnerByIndex(address owner, uint256 index) public view virtual override returns (uint256) {... */\n    tag_9:\n      tag_46\n      tag_55\n      calldatasize\n      0x04\n      tag_44\n      jump\t// in\n    tag_55:\n      tag_56\n      jump\t// in\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":62869:63045  function safeMint(address to) public onlyOwner {... */\n    tag_10:\n      tag_42\n      tag_59\n      calldatasize\n      0x04\n      tag_60\n      jump\t// in\n    tag_59:\n      tag_61\n      jump\t// in\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":43351:43530  function safeTransferFrom(... */\n    tag_11:\n      tag_42\n      tag_63\n      calldatasize\n      0x04\n      tag_52\n      jump\t// in\n    tag_63:\n      tag_64\n      jump\t// in\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":57460:57690  function tokenByIndex(uint256 index) public view virtual override returns (uint256) {... */\n    tag_12:\n      tag_46\n      tag_66\n      calldatasize\n      0x04\n      tag_38\n      jump\t// in\n    tag_66:\n      tag_67\n      jump\t// in\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":40537:40756  function ownerOf(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_13:\n      tag_36\n      tag_70\n      calldatasize\n      0x04\n      tag_38\n      jump\t// in\n    tag_70:\n      tag_71\n      jump\t// in\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":40276:40480  function balanceOf(address owner) public view virtual override returns (uint256) {... */\n    tag_14:\n      tag_46\n      tag_74\n      calldatasize\n      0x04\n      tag_60\n      jump\t// in\n    tag_74:\n      tag_75\n      jump\t// in\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":18887:18988  function renounceOwnership() public virtual onlyOwner {... */\n    tag_15:\n      tag_42\n      tag_78\n      jump\t// in\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":18257:18342  function owner() public view virtual returns (address) {... */\n    tag_16:\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":18329:18335  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x0a))\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":18257:18342  function owner() public view virtual returns (address) {... */\n      jump(tag_36)\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":40980:41082  function symbol() public view virtual override returns (string memory) {... */\n    tag_17:\n      tag_32\n      tag_83\n      jump\t// in\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":42516:42669  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_18:\n      tag_42\n      tag_86\n      calldatasize\n      0x04\n      tag_87\n      jump\t// in\n    tag_86:\n      tag_88\n      jump\t// in\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":43596:43910  function safeTransferFrom(... */\n    tag_19:\n      tag_42\n      tag_90\n      calldatasize\n      0x04\n      tag_91\n      jump\t// in\n    tag_90:\n      tag_92\n      jump\t// in\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":41148:41424  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_20:\n      tag_32\n      tag_94\n      calldatasize\n      0x04\n      tag_38\n      jump\t// in\n    tag_94:\n      tag_95\n      jump\t// in\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":42735:42897  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n    tag_21:\n      tag_26\n      tag_98\n      calldatasize\n      0x04\n      tag_99\n      jump\t// in\n    tag_98:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":42855:42880  _operatorApprovals[owner] */\n      swap2\n      dup3\n      and\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":42832:42836  bool */\n      0x00\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":42855:42880  _operatorApprovals[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":42855:42873  _operatorApprovals */\n      0x05\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":42855:42880  _operatorApprovals[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":42855:42890  _operatorApprovals[owner][operator] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":42735:42897  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n      jump\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":19137:19335  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_22:\n      tag_42\n      tag_103\n      calldatasize\n      0x04\n      tag_60\n      jump\t// in\n    tag_103:\n      tag_104\n      jump\t// in\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":63354:63559  function supportsInterface(bytes4 interfaceId)... */\n    tag_29:\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":63489:63493  bool */\n      0x00\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":63516:63552  super.supportsInterface(interfaceId) */\n      tag_106\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":63540:63551  interfaceId */\n      dup3\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":63516:63539  super.supportsInterface */\n      tag_107\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":63516:63552  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_106:\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":63509:63552  return super.supportsInterface(interfaceId) */\n      swap3\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":63354:63559  function supportsInterface(bytes4 interfaceId)... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":40818:40916  function name() public view virtual override returns (string memory) {... */\n    tag_33:\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":40872:40885  string memory */\n      0x60\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":40904:40909  _name */\n      0x00\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":40897:40909  return _name */\n      dup1\n      sload\n      tag_109\n      swap1\n      tag_110\n      jump\t// in\n    tag_109:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_111\n      swap1\n      tag_110\n      jump\t// in\n    tag_111:\n      dup1\n      iszero\n      tag_112\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_113\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_112)\n    tag_113:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_114:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_114\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_112:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":40818:40916  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":42282:42449  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_39:\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":42358:42365  address */\n      0x00\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":42377:42400  _requireMinted(tokenId) */\n      tag_116\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":42392:42399  tokenId */\n      dup3\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":42377:42391  _requireMinted */\n      tag_117\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":42377:42400  _requireMinted(tokenId) */\n      jump\t// in\n    tag_116:\n      pop\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":42418:42442  _tokenApprovals[tokenId] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":42418:42433  _tokenApprovals */\n      0x04\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":42418:42442  _tokenApprovals[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":42282:42449  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n      jump\t// out\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":41815:42221  function approve(address to, uint256 tokenId) public virtual override {... */\n    tag_45:\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":41895:41908  address owner */\n      0x00\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":41911:41934  ERC721.ownerOf(tokenId) */\n      tag_119\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":41926:41933  tokenId */\n      dup3\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":41911:41925  ERC721.ownerOf */\n      tag_71\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":41911:41934  ERC721.ownerOf(tokenId) */\n      jump\t// in\n    tag_119:\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":41895:41934  address owner = ERC721.ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":41958:41963  owner */\n      dup1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":41952:41963  to != owner */\n      and\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":41952:41954  to */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":41952:41963  to != owner */\n      and\n      sub\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":41944:42001  require(to != owner, \"ERC721: approval to current owner\") */\n      tag_120\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5363:5365   */\n      0x20\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":41944:42001  require(to != owner, \"ERC721: approval to current owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5345:5366   */\n      mstore\n        /* \"#utility.yul\":5402:5404   */\n      0x21\n        /* \"#utility.yul\":5382:5400   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5375:5405   */\n      mstore\n        /* \"#utility.yul\":5441:5475   */\n      0x4552433732313a20617070726f76616c20746f2063757272656e74206f776e65\n        /* \"#utility.yul\":5421:5439   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5414:5476   */\n      mstore\n      shl(0xf9, 0x39)\n        /* \"#utility.yul\":5492:5510   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5485:5516   */\n      mstore\n        /* \"#utility.yul\":5533:5552   */\n      0x84\n      add\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":41944:42001  require(to != owner, \"ERC721: approval to current owner\") */\n    tag_121:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_120:\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":16939:16949  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":42033:42054  _msgSender() == owner */\n      dup3\n      and\n      eq\n      dup1\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":42033:42095  _msgSender() == owner || isApprovedForAll(owner, _msgSender()) */\n      tag_126\n      jumpi\n      pop\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":42058:42095  isApprovedForAll(owner, _msgSender()) */\n      tag_126\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":42075:42080  owner */\n      dup2\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":16939:16949  msg.sender */\n      caller\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":42735:42897  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n      tag_98\n      jump\t// in\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":42058:42095  isApprovedForAll(owner, _msgSender()) */\n    tag_126:\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":42012:42182  require(... */\n      tag_128\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5765:5767   */\n      0x20\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":42012:42182  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5747:5768   */\n      mstore\n        /* \"#utility.yul\":5804:5806   */\n      0x3d\n        /* \"#utility.yul\":5784:5802   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5777:5807   */\n      mstore\n        /* \"#utility.yul\":5843:5877   */\n      0x4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f\n        /* \"#utility.yul\":5823:5841   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5816:5878   */\n      mstore\n        /* \"#utility.yul\":5914:5945   */\n      0x6b656e206f776e6572206f7220617070726f76656420666f7220616c6c000000\n        /* \"#utility.yul\":5894:5912   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5887:5946   */\n      mstore\n        /* \"#utility.yul\":5963:5982   */\n      0x84\n      add\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":42012:42182  require(... */\n      tag_121\n        /* \"#utility.yul\":5563:5988   */\n      jump\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":42012:42182  require(... */\n    tag_128:\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":42193:42214  _approve(to, tokenId) */\n      tag_131\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":42202:42204  to */\n      dup4\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":42206:42213  tokenId */\n      dup4\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":42193:42201  _approve */\n      tag_132\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":42193:42214  _approve(to, tokenId) */\n      jump\t// in\n    tag_131:\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":41885:42221  {... */\n      pop\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":41815:42221  function approve(address to, uint256 tokenId) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":42959:43285  function transferFrom(... */\n    tag_53:\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":43148:43189  _isApprovedOrOwner(_msgSender(), tokenId) */\n      tag_135\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":16939:16949  msg.sender */\n      caller\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":43181:43188  tokenId */\n      dup3\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":43148:43166  _isApprovedOrOwner */\n      tag_137\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":43148:43189  _isApprovedOrOwner(_msgSender(), tokenId) */\n      jump\t// in\n    tag_135:\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":43140:43239  require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: caller is not token owner or approved\") */\n      tag_138\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_121\n      swap1\n      tag_140\n      jump\t// in\n    tag_138:\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":43250:43278  _transfer(from, to, tokenId) */\n      tag_131\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":43260:43264  from */\n      dup4\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":43266:43268  to */\n      dup4\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":43270:43277  tokenId */\n      dup4\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":43250:43259  _transfer */\n      tag_142\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":43250:43278  _transfer(from, to, tokenId) */\n      jump\t// in\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":56953:57206  function tokenOfOwnerByIndex(address owner, uint256 index) public view virtual override returns (uint256) {... */\n    tag_56:\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":57050:57057  uint256 */\n      0x00\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":57085:57108  ERC721.balanceOf(owner) */\n      tag_144\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":57102:57107  owner */\n      dup4\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":57085:57101  ERC721.balanceOf */\n      tag_75\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":57085:57108  ERC721.balanceOf(owner) */\n      jump\t// in\n    tag_144:\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":57077:57082  index */\n      dup3\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":57077:57108  index < ERC721.balanceOf(owner) */\n      lt\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":57069:57156  require(index < ERC721.balanceOf(owner), \"ERC721Enumerable: owner index out of bounds\") */\n      tag_145\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6609:6611   */\n      0x20\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":57069:57156  require(index < ERC721.balanceOf(owner), \"ERC721Enumerable: owner index out of bounds\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6591:6612   */\n      mstore\n        /* \"#utility.yul\":6648:6650   */\n      0x2b\n        /* \"#utility.yul\":6628:6646   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6621:6651   */\n      mstore\n        /* \"#utility.yul\":6687:6721   */\n      0x455243373231456e756d657261626c653a206f776e657220696e646578206f75\n        /* \"#utility.yul\":6667:6685   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6660:6722   */\n      mstore\n      shl(0xa8, 0x74206f6620626f756e6473)\n        /* \"#utility.yul\":6738:6756   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":6731:6772   */\n      mstore\n        /* \"#utility.yul\":6789:6808   */\n      0x84\n      add\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":57069:57156  require(index < ERC721.balanceOf(owner), \"ERC721Enumerable: owner index out of bounds\") */\n      tag_121\n        /* \"#utility.yul\":6407:6814   */\n      jump\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":57069:57156  require(index < ERC721.balanceOf(owner), \"ERC721Enumerable: owner index out of bounds\") */\n    tag_145:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":57173:57192  _ownedTokens[owner] */\n      swap2\n      swap1\n      swap2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":57173:57185  _ownedTokens */\n      0x06\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":57173:57192  _ownedTokens[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":57173:57199  _ownedTokens[owner][index] */\n      swap4\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":56953:57206  function tokenOfOwnerByIndex(address owner, uint256 index) public view virtual override returns (uint256) {... */\n      jump\t// out\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":62869:63045  function safeMint(address to) public onlyOwner {... */\n    tag_61:\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":18150:18163  _checkOwner() */\n      tag_149\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":18150:18161  _checkOwner */\n      tag_150\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":18150:18163  _checkOwner() */\n      jump\t// in\n    tag_149:\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":62926:62941  uint256 tokenId */\n      0x00\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":62944:62969  _tokenIdCounter.current() */\n      tag_152\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":62944:62959  _tokenIdCounter */\n      0x0b\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":941:955  counter._value */\n      sload\n      swap1\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":850:962  function current(Counter storage counter) internal view returns (uint256) {... */\n      jump\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":62944:62969  _tokenIdCounter.current() */\n    tag_152:\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":62926:62969  uint256 tokenId = _tokenIdCounter.current() */\n      swap1\n      pop\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":62979:63006  _tokenIdCounter.increment() */\n      tag_154\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":62979:62994  _tokenIdCounter */\n      0x0b\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":1055:1074  counter._value += 1 */\n      dup1\n      sload\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":1073:1074  1 */\n      0x01\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":1055:1074  counter._value += 1 */\n      add\n      swap1\n      sstore\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":968:1091  function increment(Counter storage counter) internal {... */\n      jump\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":62979:63006  _tokenIdCounter.increment() */\n    tag_154:\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":63016:63038  _safeMint(to, tokenId) */\n      tag_156\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":63026:63028  to */\n      dup3\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":63030:63037  tokenId */\n      dup3\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":63016:63025  _safeMint */\n      tag_157\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":63016:63038  _safeMint(to, tokenId) */\n      jump\t// in\n    tag_156:\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":62916:63045  {... */\n      pop\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":62869:63045  function safeMint(address to) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":43351:43530  function safeTransferFrom(... */\n    tag_64:\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":43484:43523  safeTransferFrom(from, to, tokenId, \"\") */\n      tag_131\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":43501:43505  from */\n      dup4\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":43507:43509  to */\n      dup4\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":43511:43518  tokenId */\n      dup4\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":43484:43523  safeTransferFrom(from, to, tokenId, \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":43484:43500  safeTransferFrom */\n      tag_92\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":43484:43523  safeTransferFrom(from, to, tokenId, \"\") */\n      jump\t// in\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":57460:57690  function tokenByIndex(uint256 index) public view virtual override returns (uint256) {... */\n    tag_67:\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":57535:57542  uint256 */\n      0x00\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":57570:57600  ERC721Enumerable.totalSupply() */\n      tag_161\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":57364:57374  _allTokens */\n      0x08\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":57364:57381  _allTokens.length */\n      sload\n      swap1\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":57277:57388  function totalSupply() public view virtual override returns (uint256) {... */\n      jump\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":57570:57600  ERC721Enumerable.totalSupply() */\n    tag_161:\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":57562:57567  index */\n      dup3\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":57562:57600  index < ERC721Enumerable.totalSupply() */\n      lt\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":57554:57649  require(index < ERC721Enumerable.totalSupply(), \"ERC721Enumerable: global index out of bounds\") */\n      tag_162\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7021:7023   */\n      0x20\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":57554:57649  require(index < ERC721Enumerable.totalSupply(), \"ERC721Enumerable: global index out of bounds\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7003:7024   */\n      mstore\n        /* \"#utility.yul\":7060:7062   */\n      0x2c\n        /* \"#utility.yul\":7040:7058   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7033:7063   */\n      mstore\n        /* \"#utility.yul\":7099:7133   */\n      0x455243373231456e756d657261626c653a20676c6f62616c20696e646578206f\n        /* \"#utility.yul\":7079:7097   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7072:7134   */\n      mstore\n      shl(0xa0, 0x7574206f6620626f756e6473)\n        /* \"#utility.yul\":7150:7168   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":7143:7185   */\n      mstore\n        /* \"#utility.yul\":7202:7221   */\n      0x84\n      add\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":57554:57649  require(index < ERC721Enumerable.totalSupply(), \"ERC721Enumerable: global index out of bounds\") */\n      tag_121\n        /* \"#utility.yul\":6819:7227   */\n      jump\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":57554:57649  require(index < ERC721Enumerable.totalSupply(), \"ERC721Enumerable: global index out of bounds\") */\n    tag_162:\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":57666:57676  _allTokens */\n      0x08\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":57677:57682  index */\n      dup3\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":57666:57683  _allTokens[index] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_166\n      jumpi\n      tag_166\n      tag_167\n      jump\t// in\n    tag_166:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      sload\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":57659:57683  return _allTokens[index] */\n      swap1\n      pop\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":57460:57690  function tokenByIndex(uint256 index) public view virtual override returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":40537:40756  function ownerOf(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_71:\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":40609:40616  address */\n      0x00\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":45277:45293  _owners[tokenId] */\n      dup2\n      dup2\n      mstore\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":45277:45284  _owners */\n      0x02\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":45277:45293  _owners[tokenId] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup1\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":40671:40727  require(owner != address(0), \"ERC721: invalid token ID\") */\n      tag_106\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7566:7568   */\n      0x20\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":40671:40727  require(owner != address(0), \"ERC721: invalid token ID\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7548:7569   */\n      mstore\n        /* \"#utility.yul\":7605:7607   */\n      0x18\n        /* \"#utility.yul\":7585:7603   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7578:7608   */\n      mstore\n      shl(0x42, 0x115490cdcc8c4e881a5b9d985b1a59081d1bdad95b881251)\n        /* \"#utility.yul\":7624:7642   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7617:7671   */\n      mstore\n        /* \"#utility.yul\":7688:7706   */\n      0x64\n      add\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":40671:40727  require(owner != address(0), \"ERC721: invalid token ID\") */\n      tag_121\n        /* \"#utility.yul\":7364:7712   */\n      jump\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":40276:40480  function balanceOf(address owner) public view virtual override returns (uint256) {... */\n    tag_75:\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":40348:40355  uint256 */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":40375:40394  owner != address(0) */\n      dup3\n      and\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":40367:40440  require(owner != address(0), \"ERC721: address zero is not a valid owner\") */\n      tag_176\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7919:7921   */\n      0x20\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":40367:40440  require(owner != address(0), \"ERC721: address zero is not a valid owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7901:7922   */\n      mstore\n        /* \"#utility.yul\":7958:7960   */\n      0x29\n        /* \"#utility.yul\":7938:7956   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7931:7961   */\n      mstore\n        /* \"#utility.yul\":7997:8031   */\n      0x4552433732313a2061646472657373207a65726f206973206e6f742061207661\n        /* \"#utility.yul\":7977:7995   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7970:8032   */\n      mstore\n      shl(0xb9, 0x3634b21037bbb732b9)\n        /* \"#utility.yul\":8048:8066   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":8041:8080   */\n      mstore\n        /* \"#utility.yul\":8097:8116   */\n      0x84\n      add\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":40367:40440  require(owner != address(0), \"ERC721: address zero is not a valid owner\") */\n      tag_121\n        /* \"#utility.yul\":7717:8122   */\n      jump\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":40367:40440  require(owner != address(0), \"ERC721: address zero is not a valid owner\") */\n    tag_176:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":40457:40473  _balances[owner] */\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":40457:40466  _balances */\n      0x03\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":40457:40473  _balances[owner] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":40276:40480  function balanceOf(address owner) public view virtual override returns (uint256) {... */\n      jump\t// out\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":18887:18988  function renounceOwnership() public virtual onlyOwner {... */\n    tag_78:\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":18150:18163  _checkOwner() */\n      tag_180\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":18150:18161  _checkOwner */\n      tag_150\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":18150:18163  _checkOwner() */\n      jump\t// in\n    tag_180:\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":18951:18981  _transferOwnership(address(0)) */\n      tag_182\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":18978:18979  0 */\n      0x00\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":18951:18969  _transferOwnership */\n      tag_183\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":18951:18981  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_182:\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":18887:18988  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":40980:41082  function symbol() public view virtual override returns (string memory) {... */\n    tag_83:\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":41036:41049  string memory */\n      0x60\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":41068:41075  _symbol */\n      0x01\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":41061:41075  return _symbol */\n      dup1\n      sload\n      tag_109\n      swap1\n      tag_110\n      jump\t// in\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":42516:42669  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_88:\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":42610:42662  _setApprovalForAll(_msgSender(), operator, approved) */\n      tag_156\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":16939:16949  msg.sender */\n      caller\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":42643:42651  operator */\n      dup4\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":42653:42661  approved */\n      dup4\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":42610:42628  _setApprovalForAll */\n      tag_194\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":42610:42662  _setApprovalForAll(_msgSender(), operator, approved) */\n      jump\t// in\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":43596:43910  function safeTransferFrom(... */\n    tag_92:\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":43764:43805  _isApprovedOrOwner(_msgSender(), tokenId) */\n      tag_196\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":16939:16949  msg.sender */\n      caller\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":43797:43804  tokenId */\n      dup4\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":43764:43782  _isApprovedOrOwner */\n      tag_137\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":43764:43805  _isApprovedOrOwner(_msgSender(), tokenId) */\n      jump\t// in\n    tag_196:\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":43756:43855  require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: caller is not token owner or approved\") */\n      tag_198\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_121\n      swap1\n      tag_140\n      jump\t// in\n    tag_198:\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":43865:43903  _safeTransfer(from, to, tokenId, data) */\n      tag_200\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":43879:43883  from */\n      dup5\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":43885:43887  to */\n      dup5\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":43889:43896  tokenId */\n      dup5\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":43898:43902  data */\n      dup5\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":43865:43878  _safeTransfer */\n      tag_201\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":43865:43903  _safeTransfer(from, to, tokenId, data) */\n      jump\t// in\n    tag_200:\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":43596:43910  function safeTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":41148:41424  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_95:\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":41221:41234  string memory */\n      0x60\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":41246:41269  _requireMinted(tokenId) */\n      tag_203\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":41261:41268  tokenId */\n      dup3\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":41246:41260  _requireMinted */\n      tag_117\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":41246:41269  _requireMinted(tokenId) */\n      jump\t// in\n    tag_203:\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":41280:41301  string memory baseURI */\n      0x00\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":41304:41314  _baseURI() */\n      tag_204\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":41304:41312  _baseURI */\n      tag_205\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":41304:41314  _baseURI() */\n      jump\t// in\n    tag_204:\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":41280:41314  string memory baseURI = _baseURI() */\n      swap1\n      pop\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":41355:41356  0 */\n      0x00\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":41337:41344  baseURI */\n      dup2\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":41331:41352  bytes(baseURI).length */\n      mload\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":41331:41356  bytes(baseURI).length > 0 */\n      gt\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":41331:41417  bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \"\" */\n      tag_206\n      jumpi\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      jump(tag_207)\n    tag_206:\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":41383:41390  baseURI */\n      dup1\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":41392:41410  tokenId.toString() */\n      tag_208\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":41392:41399  tokenId */\n      dup5\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":41392:41408  tokenId.toString */\n      tag_209\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":41392:41410  tokenId.toString() */\n      jump\t// in\n    tag_208:\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":41366:41411  abi.encodePacked(baseURI, tokenId.toString()) */\n      add(0x20, mload(0x40))\n      tag_210\n      swap3\n      swap2\n      swap1\n      tag_211\n      jump\t// in\n    tag_210:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":41331:41417  bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \"\" */\n    tag_207:\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":41324:41417  return bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \"\" */\n      swap4\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":41148:41424  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":19137:19335  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_104:\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":18150:18163  _checkOwner() */\n      tag_214\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":18150:18161  _checkOwner */\n      tag_150\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":18150:18163  _checkOwner() */\n      jump\t// in\n    tag_214:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":19225:19247  newOwner != address(0) */\n      dup2\n      and\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":19217:19290  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_216\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8830:8832   */\n      0x20\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":19217:19290  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8812:8833   */\n      mstore\n        /* \"#utility.yul\":8869:8871   */\n      0x26\n        /* \"#utility.yul\":8849:8867   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8842:8872   */\n      mstore\n        /* \"#utility.yul\":8908:8942   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":8888:8906   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8881:8943   */\n      mstore\n      shl(0xd0, 0x646472657373)\n        /* \"#utility.yul\":8959:8977   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":8952:8988   */\n      mstore\n        /* \"#utility.yul\":9005:9024   */\n      0x84\n      add\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":19217:19290  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_121\n        /* \"#utility.yul\":8628:9030   */\n      jump\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":19217:19290  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n    tag_216:\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":19300:19328  _transferOwnership(newOwner) */\n      tag_219\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":19319:19327  newOwner */\n      dup2\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":19300:19318  _transferOwnership */\n      tag_183\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":19300:19328  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_219:\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":19137:19335  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":56652:56874  function supportsInterface(bytes4 interfaceId) public view virtual override(IERC165, ERC721) returns (bool) {... */\n    tag_107:\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":56754:56758  bool */\n      0x00\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":56777:56827  interfaceId == type(IERC721Enumerable).interfaceId */\n      dup3\n      and\n      shl(0xe0, 0x780e9d63)\n      eq\n      dup1\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":56777:56867  interfaceId == type(IERC721Enumerable).interfaceId || super.supportsInterface(interfaceId) */\n      tag_106\n      jumpi\n      pop\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":56831:56867  super.supportsInterface(interfaceId) */\n      tag_106\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":56855:56866  interfaceId */\n      dup3\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":56831:56854  super.supportsInterface */\n      tag_223\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":56831:56867  super.supportsInterface(interfaceId) */\n      jump\t// in\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":51813:51946  function _requireMinted(uint256 tokenId) internal view virtual {... */\n    tag_117:\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":45668:45672  bool */\n      0x00\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":45277:45293  _owners[tokenId] */\n      dup2\n      dup2\n      mstore\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":45277:45284  _owners */\n      0x02\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":45277:45293  _owners[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":51886:51939  require(_exists(tokenId), \"ERC721: invalid token ID\") */\n      tag_219\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7566:7568   */\n      0x20\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":51886:51939  require(_exists(tokenId), \"ERC721: invalid token ID\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7548:7569   */\n      mstore\n        /* \"#utility.yul\":7605:7607   */\n      0x18\n        /* \"#utility.yul\":7585:7603   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7578:7608   */\n      mstore\n      shl(0x42, 0x115490cdcc8c4e881a5b9d985b1a59081d1bdad95b881251)\n        /* \"#utility.yul\":7624:7642   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7617:7671   */\n      mstore\n        /* \"#utility.yul\":7688:7706   */\n      0x64\n      add\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":51886:51939  require(_exists(tokenId), \"ERC721: invalid token ID\") */\n      tag_121\n        /* \"#utility.yul\":7364:7712   */\n      jump\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":51115:51286  function _approve(address to, uint256 tokenId) internal virtual {... */\n    tag_132:\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":51189:51213  _tokenApprovals[tokenId] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":51189:51204  _tokenApprovals */\n      0x04\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":51189:51213  _tokenApprovals[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":51189:51218  _tokenApprovals[tokenId] = to */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup5\n      and\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":51189:51213  _tokenApprovals[tokenId] */\n      dup2\n      swap1\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":51242:51265  ERC721.ownerOf(tokenId) */\n      tag_231\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":51189:51213  _tokenApprovals[tokenId] */\n      dup3\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":51242:51256  ERC721.ownerOf */\n      tag_71\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":51242:51265  ERC721.ownerOf(tokenId) */\n      jump\t// in\n    tag_231:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":51233:51279  Approval(ERC721.ownerOf(tokenId), to, tokenId) */\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":51115:51286  function _approve(address to, uint256 tokenId) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":45887:46148  function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {... */\n    tag_137:\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":45980:45984  bool */\n      0x00\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":45996:46009  address owner */\n      dup1\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":46012:46035  ERC721.ownerOf(tokenId) */\n      tag_233\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":46027:46034  tokenId */\n      dup4\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":46012:46026  ERC721.ownerOf */\n      tag_71\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":46012:46035  ERC721.ownerOf(tokenId) */\n      jump\t// in\n    tag_233:\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":45996:46035  address owner = ERC721.ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":46064:46069  owner */\n      dup1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":46053:46069  spender == owner */\n      and\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":46053:46060  spender */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":46053:46069  spender == owner */\n      and\n      eq\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":46053:46105  spender == owner || isApprovedForAll(owner, spender) */\n      dup1\n      tag_235\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":42855:42880  _operatorApprovals[owner] */\n      dup1\n      dup3\n      and\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":42832:42836  bool */\n      0x00\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":42855:42880  _operatorApprovals[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":42855:42873  _operatorApprovals */\n      0x05\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":42855:42880  _operatorApprovals[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":42855:42890  _operatorApprovals[owner][operator] */\n      swap4\n      dup9\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n      sload\n      0xff\n      and\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":46073:46105  isApprovedForAll(owner, spender) */\n    tag_235:\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":46053:46140  spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender */\n      dup1\n      tag_236\n      jumpi\n      pop\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":46133:46140  spender */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":46109:46140  getApproved(tokenId) == spender */\n      and\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":46109:46129  getApproved(tokenId) */\n      tag_237\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":46121:46128  tokenId */\n      dup5\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":46109:46120  getApproved */\n      tag_39\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":46109:46129  getApproved(tokenId) */\n      jump\t// in\n    tag_237:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":46109:46140  getApproved(tokenId) == spender */\n      and\n      eq\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":46053:46140  spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender */\n    tag_236:\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":46045:46141  return (spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender) */\n      swap5\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":45887:46148  function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":49770:51003  function _transfer(... */\n    tag_142:\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":49924:49928  from */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":49897:49928  ERC721.ownerOf(tokenId) == from */\n      and\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":49897:49920  ERC721.ownerOf(tokenId) */\n      tag_239\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":49912:49919  tokenId */\n      dup3\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":49897:49911  ERC721.ownerOf */\n      tag_71\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":49897:49920  ERC721.ownerOf(tokenId) */\n      jump\t// in\n    tag_239:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":49897:49928  ERC721.ownerOf(tokenId) == from */\n      and\n      eq\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":49889:49970  require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer from incorrect owner\") */\n      tag_240\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_121\n      swap1\n      tag_242\n      jump\t// in\n    tag_240:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":49988:50004  to != address(0) */\n      dup3\n      and\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":49980:50045  require(to != address(0), \"ERC721: transfer to the zero address\") */\n      tag_243\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9643:9645   */\n      0x20\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":49980:50045  require(to != address(0), \"ERC721: transfer to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9625:9646   */\n      mstore\n        /* \"#utility.yul\":9682:9684   */\n      0x24\n        /* \"#utility.yul\":9662:9680   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":9655:9685   */\n      mstore\n        /* \"#utility.yul\":9721:9755   */\n      0x4552433732313a207472616e7366657220746f20746865207a65726f20616464\n        /* \"#utility.yul\":9701:9719   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9694:9756   */\n      mstore\n      shl(0xe0, 0x72657373)\n        /* \"#utility.yul\":9772:9790   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":9765:9799   */\n      mstore\n        /* \"#utility.yul\":9816:9835   */\n      0x84\n      add\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":49980:50045  require(to != address(0), \"ERC721: transfer to the zero address\") */\n      tag_121\n        /* \"#utility.yul\":9441:9841   */\n      jump\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":49980:50045  require(to != address(0), \"ERC721: transfer to the zero address\") */\n    tag_243:\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":50056:50098  _beforeTokenTransfer(from, to, tokenId, 1) */\n      tag_246\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":50077:50081  from */\n      dup4\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":50083:50085  to */\n      dup4\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":50087:50094  tokenId */\n      dup4\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":50096:50097  1 */\n      0x01\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":50056:50076  _beforeTokenTransfer */\n      tag_247\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":50056:50098  _beforeTokenTransfer(from, to, tokenId, 1) */\n      jump\t// in\n    tag_246:\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":50225:50229  from */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":50198:50229  ERC721.ownerOf(tokenId) == from */\n      and\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":50198:50221  ERC721.ownerOf(tokenId) */\n      tag_248\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":50213:50220  tokenId */\n      dup3\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":50198:50212  ERC721.ownerOf */\n      tag_71\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":50198:50221  ERC721.ownerOf(tokenId) */\n      jump\t// in\n    tag_248:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":50198:50229  ERC721.ownerOf(tokenId) == from */\n      and\n      eq\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":50190:50271  require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer from incorrect owner\") */\n      tag_249\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_121\n      swap1\n      tag_242\n      jump\t// in\n    tag_249:\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":50340:50364  _tokenApprovals[tokenId] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":50340:50355  _tokenApprovals */\n      0x04\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":50340:50364  _tokenApprovals[tokenId] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":50333:50364  delete _tokenApprovals[tokenId] */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      swap1\n      dup2\n      and\n      swap1\n      swap2\n      sstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":50808:50823  _balances[from] */\n      dup8\n      dup2\n      and\n      dup1\n      dup7\n      mstore\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":50808:50817  _balances */\n      0x03\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":50808:50823  _balances[from] */\n      dup6\n      mstore\n      dup4\n      dup7\n      keccak256\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":50808:50828  _balances[from] -= 1 */\n      dup1\n      sload\n      not(0x00)\n      add\n      swap1\n      sstore\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":50842:50855  _balances[to] */\n      swap1\n      dup8\n      and\n      dup1\n      dup7\n      mstore\n      dup4\n      dup7\n      keccak256\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":50842:50860  _balances[to] += 1 */\n      dup1\n      sload\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":50333:50364  delete _tokenApprovals[tokenId] */\n      0x01\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":50842:50860  _balances[to] += 1 */\n      add\n      swap1\n      sstore\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":50880:50896  _owners[tokenId] */\n      dup7\n      dup7\n      mstore\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":50880:50887  _owners */\n      0x02\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":50880:50896  _owners[tokenId] */\n      swap1\n      swap5\n      mstore\n      dup3\n      dup6\n      keccak256\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":50880:50901  _owners[tokenId] = to */\n      dup1\n      sload\n      swap1\n      swap3\n      and\n      dup5\n      or\n      swap1\n      swap2\n      sstore\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":50917:50944  Transfer(from, to, tokenId) */\n      swap1\n      mload\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":50356:50363  tokenId */\n      dup5\n      swap4\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":50917:50944  Transfer(from, to, tokenId) */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap2\n      log4\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":41885:42221  {... */\n      pop\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":41815:42221  function approve(address to, uint256 tokenId) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":18415:18545  function _checkOwner() internal view virtual {... */\n    tag_150:\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":18329:18335  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x0a))\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":16939:16949  msg.sender */\n      caller\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":18478:18501  owner() == _msgSender() */\n      eq\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":18470:18538  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_182\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10048:10050   */\n      0x20\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":18470:18538  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10030:10051   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":10067:10085   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10060:10090   */\n      mstore\n        /* \"#utility.yul\":10126:10160   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":10106:10124   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10099:10161   */\n      mstore\n        /* \"#utility.yul\":10178:10196   */\n      0x64\n      add\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":18470:18538  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_121\n        /* \"#utility.yul\":9846:10202   */\n      jump\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":46478:46586  function _safeMint(address to, uint256 tokenId) internal virtual {... */\n    tag_157:\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":46553:46579  _safeMint(to, tokenId, \"\") */\n      tag_156\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":46563:46565  to */\n      dup3\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":46567:46574  tokenId */\n      dup3\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":46553:46579  _safeMint(to, tokenId, \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":46553:46562  _safeMint */\n      tag_263\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":46553:46579  _safeMint(to, tokenId, \"\") */\n      jump\t// in\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":19489:19676  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_183:\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":19581:19587  _owner */\n      0x0a\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":19597:19614  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      swap1\n      swap4\n      sstore\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":19629:19669  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":19581:19587  _owner */\n      swap2\n      and\n      swap2\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":19597:19614  _owner = newOwner */\n      swap1\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":19581:19587  _owner */\n      dup3\n      swap1\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":19629:19669  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":19562:19578  address oldOwner */\n      0x00\n      swap1\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":19629:19669  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":19552:19676  {... */\n      pop\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":19489:19676  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":51422:51729  function _setApprovalForAll(... */\n    tag_194:\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":51572:51580  operator */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":51563:51580  owner != operator */\n      and\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":51563:51568  owner */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":51563:51580  owner != operator */\n      and\n      sub\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":51555:51610  require(owner != operator, \"ERC721: approve to caller\") */\n      tag_267\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10409:10411   */\n      0x20\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":51555:51610  require(owner != operator, \"ERC721: approve to caller\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10391:10412   */\n      mstore\n        /* \"#utility.yul\":10448:10450   */\n      0x19\n        /* \"#utility.yul\":10428:10446   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10421:10451   */\n      mstore\n        /* \"#utility.yul\":10487:10514   */\n      0x4552433732313a20617070726f766520746f2063616c6c657200000000000000\n        /* \"#utility.yul\":10467:10485   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10460:10515   */\n      mstore\n        /* \"#utility.yul\":10532:10550   */\n      0x64\n      add\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":51555:51610  require(owner != operator, \"ERC721: approve to caller\") */\n      tag_121\n        /* \"#utility.yul\":10207:10556   */\n      jump\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":51555:51610  require(owner != operator, \"ERC721: approve to caller\") */\n    tag_267:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":51620:51645  _operatorApprovals[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":51620:51638  _operatorApprovals */\n      0x05\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":51620:51645  _operatorApprovals[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":51620:51655  _operatorApprovals[owner][operator] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":51620:51666  _operatorApprovals[owner][operator] = approved */\n      dup1\n      sload\n      not(0xff)\n      and\n      dup7\n      iszero\n      iszero\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":51681:51722  ApprovalForAll(owner, operator, approved) */\n      swap2\n      mload\n        /* \"#utility.yul\":540:581   */\n      swap2\n      dup3\n      mstore\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":51681:51722  ApprovalForAll(owner, operator, approved) */\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n      swap2\n        /* \"#utility.yul\":513:531   */\n      add\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":51681:51722  ApprovalForAll(owner, operator, approved) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":51422:51729  function _setApprovalForAll(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":44771:45076  function _safeTransfer(... */\n    tag_201:\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":44921:44949  _transfer(from, to, tokenId) */\n      tag_272\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":44931:44935  from */\n      dup5\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":44937:44939  to */\n      dup5\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":44941:44948  tokenId */\n      dup5\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":44921:44930  _transfer */\n      tag_142\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":44921:44949  _transfer(from, to, tokenId) */\n      jump\t// in\n    tag_272:\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":44967:45014  _checkOnERC721Received(from, to, tokenId, data) */\n      tag_273\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":44990:44994  from */\n      dup5\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":44996:44998  to */\n      dup5\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":45000:45007  tokenId */\n      dup5\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":45009:45013  data */\n      dup5\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":44967:44989  _checkOnERC721Received */\n      tag_274\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":44967:45014  _checkOnERC721Received(from, to, tokenId, data) */\n      jump\t// in\n    tag_273:\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":44959:45069  require(_checkOnERC721Received(from, to, tokenId, data), \"ERC721: transfer to non ERC721Receiver implementer\") */\n      tag_200\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_121\n      swap1\n      tag_277\n      jump\t// in\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":62728:62863  function _baseURI() internal pure override returns (string memory) {... */\n    tag_205:\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":62780:62793  string memory */\n      0x60\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":62805:62856  return \"https://api.npoint.io/275d82eb076064cd71e0\" */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x2a\n      dup2\n      mstore\n      0x20\n      add\n      data_04ff9d37b4d45db38e4be6a16cda3c01dfc5c1cafe39c931d51d438268fc8fb1\n      0x2a\n      swap2\n      codecopy\n      swap1\n      pop\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":62728:62863  function _baseURI() internal pure override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":14359:15055  function toString(uint256 value) internal pure returns (string memory) {... */\n    tag_209:\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":14415:14428  string memory */\n      0x60\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":14464:14478  uint256 length */\n      0x00\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":14481:14498  Math.log10(value) */\n      tag_280\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":14492:14497  value */\n      dup4\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":14481:14491  Math.log10 */\n      tag_281\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":14481:14498  Math.log10(value) */\n      jump\t// in\n    tag_280:\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":14501:14502  1 */\n      0x01\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":14481:14502  Math.log10(value) + 1 */\n      add\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":14464:14502  uint256 length = Math.log10(value) + 1 */\n      swap1\n      pop\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":14516:14536  string memory buffer */\n      0x00\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":14550:14556  length */\n      dup2\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":14539:14557  new string(length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_283\n      jumpi\n      tag_283\n      tag_284\n      jump\t// in\n    tag_283:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_285\n      jumpi\n      0x20\n      dup3\n      add\n      dup2\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_285:\n      pop\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":14516:14557  string memory buffer = new string(length) */\n      swap1\n      pop\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":14677:14705  add(buffer, add(32, length)) */\n      dup2\n      dup2\n      add\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":14693:14695  32 */\n      0x20\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":14677:14705  add(buffer, add(32, length)) */\n      add\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":14732:15012  while (true) {... */\n    tag_286:\n      not(0x00)\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":14763:14768  ptr-- */\n      add\n      shl(0x81, 0x181899199a1a9b1b9c1cb0b131b232b3)\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":14897:14899  10 */\n      0x0a\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":14886:14900  mod(value, 10) */\n      dup7\n      mod\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":14881:14911  byte(mod(value, 10), _SYMBOLS) */\n      byte\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":14763:14768  ptr-- */\n      dup2\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":14868:14912  mstore8(ptr, byte(mod(value, 10), _SYMBOLS)) */\n      mstore8\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":14956:14958  10 */\n      0x0a\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":14947:14958  value /= 10 */\n      dup6\n      div\n      swap5\n      pop\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":14976:14997  if (value == 0) break */\n      dup5\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":14732:15012  while (true) {... */\n      tag_286\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":14976:14997  if (value == 0) break */\n      jumpi\n      pop\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":15032:15038  buffer */\n      swap4\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":14359:15055  function toString(uint256 value) internal pure returns (string memory) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":39917:40217  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_223:\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":40019:40023  bool */\n      0x00\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":40054:40094  interfaceId == type(IERC721).interfaceId */\n      dup3\n      and\n      shl(0xe0, 0x80ac58cd)\n      eq\n      dup1\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":40054:40158  interfaceId == type(IERC721).interfaceId ||... */\n      tag_293\n      jumpi\n      pop\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":40110:40158  interfaceId == type(IERC721Metadata).interfaceId */\n      dup3\n      and\n      shl(0xe0, 0x5b5e139f)\n      eq\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":40054:40158  interfaceId == type(IERC721).interfaceId ||... */\n    tag_293:\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":40054:40210  interfaceId == type(IERC721).interfaceId ||... */\n      dup1\n      tag_106\n      jumpi\n      pop\n      shl(0xe0, 0x01ffc9a7)\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":31721:31761  interfaceId == type(IERC165).interfaceId */\n      dup4\n      and\n      eq\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":40174:40210  super.supportsInterface(interfaceId) */\n      tag_106\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":31613:31768  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      jump\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":63119:63348  function _beforeTokenTransfer(address from, address to, uint256 tokenId, uint256 batchSize)... */\n    tag_247:\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":63285:63341  super._beforeTokenTransfer(from, to, tokenId, batchSize) */\n      tag_200\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":63312:63316  from */\n      dup5\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":63318:63320  to */\n      dup5\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":63322:63329  tokenId */\n      dup5\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":63331:63340  batchSize */\n      dup5\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":63285:63311  super._beforeTokenTransfer */\n      tag_301\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":63285:63341  super._beforeTokenTransfer(from, to, tokenId, batchSize) */\n      jump\t// in\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":46807:47116  function _safeMint(... */\n    tag_263:\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":46931:46949  _mint(to, tokenId) */\n      tag_304\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":46937:46939  to */\n      dup4\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":46941:46948  tokenId */\n      dup4\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":46931:46936  _mint */\n      tag_305\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":46931:46949  _mint(to, tokenId) */\n      jump\t// in\n    tag_304:\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":46980:47033  _checkOnERC721Received(address(0), to, tokenId, data) */\n      tag_306\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":47011:47012  0 */\n      0x00\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":47015:47017  to */\n      dup5\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":47019:47026  tokenId */\n      dup5\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":47028:47032  data */\n      dup5\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":46980:47002  _checkOnERC721Received */\n      tag_274\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":46980:47033  _checkOnERC721Received(address(0), to, tokenId, data) */\n      jump\t// in\n    tag_306:\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":46959:47109  require(... */\n      tag_131\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_121\n      swap1\n      tag_277\n      jump\t// in\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":52498:53329  function _checkOnERC721Received(... */\n    tag_274:\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":52647:52651  bool */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":52667:52680  to.isContract */\n      dup5\n      and\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":21166:21185  account.code.length */\n      extcodesize\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":21166:21189  account.code.length > 0 */\n      iszero\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":52663:53323  if (to.isContract()) {... */\n      tag_312\n      jumpi\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":52702:52773  IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) */\n      mload(0x40)\n      shl(0xe1, 0x0a85bd01)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":52702:52738  IERC721Receiver(to).onERC721Received */\n      dup6\n      and\n      swap1\n      0x150b7a02\n      swap1\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":52702:52773  IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) */\n      tag_314\n      swap1\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":16939:16949  msg.sender */\n      caller\n      swap1\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":52753:52757  from */\n      dup10\n      swap1\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":52759:52766  tokenId */\n      dup9\n      swap1\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":52768:52772  data */\n      dup9\n      swap1\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":52702:52773  IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) */\n      0x04\n      add\n      tag_315\n      jump\t// in\n    tag_314:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_316\n      jumpi\n      pop\n      0x40\n      dup1\n      mload\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      tag_317\n      swap2\n      dup2\n      add\n      swap1\n      tag_318\n      jump\t// in\n    tag_317:\n      0x01\n    tag_316:\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":52698:53271  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {... */\n      tag_319\n      jumpi\n      returndatasize\n      dup1\n      dup1\n      iszero\n      tag_324\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_323)\n    tag_324:\n      0x60\n      swap2\n      pop\n    tag_323:\n      pop\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":52940:52946  reason */\n      dup1\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":52940:52953  reason.length */\n      mload\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":52957:52958  0 */\n      0x00\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":52940:52958  reason.length == 0 */\n      sub\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":52936:53257  if (reason.length == 0) {... */\n      tag_325\n      jumpi\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":52982:53042  revert(\"ERC721: transfer to non ERC721Receiver implementer\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_121\n      swap1\n      tag_277\n      jump\t// in\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":52936:53257  if (reason.length == 0) {... */\n    tag_325:\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":53209:53215  reason */\n      dup1\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":53203:53216  mload(reason) */\n      mload\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":53194:53200  reason */\n      dup2\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":53190:53192  32 */\n      0x20\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":53186:53201  add(32, reason) */\n      add\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":53179:53217  revert(add(32, reason), mload(reason)) */\n      revert\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":52698:53271  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {... */\n    tag_319:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":52823:52874  retval == IERC721Receiver.onERC721Received.selector */\n      and\n      shl(0xe1, 0x0a85bd01)\n      eq\n      swap1\n      pop\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":52816:52874  return retval == IERC721Receiver.onERC721Received.selector */\n      jump(tag_236)\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":52663:53323  if (to.isContract()) {... */\n    tag_312:\n      pop\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":53308:53312  true */\n      0x01\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":52498:53329  function _checkOnERC721Received(... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":11332:12222  function log10(uint256 value) internal pure returns (uint256) {... */\n    tag_281:\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":11385:11392  uint256 */\n      0x00\n      dup1\n      shl(0x40, 0x184f03e93ff9f4daa797ed6e38ed64bf6a1f01)\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":11460:11475  value >= 10**64 */\n      dup4\n      lt\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":11456:11555  if (value >= 10**64) {... */\n      tag_331\n      jumpi\n      shl(0x40, 0x184f03e93ff9f4daa797ed6e38ed64bf6a1f01)\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":11495:11510  value /= 10**64 */\n      dup4\n      div\n      swap3\n      pop\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":11538:11540  64 */\n      0x40\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":11528:11540  result += 64 */\n      add\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":11456:11555  if (value >= 10**64) {... */\n    tag_331:\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":11581:11587  10**32 */\n      0x04ee2d6d415b85acef8100000000\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":11572:11577  value */\n      dup4\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":11572:11587  value >= 10**32 */\n      lt\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":11568:11667  if (value >= 10**32) {... */\n      tag_334\n      jumpi\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":11616:11622  10**32 */\n      0x04ee2d6d415b85acef8100000000\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":11607:11622  value /= 10**32 */\n      dup4\n      div\n      swap3\n      pop\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":11650:11652  32 */\n      0x20\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":11640:11652  result += 32 */\n      add\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":11568:11667  if (value >= 10**32) {... */\n    tag_334:\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":11693:11699  10**16 */\n      0x2386f26fc10000\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":11684:11689  value */\n      dup4\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":11684:11699  value >= 10**16 */\n      lt\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":11680:11779  if (value >= 10**16) {... */\n      tag_337\n      jumpi\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":11728:11734  10**16 */\n      0x2386f26fc10000\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":11719:11734  value /= 10**16 */\n      dup4\n      div\n      swap3\n      pop\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":11762:11764  16 */\n      0x10\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":11752:11764  result += 16 */\n      add\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":11680:11779  if (value >= 10**16) {... */\n    tag_337:\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":11805:11810  10**8 */\n      0x05f5e100\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":11796:11801  value */\n      dup4\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":11796:11810  value >= 10**8 */\n      lt\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":11792:11888  if (value >= 10**8) {... */\n      tag_340\n      jumpi\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":11839:11844  10**8 */\n      0x05f5e100\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":11830:11844  value /= 10**8 */\n      dup4\n      div\n      swap3\n      pop\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":11872:11873  8 */\n      0x08\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":11862:11873  result += 8 */\n      add\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":11792:11888  if (value >= 10**8) {... */\n    tag_340:\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":11914:11919  10**4 */\n      0x2710\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":11905:11910  value */\n      dup4\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":11905:11919  value >= 10**4 */\n      lt\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":11901:11997  if (value >= 10**4) {... */\n      tag_343\n      jumpi\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":11948:11953  10**4 */\n      0x2710\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":11939:11953  value /= 10**4 */\n      dup4\n      div\n      swap3\n      pop\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":11981:11982  4 */\n      0x04\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":11971:11982  result += 4 */\n      add\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":11901:11997  if (value >= 10**4) {... */\n    tag_343:\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":12023:12028  10**2 */\n      0x64\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":12014:12019  value */\n      dup4\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":12014:12028  value >= 10**2 */\n      lt\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":12010:12106  if (value >= 10**2) {... */\n      tag_346\n      jumpi\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":12057:12062  10**2 */\n      0x64\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":12048:12062  value /= 10**2 */\n      dup4\n      div\n      swap3\n      pop\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":12090:12091  2 */\n      0x02\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":12080:12091  result += 2 */\n      add\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":12010:12106  if (value >= 10**2) {... */\n    tag_346:\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":12132:12137  10**1 */\n      0x0a\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":12123:12128  value */\n      dup4\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":12123:12137  value >= 10**1 */\n      lt\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":12119:12183  if (value >= 10**1) {... */\n      tag_106\n      jumpi\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":12167:12168  1 */\n      0x01\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":12157:12168  result += 1 */\n      add\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":12209:12215  result */\n      swap3\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":11332:12222  function log10(uint256 value) internal pure returns (uint256) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":57759:58649  function _beforeTokenTransfer(... */\n    tag_301:\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":58018:58019  1 */\n      0x01\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":58006:58015  batchSize */\n      dup2\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":58006:58019  batchSize > 1 */\n      gt\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":58002:58221  if (batchSize > 1) {... */\n      iszero\n      tag_354\n      jumpi\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":58147:58210  revert(\"ERC721Enumerable: consecutive transfers not supported\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12062:12064   */\n      0x20\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":58147:58210  revert(\"ERC721Enumerable: consecutive transfers not supported\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12044:12065   */\n      mstore\n        /* \"#utility.yul\":12101:12103   */\n      0x35\n        /* \"#utility.yul\":12081:12099   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12074:12104   */\n      mstore\n        /* \"#utility.yul\":12140:12174   */\n      0x455243373231456e756d657261626c653a20636f6e7365637574697665207472\n        /* \"#utility.yul\":12120:12138   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12113:12175   */\n      mstore\n      shl(0x5a, 0x185b9cd9995c9cc81b9bdd081cdd5c1c1bdc9d1959)\n        /* \"#utility.yul\":12191:12209   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":12184:12235   */\n      mstore\n        /* \"#utility.yul\":12252:12271   */\n      0x84\n      add\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":58147:58210  revert(\"ERC721Enumerable: consecutive transfers not supported\") */\n      tag_121\n        /* \"#utility.yul\":11860:12277   */\n      jump\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":58002:58221  if (batchSize > 1) {... */\n    tag_354:\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":58249:58261  firstTokenId */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":58276:58294  from == address(0) */\n      dup6\n      and\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":58272:58455  if (from == address(0)) {... */\n      tag_357\n      jumpi\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":58310:58350  _addTokenToAllTokensEnumeration(tokenId) */\n      tag_358\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":58342:58349  tokenId */\n      dup2\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":59458:59468  _allTokens */\n      0x08\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":59458:59475  _allTokens.length */\n      dup1\n      sload\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":59431:59455  _allTokensIndex[tokenId] */\n      0x00\n      dup4\n      dup2\n      mstore\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":59431:59446  _allTokensIndex */\n      0x09\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":59431:59455  _allTokensIndex[tokenId] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":59431:59475  _allTokensIndex[tokenId] = _allTokens.length */\n      dup3\n      swap1\n      sstore\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":59485:59509  _allTokens.push(tokenId) */\n      0x01\n      dup3\n      add\n      dup4\n      sstore\n      swap2\n      swap1\n      swap2\n      mstore\n      0xf3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee3\n      add\n      sstore\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":59355:59516  function _addTokenToAllTokensEnumeration(uint256 tokenId) private {... */\n      jump\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":58310:58350  _addTokenToAllTokensEnumeration(tokenId) */\n    tag_358:\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":58272:58455  if (from == address(0)) {... */\n      jump(tag_362)\n    tag_357:\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":58379:58381  to */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":58371:58381  from != to */\n      and\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":58371:58375  from */\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":58371:58381  from != to */\n      and\n      eq\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":58367:58455  if (from != to) {... */\n      tag_362\n      jumpi\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":58397:58444  _removeTokenFromOwnerEnumeration(from, tokenId) */\n      tag_362\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":58430:58434  from */\n      dup6\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":58436:58443  tokenId */\n      dup3\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":58397:58429  _removeTokenFromOwnerEnumeration */\n      tag_363\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":58397:58444  _removeTokenFromOwnerEnumeration(from, tokenId) */\n      jump\t// in\n    tag_362:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":58468:58484  to == address(0) */\n      dup5\n      and\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":58464:58643  if (to == address(0)) {... */\n      tag_364\n      jumpi\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":58500:58545  _removeTokenFromAllTokensEnumeration(tokenId) */\n      tag_365\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":58537:58544  tokenId */\n      dup2\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":58500:58536  _removeTokenFromAllTokensEnumeration */\n      tag_366\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":58500:58545  _removeTokenFromAllTokensEnumeration(tokenId) */\n      jump\t// in\n    tag_365:\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":58464:58643  if (to == address(0)) {... */\n      jump(tag_369)\n    tag_364:\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":58572:58576  from */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":58566:58576  to != from */\n      and\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":58566:58568  to */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":58566:58576  to != from */\n      and\n      eq\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":58562:58643  if (to != from) {... */\n      tag_369\n      jumpi\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":58592:58632  _addTokenToOwnerEnumeration(to, tokenId) */\n      tag_369\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":58620:58622  to */\n      dup5\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":58624:58631  tokenId */\n      dup3\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":58592:58619  _addTokenToOwnerEnumeration */\n      tag_370\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":58592:58632  _addTokenToOwnerEnumeration(to, tokenId) */\n      jump\t// in\n    tag_369:\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":57920:58649  {... */\n      pop\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":57759:58649  function _beforeTokenTransfer(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":47438:48358  function _mint(address to, uint256 tokenId) internal virtual {... */\n    tag_305:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":47517:47533  to != address(0) */\n      dup3\n      and\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":47509:47570  require(to != address(0), \"ERC721: mint to the zero address\") */\n      tag_372\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12484:12486   */\n      0x20\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":47509:47570  require(to != address(0), \"ERC721: mint to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12466:12487   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":12503:12521   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12496:12526   */\n      mstore\n        /* \"#utility.yul\":12562:12596   */\n      0x4552433732313a206d696e7420746f20746865207a65726f2061646472657373\n        /* \"#utility.yul\":12542:12560   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12535:12597   */\n      mstore\n        /* \"#utility.yul\":12614:12632   */\n      0x64\n      add\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":47509:47570  require(to != address(0), \"ERC721: mint to the zero address\") */\n      tag_121\n        /* \"#utility.yul\":12282:12638   */\n      jump\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":47509:47570  require(to != address(0), \"ERC721: mint to the zero address\") */\n    tag_372:\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":45668:45672  bool */\n      0x00\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":45277:45293  _owners[tokenId] */\n      dup2\n      dup2\n      mstore\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":45277:45284  _owners */\n      0x02\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":45277:45293  _owners[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":45691:45722  _ownerOf(tokenId) != address(0) */\n      iszero\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":47580:47638  require(!_exists(tokenId), \"ERC721: token already minted\") */\n      tag_376\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12845:12847   */\n      0x20\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":47580:47638  require(!_exists(tokenId), \"ERC721: token already minted\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12827:12848   */\n      mstore\n        /* \"#utility.yul\":12884:12886   */\n      0x1c\n        /* \"#utility.yul\":12864:12882   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12857:12887   */\n      mstore\n        /* \"#utility.yul\":12923:12953   */\n      0x4552433732313a20746f6b656e20616c7265616479206d696e74656400000000\n        /* \"#utility.yul\":12903:12921   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12896:12954   */\n      mstore\n        /* \"#utility.yul\":12971:12989   */\n      0x64\n      add\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":47580:47638  require(!_exists(tokenId), \"ERC721: token already minted\") */\n      tag_121\n        /* \"#utility.yul\":12643:12995   */\n      jump\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":47580:47638  require(!_exists(tokenId), \"ERC721: token already minted\") */\n    tag_376:\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":47649:47697  _beforeTokenTransfer(address(0), to, tokenId, 1) */\n      tag_379\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":47678:47679  0 */\n      0x00\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":47682:47684  to */\n      dup4\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":47686:47693  tokenId */\n      dup4\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":47695:47696  1 */\n      0x01\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":47649:47669  _beforeTokenTransfer */\n      tag_247\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":47649:47697  _beforeTokenTransfer(address(0), to, tokenId, 1) */\n      jump\t// in\n    tag_379:\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":45668:45672  bool */\n      0x00\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":45277:45293  _owners[tokenId] */\n      dup2\n      dup2\n      mstore\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":45277:45284  _owners */\n      0x02\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":45277:45293  _owners[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":45691:45722  _ownerOf(tokenId) != address(0) */\n      iszero\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":47784:47842  require(!_exists(tokenId), \"ERC721: token already minted\") */\n      tag_381\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12845:12847   */\n      0x20\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":47784:47842  require(!_exists(tokenId), \"ERC721: token already minted\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12827:12848   */\n      mstore\n        /* \"#utility.yul\":12884:12886   */\n      0x1c\n        /* \"#utility.yul\":12864:12882   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12857:12887   */\n      mstore\n        /* \"#utility.yul\":12923:12953   */\n      0x4552433732313a20746f6b656e20616c7265616479206d696e74656400000000\n        /* \"#utility.yul\":12903:12921   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12896:12954   */\n      mstore\n        /* \"#utility.yul\":12971:12989   */\n      0x64\n      add\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":47784:47842  require(!_exists(tokenId), \"ERC721: token already minted\") */\n      tag_121\n        /* \"#utility.yul\":12643:12995   */\n      jump\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":47784:47842  require(!_exists(tokenId), \"ERC721: token already minted\") */\n    tag_381:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":48184:48197  _balances[to] */\n      dup3\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":48184:48193  _balances */\n      0x03\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":48184:48197  _balances[to] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":48184:48202  _balances[to] += 1 */\n      dup1\n      sload\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":48201:48202  1 */\n      0x01\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":48184:48202  _balances[to] += 1 */\n      add\n      swap1\n      sstore\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":48223:48239  _owners[tokenId] */\n      dup5\n      dup4\n      mstore\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":48223:48230  _owners */\n      0x02\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":48223:48239  _owners[tokenId] */\n      swap1\n      swap2\n      mstore\n      dup1\n      dup3\n      keccak256\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":48223:48244  _owners[tokenId] = to */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      dup5\n      or\n      swap1\n      sstore\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":48260:48293  Transfer(address(0), to, tokenId) */\n      mload\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":48231:48238  tokenId */\n      dup4\n      swap3\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":48184:48197  _balances[to] */\n      swap2\n      swap1\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":48260:48293  Transfer(address(0), to, tokenId) */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap1\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":48184:48197  _balances[to] */\n      dup3\n      swap1\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":48260:48293  Transfer(address(0), to, tokenId) */\n      log4\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":62916:63045  {... */\n      pop\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":62869:63045  function safeMint(address to) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":60133:61103  function _removeTokenFromOwnerEnumeration(address from, uint256 tokenId) private {... */\n    tag_363:\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":60395:60417  uint256 lastTokenIndex */\n      0x00\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":60445:60446  1 */\n      0x01\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":60420:60442  ERC721.balanceOf(from) */\n      tag_389\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":60437:60441  from */\n      dup5\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":60420:60436  ERC721.balanceOf */\n      tag_75\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":60420:60442  ERC721.balanceOf(from) */\n      jump\t// in\n    tag_389:\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":60420:60446  ERC721.balanceOf(from) - 1 */\n      tag_390\n      swap2\n      swap1\n      tag_391\n      jump\t// in\n    tag_390:\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":60456:60474  uint256 tokenIndex */\n      0x00\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":60477:60503  _ownedTokensIndex[tokenId] */\n      dup4\n      dup2\n      mstore\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":60477:60494  _ownedTokensIndex */\n      0x07\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":60477:60503  _ownedTokensIndex[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":60395:60446  uint256 lastTokenIndex = ERC721.balanceOf(from) - 1 */\n      swap1\n      swap2\n      pop\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":60607:60635  tokenIndex != lastTokenIndex */\n      dup1\n      dup3\n      eq\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":60603:60926  if (tokenIndex != lastTokenIndex) {... */\n      tag_392\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":60673:60691  _ownedTokens[from] */\n      dup5\n      and\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":60651:60670  uint256 lastTokenId */\n      0x00\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":60673:60691  _ownedTokens[from] */\n      swap1\n      dup2\n      mstore\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":60673:60685  _ownedTokens */\n      0x06\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":60673:60691  _ownedTokens[from] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":60673:60707  _ownedTokens[from][lastTokenIndex] */\n      dup6\n      dup5\n      mstore\n      dup3\n      mstore\n      dup1\n      dup4\n      keccak256\n      sload\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":60722:60752  _ownedTokens[from][tokenIndex] */\n      dup5\n      dup5\n      mstore\n      dup2\n      dup5\n      keccak256\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":60722:60766  _ownedTokens[from][tokenIndex] = lastTokenId */\n      dup2\n      swap1\n      sstore\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":60838:60868  _ownedTokensIndex[lastTokenId] */\n      dup4\n      mstore\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":60838:60855  _ownedTokensIndex */\n      0x07\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":60838:60868  _ownedTokensIndex[lastTokenId] */\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":60838:60881  _ownedTokensIndex[lastTokenId] = tokenIndex */\n      dup2\n      swap1\n      sstore\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":60603:60926  if (tokenIndex != lastTokenIndex) {... */\n    tag_392:\n      pop\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":61019:61045  _ownedTokensIndex[tokenId] */\n      0x00\n      swap2\n      dup3\n      mstore\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":61019:61036  _ownedTokensIndex */\n      0x07\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":61019:61045  _ownedTokensIndex[tokenId] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":61012:61045  delete _ownedTokensIndex[tokenId] */\n      dup5\n      swap1\n      sstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":61062:61080  _ownedTokens[from] */\n      swap1\n      swap5\n      and\n      dup4\n      mstore\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":61062:61074  _ownedTokens */\n      0x06\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":61062:61080  _ownedTokens[from] */\n      dup2\n      mstore\n      dup4\n      dup4\n      keccak256\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":61062:61096  _ownedTokens[from][lastTokenIndex] */\n      swap2\n      dup4\n      mstore\n      mstore\n      swap1\n      dup2\n      keccak256\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":61055:61096  delete _ownedTokens[from][lastTokenIndex] */\n      sstore\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":60133:61103  function _removeTokenFromOwnerEnumeration(address from, uint256 tokenId) private {... */\n      jump\t// out\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":61391:62452  function _removeTokenFromAllTokensEnumeration(uint256 tokenId) private {... */\n    tag_366:\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":61665:61675  _allTokens */\n      0x08\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":61665:61682  _allTokens.length */\n      sload\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":61640:61662  uint256 lastTokenIndex */\n      0x00\n      swap1\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":61665:61686  _allTokens.length - 1 */\n      tag_394\n      swap1\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":61685:61686  1 */\n      0x01\n      swap1\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":61665:61686  _allTokens.length - 1 */\n      tag_391\n      jump\t// in\n    tag_394:\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":61696:61714  uint256 tokenIndex */\n      0x00\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":61717:61741  _allTokensIndex[tokenId] */\n      dup4\n      dup2\n      mstore\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":61717:61732  _allTokensIndex */\n      0x09\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":61717:61741  _allTokensIndex[tokenId] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":62085:62095  _allTokens */\n      0x08\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":62085:62111  _allTokens[lastTokenIndex] */\n      dup1\n      sload\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":61640:61686  uint256 lastTokenIndex = _allTokens.length - 1 */\n      swap4\n      swap5\n      pop\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":61717:61741  _allTokensIndex[tokenId] */\n      swap1\n      swap3\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":61640:61686  uint256 lastTokenIndex = _allTokens.length - 1 */\n      dup5\n      swap1\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":62085:62111  _allTokens[lastTokenIndex] */\n      dup2\n      lt\n      tag_396\n      jumpi\n      tag_396\n      tag_167\n      jump\t// in\n    tag_396:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      sload\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":62063:62111  uint256 lastTokenId = _allTokens[lastTokenIndex] */\n      swap1\n      pop\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":62147:62158  lastTokenId */\n      dup1\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":62122:62132  _allTokens */\n      0x08\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":62133:62143  tokenIndex */\n      dup4\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":62122:62144  _allTokens[tokenIndex] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_399\n      jumpi\n      tag_399\n      tag_167\n      jump\t// in\n    tag_399:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      keccak256\n      swap1\n      swap2\n      add\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":62122:62158  _allTokens[tokenIndex] = lastTokenId */\n      swap3\n      swap1\n      swap3\n      sstore\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":62226:62254  _allTokensIndex[lastTokenId] */\n      dup3\n      dup2\n      mstore\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":62226:62241  _allTokensIndex */\n      0x09\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":62226:62254  _allTokensIndex[lastTokenId] */\n      swap1\n      swap2\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":62226:62267  _allTokensIndex[lastTokenId] = tokenIndex */\n      dup5\n      swap1\n      sstore\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":62395:62419  _allTokensIndex[tokenId] */\n      dup6\n      dup3\n      mstore\n      dup2\n      keccak256\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":62388:62419  delete _allTokensIndex[tokenId] */\n      sstore\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":62429:62439  _allTokens */\n      0x08\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":62429:62445  _allTokens.pop() */\n      dup1\n      sload\n      dup1\n      tag_402\n      jumpi\n      tag_402\n      tag_403\n      jump\t// in\n    tag_402:\n      0x01\n      swap1\n      sub\n      dup2\n      dup2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      sstore\n      swap1\n      sstore\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":61462:62452  {... */\n      pop\n      pop\n      pop\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":61391:62452  function _removeTokenFromAllTokensEnumeration(uint256 tokenId) private {... */\n      pop\n      jump\t// out\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":58943:59160  function _addTokenToOwnerEnumeration(address to, uint256 tokenId) private {... */\n    tag_370:\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":59027:59041  uint256 length */\n      0x00\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":59044:59064  ERC721.balanceOf(to) */\n      tag_406\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":59061:59063  to */\n      dup4\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":59044:59060  ERC721.balanceOf */\n      tag_75\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":59044:59064  ERC721.balanceOf(to) */\n      jump\t// in\n    tag_406:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":59074:59090  _ownedTokens[to] */\n      swap1\n      swap4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":59074:59086  _ownedTokens */\n      0x06\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":59074:59090  _ownedTokens[to] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":59074:59098  _ownedTokens[to][length] */\n      dup7\n      dup5\n      mstore\n      dup3\n      mstore\n      dup1\n      dup4\n      keccak256\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":59074:59108  _ownedTokens[to][length] = tokenId */\n      dup6\n      swap1\n      sstore\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":59118:59144  _ownedTokensIndex[tokenId] */\n      swap4\n      dup3\n      mstore\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":59118:59135  _ownedTokensIndex */\n      0x07\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":59118:59144  _ownedTokensIndex[tokenId] */\n      swap1\n      mstore\n      swap2\n      swap1\n      swap2\n      keccak256\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":59118:59153  _ownedTokensIndex[tokenId] = length */\n      swap2\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":58943:59160  function _addTokenToOwnerEnumeration(address to, uint256 tokenId) private {... */\n      jump\t// out\n        /* \"#utility.yul\":14:145   */\n    tag_407:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"#utility.yul\":88:120   */\n      dup2\n      and\n        /* \"#utility.yul\":78:121   */\n      dup2\n      eq\n        /* \"#utility.yul\":68:139   */\n      tag_219\n      jumpi\n        /* \"#utility.yul\":135:136   */\n      0x00\n        /* \"#utility.yul\":132:133   */\n      dup1\n        /* \"#utility.yul\":125:137   */\n      revert\n        /* \"#utility.yul\":150:395   */\n    tag_28:\n        /* \"#utility.yul\":208:214   */\n      0x00\n        /* \"#utility.yul\":261:263   */\n      0x20\n        /* \"#utility.yul\":249:258   */\n      dup3\n        /* \"#utility.yul\":240:247   */\n      dup5\n        /* \"#utility.yul\":236:259   */\n      sub\n        /* \"#utility.yul\":232:264   */\n      slt\n        /* \"#utility.yul\":229:281   */\n      iszero\n      tag_415\n      jumpi\n        /* \"#utility.yul\":277:278   */\n      0x00\n        /* \"#utility.yul\":274:275   */\n      dup1\n        /* \"#utility.yul\":267:279   */\n      revert\n        /* \"#utility.yul\":229:281   */\n    tag_415:\n        /* \"#utility.yul\":316:325   */\n      dup2\n        /* \"#utility.yul\":303:326   */\n      calldataload\n        /* \"#utility.yul\":335:365   */\n      tag_207\n        /* \"#utility.yul\":359:364   */\n      dup2\n        /* \"#utility.yul\":335:365   */\n      tag_407\n      jump\t// in\n        /* \"#utility.yul\":592:842   */\n    tag_408:\n        /* \"#utility.yul\":677:678   */\n      0x00\n        /* \"#utility.yul\":687:800   */\n    tag_419:\n        /* \"#utility.yul\":701:707   */\n      dup4\n        /* \"#utility.yul\":698:699   */\n      dup2\n        /* \"#utility.yul\":695:708   */\n      lt\n        /* \"#utility.yul\":687:800   */\n      iszero\n      tag_421\n      jumpi\n        /* \"#utility.yul\":777:788   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":771:789   */\n      mload\n        /* \"#utility.yul\":758:769   */\n      dup4\n      dup3\n      add\n        /* \"#utility.yul\":751:790   */\n      mstore\n        /* \"#utility.yul\":723:725   */\n      0x20\n        /* \"#utility.yul\":716:726   */\n      add\n        /* \"#utility.yul\":687:800   */\n      jump(tag_419)\n    tag_421:\n      pop\n      pop\n        /* \"#utility.yul\":834:835   */\n      0x00\n        /* \"#utility.yul\":816:832   */\n      swap2\n      add\n        /* \"#utility.yul\":809:836   */\n      mstore\n        /* \"#utility.yul\":592:842   */\n      jump\t// out\n        /* \"#utility.yul\":847:1118   */\n    tag_409:\n        /* \"#utility.yul\":889:892   */\n      0x00\n        /* \"#utility.yul\":927:932   */\n      dup2\n        /* \"#utility.yul\":921:933   */\n      mload\n        /* \"#utility.yul\":954:960   */\n      dup1\n        /* \"#utility.yul\":949:952   */\n      dup5\n        /* \"#utility.yul\":942:961   */\n      mstore\n        /* \"#utility.yul\":970:1046   */\n      tag_423\n        /* \"#utility.yul\":1039:1045   */\n      dup2\n        /* \"#utility.yul\":1032:1036   */\n      0x20\n        /* \"#utility.yul\":1027:1030   */\n      dup7\n        /* \"#utility.yul\":1023:1037   */\n      add\n        /* \"#utility.yul\":1016:1020   */\n      0x20\n        /* \"#utility.yul\":1009:1014   */\n      dup7\n        /* \"#utility.yul\":1005:1021   */\n      add\n        /* \"#utility.yul\":970:1046   */\n      tag_408\n      jump\t// in\n    tag_423:\n        /* \"#utility.yul\":1100:1102   */\n      0x1f\n        /* \"#utility.yul\":1079:1094   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":1075:1104   */\n      and\n        /* \"#utility.yul\":1066:1105   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":1107:1111   */\n      0x20\n        /* \"#utility.yul\":1062:1112   */\n      add\n      swap3\n        /* \"#utility.yul\":847:1118   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1123:1343   */\n    tag_35:\n        /* \"#utility.yul\":1272:1274   */\n      0x20\n        /* \"#utility.yul\":1261:1270   */\n      dup2\n        /* \"#utility.yul\":1254:1275   */\n      mstore\n        /* \"#utility.yul\":1235:1239   */\n      0x00\n        /* \"#utility.yul\":1292:1337   */\n      tag_207\n        /* \"#utility.yul\":1333:1335   */\n      0x20\n        /* \"#utility.yul\":1322:1331   */\n      dup4\n        /* \"#utility.yul\":1318:1336   */\n      add\n        /* \"#utility.yul\":1310:1316   */\n      dup5\n        /* \"#utility.yul\":1292:1337   */\n      tag_409\n      jump\t// in\n        /* \"#utility.yul\":1348:1528   */\n    tag_38:\n        /* \"#utility.yul\":1407:1413   */\n      0x00\n        /* \"#utility.yul\":1460:1462   */\n      0x20\n        /* \"#utility.yul\":1448:1457   */\n      dup3\n        /* \"#utility.yul\":1439:1446   */\n      dup5\n        /* \"#utility.yul\":1435:1458   */\n      sub\n        /* \"#utility.yul\":1431:1463   */\n      slt\n        /* \"#utility.yul\":1428:1480   */\n      iszero\n      tag_427\n      jumpi\n        /* \"#utility.yul\":1476:1477   */\n      0x00\n        /* \"#utility.yul\":1473:1474   */\n      dup1\n        /* \"#utility.yul\":1466:1478   */\n      revert\n        /* \"#utility.yul\":1428:1480   */\n    tag_427:\n      pop\n        /* \"#utility.yul\":1499:1522   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":1348:1528   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1741:1914   */\n    tag_410:\n        /* \"#utility.yul\":1809:1829   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1858:1889   */\n      dup2\n      and\n        /* \"#utility.yul\":1848:1890   */\n      dup2\n      eq\n        /* \"#utility.yul\":1838:1908   */\n      tag_430\n      jumpi\n        /* \"#utility.yul\":1904:1905   */\n      0x00\n        /* \"#utility.yul\":1901:1902   */\n      dup1\n        /* \"#utility.yul\":1894:1906   */\n      revert\n        /* \"#utility.yul\":1838:1908   */\n    tag_430:\n        /* \"#utility.yul\":1741:1914   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1919:2173   */\n    tag_44:\n        /* \"#utility.yul\":1987:1993   */\n      0x00\n        /* \"#utility.yul\":1995:2001   */\n      dup1\n        /* \"#utility.yul\":2048:2050   */\n      0x40\n        /* \"#utility.yul\":2036:2045   */\n      dup4\n        /* \"#utility.yul\":2027:2034   */\n      dup6\n        /* \"#utility.yul\":2023:2046   */\n      sub\n        /* \"#utility.yul\":2019:2051   */\n      slt\n        /* \"#utility.yul\":2016:2068   */\n      iszero\n      tag_432\n      jumpi\n        /* \"#utility.yul\":2064:2065   */\n      0x00\n        /* \"#utility.yul\":2061:2062   */\n      dup1\n        /* \"#utility.yul\":2054:2066   */\n      revert\n        /* \"#utility.yul\":2016:2068   */\n    tag_432:\n        /* \"#utility.yul\":2087:2116   */\n      tag_433\n        /* \"#utility.yul\":2106:2115   */\n      dup4\n        /* \"#utility.yul\":2087:2116   */\n      tag_410\n      jump\t// in\n    tag_433:\n        /* \"#utility.yul\":2077:2116   */\n      swap5\n        /* \"#utility.yul\":2163:2165   */\n      0x20\n        /* \"#utility.yul\":2148:2166   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":2135:2167   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1919:2173   */\n      jump\t// out\n        /* \"#utility.yul\":2360:2688   */\n    tag_52:\n        /* \"#utility.yul\":2437:2443   */\n      0x00\n        /* \"#utility.yul\":2445:2451   */\n      dup1\n        /* \"#utility.yul\":2453:2459   */\n      0x00\n        /* \"#utility.yul\":2506:2508   */\n      0x60\n        /* \"#utility.yul\":2494:2503   */\n      dup5\n        /* \"#utility.yul\":2485:2492   */\n      dup7\n        /* \"#utility.yul\":2481:2504   */\n      sub\n        /* \"#utility.yul\":2477:2509   */\n      slt\n        /* \"#utility.yul\":2474:2526   */\n      iszero\n      tag_436\n      jumpi\n        /* \"#utility.yul\":2522:2523   */\n      0x00\n        /* \"#utility.yul\":2519:2520   */\n      dup1\n        /* \"#utility.yul\":2512:2524   */\n      revert\n        /* \"#utility.yul\":2474:2526   */\n    tag_436:\n        /* \"#utility.yul\":2545:2574   */\n      tag_437\n        /* \"#utility.yul\":2564:2573   */\n      dup5\n        /* \"#utility.yul\":2545:2574   */\n      tag_410\n      jump\t// in\n    tag_437:\n        /* \"#utility.yul\":2535:2574   */\n      swap3\n      pop\n        /* \"#utility.yul\":2593:2631   */\n      tag_438\n        /* \"#utility.yul\":2627:2629   */\n      0x20\n        /* \"#utility.yul\":2616:2625   */\n      dup6\n        /* \"#utility.yul\":2612:2630   */\n      add\n        /* \"#utility.yul\":2593:2631   */\n      tag_410\n      jump\t// in\n    tag_438:\n        /* \"#utility.yul\":2583:2631   */\n      swap2\n      pop\n        /* \"#utility.yul\":2678:2680   */\n      0x40\n        /* \"#utility.yul\":2667:2676   */\n      dup5\n        /* \"#utility.yul\":2663:2681   */\n      add\n        /* \"#utility.yul\":2650:2682   */\n      calldataload\n        /* \"#utility.yul\":2640:2682   */\n      swap1\n      pop\n        /* \"#utility.yul\":2360:2688   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":2693:2879   */\n    tag_60:\n        /* \"#utility.yul\":2752:2758   */\n      0x00\n        /* \"#utility.yul\":2805:2807   */\n      0x20\n        /* \"#utility.yul\":2793:2802   */\n      dup3\n        /* \"#utility.yul\":2784:2791   */\n      dup5\n        /* \"#utility.yul\":2780:2803   */\n      sub\n        /* \"#utility.yul\":2776:2808   */\n      slt\n        /* \"#utility.yul\":2773:2825   */\n      iszero\n      tag_440\n      jumpi\n        /* \"#utility.yul\":2821:2822   */\n      0x00\n        /* \"#utility.yul\":2818:2819   */\n      dup1\n        /* \"#utility.yul\":2811:2823   */\n      revert\n        /* \"#utility.yul\":2773:2825   */\n    tag_440:\n        /* \"#utility.yul\":2844:2873   */\n      tag_207\n        /* \"#utility.yul\":2863:2872   */\n      dup3\n        /* \"#utility.yul\":2844:2873   */\n      tag_410\n      jump\t// in\n        /* \"#utility.yul\":2884:3231   */\n    tag_87:\n        /* \"#utility.yul\":2949:2955   */\n      0x00\n        /* \"#utility.yul\":2957:2963   */\n      dup1\n        /* \"#utility.yul\":3010:3012   */\n      0x40\n        /* \"#utility.yul\":2998:3007   */\n      dup4\n        /* \"#utility.yul\":2989:2996   */\n      dup6\n        /* \"#utility.yul\":2985:3008   */\n      sub\n        /* \"#utility.yul\":2981:3013   */\n      slt\n        /* \"#utility.yul\":2978:3030   */\n      iszero\n      tag_443\n      jumpi\n        /* \"#utility.yul\":3026:3027   */\n      0x00\n        /* \"#utility.yul\":3023:3024   */\n      dup1\n        /* \"#utility.yul\":3016:3028   */\n      revert\n        /* \"#utility.yul\":2978:3030   */\n    tag_443:\n        /* \"#utility.yul\":3049:3078   */\n      tag_444\n        /* \"#utility.yul\":3068:3077   */\n      dup4\n        /* \"#utility.yul\":3049:3078   */\n      tag_410\n      jump\t// in\n    tag_444:\n        /* \"#utility.yul\":3039:3078   */\n      swap2\n      pop\n        /* \"#utility.yul\":3128:3130   */\n      0x20\n        /* \"#utility.yul\":3117:3126   */\n      dup4\n        /* \"#utility.yul\":3113:3131   */\n      add\n        /* \"#utility.yul\":3100:3132   */\n      calldataload\n        /* \"#utility.yul\":3175:3180   */\n      dup1\n        /* \"#utility.yul\":3168:3181   */\n      iszero\n        /* \"#utility.yul\":3161:3182   */\n      iszero\n        /* \"#utility.yul\":3154:3159   */\n      dup2\n        /* \"#utility.yul\":3151:3183   */\n      eq\n        /* \"#utility.yul\":3141:3201   */\n      tag_445\n      jumpi\n        /* \"#utility.yul\":3197:3198   */\n      0x00\n        /* \"#utility.yul\":3194:3195   */\n      dup1\n        /* \"#utility.yul\":3187:3199   */\n      revert\n        /* \"#utility.yul\":3141:3201   */\n    tag_445:\n        /* \"#utility.yul\":3220:3225   */\n      dup1\n        /* \"#utility.yul\":3210:3225   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":2884:3231   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3236:3363   */\n    tag_284:\n        /* \"#utility.yul\":3297:3307   */\n      0x4e487b71\n        /* \"#utility.yul\":3292:3295   */\n      0xe0\n        /* \"#utility.yul\":3288:3308   */\n      shl\n        /* \"#utility.yul\":3285:3286   */\n      0x00\n        /* \"#utility.yul\":3278:3309   */\n      mstore\n        /* \"#utility.yul\":3328:3332   */\n      0x41\n        /* \"#utility.yul\":3325:3326   */\n      0x04\n        /* \"#utility.yul\":3318:3333   */\n      mstore\n        /* \"#utility.yul\":3352:3356   */\n      0x24\n        /* \"#utility.yul\":3349:3350   */\n      0x00\n        /* \"#utility.yul\":3342:3357   */\n      revert\n        /* \"#utility.yul\":3368:4506   */\n    tag_91:\n        /* \"#utility.yul\":3463:3469   */\n      0x00\n        /* \"#utility.yul\":3471:3477   */\n      dup1\n        /* \"#utility.yul\":3479:3485   */\n      0x00\n        /* \"#utility.yul\":3487:3493   */\n      dup1\n        /* \"#utility.yul\":3540:3543   */\n      0x80\n        /* \"#utility.yul\":3528:3537   */\n      dup6\n        /* \"#utility.yul\":3519:3526   */\n      dup8\n        /* \"#utility.yul\":3515:3538   */\n      sub\n        /* \"#utility.yul\":3511:3544   */\n      slt\n        /* \"#utility.yul\":3508:3561   */\n      iszero\n      tag_448\n      jumpi\n        /* \"#utility.yul\":3557:3558   */\n      0x00\n        /* \"#utility.yul\":3554:3555   */\n      dup1\n        /* \"#utility.yul\":3547:3559   */\n      revert\n        /* \"#utility.yul\":3508:3561   */\n    tag_448:\n        /* \"#utility.yul\":3580:3609   */\n      tag_449\n        /* \"#utility.yul\":3599:3608   */\n      dup6\n        /* \"#utility.yul\":3580:3609   */\n      tag_410\n      jump\t// in\n    tag_449:\n        /* \"#utility.yul\":3570:3609   */\n      swap4\n      pop\n        /* \"#utility.yul\":3628:3666   */\n      tag_450\n        /* \"#utility.yul\":3662:3664   */\n      0x20\n        /* \"#utility.yul\":3651:3660   */\n      dup7\n        /* \"#utility.yul\":3647:3665   */\n      add\n        /* \"#utility.yul\":3628:3666   */\n      tag_410\n      jump\t// in\n    tag_450:\n        /* \"#utility.yul\":3618:3666   */\n      swap3\n      pop\n        /* \"#utility.yul\":3713:3715   */\n      0x40\n        /* \"#utility.yul\":3702:3711   */\n      dup6\n        /* \"#utility.yul\":3698:3716   */\n      add\n        /* \"#utility.yul\":3685:3717   */\n      calldataload\n        /* \"#utility.yul\":3675:3717   */\n      swap2\n      pop\n        /* \"#utility.yul\":3768:3770   */\n      0x60\n        /* \"#utility.yul\":3757:3766   */\n      dup6\n        /* \"#utility.yul\":3753:3771   */\n      add\n        /* \"#utility.yul\":3740:3772   */\n      calldataload\n        /* \"#utility.yul\":3791:3809   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3832:3834   */\n      dup1\n        /* \"#utility.yul\":3824:3830   */\n      dup3\n        /* \"#utility.yul\":3821:3835   */\n      gt\n        /* \"#utility.yul\":3818:3852   */\n      iszero\n      tag_451\n      jumpi\n        /* \"#utility.yul\":3848:3849   */\n      0x00\n        /* \"#utility.yul\":3845:3846   */\n      dup1\n        /* \"#utility.yul\":3838:3850   */\n      revert\n        /* \"#utility.yul\":3818:3852   */\n    tag_451:\n        /* \"#utility.yul\":3886:3892   */\n      dup2\n        /* \"#utility.yul\":3875:3884   */\n      dup8\n        /* \"#utility.yul\":3871:3893   */\n      add\n        /* \"#utility.yul\":3861:3893   */\n      swap2\n      pop\n        /* \"#utility.yul\":3931:3938   */\n      dup8\n        /* \"#utility.yul\":3924:3928   */\n      0x1f\n        /* \"#utility.yul\":3920:3922   */\n      dup4\n        /* \"#utility.yul\":3916:3929   */\n      add\n        /* \"#utility.yul\":3912:3939   */\n      slt\n        /* \"#utility.yul\":3902:3957   */\n      tag_452\n      jumpi\n        /* \"#utility.yul\":3953:3954   */\n      0x00\n        /* \"#utility.yul\":3950:3951   */\n      dup1\n        /* \"#utility.yul\":3943:3955   */\n      revert\n        /* \"#utility.yul\":3902:3957   */\n    tag_452:\n        /* \"#utility.yul\":3989:3991   */\n      dup2\n        /* \"#utility.yul\":3976:3992   */\n      calldataload\n        /* \"#utility.yul\":4011:4013   */\n      dup2\n        /* \"#utility.yul\":4007:4009   */\n      dup2\n        /* \"#utility.yul\":4004:4014   */\n      gt\n        /* \"#utility.yul\":4001:4037   */\n      iszero\n      tag_454\n      jumpi\n        /* \"#utility.yul\":4017:4035   */\n      tag_454\n      tag_284\n      jump\t// in\n    tag_454:\n        /* \"#utility.yul\":4092:4094   */\n      0x40\n        /* \"#utility.yul\":4086:4095   */\n      mload\n        /* \"#utility.yul\":4060:4062   */\n      0x1f\n        /* \"#utility.yul\":4146:4159   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":4142:4164   */\n      swap1\n      dup2\n      and\n        /* \"#utility.yul\":4166:4168   */\n      0x3f\n        /* \"#utility.yul\":4138:4169   */\n      add\n        /* \"#utility.yul\":4134:4174   */\n      and\n        /* \"#utility.yul\":4122:4175   */\n      dup2\n      add\n      swap1\n        /* \"#utility.yul\":4190:4208   */\n      dup4\n      dup3\n      gt\n        /* \"#utility.yul\":4210:4232   */\n      dup2\n      dup4\n      lt\n        /* \"#utility.yul\":4187:4233   */\n      or\n        /* \"#utility.yul\":4184:4256   */\n      iszero\n      tag_456\n      jumpi\n        /* \"#utility.yul\":4236:4254   */\n      tag_456\n      tag_284\n      jump\t// in\n    tag_456:\n        /* \"#utility.yul\":4276:4286   */\n      dup2\n        /* \"#utility.yul\":4272:4274   */\n      0x40\n        /* \"#utility.yul\":4265:4287   */\n      mstore\n        /* \"#utility.yul\":4311:4313   */\n      dup3\n        /* \"#utility.yul\":4303:4309   */\n      dup2\n        /* \"#utility.yul\":4296:4314   */\n      mstore\n        /* \"#utility.yul\":4351:4358   */\n      dup11\n        /* \"#utility.yul\":4346:4348   */\n      0x20\n        /* \"#utility.yul\":4341:4343   */\n      dup5\n        /* \"#utility.yul\":4337:4339   */\n      dup8\n        /* \"#utility.yul\":4333:4344   */\n      add\n        /* \"#utility.yul\":4329:4349   */\n      add\n        /* \"#utility.yul\":4326:4359   */\n      gt\n        /* \"#utility.yul\":4323:4376   */\n      iszero\n      tag_457\n      jumpi\n        /* \"#utility.yul\":4372:4373   */\n      0x00\n        /* \"#utility.yul\":4369:4370   */\n      dup1\n        /* \"#utility.yul\":4362:4374   */\n      revert\n        /* \"#utility.yul\":4323:4376   */\n    tag_457:\n        /* \"#utility.yul\":4428:4430   */\n      dup3\n        /* \"#utility.yul\":4423:4425   */\n      0x20\n        /* \"#utility.yul\":4419:4421   */\n      dup7\n        /* \"#utility.yul\":4415:4426   */\n      add\n        /* \"#utility.yul\":4410:4412   */\n      0x20\n        /* \"#utility.yul\":4402:4408   */\n      dup4\n        /* \"#utility.yul\":4398:4413   */\n      add\n        /* \"#utility.yul\":4385:4431   */\n      calldatacopy\n        /* \"#utility.yul\":4473:4474   */\n      0x00\n        /* \"#utility.yul\":4468:4470   */\n      0x20\n        /* \"#utility.yul\":4463:4465   */\n      dup5\n        /* \"#utility.yul\":4455:4461   */\n      dup4\n        /* \"#utility.yul\":4451:4466   */\n      add\n        /* \"#utility.yul\":4447:4471   */\n      add\n        /* \"#utility.yul\":4440:4475   */\n      mstore\n        /* \"#utility.yul\":4494:4500   */\n      dup1\n        /* \"#utility.yul\":4484:4500   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":3368:4506   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4511:4771   */\n    tag_99:\n        /* \"#utility.yul\":4579:4585   */\n      0x00\n        /* \"#utility.yul\":4587:4593   */\n      dup1\n        /* \"#utility.yul\":4640:4642   */\n      0x40\n        /* \"#utility.yul\":4628:4637   */\n      dup4\n        /* \"#utility.yul\":4619:4626   */\n      dup6\n        /* \"#utility.yul\":4615:4638   */\n      sub\n        /* \"#utility.yul\":4611:4643   */\n      slt\n        /* \"#utility.yul\":4608:4660   */\n      iszero\n      tag_459\n      jumpi\n        /* \"#utility.yul\":4656:4657   */\n      0x00\n        /* \"#utility.yul\":4653:4654   */\n      dup1\n        /* \"#utility.yul\":4646:4658   */\n      revert\n        /* \"#utility.yul\":4608:4660   */\n    tag_459:\n        /* \"#utility.yul\":4679:4708   */\n      tag_460\n        /* \"#utility.yul\":4698:4707   */\n      dup4\n        /* \"#utility.yul\":4679:4708   */\n      tag_410\n      jump\t// in\n    tag_460:\n        /* \"#utility.yul\":4669:4708   */\n      swap2\n      pop\n        /* \"#utility.yul\":4727:4765   */\n      tag_461\n        /* \"#utility.yul\":4761:4763   */\n      0x20\n        /* \"#utility.yul\":4750:4759   */\n      dup5\n        /* \"#utility.yul\":4746:4764   */\n      add\n        /* \"#utility.yul\":4727:4765   */\n      tag_410\n      jump\t// in\n    tag_461:\n        /* \"#utility.yul\":4717:4765   */\n      swap1\n      pop\n        /* \"#utility.yul\":4511:4771   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4776:5156   */\n    tag_110:\n        /* \"#utility.yul\":4855:4856   */\n      0x01\n        /* \"#utility.yul\":4851:4863   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":4898:4910   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":4919:4980   */\n      tag_463\n      jumpi\n        /* \"#utility.yul\":4973:4977   */\n      0x7f\n        /* \"#utility.yul\":4965:4971   */\n      dup3\n        /* \"#utility.yul\":4961:4978   */\n      and\n        /* \"#utility.yul\":4951:4978   */\n      swap2\n      pop\n        /* \"#utility.yul\":4919:4980   */\n    tag_463:\n        /* \"#utility.yul\":5026:5028   */\n      0x20\n        /* \"#utility.yul\":5018:5024   */\n      dup3\n        /* \"#utility.yul\":5015:5029   */\n      lt\n        /* \"#utility.yul\":4995:5013   */\n      dup2\n        /* \"#utility.yul\":4992:5030   */\n      sub\n        /* \"#utility.yul\":4989:5150   */\n      tag_464\n      jumpi\n        /* \"#utility.yul\":5072:5082   */\n      0x4e487b71\n        /* \"#utility.yul\":5067:5070   */\n      0xe0\n        /* \"#utility.yul\":5063:5083   */\n      shl\n        /* \"#utility.yul\":5060:5061   */\n      0x00\n        /* \"#utility.yul\":5053:5084   */\n      mstore\n        /* \"#utility.yul\":5107:5111   */\n      0x22\n        /* \"#utility.yul\":5104:5105   */\n      0x04\n        /* \"#utility.yul\":5097:5112   */\n      mstore\n        /* \"#utility.yul\":5135:5139   */\n      0x24\n        /* \"#utility.yul\":5132:5133   */\n      0x00\n        /* \"#utility.yul\":5125:5140   */\n      revert\n        /* \"#utility.yul\":4989:5150   */\n    tag_464:\n      pop\n        /* \"#utility.yul\":4776:5156   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5993:6402   */\n    tag_140:\n        /* \"#utility.yul\":6195:6197   */\n      0x20\n        /* \"#utility.yul\":6177:6198   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":6234:6236   */\n      0x2d\n        /* \"#utility.yul\":6214:6232   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":6207:6237   */\n      mstore\n        /* \"#utility.yul\":6273:6307   */\n      0x4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e65\n        /* \"#utility.yul\":6268:6270   */\n      0x40\n        /* \"#utility.yul\":6253:6271   */\n      dup3\n      add\n        /* \"#utility.yul\":6246:6308   */\n      mstore\n      shl(0x9a, 0x1c881bdc88185c1c1c9bdd9959)\n        /* \"#utility.yul\":6339:6341   */\n      0x60\n        /* \"#utility.yul\":6324:6342   */\n      dup3\n      add\n        /* \"#utility.yul\":6317:6360   */\n      mstore\n        /* \"#utility.yul\":6392:6395   */\n      0x80\n        /* \"#utility.yul\":6377:6396   */\n      add\n      swap1\n        /* \"#utility.yul\":5993:6402   */\n      jump\t// out\n        /* \"#utility.yul\":7232:7359   */\n    tag_167:\n        /* \"#utility.yul\":7293:7303   */\n      0x4e487b71\n        /* \"#utility.yul\":7288:7291   */\n      0xe0\n        /* \"#utility.yul\":7284:7304   */\n      shl\n        /* \"#utility.yul\":7281:7282   */\n      0x00\n        /* \"#utility.yul\":7274:7305   */\n      mstore\n        /* \"#utility.yul\":7324:7328   */\n      0x32\n        /* \"#utility.yul\":7321:7322   */\n      0x04\n        /* \"#utility.yul\":7314:7329   */\n      mstore\n        /* \"#utility.yul\":7348:7352   */\n      0x24\n        /* \"#utility.yul\":7345:7346   */\n      0x00\n        /* \"#utility.yul\":7338:7353   */\n      revert\n        /* \"#utility.yul\":8127:8623   */\n    tag_211:\n        /* \"#utility.yul\":8306:8309   */\n      0x00\n        /* \"#utility.yul\":8344:8350   */\n      dup4\n        /* \"#utility.yul\":8338:8351   */\n      mload\n        /* \"#utility.yul\":8360:8426   */\n      tag_474\n        /* \"#utility.yul\":8419:8425   */\n      dup2\n        /* \"#utility.yul\":8414:8417   */\n      dup5\n        /* \"#utility.yul\":8407:8411   */\n      0x20\n        /* \"#utility.yul\":8399:8405   */\n      dup9\n        /* \"#utility.yul\":8395:8412   */\n      add\n        /* \"#utility.yul\":8360:8426   */\n      tag_408\n      jump\t// in\n    tag_474:\n        /* \"#utility.yul\":8489:8502   */\n      dup4\n      mload\n        /* \"#utility.yul\":8448:8464   */\n      swap1\n      dup4\n      add\n      swap1\n        /* \"#utility.yul\":8511:8581   */\n      tag_475\n        /* \"#utility.yul\":8489:8502   */\n      dup2\n        /* \"#utility.yul\":8448:8464   */\n      dup4\n        /* \"#utility.yul\":8558:8562   */\n      0x20\n        /* \"#utility.yul\":8546:8563   */\n      dup9\n      add\n        /* \"#utility.yul\":8511:8581   */\n      tag_408\n      jump\t// in\n    tag_475:\n        /* \"#utility.yul\":8597:8617   */\n      add\n      swap5\n        /* \"#utility.yul\":8127:8623   */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9035:9436   */\n    tag_242:\n        /* \"#utility.yul\":9237:9239   */\n      0x20\n        /* \"#utility.yul\":9219:9240   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":9276:9278   */\n      0x25\n        /* \"#utility.yul\":9256:9274   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":9249:9279   */\n      mstore\n        /* \"#utility.yul\":9315:9349   */\n      0x4552433732313a207472616e736665722066726f6d20696e636f727265637420\n        /* \"#utility.yul\":9310:9312   */\n      0x40\n        /* \"#utility.yul\":9295:9313   */\n      dup3\n      add\n        /* \"#utility.yul\":9288:9350   */\n      mstore\n      shl(0xd9, 0x37bbb732b9)\n        /* \"#utility.yul\":9381:9383   */\n      0x60\n        /* \"#utility.yul\":9366:9384   */\n      dup3\n      add\n        /* \"#utility.yul\":9359:9394   */\n      mstore\n        /* \"#utility.yul\":9426:9429   */\n      0x80\n        /* \"#utility.yul\":9411:9430   */\n      add\n      swap1\n        /* \"#utility.yul\":9035:9436   */\n      jump\t// out\n        /* \"#utility.yul\":10561:10975   */\n    tag_277:\n        /* \"#utility.yul\":10763:10765   */\n      0x20\n        /* \"#utility.yul\":10745:10766   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":10802:10804   */\n      0x32\n        /* \"#utility.yul\":10782:10800   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":10775:10805   */\n      mstore\n        /* \"#utility.yul\":10841:10875   */\n      0x4552433732313a207472616e7366657220746f206e6f6e204552433732315265\n        /* \"#utility.yul\":10836:10838   */\n      0x40\n        /* \"#utility.yul\":10821:10839   */\n      dup3\n      add\n        /* \"#utility.yul\":10814:10876   */\n      mstore\n      shl(0x71, 0x31b2b4bb32b91034b6b83632b6b2b73a32b9)\n        /* \"#utility.yul\":10907:10909   */\n      0x60\n        /* \"#utility.yul\":10892:10910   */\n      dup3\n      add\n        /* \"#utility.yul\":10885:10933   */\n      mstore\n        /* \"#utility.yul\":10965:10968   */\n      0x80\n        /* \"#utility.yul\":10950:10969   */\n      add\n      swap1\n        /* \"#utility.yul\":10561:10975   */\n      jump\t// out\n        /* \"#utility.yul\":11112:11601   */\n    tag_315:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":11381:11396   */\n      dup6\n      dup2\n      and\n        /* \"#utility.yul\":11363:11397   */\n      dup3\n      mstore\n        /* \"#utility.yul\":11433:11448   */\n      dup5\n      and\n        /* \"#utility.yul\":11428:11430   */\n      0x20\n        /* \"#utility.yul\":11413:11431   */\n      dup3\n      add\n        /* \"#utility.yul\":11406:11449   */\n      mstore\n        /* \"#utility.yul\":11480:11482   */\n      0x40\n        /* \"#utility.yul\":11465:11483   */\n      dup2\n      add\n        /* \"#utility.yul\":11458:11492   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":11528:11531   */\n      0x80\n        /* \"#utility.yul\":11523:11525   */\n      0x60\n        /* \"#utility.yul\":11508:11526   */\n      dup3\n      add\n        /* \"#utility.yul\":11501:11532   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":11306:11310   */\n      0x00\n      swap1\n        /* \"#utility.yul\":11549:11595   */\n      tag_484\n      swap1\n        /* \"#utility.yul\":11575:11594   */\n      dup4\n      add\n        /* \"#utility.yul\":11567:11573   */\n      dup5\n        /* \"#utility.yul\":11549:11595   */\n      tag_409\n      jump\t// in\n    tag_484:\n        /* \"#utility.yul\":11541:11595   */\n      swap7\n        /* \"#utility.yul\":11112:11601   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11606:11855   */\n    tag_318:\n        /* \"#utility.yul\":11675:11681   */\n      0x00\n        /* \"#utility.yul\":11728:11730   */\n      0x20\n        /* \"#utility.yul\":11716:11725   */\n      dup3\n        /* \"#utility.yul\":11707:11714   */\n      dup5\n        /* \"#utility.yul\":11703:11726   */\n      sub\n        /* \"#utility.yul\":11699:11731   */\n      slt\n        /* \"#utility.yul\":11696:11748   */\n      iszero\n      tag_486\n      jumpi\n        /* \"#utility.yul\":11744:11745   */\n      0x00\n        /* \"#utility.yul\":11741:11742   */\n      dup1\n        /* \"#utility.yul\":11734:11746   */\n      revert\n        /* \"#utility.yul\":11696:11748   */\n    tag_486:\n        /* \"#utility.yul\":11776:11785   */\n      dup2\n        /* \"#utility.yul\":11770:11786   */\n      mload\n        /* \"#utility.yul\":11795:11825   */\n      tag_207\n        /* \"#utility.yul\":11819:11824   */\n      dup2\n        /* \"#utility.yul\":11795:11825   */\n      tag_407\n      jump\t// in\n        /* \"#utility.yul\":13000:13225   */\n    tag_391:\n        /* \"#utility.yul\":13067:13076   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":13088:13099   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":13085:13219   */\n      iszero\n      tag_106\n      jumpi\n        /* \"#utility.yul\":13141:13151   */\n      0x4e487b71\n        /* \"#utility.yul\":13136:13139   */\n      0xe0\n        /* \"#utility.yul\":13132:13152   */\n      shl\n        /* \"#utility.yul\":13129:13130   */\n      0x00\n        /* \"#utility.yul\":13122:13153   */\n      mstore\n        /* \"#utility.yul\":13176:13180   */\n      0x11\n        /* \"#utility.yul\":13173:13174   */\n      0x04\n        /* \"#utility.yul\":13166:13181   */\n      mstore\n        /* \"#utility.yul\":13204:13208   */\n      0x24\n        /* \"#utility.yul\":13201:13202   */\n      0x00\n        /* \"#utility.yul\":13194:13209   */\n      revert\n        /* \"#utility.yul\":13230:13357   */\n    tag_403:\n        /* \"#utility.yul\":13291:13301   */\n      0x4e487b71\n        /* \"#utility.yul\":13286:13289   */\n      0xe0\n        /* \"#utility.yul\":13282:13302   */\n      shl\n        /* \"#utility.yul\":13279:13280   */\n      0x00\n        /* \"#utility.yul\":13272:13303   */\n      mstore\n        /* \"#utility.yul\":13322:13326   */\n      0x31\n        /* \"#utility.yul\":13319:13320   */\n      0x04\n        /* \"#utility.yul\":13312:13327   */\n      mstore\n        /* \"#utility.yul\":13346:13350   */\n      0x24\n        /* \"#utility.yul\":13343:13344   */\n      0x00\n        /* \"#utility.yul\":13336:13351   */\n      revert\n    stop\n    data_04ff9d37b4d45db38e4be6a16cda3c01dfc5c1cafe39c931d51d438268fc8fb1 68747470733a2f2f6170692e6e706f696e742e696f2f3237356438326562303736303634636437316530\n\n    auxdata: 0xa264697066735822122094da7ceb18d67c78611337fb3c84db95ac5e9c9d6f38bf936b73f5543a1dfd3f64736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1153": {
									"entryPoint": null,
									"id": 1153,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_1844": {
									"entryPoint": null,
									"id": 1844,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_3081": {
									"entryPoint": null,
									"id": 3081,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_1121": {
									"entryPoint": 150,
									"id": 1121,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_1241": {
									"entryPoint": 154,
									"id": 1241,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 318,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 401,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 258,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 236,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:2732:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "46:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "63:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "70:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "75:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "56:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "56:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "103:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "106:4:1",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "96:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "96:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "127:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "130:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "120:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "120:15:1"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "201:325:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "211:22:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "225:1:1",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "228:4:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "221:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "221:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "211:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "242:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "272:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "278:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "268:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "268:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "246:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "319:31:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "321:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "335:6:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "343:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "331:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "331:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "321:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "299:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "292:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "292:26:1"
															},
															"nodeType": "YulIf",
															"src": "289:61:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "409:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "430:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "437:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "442:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "433:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "433:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "423:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "423:31:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "423:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "474:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "477:4:1",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "467:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "467:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "467:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "502:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "505:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "495:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "495:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "495:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "365:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "388:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "396:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "385:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "385:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "362:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "362:38:1"
															},
															"nodeType": "YulIf",
															"src": "359:161:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "181:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "190:6:1",
														"type": ""
													}
												],
												"src": "146:380:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "587:65:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "604:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "607:3:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "597:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "597:14:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "597:14:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "620:26:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "638:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "641:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "628:9:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "628:18:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "620:4:1"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "570:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "578:4:1",
														"type": ""
													}
												],
												"src": "531:121:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "738:464:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "771:425:1",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "785:11:1",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "795:1:1",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nodeType": "YulTypedName",
																				"src": "789:2:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "816:2:1"
																				},
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "820:5:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "809:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "809:17:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "809:17:1"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "839:31:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "861:2:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "865:4:1",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nodeType": "YulIdentifier",
																				"src": "851:9:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "851:19:1"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nodeType": "YulTypedName",
																				"src": "843:4:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "883:57:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nodeType": "YulIdentifier",
																					"src": "906:4:1"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "916:1:1",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nodeType": "YulIdentifier",
																									"src": "923:10:1"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "935:2:1",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "919:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "919:19:1"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nodeType": "YulIdentifier",
																						"src": "912:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "912:27:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "902:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "902:38:1"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nodeType": "YulTypedName",
																				"src": "887:11:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "977:23:1",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "979:19:1",
																					"value": {
																						"name": "data",
																						"nodeType": "YulIdentifier",
																						"src": "994:4:1"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nodeType": "YulIdentifier",
																							"src": "979:11:1"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nodeType": "YulIdentifier",
																					"src": "959:10:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "971:4:1",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "956:2:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "956:20:1"
																		},
																		"nodeType": "YulIf",
																		"src": "953:47:1"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "1013:41:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nodeType": "YulIdentifier",
																					"src": "1027:4:1"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1037:1:1",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nodeType": "YulIdentifier",
																									"src": "1044:3:1"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "1049:2:1",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1040:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1040:12:1"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nodeType": "YulIdentifier",
																						"src": "1033:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1033:20:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1023:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1023:31:1"
																		},
																		"variables": [
																			{
																				"name": "_2",
																				"nodeType": "YulTypedName",
																				"src": "1017:2:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "1067:24:1",
																		"value": {
																			"name": "deleteStart",
																			"nodeType": "YulIdentifier",
																			"src": "1080:11:1"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nodeType": "YulTypedName",
																				"src": "1071:5:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "1165:21:1",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nodeType": "YulIdentifier",
																								"src": "1174:5:1"
																							},
																							{
																								"name": "_1",
																								"nodeType": "YulIdentifier",
																								"src": "1181:2:1"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nodeType": "YulIdentifier",
																							"src": "1167:6:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1167:17:1"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "1167:17:1"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "1115:5:1"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "1122:2:1"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "1112:2:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1112:13:1"
																		},
																		"nodeType": "YulForLoop",
																		"post": {
																			"nodeType": "YulBlock",
																			"src": "1126:26:1",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "1128:22:1",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nodeType": "YulIdentifier",
																								"src": "1141:5:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1148:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "1137:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1137:13:1"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nodeType": "YulIdentifier",
																							"src": "1128:5:1"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nodeType": "YulBlock",
																			"src": "1108:3:1",
																			"statements": []
																		},
																		"src": "1104:82:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "754:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "759:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "751:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "751:11:1"
															},
															"nodeType": "YulIf",
															"src": "748:448:1"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "710:5:1",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "717:3:1",
														"type": ""
													},
													{
														"name": "startIndex",
														"nodeType": "YulTypedName",
														"src": "722:10:1",
														"type": ""
													}
												],
												"src": "657:545:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1292:81:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1302:65:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nodeType": "YulIdentifier",
																				"src": "1317:4:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1335:1:1",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nodeType": "YulIdentifier",
																										"src": "1338:3:1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "1331:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "1331:11:1"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1348:1:1",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nodeType": "YulIdentifier",
																									"src": "1344:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "1344:6:1"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nodeType": "YulIdentifier",
																							"src": "1327:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1327:24:1"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "1323:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1323:29:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1313:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1313:40:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1359:1:1",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nodeType": "YulIdentifier",
																				"src": "1362:3:1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1355:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1355:11:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "1310:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1310:57:1"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nodeType": "YulIdentifier",
																	"src": "1302:4:1"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1269:4:1",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "1275:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nodeType": "YulTypedName",
														"src": "1283:4:1",
														"type": ""
													}
												],
												"src": "1207:166:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1474:1256:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1484:24:1",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "1504:3:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1498:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1498:10:1"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nodeType": "YulTypedName",
																	"src": "1488:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1551:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1553:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1553:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1553:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "1523:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1539:2:1",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1543:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "1535:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1535:10:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1547:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1531:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1531:18:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1520:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1520:30:1"
															},
															"nodeType": "YulIf",
															"src": "1517:56:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "1626:4:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nodeType": "YulIdentifier",
																						"src": "1664:4:1"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nodeType": "YulIdentifier",
																					"src": "1658:5:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1658:11:1"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nodeType": "YulIdentifier",
																			"src": "1632:25:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1632:38:1"
																	},
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "1672:6:1"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nodeType": "YulIdentifier",
																	"src": "1582:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1582:97:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1582:97:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1688:18:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1705:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulTypedName",
																	"src": "1692:9:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1715:23:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1734:4:1",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "srcOffset_1",
																	"nodeType": "YulTypedName",
																	"src": "1719:11:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1747:24:1",
															"value": {
																"name": "srcOffset_1",
																"nodeType": "YulIdentifier",
																"src": "1760:11:1"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulIdentifier",
																	"src": "1747:9:1"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "1817:656:1",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "1831:35:1",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "1850:6:1"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "1862:2:1",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "1858:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1858:7:1"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "1846:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1846:20:1"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nodeType": "YulTypedName",
																						"src": "1835:7:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "1879:49:1",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "1923:4:1"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nodeType": "YulIdentifier",
																						"src": "1893:29:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1893:35:1"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nodeType": "YulTypedName",
																						"src": "1883:6:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "1941:10:1",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1950:1:1",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "1945:1:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "2028:172:1",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "2053:6:1"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nodeType": "YulIdentifier",
																														"src": "2071:3:1"
																													},
																													{
																														"name": "srcOffset",
																														"nodeType": "YulIdentifier",
																														"src": "2076:9:1"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nodeType": "YulIdentifier",
																													"src": "2067:3:1"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "2067:19:1"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "2061:5:1"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "2061:26:1"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "2046:6:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2046:42:1"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "2046:42:1"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "2105:24:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "2119:6:1"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "2127:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "2115:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2115:14:1"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nodeType": "YulIdentifier",
																									"src": "2105:6:1"
																								}
																							]
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "2146:40:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nodeType": "YulIdentifier",
																										"src": "2163:9:1"
																									},
																									{
																										"name": "srcOffset_1",
																										"nodeType": "YulIdentifier",
																										"src": "2174:11:1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "2159:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2159:27:1"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nodeType": "YulIdentifier",
																									"src": "2146:9:1"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "1975:1:1"
																						},
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "1978:7:1"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "1972:2:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1972:14:1"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "1987:28:1",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "1989:24:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "1998:1:1"
																									},
																									{
																										"name": "srcOffset_1",
																										"nodeType": "YulIdentifier",
																										"src": "2001:11:1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "1994:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "1994:19:1"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "1989:1:1"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "1968:3:1",
																					"statements": []
																				},
																				"src": "1964:236:1"
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "2248:166:1",
																					"statements": [
																						{
																							"nodeType": "YulVariableDeclaration",
																							"src": "2266:43:1",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "2293:3:1"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "2298:9:1"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "2289:3:1"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "2289:19:1"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "2283:5:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2283:26:1"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nodeType": "YulTypedName",
																									"src": "2270:9:1",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "2333:6:1"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nodeType": "YulIdentifier",
																												"src": "2345:9:1"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nodeType": "YulLiteral",
																																				"src": "2372:1:1",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nodeType": "YulIdentifier",
																																				"src": "2375:6:1"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nodeType": "YulIdentifier",
																																			"src": "2368:3:1"
																																		},
																																		"nodeType": "YulFunctionCall",
																																		"src": "2368:14:1"
																																	},
																																	{
																																		"kind": "number",
																																		"nodeType": "YulLiteral",
																																		"src": "2384:3:1",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nodeType": "YulIdentifier",
																																	"src": "2364:3:1"
																																},
																																"nodeType": "YulFunctionCall",
																																"src": "2364:24:1"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nodeType": "YulLiteral",
																																		"src": "2394:1:1",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nodeType": "YulIdentifier",
																																	"src": "2390:3:1"
																																},
																																"nodeType": "YulFunctionCall",
																																"src": "2390:6:1"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nodeType": "YulIdentifier",
																															"src": "2360:3:1"
																														},
																														"nodeType": "YulFunctionCall",
																														"src": "2360:37:1"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nodeType": "YulIdentifier",
																													"src": "2356:3:1"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "2356:42:1"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nodeType": "YulIdentifier",
																											"src": "2341:3:1"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "2341:58:1"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "2326:6:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2326:74:1"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "2326:74:1"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "2219:7:1"
																						},
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "2228:6:1"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "2216:2:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2216:19:1"
																				},
																				"nodeType": "YulIf",
																				"src": "2213:201:1"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "2434:4:1"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "2448:1:1",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nodeType": "YulIdentifier",
																											"src": "2451:6:1"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nodeType": "YulIdentifier",
																										"src": "2444:3:1"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "2444:14:1"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "2460:1:1",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2440:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2440:22:1"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "2427:6:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2427:36:1"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "2427:36:1"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "1810:663:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1815:1:1",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "2490:234:1",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "2504:14:1",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2517:1:1",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nodeType": "YulTypedName",
																						"src": "2508:5:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "2553:67:1",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "2571:35:1",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "2590:3:1"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "2595:9:1"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "2586:3:1"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "2586:19:1"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "2580:5:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2580:26:1"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "2571:5:1"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nodeType": "YulIdentifier",
																					"src": "2534:6:1"
																				},
																				"nodeType": "YulIf",
																				"src": "2531:89:1"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "2640:4:1"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "2699:5:1"
																								},
																								{
																									"name": "newLen",
																									"nodeType": "YulIdentifier",
																									"src": "2706:6:1"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nodeType": "YulIdentifier",
																								"src": "2646:52:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2646:67:1"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "2633:6:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2633:81:1"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "2633:81:1"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "2482:242:1",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "1790:6:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1798:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1787:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1787:14:1"
															},
															"nodeType": "YulSwitch",
															"src": "1780:944:1"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "1459:4:1",
														"type": ""
													},
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "1465:3:1",
														"type": ""
													}
												],
												"src": "1378:1352:1"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b506040518060400160405280600b81526020016a4172745f47616c6c61727960a81b815250604051806040016040528060048152602001634152544760e01b815250816000908162000064919062000191565b50600162000073828262000191565b505050620000906200008a6200009660201b60201c565b6200009a565b6200025d565b3390565b600a80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200011757607f821691505b6020821081036200013857634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200018c57600081815260208120601f850160051c81016020861015620001675750805b601f850160051c820191505b81811015620001885782815560010162000173565b5050505b505050565b81516001600160401b03811115620001ad57620001ad620000ec565b620001c581620001be845462000102565b846200013e565b602080601f831160018114620001fd5760008415620001e45750858301515b600019600386901b1c1916600185901b17855562000188565b600085815260208120601f198616915b828110156200022e578886015182559484019460019091019084016200020d565b50858210156200024d5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6119c6806200026d6000396000f3fe608060405234801561001057600080fd5b506004361061012c5760003560e01c80636352211e116100ad578063a22cb46511610071578063a22cb46514610266578063b88d4fde14610279578063c87b56dd1461028c578063e985e9c51461029f578063f2fde38b146102db57600080fd5b80636352211e1461021f57806370a0823114610232578063715018a6146102455780638da5cb5b1461024d57806395d89b411461025e57600080fd5b806323b872dd116100f457806323b872dd146101c05780632f745c59146101d357806340d097c3146101e657806342842e0e146101f95780634f6ccce71461020c57600080fd5b806301ffc9a71461013157806306fdde0314610159578063081812fc1461016e578063095ea7b31461019957806318160ddd146101ae575b600080fd5b61014461013f3660046114db565b6102ee565b60405190151581526020015b60405180910390f35b6101616102ff565b6040516101509190611548565b61018161017c36600461155b565b610391565b6040516001600160a01b039091168152602001610150565b6101ac6101a7366004611590565b6103b8565b005b6008545b604051908152602001610150565b6101ac6101ce3660046115ba565b6104d2565b6101b26101e1366004611590565b610503565b6101ac6101f43660046115f6565b610599565b6101ac6102073660046115ba565b6105ca565b6101b261021a36600461155b565b6105e5565b61018161022d36600461155b565b610678565b6101b26102403660046115f6565b6106d8565b6101ac61075e565b600a546001600160a01b0316610181565b610161610772565b6101ac610274366004611611565b610781565b6101ac610287366004611663565b61078c565b61016161029a36600461155b565b6107c4565b6101446102ad36600461173f565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b6101ac6102e93660046115f6565b61082b565b60006102f9826108a4565b92915050565b60606000805461030e90611772565b80601f016020809104026020016040519081016040528092919081815260200182805461033a90611772565b80156103875780601f1061035c57610100808354040283529160200191610387565b820191906000526020600020905b81548152906001019060200180831161036a57829003601f168201915b5050505050905090565b600061039c826108c9565b506000908152600460205260409020546001600160a01b031690565b60006103c382610678565b9050806001600160a01b0316836001600160a01b0316036104355760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b0382161480610451575061045181336102ad565b6104c35760405162461bcd60e51b815260206004820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c000000606482015260840161042c565b6104cd8383610928565b505050565b6104dc3382610996565b6104f85760405162461bcd60e51b815260040161042c906117ac565b6104cd838383610a15565b600061050e836106d8565b82106105705760405162461bcd60e51b815260206004820152602b60248201527f455243373231456e756d657261626c653a206f776e657220696e646578206f7560448201526a74206f6620626f756e647360a81b606482015260840161042c565b506001600160a01b03919091166000908152600660209081526040808320938352929052205490565b6105a1610b86565b60006105ac600b5490565b90506105bc600b80546001019055565b6105c68282610be0565b5050565b6104cd8383836040518060200160405280600081525061078c565b60006105f060085490565b82106106535760405162461bcd60e51b815260206004820152602c60248201527f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60448201526b7574206f6620626f756e647360a01b606482015260840161042c565b60088281548110610666576106666117f9565b90600052602060002001549050919050565b6000818152600260205260408120546001600160a01b0316806102f95760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b604482015260640161042c565b60006001600160a01b0382166107425760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b606482015260840161042c565b506001600160a01b031660009081526003602052604090205490565b610766610b86565b6107706000610bfa565b565b60606001805461030e90611772565b6105c6338383610c4c565b6107963383610996565b6107b25760405162461bcd60e51b815260040161042c906117ac565b6107be84848484610d1a565b50505050565b60606107cf826108c9565b60006107d9610d4d565b905060008151116107f95760405180602001604052806000815250610824565b8061080384610d6d565b60405160200161081492919061180f565b6040516020818303038152906040525b9392505050565b610833610b86565b6001600160a01b0381166108985760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161042c565b6108a181610bfa565b50565b60006001600160e01b0319821663780e9d6360e01b14806102f957506102f982610e00565b6000818152600260205260409020546001600160a01b03166108a15760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b604482015260640161042c565b600081815260046020526040902080546001600160a01b0319166001600160a01b038416908117909155819061095d82610678565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000806109a283610678565b9050806001600160a01b0316846001600160a01b031614806109e957506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b80610a0d5750836001600160a01b0316610a0284610391565b6001600160a01b0316145b949350505050565b826001600160a01b0316610a2882610678565b6001600160a01b031614610a4e5760405162461bcd60e51b815260040161042c9061183e565b6001600160a01b038216610ab05760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b606482015260840161042c565b610abd8383836001610e50565b826001600160a01b0316610ad082610678565b6001600160a01b031614610af65760405162461bcd60e51b815260040161042c9061183e565b600081815260046020908152604080832080546001600160a01b03199081169091556001600160a01b0387811680865260038552838620805460001901905590871680865283862080546001019055868652600290945282852080549092168417909155905184937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b600a546001600160a01b031633146107705760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161042c565b6105c6828260405180602001604052806000815250610e5c565b600a80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b816001600160a01b0316836001600160a01b031603610cad5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604482015260640161042c565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b610d25848484610a15565b610d3184848484610e8f565b6107be5760405162461bcd60e51b815260040161042c90611883565b60606040518060600160405280602a8152602001611967602a9139905090565b60606000610d7a83610f90565b600101905060008167ffffffffffffffff811115610d9a57610d9a61164d565b6040519080825280601f01601f191660200182016040528015610dc4576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a8504945084610dce57509392505050565b60006001600160e01b031982166380ac58cd60e01b1480610e3157506001600160e01b03198216635b5e139f60e01b145b806102f957506301ffc9a760e01b6001600160e01b03198316146102f9565b6107be84848484611068565b610e66838361119c565b610e736000848484610e8f565b6104cd5760405162461bcd60e51b815260040161042c90611883565b60006001600160a01b0384163b15610f8557604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290610ed39033908990889088906004016118d5565b6020604051808303816000875af1925050508015610f0e575060408051601f3d908101601f19168201909252610f0b91810190611912565b60015b610f6b573d808015610f3c576040519150601f19603f3d011682016040523d82523d6000602084013e610f41565b606091505b508051600003610f635760405162461bcd60e51b815260040161042c90611883565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610a0d565b506001949350505050565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b8310610fcf5772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef81000000008310610ffb576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc10000831061101957662386f26fc10000830492506010015b6305f5e1008310611031576305f5e100830492506008015b612710831061104557612710830492506004015b60648310611057576064830492506002015b600a83106102f95760010192915050565b60018111156110d75760405162461bcd60e51b815260206004820152603560248201527f455243373231456e756d657261626c653a20636f6e7365637574697665207472604482015274185b9cd9995c9cc81b9bdd081cdd5c1c1bdc9d1959605a1b606482015260840161042c565b816001600160a01b0385166111335761112e81600880546000838152600960205260408120829055600182018355919091527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30155565b611156565b836001600160a01b0316856001600160a01b031614611156576111568582611335565b6001600160a01b0384166111725761116d816113d2565b611195565b846001600160a01b0316846001600160a01b031614611195576111958482611481565b5050505050565b6001600160a01b0382166111f25760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f2061646472657373604482015260640161042c565b6000818152600260205260409020546001600160a01b0316156112575760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604482015260640161042c565b611265600083836001610e50565b6000818152600260205260409020546001600160a01b0316156112ca5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604482015260640161042c565b6001600160a01b038216600081815260036020908152604080832080546001019055848352600290915280822080546001600160a01b0319168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b60006001611342846106d8565b61134c919061192f565b60008381526007602052604090205490915080821461139f576001600160a01b03841660009081526006602090815260408083208584528252808320548484528184208190558352600790915290208190555b5060009182526007602090815260408084208490556001600160a01b039094168352600681528383209183525290812055565b6008546000906113e49060019061192f565b6000838152600960205260408120546008805493945090928490811061140c5761140c6117f9565b90600052602060002001549050806008838154811061142d5761142d6117f9565b600091825260208083209091019290925582815260099091526040808220849055858252812055600880548061146557611465611950565b6001900381819060005260206000200160009055905550505050565b600061148c836106d8565b6001600160a01b039093166000908152600660209081526040808320868452825280832085905593825260079052919091209190915550565b6001600160e01b0319811681146108a157600080fd5b6000602082840312156114ed57600080fd5b8135610824816114c5565b60005b838110156115135781810151838201526020016114fb565b50506000910152565b600081518084526115348160208601602086016114f8565b601f01601f19169290920160200192915050565b602081526000610824602083018461151c565b60006020828403121561156d57600080fd5b5035919050565b80356001600160a01b038116811461158b57600080fd5b919050565b600080604083850312156115a357600080fd5b6115ac83611574565b946020939093013593505050565b6000806000606084860312156115cf57600080fd5b6115d884611574565b92506115e660208501611574565b9150604084013590509250925092565b60006020828403121561160857600080fd5b61082482611574565b6000806040838503121561162457600080fd5b61162d83611574565b91506020830135801515811461164257600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b6000806000806080858703121561167957600080fd5b61168285611574565b935061169060208601611574565b925060408501359150606085013567ffffffffffffffff808211156116b457600080fd5b818701915087601f8301126116c857600080fd5b8135818111156116da576116da61164d565b604051601f8201601f19908116603f011681019083821181831017156117025761170261164d565b816040528281528a602084870101111561171b57600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b6000806040838503121561175257600080fd5b61175b83611574565b915061176960208401611574565b90509250929050565b600181811c9082168061178657607f821691505b6020821081036117a657634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252602d908201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560408201526c1c881bdc88185c1c1c9bdd9959609a1b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b600083516118218184602088016114f8565b8351908301906118358183602088016114f8565b01949350505050565b60208082526025908201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060408201526437bbb732b960d91b606082015260800190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906119089083018461151c565b9695505050505050565b60006020828403121561192457600080fd5b8151610824816114c5565b818103818111156102f957634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603160045260246000fdfe68747470733a2f2f6170692e6e706f696e742e696f2f3237356438326562303736303634636437316530a264697066735822122094da7ceb18d67c78611337fb3c84db95ac5e9c9d6f38bf936b73f5543a1dfd3f64736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xB DUP2 MSTORE PUSH1 0x20 ADD PUSH11 0x4172745F47616C6C617279 PUSH1 0xA8 SHL DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH4 0x41525447 PUSH1 0xE0 SHL DUP2 MSTORE POP DUP2 PUSH1 0x0 SWAP1 DUP2 PUSH3 0x64 SWAP2 SWAP1 PUSH3 0x191 JUMP JUMPDEST POP PUSH1 0x1 PUSH3 0x73 DUP3 DUP3 PUSH3 0x191 JUMP JUMPDEST POP POP POP PUSH3 0x90 PUSH3 0x8A PUSH3 0x96 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x9A JUMP JUMPDEST PUSH3 0x25D JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0xA DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x117 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x138 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x18C JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH3 0x167 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x188 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x173 JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x1AD JUMPI PUSH3 0x1AD PUSH3 0xEC JUMP JUMPDEST PUSH3 0x1C5 DUP2 PUSH3 0x1BE DUP5 SLOAD PUSH3 0x102 JUMP JUMPDEST DUP5 PUSH3 0x13E JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x1FD JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x1E4 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0x188 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x22E JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x20D JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x24D JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x19C6 DUP1 PUSH3 0x26D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x12C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x266 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x279 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x28C JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x29F JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x21F JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x232 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x245 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x24D JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x25E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1C0 JUMPI DUP1 PUSH4 0x2F745C59 EQ PUSH2 0x1D3 JUMPI DUP1 PUSH4 0x40D097C3 EQ PUSH2 0x1E6 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x1F9 JUMPI DUP1 PUSH4 0x4F6CCCE7 EQ PUSH2 0x20C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x159 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x16E JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x199 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1AE JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x144 PUSH2 0x13F CALLDATASIZE PUSH1 0x4 PUSH2 0x14DB JUMP JUMPDEST PUSH2 0x2EE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x161 PUSH2 0x2FF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x150 SWAP2 SWAP1 PUSH2 0x1548 JUMP JUMPDEST PUSH2 0x181 PUSH2 0x17C CALLDATASIZE PUSH1 0x4 PUSH2 0x155B JUMP JUMPDEST PUSH2 0x391 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x150 JUMP JUMPDEST PUSH2 0x1AC PUSH2 0x1A7 CALLDATASIZE PUSH1 0x4 PUSH2 0x1590 JUMP JUMPDEST PUSH2 0x3B8 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x8 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x150 JUMP JUMPDEST PUSH2 0x1AC PUSH2 0x1CE CALLDATASIZE PUSH1 0x4 PUSH2 0x15BA JUMP JUMPDEST PUSH2 0x4D2 JUMP JUMPDEST PUSH2 0x1B2 PUSH2 0x1E1 CALLDATASIZE PUSH1 0x4 PUSH2 0x1590 JUMP JUMPDEST PUSH2 0x503 JUMP JUMPDEST PUSH2 0x1AC PUSH2 0x1F4 CALLDATASIZE PUSH1 0x4 PUSH2 0x15F6 JUMP JUMPDEST PUSH2 0x599 JUMP JUMPDEST PUSH2 0x1AC PUSH2 0x207 CALLDATASIZE PUSH1 0x4 PUSH2 0x15BA JUMP JUMPDEST PUSH2 0x5CA JUMP JUMPDEST PUSH2 0x1B2 PUSH2 0x21A CALLDATASIZE PUSH1 0x4 PUSH2 0x155B JUMP JUMPDEST PUSH2 0x5E5 JUMP JUMPDEST PUSH2 0x181 PUSH2 0x22D CALLDATASIZE PUSH1 0x4 PUSH2 0x155B JUMP JUMPDEST PUSH2 0x678 JUMP JUMPDEST PUSH2 0x1B2 PUSH2 0x240 CALLDATASIZE PUSH1 0x4 PUSH2 0x15F6 JUMP JUMPDEST PUSH2 0x6D8 JUMP JUMPDEST PUSH2 0x1AC PUSH2 0x75E JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x181 JUMP JUMPDEST PUSH2 0x161 PUSH2 0x772 JUMP JUMPDEST PUSH2 0x1AC PUSH2 0x274 CALLDATASIZE PUSH1 0x4 PUSH2 0x1611 JUMP JUMPDEST PUSH2 0x781 JUMP JUMPDEST PUSH2 0x1AC PUSH2 0x287 CALLDATASIZE PUSH1 0x4 PUSH2 0x1663 JUMP JUMPDEST PUSH2 0x78C JUMP JUMPDEST PUSH2 0x161 PUSH2 0x29A CALLDATASIZE PUSH1 0x4 PUSH2 0x155B JUMP JUMPDEST PUSH2 0x7C4 JUMP JUMPDEST PUSH2 0x144 PUSH2 0x2AD CALLDATASIZE PUSH1 0x4 PUSH2 0x173F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x1AC PUSH2 0x2E9 CALLDATASIZE PUSH1 0x4 PUSH2 0x15F6 JUMP JUMPDEST PUSH2 0x82B JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F9 DUP3 PUSH2 0x8A4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x30E SWAP1 PUSH2 0x1772 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x33A SWAP1 PUSH2 0x1772 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x387 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x35C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x387 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x36A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x39C DUP3 PUSH2 0x8C9 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3C3 DUP3 PUSH2 0x678 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x435 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ DUP1 PUSH2 0x451 JUMPI POP PUSH2 0x451 DUP2 CALLER PUSH2 0x2AD JUMP JUMPDEST PUSH2 0x4C3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F7420746F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6B656E206F776E6572206F7220617070726F76656420666F7220616C6C000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x42C JUMP JUMPDEST PUSH2 0x4CD DUP4 DUP4 PUSH2 0x928 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x4DC CALLER DUP3 PUSH2 0x996 JUMP JUMPDEST PUSH2 0x4F8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x42C SWAP1 PUSH2 0x17AC JUMP JUMPDEST PUSH2 0x4CD DUP4 DUP4 DUP4 PUSH2 0xA15 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x50E DUP4 PUSH2 0x6D8 JUMP JUMPDEST DUP3 LT PUSH2 0x570 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243373231456E756D657261626C653A206F776E657220696E646578206F75 PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x74206F6620626F756E6473 PUSH1 0xA8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x42C JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x5A1 PUSH2 0xB86 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5AC PUSH1 0xB SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP PUSH2 0x5BC PUSH1 0xB DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x5C6 DUP3 DUP3 PUSH2 0xBE0 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x4CD DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x78C JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5F0 PUSH1 0x8 SLOAD SWAP1 JUMP JUMPDEST DUP3 LT PUSH2 0x653 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243373231456E756D657261626C653A20676C6F62616C20696E646578206F PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x7574206F6620626F756E6473 PUSH1 0xA0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x42C JUMP JUMPDEST PUSH1 0x8 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x666 JUMPI PUSH2 0x666 PUSH2 0x17F9 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x2F9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x115490CDCC8C4E881A5B9D985B1A59081D1BDAD95B881251 PUSH1 0x42 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x42C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x742 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A2061646472657373207A65726F206973206E6F742061207661 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x3634B21037BBB732B9 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x42C JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x766 PUSH2 0xB86 JUMP JUMPDEST PUSH2 0x770 PUSH1 0x0 PUSH2 0xBFA JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x30E SWAP1 PUSH2 0x1772 JUMP JUMPDEST PUSH2 0x5C6 CALLER DUP4 DUP4 PUSH2 0xC4C JUMP JUMPDEST PUSH2 0x796 CALLER DUP4 PUSH2 0x996 JUMP JUMPDEST PUSH2 0x7B2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x42C SWAP1 PUSH2 0x17AC JUMP JUMPDEST PUSH2 0x7BE DUP5 DUP5 DUP5 DUP5 PUSH2 0xD1A JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x7CF DUP3 PUSH2 0x8C9 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7D9 PUSH2 0xD4D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x7F9 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x824 JUMP JUMPDEST DUP1 PUSH2 0x803 DUP5 PUSH2 0xD6D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x814 SWAP3 SWAP2 SWAP1 PUSH2 0x180F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x833 PUSH2 0xB86 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x898 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x42C JUMP JUMPDEST PUSH2 0x8A1 DUP2 PUSH2 0xBFA JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x780E9D63 PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x2F9 JUMPI POP PUSH2 0x2F9 DUP3 PUSH2 0xE00 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x8A1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x115490CDCC8C4E881A5B9D985B1A59081D1BDAD95B881251 PUSH1 0x42 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x42C JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH2 0x95D DUP3 PUSH2 0x678 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x9A2 DUP4 PUSH2 0x678 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x9E9 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP9 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST DUP1 PUSH2 0xA0D JUMPI POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xA02 DUP5 PUSH2 0x391 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xA28 DUP3 PUSH2 0x678 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xA4E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x42C SWAP1 PUSH2 0x183E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xAB0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x42C JUMP JUMPDEST PUSH2 0xABD DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xE50 JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xAD0 DUP3 PUSH2 0x678 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xAF6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x42C SWAP1 PUSH2 0x183E JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND SWAP1 SWAP2 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND DUP1 DUP7 MSTORE PUSH1 0x3 DUP6 MSTORE DUP4 DUP7 KECCAK256 DUP1 SLOAD PUSH1 0x0 NOT ADD SWAP1 SSTORE SWAP1 DUP8 AND DUP1 DUP7 MSTORE DUP4 DUP7 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE DUP7 DUP7 MSTORE PUSH1 0x2 SWAP1 SWAP5 MSTORE DUP3 DUP6 KECCAK256 DUP1 SLOAD SWAP1 SWAP3 AND DUP5 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD DUP5 SWAP4 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG4 POP POP POP JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x770 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x42C JUMP JUMPDEST PUSH2 0x5C6 DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xE5C JUMP JUMPDEST PUSH1 0xA DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0xCAD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x42C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0xD25 DUP5 DUP5 DUP5 PUSH2 0xA15 JUMP JUMPDEST PUSH2 0xD31 DUP5 DUP5 DUP5 DUP5 PUSH2 0xE8F JUMP JUMPDEST PUSH2 0x7BE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x42C SWAP1 PUSH2 0x1883 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1967 PUSH1 0x2A SWAP2 CODECOPY SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0xD7A DUP4 PUSH2 0xF90 JUMP JUMPDEST PUSH1 0x1 ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xD9A JUMPI PUSH2 0xD9A PUSH2 0x164D JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xDC4 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 ADD PUSH1 0x20 ADD JUMPDEST PUSH1 0x0 NOT ADD PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DIV SWAP5 POP DUP5 PUSH2 0xDCE JUMPI POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x80AC58CD PUSH1 0xE0 SHL EQ DUP1 PUSH2 0xE31 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5B5E139F PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x2F9 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ PUSH2 0x2F9 JUMP JUMPDEST PUSH2 0x7BE DUP5 DUP5 DUP5 DUP5 PUSH2 0x1068 JUMP JUMPDEST PUSH2 0xE66 DUP4 DUP4 PUSH2 0x119C JUMP JUMPDEST PUSH2 0xE73 PUSH1 0x0 DUP5 DUP5 DUP5 PUSH2 0xE8F JUMP JUMPDEST PUSH2 0x4CD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x42C SWAP1 PUSH2 0x1883 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0xF85 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0xED3 SWAP1 CALLER SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x18D5 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xF0E JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xF0B SWAP2 DUP2 ADD SWAP1 PUSH2 0x1912 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xF6B JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0xF3C JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xF41 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0xF63 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x42C SWAP1 PUSH2 0x1883 JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ SWAP1 POP PUSH2 0xA0D JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 LT PUSH2 0xFCF JUMPI PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 DIV SWAP3 POP PUSH1 0x40 ADD JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0xFFB JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DIV SWAP3 POP PUSH1 0x20 ADD JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x1019 JUMPI PUSH7 0x2386F26FC10000 DUP4 DIV SWAP3 POP PUSH1 0x10 ADD JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x1031 JUMPI PUSH4 0x5F5E100 DUP4 DIV SWAP3 POP PUSH1 0x8 ADD JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x1045 JUMPI PUSH2 0x2710 DUP4 DIV SWAP3 POP PUSH1 0x4 ADD JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x1057 JUMPI PUSH1 0x64 DUP4 DIV SWAP3 POP PUSH1 0x2 ADD JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x2F9 JUMPI PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x10D7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x35 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243373231456E756D657261626C653A20636F6E7365637574697665207472 PUSH1 0x44 DUP3 ADD MSTORE PUSH21 0x185B9CD9995C9CC81B9BDD081CDD5C1C1BDC9D1959 PUSH1 0x5A SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x42C JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0x1133 JUMPI PUSH2 0x112E DUP2 PUSH1 0x8 DUP1 SLOAD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP3 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD DUP4 SSTORE SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xF3F7A9FE364FAAB93B216DA50A3214154F22A0A2B415B23A84C8169E8B636EE3 ADD SSTORE JUMP JUMPDEST PUSH2 0x1156 JUMP JUMPDEST DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x1156 JUMPI PUSH2 0x1156 DUP6 DUP3 PUSH2 0x1335 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x1172 JUMPI PUSH2 0x116D DUP2 PUSH2 0x13D2 JUMP JUMPDEST PUSH2 0x1195 JUMP JUMPDEST DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x1195 JUMPI PUSH2 0x1195 DUP5 DUP3 PUSH2 0x1481 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x11F2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206D696E7420746F20746865207A65726F2061646472657373 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x42C JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x1257 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20746F6B656E20616C7265616479206D696E74656400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x42C JUMP JUMPDEST PUSH2 0x1265 PUSH1 0x0 DUP4 DUP4 PUSH1 0x1 PUSH2 0xE50 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x12CA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20746F6B656E20616C7265616479206D696E74656400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x42C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE DUP5 DUP4 MSTORE PUSH1 0x2 SWAP1 SWAP2 MSTORE DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP5 OR SWAP1 SSTORE MLOAD DUP4 SWAP3 SWAP2 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 DUP3 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH2 0x1342 DUP5 PUSH2 0x6D8 JUMP JUMPDEST PUSH2 0x134C SWAP2 SWAP1 PUSH2 0x192F JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP1 DUP3 EQ PUSH2 0x139F JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 SLOAD DUP5 DUP5 MSTORE DUP2 DUP5 KECCAK256 DUP2 SWAP1 SSTORE DUP4 MSTORE PUSH1 0x7 SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP2 SWAP1 SSTORE JUMPDEST POP PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP5 SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP5 AND DUP4 MSTORE PUSH1 0x6 DUP2 MSTORE DUP4 DUP4 KECCAK256 SWAP2 DUP4 MSTORE MSTORE SWAP1 DUP2 KECCAK256 SSTORE JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x0 SWAP1 PUSH2 0x13E4 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x192F JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x8 DUP1 SLOAD SWAP4 SWAP5 POP SWAP1 SWAP3 DUP5 SWAP1 DUP2 LT PUSH2 0x140C JUMPI PUSH2 0x140C PUSH2 0x17F9 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 PUSH1 0x8 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x142D JUMPI PUSH2 0x142D PUSH2 0x17F9 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SWAP3 SWAP1 SWAP3 SSTORE DUP3 DUP2 MSTORE PUSH1 0x9 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP5 SWAP1 SSTORE DUP6 DUP3 MSTORE DUP2 KECCAK256 SSTORE PUSH1 0x8 DUP1 SLOAD DUP1 PUSH2 0x1465 JUMPI PUSH2 0x1465 PUSH2 0x1950 JUMP JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x148C DUP4 PUSH2 0x6D8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP7 DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP6 SWAP1 SSTORE SWAP4 DUP3 MSTORE PUSH1 0x7 SWAP1 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x8A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x824 DUP2 PUSH2 0x14C5 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1513 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x14FB JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x1534 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x14F8 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x824 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x151C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x156D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x158B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x15A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x15AC DUP4 PUSH2 0x1574 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x15CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x15D8 DUP5 PUSH2 0x1574 JUMP JUMPDEST SWAP3 POP PUSH2 0x15E6 PUSH1 0x20 DUP6 ADD PUSH2 0x1574 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1608 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x824 DUP3 PUSH2 0x1574 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1624 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x162D DUP4 PUSH2 0x1574 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1642 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1679 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1682 DUP6 PUSH2 0x1574 JUMP JUMPDEST SWAP4 POP PUSH2 0x1690 PUSH1 0x20 DUP7 ADD PUSH2 0x1574 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x16B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x16C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x16DA JUMPI PUSH2 0x16DA PUSH2 0x164D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x1702 JUMPI PUSH2 0x1702 PUSH2 0x164D JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP11 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x171B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1752 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x175B DUP4 PUSH2 0x1574 JUMP JUMPDEST SWAP2 POP PUSH2 0x1769 PUSH1 0x20 DUP5 ADD PUSH2 0x1574 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1786 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x17A6 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2D SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65 PUSH1 0x40 DUP3 ADD MSTORE PUSH13 0x1C881BDC88185C1C1C9BDD9959 PUSH1 0x9A SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH2 0x1821 DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0x14F8 JUMP JUMPDEST DUP4 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0x1835 DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0x14F8 JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x37BBB732B9 PUSH1 0xD9 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x32 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x40 DUP3 ADD MSTORE PUSH18 0x31B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x71 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x1908 SWAP1 DUP4 ADD DUP5 PUSH2 0x151C JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1924 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x824 DUP2 PUSH2 0x14C5 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x2F9 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID PUSH9 0x747470733A2F2F6170 PUSH10 0x2E6E706F696E742E696F 0x2F ORIGIN CALLDATACOPY CALLDATALOAD PUSH5 0x3832656230 CALLDATACOPY CALLDATASIZE ADDRESS CALLDATASIZE CALLVALUE PUSH4 0x64373165 ADDRESS LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP5 0xDA PUSH29 0xEB18D67C78611337FB3C84DB95AC5E9C9D6F38BF936B73F5543A1DFD3F PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "62523:1038:0:-:0;;;62676:46;;;;;;;;;;39737:113;;;;;;;;;;;;;-1:-1:-1;;;39737:113:0;;;;;;;;;;;;;;;;-1:-1:-1;;;39737:113:0;;;39811:5;39803;:13;;;;;;:::i;:::-;-1:-1:-1;39826:7:0;:17;39836:7;39826;:17;:::i;:::-;;39737:113;;17992:32;18011:12;:10;;;:12;;:::i;:::-;17992:18;:32::i;:::-;62523:1038;;16860:96;16939:10;;16860:96::o;19489:187::-;19581:6;;;-1:-1:-1;;;;;19597:17:0;;;-1:-1:-1;;;;;;19597:17:0;;;;;;;19629:40;;19581:6;;;19597:17;19581:6;;19629:40;;19562:16;;19629:40;19552:124;19489:187;:::o;14:127:1:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:380;225:1;221:12;;;;268;;;289:61;;343:4;335:6;331:17;321:27;;289:61;396:2;388:6;385:14;365:18;362:38;359:161;;442:10;437:3;433:20;430:1;423:31;477:4;474:1;467:15;505:4;502:1;495:15;359:161;;146:380;;;:::o;657:545::-;759:2;754:3;751:11;748:448;;;795:1;820:5;816:2;809:17;865:4;861:2;851:19;935:2;923:10;919:19;916:1;912:27;906:4;902:38;971:4;959:10;956:20;953:47;;;-1:-1:-1;994:4:1;953:47;1049:2;1044:3;1040:12;1037:1;1033:20;1027:4;1023:31;1013:41;;1104:82;1122:2;1115:5;1112:13;1104:82;;;1167:17;;;1148:1;1137:13;1104:82;;;1108:3;;;748:448;657:545;;;:::o;1378:1352::-;1498:10;;-1:-1:-1;;;;;1520:30:1;;1517:56;;;1553:18;;:::i;:::-;1582:97;1672:6;1632:38;1664:4;1658:11;1632:38;:::i;:::-;1626:4;1582:97;:::i;:::-;1734:4;;1798:2;1787:14;;1815:1;1810:663;;;;2517:1;2534:6;2531:89;;;-1:-1:-1;2586:19:1;;;2580:26;2531:89;-1:-1:-1;;1335:1:1;1331:11;;;1327:24;1323:29;1313:40;1359:1;1355:11;;;1310:57;2633:81;;1780:944;;1810:663;604:1;597:14;;;641:4;628:18;;-1:-1:-1;;1846:20:1;;;1964:236;1978:7;1975:1;1972:14;1964:236;;;2067:19;;;2061:26;2046:42;;2159:27;;;;2127:1;2115:14;;;;1994:19;;1964:236;;;1968:3;2228:6;2219:7;2216:19;2213:201;;;2289:19;;;2283:26;-1:-1:-1;;2372:1:1;2368:14;;;2384:3;2364:24;2360:37;2356:42;2341:58;2326:74;;2213:201;-1:-1:-1;;;;;2460:1:1;2444:14;;;2440:22;2427:36;;-1:-1:-1;1378:1352:1:o;:::-;62523:1038:0;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_addTokenToAllTokensEnumeration_2947": {
									"entryPoint": null,
									"id": 2947,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_addTokenToOwnerEnumeration_2927": {
									"entryPoint": 5249,
									"id": 2927,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_afterTokenTransfer_2692": {
									"entryPoint": null,
									"id": 2692,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_approve_2558": {
									"entryPoint": 2344,
									"id": 2558,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_baseURI_3090": {
									"entryPoint": 3405,
									"id": 3090,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_beforeTokenTransfer_2679": {
									"entryPoint": null,
									"id": 2679,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_2897": {
									"entryPoint": 4200,
									"id": 2897,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_3138": {
									"entryPoint": 3664,
									"id": 3138,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_checkOnERC721Received_2666": {
									"entryPoint": 3727,
									"id": 2666,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@_checkOwner_1184": {
									"entryPoint": 2950,
									"id": 1184,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_exists_2227": {
									"entryPoint": null,
									"id": 2227,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_isApprovedOrOwner_2261": {
									"entryPoint": 2454,
									"id": 2261,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_mint_2382": {
									"entryPoint": 4508,
									"id": 2382,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_1121": {
									"entryPoint": null,
									"id": 1121,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_ownerOf_2209": {
									"entryPoint": null,
									"id": 2209,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_removeTokenFromAllTokensEnumeration_3058": {
									"entryPoint": 5074,
									"id": 3058,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_removeTokenFromOwnerEnumeration_3010": {
									"entryPoint": 4917,
									"id": 3010,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_requireMinted_2604": {
									"entryPoint": 2249,
									"id": 2604,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_safeMint_2276": {
									"entryPoint": 3040,
									"id": 2276,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_safeMint_2305": {
									"entryPoint": 3676,
									"id": 2305,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_safeTransfer_2196": {
									"entryPoint": 3354,
									"id": 2196,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_setApprovalForAll_2590": {
									"entryPoint": 3148,
									"id": 2590,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_1241": {
									"entryPoint": 3066,
									"id": 1241,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_2534": {
									"entryPoint": 2581,
									"id": 2534,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@approve_2038": {
									"entryPoint": 952,
									"id": 2038,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@balanceOf_1899": {
									"entryPoint": 1752,
									"id": 1899,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@current_17": {
									"entryPoint": null,
									"id": 17,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getApproved_2056": {
									"entryPoint": 913,
									"id": 2056,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@increment_31": {
									"entryPoint": null,
									"id": 31,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@isApprovedForAll_2091": {
									"entryPoint": null,
									"id": 2091,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isContract_1259": {
									"entryPoint": null,
									"id": 1259,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@log10_774": {
									"entryPoint": 3984,
									"id": 774,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@name_1937": {
									"entryPoint": 767,
									"id": 1937,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@ownerOf_1927": {
									"entryPoint": 1656,
									"id": 1927,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@owner_1170": {
									"entryPoint": null,
									"id": 1170,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_1198": {
									"entryPoint": 1886,
									"id": 1198,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeMint_3114": {
									"entryPoint": 1433,
									"id": 3114,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@safeTransferFrom_2137": {
									"entryPoint": 1482,
									"id": 2137,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@safeTransferFrom_2167": {
									"entryPoint": 1932,
									"id": 2167,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@setApprovalForAll_2073": {
									"entryPoint": 1921,
									"id": 2073,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_1620": {
									"entryPoint": null,
									"id": 1620,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_1875": {
									"entryPoint": 3584,
									"id": 1875,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_2755": {
									"entryPoint": 2212,
									"id": 2755,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_3154": {
									"entryPoint": 750,
									"id": 3154,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@symbol_1947": {
									"entryPoint": 1906,
									"id": 1947,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@toString_993": {
									"entryPoint": 3437,
									"id": 993,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@tokenByIndex_2817": {
									"entryPoint": 1509,
									"id": 2817,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@tokenOfOwnerByIndex_2783": {
									"entryPoint": 1283,
									"id": 2783,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@tokenURI_1986": {
									"entryPoint": 1988,
									"id": 1986,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@totalSupply_2794": {
									"entryPoint": null,
									"id": 2794,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_2118": {
									"entryPoint": 1234,
									"id": 2118,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@transferOwnership_1221": {
									"entryPoint": 2091,
									"id": 1221,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 5492,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 5622,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 5951,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 5562,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr": {
									"entryPoint": 5731,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 5649,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 5520,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 5339,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 6418,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 5467,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_string": {
									"entryPoint": 5404,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 6159,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 6357,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5448,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6060,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1d7f5dcf03a65f41ee49b0ab593e3851cfbe3fd7da53b6cf4eddd83c7df5734c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6275,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6206,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d269a4e9f5820dcdb69ea21f528512eb9b927c8d846d48aa51c9219f461d4dcc__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_da49291af84b6a1e37ed9eacd9a67360593e4a0e561cb261a6a738f621783314__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 6447,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 5368,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 6002,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x12": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x31": {
									"entryPoint": 6480,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 6137,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 5709,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_bytes4": {
									"entryPoint": 5317,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:13359:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "58:87:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "123:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "132:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "135:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "125:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "125:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "125:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "81:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "92:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "103:3:1",
																								"type": "",
																								"value": "224"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "108:10:1",
																								"type": "",
																								"value": "0xffffffff"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "99:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "99:20:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "88:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "88:32:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "78:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "78:43:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "71:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "71:51:1"
															},
															"nodeType": "YulIf",
															"src": "68:71:1"
														}
													]
												},
												"name": "validator_revert_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "47:5:1",
														"type": ""
													}
												],
												"src": "14:131:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "219:176:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "265:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "274:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "277:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "267:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "267:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "267:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "240:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "249:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "236:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "236:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "261:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "232:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "232:32:1"
															},
															"nodeType": "YulIf",
															"src": "229:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "290:36:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "316:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "303:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "303:23:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "294:5:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "359:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "335:23:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "335:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "335:30:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "374:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "384:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "374:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "185:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "196:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "208:6:1",
														"type": ""
													}
												],
												"src": "150:245:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "495:92:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "505:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "517:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "528:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "513:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "513:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "505:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "547:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "572:6:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "565:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "565:14:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "558:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "558:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "540:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "540:41:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "540:41:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "464:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "475:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "486:4:1",
														"type": ""
													}
												],
												"src": "400:187:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "658:184:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "668:10:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "677:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "672:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "737:63:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "762:3:1"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "767:1:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "758:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "758:11:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "781:3:1"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "786:1:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "777:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "777:11:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "771:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "771:18:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "751:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "751:39:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "751:39:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "698:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "701:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "695:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "695:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "709:19:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "711:15:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "720:1:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "723:2:1",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "716:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "716:10:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "711:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "691:3:1",
																"statements": []
															},
															"src": "687:113:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "820:3:1"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "825:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "816:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "816:16:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "834:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "809:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "809:27:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "809:27:1"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "636:3:1",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "641:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "646:6:1",
														"type": ""
													}
												],
												"src": "592:250:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "897:221:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "907:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "927:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "921:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "921:12:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "911:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "949:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "954:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "942:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "942:19:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "942:19:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1009:5:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1016:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1005:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1005:16:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "1027:3:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1032:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1023:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1023:14:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1039:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "970:34:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "970:76:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "970:76:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1055:57:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "1070:3:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "1083:6:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1091:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "1079:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1079:15:1"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1100:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "1096:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1096:7:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "1075:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1075:29:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1066:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1066:39:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1107:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1062:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1062:50:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1055:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_string",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "874:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "881:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "889:3:1",
														"type": ""
													}
												],
												"src": "847:271:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1244:99:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1261:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1272:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1254:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1254:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1254:21:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1284:53:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1310:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1322:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1333:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1318:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1318:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nodeType": "YulIdentifier",
																	"src": "1292:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1292:45:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1284:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1213:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1224:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1235:4:1",
														"type": ""
													}
												],
												"src": "1123:220:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1418:110:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1464:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1473:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1476:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1466:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1466:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1466:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1439:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1448:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1435:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1435:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1460:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1431:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1431:32:1"
															},
															"nodeType": "YulIf",
															"src": "1428:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1489:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1512:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1499:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1499:23:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1489:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1384:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1395:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1407:6:1",
														"type": ""
													}
												],
												"src": "1348:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1634:102:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1644:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1656:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1667:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1652:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1652:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1644:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1686:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1701:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1717:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1722:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "1713:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1713:11:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1726:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "1709:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1709:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1697:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1697:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1679:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1679:51:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1679:51:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1603:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1614:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1625:4:1",
														"type": ""
													}
												],
												"src": "1533:203:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1790:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1800:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1822:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1809:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1809:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1800:5:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1892:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1901:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1904:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1894:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1894:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1894:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1851:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1862:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1877:3:1",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1882:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "1873:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "1873:11:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1886:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "1869:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1869:19:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "1858:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1858:31:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1848:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1848:42:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1841:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1841:50:1"
															},
															"nodeType": "YulIf",
															"src": "1838:70:1"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1769:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1780:5:1",
														"type": ""
													}
												],
												"src": "1741:173:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2006:167:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2052:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2061:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2064:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2054:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2054:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2054:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2027:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2036:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2023:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2023:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2048:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2019:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2019:32:1"
															},
															"nodeType": "YulIf",
															"src": "2016:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2077:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2106:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2087:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2087:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2077:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2125:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2152:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2163:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2148:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2148:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2135:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2135:32:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2125:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1964:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1975:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1987:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1995:6:1",
														"type": ""
													}
												],
												"src": "1919:254:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2279:76:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2289:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2301:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2312:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2297:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2297:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2289:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2331:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2342:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2324:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2324:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2324:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2248:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2259:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2270:4:1",
														"type": ""
													}
												],
												"src": "2178:177:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2464:224:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2510:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2519:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2522:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2512:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2512:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2512:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2485:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2494:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2481:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2481:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2506:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2477:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2477:32:1"
															},
															"nodeType": "YulIf",
															"src": "2474:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2535:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2564:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2545:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2545:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2535:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2583:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2616:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2627:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2612:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2612:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2593:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2593:38:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2583:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2640:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2667:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2678:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2663:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2663:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2650:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2650:32:1"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "2640:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2414:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2425:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2437:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2445:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2453:6:1",
														"type": ""
													}
												],
												"src": "2360:328:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2763:116:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2809:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2818:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2821:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2811:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2811:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2811:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2784:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2793:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2780:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2780:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2805:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2776:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2776:32:1"
															},
															"nodeType": "YulIf",
															"src": "2773:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2834:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2863:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2844:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2844:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2834:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2729:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2740:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2752:6:1",
														"type": ""
													}
												],
												"src": "2693:186:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2968:263:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3014:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3023:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3026:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3016:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3016:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3016:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2989:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2998:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2985:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2985:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3010:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2981:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2981:32:1"
															},
															"nodeType": "YulIf",
															"src": "2978:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3039:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3068:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "3049:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3049:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3039:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3087:45:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3117:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3128:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3113:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3113:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3100:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3100:32:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "3091:5:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3185:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3194:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3197:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3187:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3187:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3187:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3154:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "3175:5:1"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "3168:6:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3168:13:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "3161:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3161:21:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "3151:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3151:32:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3144:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3144:40:1"
															},
															"nodeType": "YulIf",
															"src": "3141:60:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3210:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3220:5:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "3210:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2926:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2937:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2949:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2957:6:1",
														"type": ""
													}
												],
												"src": "2884:347:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3268:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3285:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3292:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3297:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "3288:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3288:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3278:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3278:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3278:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3325:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3328:4:1",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3318:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3318:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3318:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3349:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3352:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3342:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3342:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3342:15:1"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "3236:127:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3498:1008:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3545:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3554:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3557:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3547:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3547:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3547:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3519:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3528:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3515:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3515:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3540:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3511:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3511:33:1"
															},
															"nodeType": "YulIf",
															"src": "3508:53:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3570:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3599:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "3580:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3580:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3570:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3618:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3651:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3662:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3647:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3647:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "3628:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3628:38:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "3618:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3675:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3702:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3713:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3698:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3698:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3685:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3685:32:1"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "3675:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3726:46:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3757:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3768:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3753:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3753:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3740:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3740:32:1"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "3730:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3781:28:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3791:18:1",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "3785:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3836:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3845:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3848:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3838:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3838:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3838:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3824:6:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3832:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3821:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3821:14:1"
															},
															"nodeType": "YulIf",
															"src": "3818:34:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3861:32:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3875:9:1"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3886:6:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3871:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3871:22:1"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "3865:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3941:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3950:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3953:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3943:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3943:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3943:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "3920:2:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3924:4:1",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3916:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3916:13:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3931:7:1"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "3912:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3912:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3905:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3905:35:1"
															},
															"nodeType": "YulIf",
															"src": "3902:55:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3966:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "3989:2:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3976:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3976:16:1"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "3970:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4015:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "4017:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4017:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4017:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "4007:2:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4011:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4004:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4004:10:1"
															},
															"nodeType": "YulIf",
															"src": "4001:36:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4046:17:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4060:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "4056:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4056:7:1"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "4050:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4072:23:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4092:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4086:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4086:9:1"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "4076:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4104:71:1",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "4126:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_3",
																										"nodeType": "YulIdentifier",
																										"src": "4150:2:1"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "4154:4:1",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "4146:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4146:13:1"
																							},
																							{
																								"name": "_4",
																								"nodeType": "YulIdentifier",
																								"src": "4161:2:1"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "4142:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4142:22:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4166:2:1",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4138:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4138:31:1"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "4171:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4134:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4134:40:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4122:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4122:53:1"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "4108:10:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4234:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "4236:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4236:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4236:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "4193:10:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "4205:2:1"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "4190:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4190:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "4213:10:1"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "4225:6:1"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "4210:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4210:22:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "4187:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4187:46:1"
															},
															"nodeType": "YulIf",
															"src": "4184:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4272:2:1",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "4276:10:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4265:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4265:22:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4265:22:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "4303:6:1"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "4311:2:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4296:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4296:18:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4296:18:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4360:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4369:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4372:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4362:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4362:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4362:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "4337:2:1"
																					},
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "4341:2:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4333:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4333:11:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4346:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4329:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4329:20:1"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "4351:7:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4326:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4326:33:1"
															},
															"nodeType": "YulIf",
															"src": "4323:53:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "4402:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4410:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4398:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4398:15:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "4419:2:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4423:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4415:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4415:11:1"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "4428:2:1"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "4385:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4385:46:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4385:46:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nodeType": "YulIdentifier",
																						"src": "4455:6:1"
																					},
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "4463:2:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4451:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4451:15:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4468:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4447:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4447:24:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4473:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4440:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4440:35:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4440:35:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4484:16:1",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "4494:6:1"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "4484:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3440:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3451:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3463:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3471:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3479:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "3487:6:1",
														"type": ""
													}
												],
												"src": "3368:1138:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4598:173:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4644:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4653:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4656:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4646:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4646:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4646:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4619:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4628:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4615:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4615:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4640:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4611:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4611:32:1"
															},
															"nodeType": "YulIf",
															"src": "4608:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4669:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4698:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "4679:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4679:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4669:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4717:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4750:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4761:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4746:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4746:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "4727:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4727:38:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "4717:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4556:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4567:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4579:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4587:6:1",
														"type": ""
													}
												],
												"src": "4511:260:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4831:325:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4841:22:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4855:1:1",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "4858:4:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "4851:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4851:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "4841:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4872:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "4902:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4908:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4898:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4898:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "4876:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4949:31:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "4951:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "4965:6:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4973:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "4961:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4961:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "4951:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "4929:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4922:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4922:26:1"
															},
															"nodeType": "YulIf",
															"src": "4919:61:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5039:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5060:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5067:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5072:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "5063:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5063:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5053:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5053:31:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5053:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5104:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5107:4:1",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5097:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5097:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5097:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5132:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5135:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5125:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5125:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5125:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "4995:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "5018:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5026:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "5015:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5015:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "4992:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4992:38:1"
															},
															"nodeType": "YulIf",
															"src": "4989:161:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "4811:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "4820:6:1",
														"type": ""
													}
												],
												"src": "4776:380:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5335:223:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5352:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5363:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5345:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5345:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5345:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5386:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5397:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5382:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5382:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5402:2:1",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5375:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5375:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5375:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5425:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5436:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5421:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5421:18:1"
																	},
																	{
																		"hexValue": "4552433732313a20617070726f76616c20746f2063757272656e74206f776e65",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5441:34:1",
																		"type": "",
																		"value": "ERC721: approval to current owne"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5414:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5414:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5414:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5496:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5507:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5492:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5492:18:1"
																	},
																	{
																		"hexValue": "72",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5512:3:1",
																		"type": "",
																		"value": "r"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5485:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5485:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5485:31:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5525:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5537:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5548:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5533:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5533:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5525:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5312:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5326:4:1",
														"type": ""
													}
												],
												"src": "5161:397:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5737:251:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5754:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5765:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5747:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5747:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5747:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5788:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5799:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5784:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5784:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5804:2:1",
																		"type": "",
																		"value": "61"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5777:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5777:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5777:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5827:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5838:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5823:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5823:18:1"
																	},
																	{
																		"hexValue": "4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5843:34:1",
																		"type": "",
																		"value": "ERC721: approve caller is not to"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5816:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5816:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5816:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5898:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5909:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5894:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5894:18:1"
																	},
																	{
																		"hexValue": "6b656e206f776e6572206f7220617070726f76656420666f7220616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5914:31:1",
																		"type": "",
																		"value": "ken owner or approved for all"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5887:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5887:59:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5887:59:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5955:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5967:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5978:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5963:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5963:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5955:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5714:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5728:4:1",
														"type": ""
													}
												],
												"src": "5563:425:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6167:235:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6184:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6195:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6177:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6177:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6177:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6218:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6229:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6214:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6214:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6234:2:1",
																		"type": "",
																		"value": "45"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6207:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6207:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6207:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6257:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6268:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6253:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6253:18:1"
																	},
																	{
																		"hexValue": "4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e65",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6273:34:1",
																		"type": "",
																		"value": "ERC721: caller is not token owne"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6246:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6246:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6246:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6328:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6339:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6324:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6324:18:1"
																	},
																	{
																		"hexValue": "72206f7220617070726f766564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6344:15:1",
																		"type": "",
																		"value": "r or approved"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6317:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6317:43:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6317:43:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6369:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6381:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6392:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6377:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6377:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6369:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6144:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6158:4:1",
														"type": ""
													}
												],
												"src": "5993:409:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6581:233:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6598:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6609:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6591:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6591:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6591:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6632:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6643:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6628:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6628:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6648:2:1",
																		"type": "",
																		"value": "43"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6621:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6621:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6621:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6671:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6682:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6667:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6667:18:1"
																	},
																	{
																		"hexValue": "455243373231456e756d657261626c653a206f776e657220696e646578206f75",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6687:34:1",
																		"type": "",
																		"value": "ERC721Enumerable: owner index ou"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6660:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6660:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6660:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6742:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6753:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6738:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6738:18:1"
																	},
																	{
																		"hexValue": "74206f6620626f756e6473",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6758:13:1",
																		"type": "",
																		"value": "t of bounds"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6731:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6731:41:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6731:41:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6781:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6793:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6804:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6789:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6789:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6781:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1d7f5dcf03a65f41ee49b0ab593e3851cfbe3fd7da53b6cf4eddd83c7df5734c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6558:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6572:4:1",
														"type": ""
													}
												],
												"src": "6407:407:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6993:234:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7010:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7021:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7003:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7003:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7003:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7044:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7055:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7040:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7040:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7060:2:1",
																		"type": "",
																		"value": "44"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7033:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7033:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7033:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7083:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7094:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7079:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7079:18:1"
																	},
																	{
																		"hexValue": "455243373231456e756d657261626c653a20676c6f62616c20696e646578206f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7099:34:1",
																		"type": "",
																		"value": "ERC721Enumerable: global index o"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7072:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7072:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7072:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7154:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7165:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7150:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7150:18:1"
																	},
																	{
																		"hexValue": "7574206f6620626f756e6473",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7170:14:1",
																		"type": "",
																		"value": "ut of bounds"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7143:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7143:42:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7143:42:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7194:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7206:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7217:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7202:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7202:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7194:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d269a4e9f5820dcdb69ea21f528512eb9b927c8d846d48aa51c9219f461d4dcc__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6970:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6984:4:1",
														"type": ""
													}
												],
												"src": "6819:408:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7264:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7281:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7288:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7293:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "7284:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7284:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7274:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7274:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7274:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7321:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7324:4:1",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7314:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7314:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7314:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7345:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7348:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7338:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7338:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7338:15:1"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "7232:127:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7538:174:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7555:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7566:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7548:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7548:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7548:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7589:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7600:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7585:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7585:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7605:2:1",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7578:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7578:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7578:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7628:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7639:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7624:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7624:18:1"
																	},
																	{
																		"hexValue": "4552433732313a20696e76616c696420746f6b656e204944",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7644:26:1",
																		"type": "",
																		"value": "ERC721: invalid token ID"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7617:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7617:54:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7617:54:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7680:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7692:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7703:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7688:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7688:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7680:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7515:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7529:4:1",
														"type": ""
													}
												],
												"src": "7364:348:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7891:231:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7908:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7919:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7901:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7901:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7901:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7942:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7953:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7938:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7938:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7958:2:1",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7931:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7931:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7931:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7981:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7992:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7977:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7977:18:1"
																	},
																	{
																		"hexValue": "4552433732313a2061646472657373207a65726f206973206e6f742061207661",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7997:34:1",
																		"type": "",
																		"value": "ERC721: address zero is not a va"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7970:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7970:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7970:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8052:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8063:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8048:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8048:18:1"
																	},
																	{
																		"hexValue": "6c6964206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8068:11:1",
																		"type": "",
																		"value": "lid owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8041:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8041:39:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8041:39:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8089:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8101:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8112:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8097:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8097:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8089:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7868:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7882:4:1",
														"type": ""
													}
												],
												"src": "7717:405:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8314:309:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8324:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8344:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "8338:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8338:13:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "8328:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "8399:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8407:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8395:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8395:17:1"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8414:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8419:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "8360:34:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8360:66:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8360:66:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8435:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8452:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8457:6:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8448:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8448:16:1"
															},
															"variables": [
																{
																	"name": "end_1",
																	"nodeType": "YulTypedName",
																	"src": "8439:5:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8473:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "8495:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "8489:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8489:13:1"
															},
															"variables": [
																{
																	"name": "length_1",
																	"nodeType": "YulTypedName",
																	"src": "8477:8:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "8550:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8558:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8546:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8546:17:1"
																	},
																	{
																		"name": "end_1",
																		"nodeType": "YulIdentifier",
																		"src": "8565:5:1"
																	},
																	{
																		"name": "length_1",
																		"nodeType": "YulIdentifier",
																		"src": "8572:8:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "8511:34:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8511:70:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8511:70:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8590:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "end_1",
																		"nodeType": "YulIdentifier",
																		"src": "8601:5:1"
																	},
																	{
																		"name": "length_1",
																		"nodeType": "YulIdentifier",
																		"src": "8608:8:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8597:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8597:20:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "8590:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8282:3:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "8287:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8295:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8306:3:1",
														"type": ""
													}
												],
												"src": "8127:496:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8802:228:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8819:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8830:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8812:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8812:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8812:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8853:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8864:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8849:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8849:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8869:2:1",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8842:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8842:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8842:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8892:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8903:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8888:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8888:18:1"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8908:34:1",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8881:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8881:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8881:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8963:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8974:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8959:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8959:18:1"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8979:8:1",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8952:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8952:36:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8952:36:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8997:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9009:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9020:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9005:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9005:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8997:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8779:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8793:4:1",
														"type": ""
													}
												],
												"src": "8628:402:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9209:227:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9226:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9237:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9219:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9219:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9219:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9260:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9271:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9256:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9256:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9276:2:1",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9249:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9249:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9249:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9299:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9310:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9295:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9295:18:1"
																	},
																	{
																		"hexValue": "4552433732313a207472616e736665722066726f6d20696e636f727265637420",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9315:34:1",
																		"type": "",
																		"value": "ERC721: transfer from incorrect "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9288:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9288:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9288:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9370:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9381:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9366:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9366:18:1"
																	},
																	{
																		"hexValue": "6f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9386:7:1",
																		"type": "",
																		"value": "owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9359:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9359:35:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9359:35:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9403:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9415:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9426:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9411:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9411:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9403:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9186:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9200:4:1",
														"type": ""
													}
												],
												"src": "9035:401:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9615:226:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9632:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9643:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9625:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9625:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9625:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9666:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9677:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9662:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9662:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9682:2:1",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9655:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9655:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9655:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9705:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9716:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9701:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9701:18:1"
																	},
																	{
																		"hexValue": "4552433732313a207472616e7366657220746f20746865207a65726f20616464",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9721:34:1",
																		"type": "",
																		"value": "ERC721: transfer to the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9694:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9694:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9694:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9776:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9787:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9772:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9772:18:1"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9792:6:1",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9765:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9765:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9765:34:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9808:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9820:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9831:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9816:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9816:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9808:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9592:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9606:4:1",
														"type": ""
													}
												],
												"src": "9441:400:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10020:182:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10037:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10048:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10030:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10030:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10030:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10071:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10082:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10067:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10067:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10087:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10060:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10060:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10060:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10110:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10121:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10106:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10106:18:1"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10126:34:1",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10099:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10099:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10099:62:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10170:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10182:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10193:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10178:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10178:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10170:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9997:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10011:4:1",
														"type": ""
													}
												],
												"src": "9846:356:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10381:175:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10398:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10409:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10391:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10391:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10391:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10432:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10443:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10428:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10428:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10448:2:1",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10421:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10421:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10421:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10471:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10482:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10467:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10467:18:1"
																	},
																	{
																		"hexValue": "4552433732313a20617070726f766520746f2063616c6c6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10487:27:1",
																		"type": "",
																		"value": "ERC721: approve to caller"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10460:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10460:55:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10460:55:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10524:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10536:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10547:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10532:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10532:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10524:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10358:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10372:4:1",
														"type": ""
													}
												],
												"src": "10207:349:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10735:240:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10752:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10763:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10745:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10745:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10745:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10786:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10797:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10782:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10782:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10802:2:1",
																		"type": "",
																		"value": "50"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10775:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10775:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10775:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10825:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10836:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10821:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10821:18:1"
																	},
																	{
																		"hexValue": "4552433732313a207472616e7366657220746f206e6f6e204552433732315265",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10841:34:1",
																		"type": "",
																		"value": "ERC721: transfer to non ERC721Re"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10814:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10814:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10814:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10896:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10907:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10892:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10892:18:1"
																	},
																	{
																		"hexValue": "63656976657220696d706c656d656e746572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10912:20:1",
																		"type": "",
																		"value": "ceiver implementer"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10885:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10885:48:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10885:48:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10942:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10954:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10965:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10950:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10950:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10942:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10712:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10726:4:1",
														"type": ""
													}
												],
												"src": "10561:414:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11012:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11029:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11036:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11041:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "11032:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11032:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11022:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11022:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11022:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11069:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11072:4:1",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11062:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11062:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11062:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11093:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11096:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "11086:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11086:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11086:15:1"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "10980:127:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11315:286:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11325:29:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11343:3:1",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11348:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "11339:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11339:11:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11352:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "11335:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11335:19:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "11329:2:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11370:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "11385:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "11393:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "11381:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11381:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11363:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11363:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11363:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11417:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11428:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11413:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11413:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "11437:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "11445:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "11433:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11433:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11406:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11406:43:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11406:43:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11469:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11480:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11465:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11465:18:1"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "11485:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11458:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11458:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11458:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11512:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11523:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11508:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11508:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11528:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11501:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11501:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11501:31:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11541:54:1",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "11567:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11579:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11590:3:1",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11575:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11575:19:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nodeType": "YulIdentifier",
																	"src": "11549:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11549:46:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11541:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11260:9:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "11271:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "11279:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "11287:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11295:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11306:4:1",
														"type": ""
													}
												],
												"src": "11112:489:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11686:169:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11732:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11741:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11744:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "11734:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11734:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11734:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "11707:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11716:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11703:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11703:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11728:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "11699:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11699:32:1"
															},
															"nodeType": "YulIf",
															"src": "11696:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11757:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11776:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "11770:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11770:16:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "11761:5:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11819:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "11795:23:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11795:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11795:30:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11834:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "11844:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "11834:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11652:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "11663:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11675:6:1",
														"type": ""
													}
												],
												"src": "11606:249:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12034:243:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12051:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12062:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12044:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12044:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12044:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12085:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12096:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12081:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12081:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12101:2:1",
																		"type": "",
																		"value": "53"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12074:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12074:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12074:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12124:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12135:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12120:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12120:18:1"
																	},
																	{
																		"hexValue": "455243373231456e756d657261626c653a20636f6e7365637574697665207472",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12140:34:1",
																		"type": "",
																		"value": "ERC721Enumerable: consecutive tr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12113:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12113:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12113:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12195:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12206:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12191:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12191:18:1"
																	},
																	{
																		"hexValue": "616e7366657273206e6f7420737570706f72746564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12211:23:1",
																		"type": "",
																		"value": "ansfers not supported"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12184:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12184:51:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12184:51:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12244:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12256:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12267:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12252:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12252:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12244:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_da49291af84b6a1e37ed9eacd9a67360593e4a0e561cb261a6a738f621783314__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12011:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12025:4:1",
														"type": ""
													}
												],
												"src": "11860:417:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12456:182:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12473:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12484:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12466:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12466:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12466:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12507:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12518:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12503:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12503:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12523:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12496:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12496:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12496:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12546:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12557:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12542:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12542:18:1"
																	},
																	{
																		"hexValue": "4552433732313a206d696e7420746f20746865207a65726f2061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12562:34:1",
																		"type": "",
																		"value": "ERC721: mint to the zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12535:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12535:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12535:62:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12606:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12618:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12629:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12614:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12614:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12606:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12433:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12447:4:1",
														"type": ""
													}
												],
												"src": "12282:356:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12817:178:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12834:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12845:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12827:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12827:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12827:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12868:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12879:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12864:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12864:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12884:2:1",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12857:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12857:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12857:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12907:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12918:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12903:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12903:18:1"
																	},
																	{
																		"hexValue": "4552433732313a20746f6b656e20616c7265616479206d696e746564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12923:30:1",
																		"type": "",
																		"value": "ERC721: token already minted"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12896:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12896:58:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12896:58:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12963:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12975:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12986:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12971:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12971:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12963:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12794:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12808:4:1",
														"type": ""
													}
												],
												"src": "12643:352:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13049:176:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13059:17:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "13071:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "13074:1:1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "13067:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13067:9:1"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "13059:4:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13108:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13129:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "13136:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "13141:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "13132:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "13132:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "13122:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13122:31:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13122:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13173:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13176:4:1",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "13166:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13166:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13166:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13201:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13204:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "13194:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13194:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13194:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nodeType": "YulIdentifier",
																		"src": "13091:4:1"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "13097:1:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "13088:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13088:11:1"
															},
															"nodeType": "YulIf",
															"src": "13085:134:1"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "13031:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "13034:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "13040:4:1",
														"type": ""
													}
												],
												"src": "13000:225:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13262:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13279:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13286:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13291:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "13282:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13282:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13272:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13272:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13272:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13319:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13322:4:1",
																		"type": "",
																		"value": "0x31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13312:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13312:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13312:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13343:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13346:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "13336:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13336:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13336:15:1"
														}
													]
												},
												"name": "panic_error_0x31",
												"nodeType": "YulFunctionDefinition",
												"src": "13230:127:1"
											}
										]
									},
									"contents": "{\n    { }\n    function validator_revert_bytes4(value)\n    {\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value1 := value\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        let offset := calldataload(add(headStart, 96))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := calldataload(_2)\n        if gt(_3, _1) { panic_error_0x41() }\n        let _4 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_3, 0x1f), _4), 63), _4))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _3)\n        if gt(add(add(_2, _3), 32), dataEnd) { revert(0, 0) }\n        calldatacopy(add(memPtr, 32), add(_2, 32), _3)\n        mstore(add(add(memPtr, _3), 32), 0)\n        value3 := memPtr\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"ERC721: approval to current owne\")\n        mstore(add(headStart, 96), \"r\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 61)\n        mstore(add(headStart, 64), \"ERC721: approve caller is not to\")\n        mstore(add(headStart, 96), \"ken owner or approved for all\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 45)\n        mstore(add(headStart, 64), \"ERC721: caller is not token owne\")\n        mstore(add(headStart, 96), \"r or approved\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_1d7f5dcf03a65f41ee49b0ab593e3851cfbe3fd7da53b6cf4eddd83c7df5734c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 43)\n        mstore(add(headStart, 64), \"ERC721Enumerable: owner index ou\")\n        mstore(add(headStart, 96), \"t of bounds\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_d269a4e9f5820dcdb69ea21f528512eb9b927c8d846d48aa51c9219f461d4dcc__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 44)\n        mstore(add(headStart, 64), \"ERC721Enumerable: global index o\")\n        mstore(add(headStart, 96), \"ut of bounds\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"ERC721: invalid token ID\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"ERC721: address zero is not a va\")\n        mstore(add(headStart, 96), \"lid owner\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), pos, length)\n        let end_1 := add(pos, length)\n        let length_1 := mload(value1)\n        copy_memory_to_memory_with_cleanup(add(value1, 0x20), end_1, length_1)\n        end := add(end_1, length_1)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC721: transfer from incorrect \")\n        mstore(add(headStart, 96), \"owner\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC721: transfer to the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"ERC721: approve to caller\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 50)\n        mstore(add(headStart, 64), \"ERC721: transfer to non ERC721Re\")\n        mstore(add(headStart, 96), \"ceiver implementer\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x12()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), 128)\n        tail := abi_encode_string(value3, add(headStart, 128))\n    }\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_da49291af84b6a1e37ed9eacd9a67360593e4a0e561cb261a6a738f621783314__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 53)\n        mstore(add(headStart, 64), \"ERC721Enumerable: consecutive tr\")\n        mstore(add(headStart, 96), \"ansfers not supported\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"ERC721: mint to the zero address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"ERC721: token already minted\")\n        tail := add(headStart, 96)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x31()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x31)\n        revert(0, 0x24)\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061012c5760003560e01c80636352211e116100ad578063a22cb46511610071578063a22cb46514610266578063b88d4fde14610279578063c87b56dd1461028c578063e985e9c51461029f578063f2fde38b146102db57600080fd5b80636352211e1461021f57806370a0823114610232578063715018a6146102455780638da5cb5b1461024d57806395d89b411461025e57600080fd5b806323b872dd116100f457806323b872dd146101c05780632f745c59146101d357806340d097c3146101e657806342842e0e146101f95780634f6ccce71461020c57600080fd5b806301ffc9a71461013157806306fdde0314610159578063081812fc1461016e578063095ea7b31461019957806318160ddd146101ae575b600080fd5b61014461013f3660046114db565b6102ee565b60405190151581526020015b60405180910390f35b6101616102ff565b6040516101509190611548565b61018161017c36600461155b565b610391565b6040516001600160a01b039091168152602001610150565b6101ac6101a7366004611590565b6103b8565b005b6008545b604051908152602001610150565b6101ac6101ce3660046115ba565b6104d2565b6101b26101e1366004611590565b610503565b6101ac6101f43660046115f6565b610599565b6101ac6102073660046115ba565b6105ca565b6101b261021a36600461155b565b6105e5565b61018161022d36600461155b565b610678565b6101b26102403660046115f6565b6106d8565b6101ac61075e565b600a546001600160a01b0316610181565b610161610772565b6101ac610274366004611611565b610781565b6101ac610287366004611663565b61078c565b61016161029a36600461155b565b6107c4565b6101446102ad36600461173f565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b6101ac6102e93660046115f6565b61082b565b60006102f9826108a4565b92915050565b60606000805461030e90611772565b80601f016020809104026020016040519081016040528092919081815260200182805461033a90611772565b80156103875780601f1061035c57610100808354040283529160200191610387565b820191906000526020600020905b81548152906001019060200180831161036a57829003601f168201915b5050505050905090565b600061039c826108c9565b506000908152600460205260409020546001600160a01b031690565b60006103c382610678565b9050806001600160a01b0316836001600160a01b0316036104355760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b0382161480610451575061045181336102ad565b6104c35760405162461bcd60e51b815260206004820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c000000606482015260840161042c565b6104cd8383610928565b505050565b6104dc3382610996565b6104f85760405162461bcd60e51b815260040161042c906117ac565b6104cd838383610a15565b600061050e836106d8565b82106105705760405162461bcd60e51b815260206004820152602b60248201527f455243373231456e756d657261626c653a206f776e657220696e646578206f7560448201526a74206f6620626f756e647360a81b606482015260840161042c565b506001600160a01b03919091166000908152600660209081526040808320938352929052205490565b6105a1610b86565b60006105ac600b5490565b90506105bc600b80546001019055565b6105c68282610be0565b5050565b6104cd8383836040518060200160405280600081525061078c565b60006105f060085490565b82106106535760405162461bcd60e51b815260206004820152602c60248201527f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60448201526b7574206f6620626f756e647360a01b606482015260840161042c565b60088281548110610666576106666117f9565b90600052602060002001549050919050565b6000818152600260205260408120546001600160a01b0316806102f95760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b604482015260640161042c565b60006001600160a01b0382166107425760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b606482015260840161042c565b506001600160a01b031660009081526003602052604090205490565b610766610b86565b6107706000610bfa565b565b60606001805461030e90611772565b6105c6338383610c4c565b6107963383610996565b6107b25760405162461bcd60e51b815260040161042c906117ac565b6107be84848484610d1a565b50505050565b60606107cf826108c9565b60006107d9610d4d565b905060008151116107f95760405180602001604052806000815250610824565b8061080384610d6d565b60405160200161081492919061180f565b6040516020818303038152906040525b9392505050565b610833610b86565b6001600160a01b0381166108985760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161042c565b6108a181610bfa565b50565b60006001600160e01b0319821663780e9d6360e01b14806102f957506102f982610e00565b6000818152600260205260409020546001600160a01b03166108a15760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b604482015260640161042c565b600081815260046020526040902080546001600160a01b0319166001600160a01b038416908117909155819061095d82610678565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000806109a283610678565b9050806001600160a01b0316846001600160a01b031614806109e957506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b80610a0d5750836001600160a01b0316610a0284610391565b6001600160a01b0316145b949350505050565b826001600160a01b0316610a2882610678565b6001600160a01b031614610a4e5760405162461bcd60e51b815260040161042c9061183e565b6001600160a01b038216610ab05760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b606482015260840161042c565b610abd8383836001610e50565b826001600160a01b0316610ad082610678565b6001600160a01b031614610af65760405162461bcd60e51b815260040161042c9061183e565b600081815260046020908152604080832080546001600160a01b03199081169091556001600160a01b0387811680865260038552838620805460001901905590871680865283862080546001019055868652600290945282852080549092168417909155905184937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b600a546001600160a01b031633146107705760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161042c565b6105c6828260405180602001604052806000815250610e5c565b600a80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b816001600160a01b0316836001600160a01b031603610cad5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604482015260640161042c565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b610d25848484610a15565b610d3184848484610e8f565b6107be5760405162461bcd60e51b815260040161042c90611883565b60606040518060600160405280602a8152602001611967602a9139905090565b60606000610d7a83610f90565b600101905060008167ffffffffffffffff811115610d9a57610d9a61164d565b6040519080825280601f01601f191660200182016040528015610dc4576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a8504945084610dce57509392505050565b60006001600160e01b031982166380ac58cd60e01b1480610e3157506001600160e01b03198216635b5e139f60e01b145b806102f957506301ffc9a760e01b6001600160e01b03198316146102f9565b6107be84848484611068565b610e66838361119c565b610e736000848484610e8f565b6104cd5760405162461bcd60e51b815260040161042c90611883565b60006001600160a01b0384163b15610f8557604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290610ed39033908990889088906004016118d5565b6020604051808303816000875af1925050508015610f0e575060408051601f3d908101601f19168201909252610f0b91810190611912565b60015b610f6b573d808015610f3c576040519150601f19603f3d011682016040523d82523d6000602084013e610f41565b606091505b508051600003610f635760405162461bcd60e51b815260040161042c90611883565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610a0d565b506001949350505050565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b8310610fcf5772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef81000000008310610ffb576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc10000831061101957662386f26fc10000830492506010015b6305f5e1008310611031576305f5e100830492506008015b612710831061104557612710830492506004015b60648310611057576064830492506002015b600a83106102f95760010192915050565b60018111156110d75760405162461bcd60e51b815260206004820152603560248201527f455243373231456e756d657261626c653a20636f6e7365637574697665207472604482015274185b9cd9995c9cc81b9bdd081cdd5c1c1bdc9d1959605a1b606482015260840161042c565b816001600160a01b0385166111335761112e81600880546000838152600960205260408120829055600182018355919091527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30155565b611156565b836001600160a01b0316856001600160a01b031614611156576111568582611335565b6001600160a01b0384166111725761116d816113d2565b611195565b846001600160a01b0316846001600160a01b031614611195576111958482611481565b5050505050565b6001600160a01b0382166111f25760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f2061646472657373604482015260640161042c565b6000818152600260205260409020546001600160a01b0316156112575760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604482015260640161042c565b611265600083836001610e50565b6000818152600260205260409020546001600160a01b0316156112ca5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604482015260640161042c565b6001600160a01b038216600081815260036020908152604080832080546001019055848352600290915280822080546001600160a01b0319168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b60006001611342846106d8565b61134c919061192f565b60008381526007602052604090205490915080821461139f576001600160a01b03841660009081526006602090815260408083208584528252808320548484528184208190558352600790915290208190555b5060009182526007602090815260408084208490556001600160a01b039094168352600681528383209183525290812055565b6008546000906113e49060019061192f565b6000838152600960205260408120546008805493945090928490811061140c5761140c6117f9565b90600052602060002001549050806008838154811061142d5761142d6117f9565b600091825260208083209091019290925582815260099091526040808220849055858252812055600880548061146557611465611950565b6001900381819060005260206000200160009055905550505050565b600061148c836106d8565b6001600160a01b039093166000908152600660209081526040808320868452825280832085905593825260079052919091209190915550565b6001600160e01b0319811681146108a157600080fd5b6000602082840312156114ed57600080fd5b8135610824816114c5565b60005b838110156115135781810151838201526020016114fb565b50506000910152565b600081518084526115348160208601602086016114f8565b601f01601f19169290920160200192915050565b602081526000610824602083018461151c565b60006020828403121561156d57600080fd5b5035919050565b80356001600160a01b038116811461158b57600080fd5b919050565b600080604083850312156115a357600080fd5b6115ac83611574565b946020939093013593505050565b6000806000606084860312156115cf57600080fd5b6115d884611574565b92506115e660208501611574565b9150604084013590509250925092565b60006020828403121561160857600080fd5b61082482611574565b6000806040838503121561162457600080fd5b61162d83611574565b91506020830135801515811461164257600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b6000806000806080858703121561167957600080fd5b61168285611574565b935061169060208601611574565b925060408501359150606085013567ffffffffffffffff808211156116b457600080fd5b818701915087601f8301126116c857600080fd5b8135818111156116da576116da61164d565b604051601f8201601f19908116603f011681019083821181831017156117025761170261164d565b816040528281528a602084870101111561171b57600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b6000806040838503121561175257600080fd5b61175b83611574565b915061176960208401611574565b90509250929050565b600181811c9082168061178657607f821691505b6020821081036117a657634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252602d908201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560408201526c1c881bdc88185c1c1c9bdd9959609a1b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b600083516118218184602088016114f8565b8351908301906118358183602088016114f8565b01949350505050565b60208082526025908201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060408201526437bbb732b960d91b606082015260800190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906119089083018461151c565b9695505050505050565b60006020828403121561192457600080fd5b8151610824816114c5565b818103818111156102f957634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603160045260246000fdfe68747470733a2f2f6170692e6e706f696e742e696f2f3237356438326562303736303634636437316530a264697066735822122094da7ceb18d67c78611337fb3c84db95ac5e9c9d6f38bf936b73f5543a1dfd3f64736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x12C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x266 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x279 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x28C JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x29F JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x21F JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x232 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x245 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x24D JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x25E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1C0 JUMPI DUP1 PUSH4 0x2F745C59 EQ PUSH2 0x1D3 JUMPI DUP1 PUSH4 0x40D097C3 EQ PUSH2 0x1E6 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x1F9 JUMPI DUP1 PUSH4 0x4F6CCCE7 EQ PUSH2 0x20C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x159 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x16E JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x199 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1AE JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x144 PUSH2 0x13F CALLDATASIZE PUSH1 0x4 PUSH2 0x14DB JUMP JUMPDEST PUSH2 0x2EE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x161 PUSH2 0x2FF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x150 SWAP2 SWAP1 PUSH2 0x1548 JUMP JUMPDEST PUSH2 0x181 PUSH2 0x17C CALLDATASIZE PUSH1 0x4 PUSH2 0x155B JUMP JUMPDEST PUSH2 0x391 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x150 JUMP JUMPDEST PUSH2 0x1AC PUSH2 0x1A7 CALLDATASIZE PUSH1 0x4 PUSH2 0x1590 JUMP JUMPDEST PUSH2 0x3B8 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x8 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x150 JUMP JUMPDEST PUSH2 0x1AC PUSH2 0x1CE CALLDATASIZE PUSH1 0x4 PUSH2 0x15BA JUMP JUMPDEST PUSH2 0x4D2 JUMP JUMPDEST PUSH2 0x1B2 PUSH2 0x1E1 CALLDATASIZE PUSH1 0x4 PUSH2 0x1590 JUMP JUMPDEST PUSH2 0x503 JUMP JUMPDEST PUSH2 0x1AC PUSH2 0x1F4 CALLDATASIZE PUSH1 0x4 PUSH2 0x15F6 JUMP JUMPDEST PUSH2 0x599 JUMP JUMPDEST PUSH2 0x1AC PUSH2 0x207 CALLDATASIZE PUSH1 0x4 PUSH2 0x15BA JUMP JUMPDEST PUSH2 0x5CA JUMP JUMPDEST PUSH2 0x1B2 PUSH2 0x21A CALLDATASIZE PUSH1 0x4 PUSH2 0x155B JUMP JUMPDEST PUSH2 0x5E5 JUMP JUMPDEST PUSH2 0x181 PUSH2 0x22D CALLDATASIZE PUSH1 0x4 PUSH2 0x155B JUMP JUMPDEST PUSH2 0x678 JUMP JUMPDEST PUSH2 0x1B2 PUSH2 0x240 CALLDATASIZE PUSH1 0x4 PUSH2 0x15F6 JUMP JUMPDEST PUSH2 0x6D8 JUMP JUMPDEST PUSH2 0x1AC PUSH2 0x75E JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x181 JUMP JUMPDEST PUSH2 0x161 PUSH2 0x772 JUMP JUMPDEST PUSH2 0x1AC PUSH2 0x274 CALLDATASIZE PUSH1 0x4 PUSH2 0x1611 JUMP JUMPDEST PUSH2 0x781 JUMP JUMPDEST PUSH2 0x1AC PUSH2 0x287 CALLDATASIZE PUSH1 0x4 PUSH2 0x1663 JUMP JUMPDEST PUSH2 0x78C JUMP JUMPDEST PUSH2 0x161 PUSH2 0x29A CALLDATASIZE PUSH1 0x4 PUSH2 0x155B JUMP JUMPDEST PUSH2 0x7C4 JUMP JUMPDEST PUSH2 0x144 PUSH2 0x2AD CALLDATASIZE PUSH1 0x4 PUSH2 0x173F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x1AC PUSH2 0x2E9 CALLDATASIZE PUSH1 0x4 PUSH2 0x15F6 JUMP JUMPDEST PUSH2 0x82B JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F9 DUP3 PUSH2 0x8A4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x30E SWAP1 PUSH2 0x1772 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x33A SWAP1 PUSH2 0x1772 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x387 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x35C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x387 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x36A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x39C DUP3 PUSH2 0x8C9 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3C3 DUP3 PUSH2 0x678 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x435 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ DUP1 PUSH2 0x451 JUMPI POP PUSH2 0x451 DUP2 CALLER PUSH2 0x2AD JUMP JUMPDEST PUSH2 0x4C3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F7420746F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6B656E206F776E6572206F7220617070726F76656420666F7220616C6C000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x42C JUMP JUMPDEST PUSH2 0x4CD DUP4 DUP4 PUSH2 0x928 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x4DC CALLER DUP3 PUSH2 0x996 JUMP JUMPDEST PUSH2 0x4F8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x42C SWAP1 PUSH2 0x17AC JUMP JUMPDEST PUSH2 0x4CD DUP4 DUP4 DUP4 PUSH2 0xA15 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x50E DUP4 PUSH2 0x6D8 JUMP JUMPDEST DUP3 LT PUSH2 0x570 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243373231456E756D657261626C653A206F776E657220696E646578206F75 PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x74206F6620626F756E6473 PUSH1 0xA8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x42C JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x5A1 PUSH2 0xB86 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5AC PUSH1 0xB SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP PUSH2 0x5BC PUSH1 0xB DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x5C6 DUP3 DUP3 PUSH2 0xBE0 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x4CD DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x78C JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5F0 PUSH1 0x8 SLOAD SWAP1 JUMP JUMPDEST DUP3 LT PUSH2 0x653 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243373231456E756D657261626C653A20676C6F62616C20696E646578206F PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x7574206F6620626F756E6473 PUSH1 0xA0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x42C JUMP JUMPDEST PUSH1 0x8 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x666 JUMPI PUSH2 0x666 PUSH2 0x17F9 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x2F9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x115490CDCC8C4E881A5B9D985B1A59081D1BDAD95B881251 PUSH1 0x42 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x42C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x742 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A2061646472657373207A65726F206973206E6F742061207661 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x3634B21037BBB732B9 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x42C JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x766 PUSH2 0xB86 JUMP JUMPDEST PUSH2 0x770 PUSH1 0x0 PUSH2 0xBFA JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x30E SWAP1 PUSH2 0x1772 JUMP JUMPDEST PUSH2 0x5C6 CALLER DUP4 DUP4 PUSH2 0xC4C JUMP JUMPDEST PUSH2 0x796 CALLER DUP4 PUSH2 0x996 JUMP JUMPDEST PUSH2 0x7B2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x42C SWAP1 PUSH2 0x17AC JUMP JUMPDEST PUSH2 0x7BE DUP5 DUP5 DUP5 DUP5 PUSH2 0xD1A JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x7CF DUP3 PUSH2 0x8C9 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7D9 PUSH2 0xD4D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x7F9 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x824 JUMP JUMPDEST DUP1 PUSH2 0x803 DUP5 PUSH2 0xD6D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x814 SWAP3 SWAP2 SWAP1 PUSH2 0x180F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x833 PUSH2 0xB86 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x898 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x42C JUMP JUMPDEST PUSH2 0x8A1 DUP2 PUSH2 0xBFA JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x780E9D63 PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x2F9 JUMPI POP PUSH2 0x2F9 DUP3 PUSH2 0xE00 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x8A1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x115490CDCC8C4E881A5B9D985B1A59081D1BDAD95B881251 PUSH1 0x42 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x42C JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH2 0x95D DUP3 PUSH2 0x678 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x9A2 DUP4 PUSH2 0x678 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x9E9 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP9 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST DUP1 PUSH2 0xA0D JUMPI POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xA02 DUP5 PUSH2 0x391 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xA28 DUP3 PUSH2 0x678 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xA4E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x42C SWAP1 PUSH2 0x183E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xAB0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x42C JUMP JUMPDEST PUSH2 0xABD DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xE50 JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xAD0 DUP3 PUSH2 0x678 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xAF6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x42C SWAP1 PUSH2 0x183E JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND SWAP1 SWAP2 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND DUP1 DUP7 MSTORE PUSH1 0x3 DUP6 MSTORE DUP4 DUP7 KECCAK256 DUP1 SLOAD PUSH1 0x0 NOT ADD SWAP1 SSTORE SWAP1 DUP8 AND DUP1 DUP7 MSTORE DUP4 DUP7 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE DUP7 DUP7 MSTORE PUSH1 0x2 SWAP1 SWAP5 MSTORE DUP3 DUP6 KECCAK256 DUP1 SLOAD SWAP1 SWAP3 AND DUP5 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD DUP5 SWAP4 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG4 POP POP POP JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x770 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x42C JUMP JUMPDEST PUSH2 0x5C6 DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xE5C JUMP JUMPDEST PUSH1 0xA DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0xCAD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x42C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0xD25 DUP5 DUP5 DUP5 PUSH2 0xA15 JUMP JUMPDEST PUSH2 0xD31 DUP5 DUP5 DUP5 DUP5 PUSH2 0xE8F JUMP JUMPDEST PUSH2 0x7BE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x42C SWAP1 PUSH2 0x1883 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1967 PUSH1 0x2A SWAP2 CODECOPY SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0xD7A DUP4 PUSH2 0xF90 JUMP JUMPDEST PUSH1 0x1 ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xD9A JUMPI PUSH2 0xD9A PUSH2 0x164D JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xDC4 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 ADD PUSH1 0x20 ADD JUMPDEST PUSH1 0x0 NOT ADD PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DIV SWAP5 POP DUP5 PUSH2 0xDCE JUMPI POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x80AC58CD PUSH1 0xE0 SHL EQ DUP1 PUSH2 0xE31 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5B5E139F PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x2F9 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ PUSH2 0x2F9 JUMP JUMPDEST PUSH2 0x7BE DUP5 DUP5 DUP5 DUP5 PUSH2 0x1068 JUMP JUMPDEST PUSH2 0xE66 DUP4 DUP4 PUSH2 0x119C JUMP JUMPDEST PUSH2 0xE73 PUSH1 0x0 DUP5 DUP5 DUP5 PUSH2 0xE8F JUMP JUMPDEST PUSH2 0x4CD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x42C SWAP1 PUSH2 0x1883 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0xF85 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0xED3 SWAP1 CALLER SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x18D5 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xF0E JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xF0B SWAP2 DUP2 ADD SWAP1 PUSH2 0x1912 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xF6B JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0xF3C JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xF41 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0xF63 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x42C SWAP1 PUSH2 0x1883 JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ SWAP1 POP PUSH2 0xA0D JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 LT PUSH2 0xFCF JUMPI PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 DIV SWAP3 POP PUSH1 0x40 ADD JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0xFFB JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DIV SWAP3 POP PUSH1 0x20 ADD JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x1019 JUMPI PUSH7 0x2386F26FC10000 DUP4 DIV SWAP3 POP PUSH1 0x10 ADD JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x1031 JUMPI PUSH4 0x5F5E100 DUP4 DIV SWAP3 POP PUSH1 0x8 ADD JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x1045 JUMPI PUSH2 0x2710 DUP4 DIV SWAP3 POP PUSH1 0x4 ADD JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x1057 JUMPI PUSH1 0x64 DUP4 DIV SWAP3 POP PUSH1 0x2 ADD JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x2F9 JUMPI PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x10D7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x35 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243373231456E756D657261626C653A20636F6E7365637574697665207472 PUSH1 0x44 DUP3 ADD MSTORE PUSH21 0x185B9CD9995C9CC81B9BDD081CDD5C1C1BDC9D1959 PUSH1 0x5A SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x42C JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0x1133 JUMPI PUSH2 0x112E DUP2 PUSH1 0x8 DUP1 SLOAD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP3 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD DUP4 SSTORE SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xF3F7A9FE364FAAB93B216DA50A3214154F22A0A2B415B23A84C8169E8B636EE3 ADD SSTORE JUMP JUMPDEST PUSH2 0x1156 JUMP JUMPDEST DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x1156 JUMPI PUSH2 0x1156 DUP6 DUP3 PUSH2 0x1335 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x1172 JUMPI PUSH2 0x116D DUP2 PUSH2 0x13D2 JUMP JUMPDEST PUSH2 0x1195 JUMP JUMPDEST DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x1195 JUMPI PUSH2 0x1195 DUP5 DUP3 PUSH2 0x1481 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x11F2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206D696E7420746F20746865207A65726F2061646472657373 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x42C JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x1257 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20746F6B656E20616C7265616479206D696E74656400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x42C JUMP JUMPDEST PUSH2 0x1265 PUSH1 0x0 DUP4 DUP4 PUSH1 0x1 PUSH2 0xE50 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x12CA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20746F6B656E20616C7265616479206D696E74656400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x42C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE DUP5 DUP4 MSTORE PUSH1 0x2 SWAP1 SWAP2 MSTORE DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP5 OR SWAP1 SSTORE MLOAD DUP4 SWAP3 SWAP2 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 DUP3 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH2 0x1342 DUP5 PUSH2 0x6D8 JUMP JUMPDEST PUSH2 0x134C SWAP2 SWAP1 PUSH2 0x192F JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP1 DUP3 EQ PUSH2 0x139F JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 SLOAD DUP5 DUP5 MSTORE DUP2 DUP5 KECCAK256 DUP2 SWAP1 SSTORE DUP4 MSTORE PUSH1 0x7 SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP2 SWAP1 SSTORE JUMPDEST POP PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP5 SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP5 AND DUP4 MSTORE PUSH1 0x6 DUP2 MSTORE DUP4 DUP4 KECCAK256 SWAP2 DUP4 MSTORE MSTORE SWAP1 DUP2 KECCAK256 SSTORE JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x0 SWAP1 PUSH2 0x13E4 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x192F JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x8 DUP1 SLOAD SWAP4 SWAP5 POP SWAP1 SWAP3 DUP5 SWAP1 DUP2 LT PUSH2 0x140C JUMPI PUSH2 0x140C PUSH2 0x17F9 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 PUSH1 0x8 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x142D JUMPI PUSH2 0x142D PUSH2 0x17F9 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SWAP3 SWAP1 SWAP3 SSTORE DUP3 DUP2 MSTORE PUSH1 0x9 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP5 SWAP1 SSTORE DUP6 DUP3 MSTORE DUP2 KECCAK256 SSTORE PUSH1 0x8 DUP1 SLOAD DUP1 PUSH2 0x1465 JUMPI PUSH2 0x1465 PUSH2 0x1950 JUMP JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x148C DUP4 PUSH2 0x6D8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP7 DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP6 SWAP1 SSTORE SWAP4 DUP3 MSTORE PUSH1 0x7 SWAP1 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x8A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x824 DUP2 PUSH2 0x14C5 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1513 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x14FB JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x1534 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x14F8 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x824 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x151C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x156D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x158B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x15A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x15AC DUP4 PUSH2 0x1574 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x15CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x15D8 DUP5 PUSH2 0x1574 JUMP JUMPDEST SWAP3 POP PUSH2 0x15E6 PUSH1 0x20 DUP6 ADD PUSH2 0x1574 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1608 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x824 DUP3 PUSH2 0x1574 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1624 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x162D DUP4 PUSH2 0x1574 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1642 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1679 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1682 DUP6 PUSH2 0x1574 JUMP JUMPDEST SWAP4 POP PUSH2 0x1690 PUSH1 0x20 DUP7 ADD PUSH2 0x1574 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x16B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x16C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x16DA JUMPI PUSH2 0x16DA PUSH2 0x164D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x1702 JUMPI PUSH2 0x1702 PUSH2 0x164D JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP11 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x171B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1752 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x175B DUP4 PUSH2 0x1574 JUMP JUMPDEST SWAP2 POP PUSH2 0x1769 PUSH1 0x20 DUP5 ADD PUSH2 0x1574 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1786 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x17A6 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2D SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65 PUSH1 0x40 DUP3 ADD MSTORE PUSH13 0x1C881BDC88185C1C1C9BDD9959 PUSH1 0x9A SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH2 0x1821 DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0x14F8 JUMP JUMPDEST DUP4 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0x1835 DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0x14F8 JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x37BBB732B9 PUSH1 0xD9 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x32 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x40 DUP3 ADD MSTORE PUSH18 0x31B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x71 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x1908 SWAP1 DUP4 ADD DUP5 PUSH2 0x151C JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1924 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x824 DUP2 PUSH2 0x14C5 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x2F9 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID PUSH9 0x747470733A2F2F6170 PUSH10 0x2E6E706F696E742E696F 0x2F ORIGIN CALLDATACOPY CALLDATALOAD PUSH5 0x3832656230 CALLDATACOPY CALLDATASIZE ADDRESS CALLDATASIZE CALLVALUE PUSH4 0x64373165 ADDRESS LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP5 0xDA PUSH29 0xEB18D67C78611337FB3C84DB95AC5E9C9D6F38BF936B73F5543A1DFD3F PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "62523:1038:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;63354:205;;;;;;:::i;:::-;;:::i;:::-;;;565:14:1;;558:22;540:41;;528:2;513:18;63354:205:0;;;;;;;;40818:98;;;:::i;:::-;;;;;;;:::i;42282:167::-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;1697:32:1;;;1679:51;;1667:2;1652:18;42282:167:0;1533:203:1;41815:406:0;;;;;;:::i;:::-;;:::i;:::-;;57277:111;57364:10;:17;57277:111;;;2324:25:1;;;2312:2;2297:18;57277:111:0;2178:177:1;42959:326:0;;;;;;:::i;:::-;;:::i;56953:253::-;;;;;;:::i;:::-;;:::i;62869:176::-;;;;;;:::i;:::-;;:::i;43351:179::-;;;;;;:::i;:::-;;:::i;57460:230::-;;;;;;:::i;:::-;;:::i;40537:219::-;;;;;;:::i;:::-;;:::i;40276:204::-;;;;;;:::i;:::-;;:::i;18887:101::-;;;:::i;18257:85::-;18329:6;;-1:-1:-1;;;;;18329:6:0;18257:85;;40980:102;;;:::i;42516:153::-;;;;;;:::i;:::-;;:::i;43596:314::-;;;;;;:::i;:::-;;:::i;41148:276::-;;;;;;:::i;:::-;;:::i;42735:162::-;;;;;;:::i;:::-;-1:-1:-1;;;;;42855:25:0;;;42832:4;42855:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;42735:162;19137:198;;;;;;:::i;:::-;;:::i;63354:205::-;63489:4;63516:36;63540:11;63516:23;:36::i;:::-;63509:43;63354:205;-1:-1:-1;;63354:205:0:o;40818:98::-;40872:13;40904:5;40897:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;40818:98;:::o;42282:167::-;42358:7;42377:23;42392:7;42377:14;:23::i;:::-;-1:-1:-1;42418:24:0;;;;:15;:24;;;;;;-1:-1:-1;;;;;42418:24:0;;42282:167::o;41815:406::-;41895:13;41911:23;41926:7;41911:14;:23::i;:::-;41895:39;;41958:5;-1:-1:-1;;;;;41952:11:0;:2;-1:-1:-1;;;;;41952:11:0;;41944:57;;;;-1:-1:-1;;;41944:57:0;;5363:2:1;41944:57:0;;;5345:21:1;5402:2;5382:18;;;5375:30;5441:34;5421:18;;;5414:62;-1:-1:-1;;;5492:18:1;;;5485:31;5533:19;;41944:57:0;;;;;;;;;16939:10;-1:-1:-1;;;;;42033:21:0;;;;:62;;-1:-1:-1;42058:37:0;42075:5;16939:10;42735:162;:::i;42058:37::-;42012:170;;;;-1:-1:-1;;;42012:170:0;;5765:2:1;42012:170:0;;;5747:21:1;5804:2;5784:18;;;5777:30;5843:34;5823:18;;;5816:62;5914:31;5894:18;;;5887:59;5963:19;;42012:170:0;5563:425:1;42012:170:0;42193:21;42202:2;42206:7;42193:8;:21::i;:::-;41885:336;41815:406;;:::o;42959:326::-;43148:41;16939:10;43181:7;43148:18;:41::i;:::-;43140:99;;;;-1:-1:-1;;;43140:99:0;;;;;;;:::i;:::-;43250:28;43260:4;43266:2;43270:7;43250:9;:28::i;56953:253::-;57050:7;57085:23;57102:5;57085:16;:23::i;:::-;57077:5;:31;57069:87;;;;-1:-1:-1;;;57069:87:0;;6609:2:1;57069:87:0;;;6591:21:1;6648:2;6628:18;;;6621:30;6687:34;6667:18;;;6660:62;-1:-1:-1;;;6738:18:1;;;6731:41;6789:19;;57069:87:0;6407:407:1;57069:87:0;-1:-1:-1;;;;;;57173:19:0;;;;;;;;:12;:19;;;;;;;;:26;;;;;;;;;56953:253::o;62869:176::-;18150:13;:11;:13::i;:::-;62926:15:::1;62944:25;:15;941:14:::0;;850:112;62944:25:::1;62926:43;;62979:27;:15;1055:19:::0;;1073:1;1055:19;;;968:123;62979:27:::1;63016:22;63026:2;63030:7;63016:9;:22::i;:::-;62916:129;62869:176:::0;:::o;43351:179::-;43484:39;43501:4;43507:2;43511:7;43484:39;;;;;;;;;;;;:16;:39::i;57460:230::-;57535:7;57570:30;57364:10;:17;;57277:111;57570:30;57562:5;:38;57554:95;;;;-1:-1:-1;;;57554:95:0;;7021:2:1;57554:95:0;;;7003:21:1;7060:2;7040:18;;;7033:30;7099:34;7079:18;;;7072:62;-1:-1:-1;;;7150:18:1;;;7143:42;7202:19;;57554:95:0;6819:408:1;57554:95:0;57666:10;57677:5;57666:17;;;;;;;;:::i;:::-;;;;;;;;;57659:24;;57460:230;;;:::o;40537:219::-;40609:7;45277:16;;;:7;:16;;;;;;-1:-1:-1;;;;;45277:16:0;;40671:56;;;;-1:-1:-1;;;40671:56:0;;7566:2:1;40671:56:0;;;7548:21:1;7605:2;7585:18;;;7578:30;-1:-1:-1;;;7624:18:1;;;7617:54;7688:18;;40671:56:0;7364:348:1;40276:204:0;40348:7;-1:-1:-1;;;;;40375:19:0;;40367:73;;;;-1:-1:-1;;;40367:73:0;;7919:2:1;40367:73:0;;;7901:21:1;7958:2;7938:18;;;7931:30;7997:34;7977:18;;;7970:62;-1:-1:-1;;;8048:18:1;;;8041:39;8097:19;;40367:73:0;7717:405:1;40367:73:0;-1:-1:-1;;;;;;40457:16:0;;;;;:9;:16;;;;;;;40276:204::o;18887:101::-;18150:13;:11;:13::i;:::-;18951:30:::1;18978:1;18951:18;:30::i;:::-;18887:101::o:0;40980:102::-;41036:13;41068:7;41061:14;;;;;:::i;42516:153::-;42610:52;16939:10;42643:8;42653;42610:18;:52::i;43596:314::-;43764:41;16939:10;43797:7;43764:18;:41::i;:::-;43756:99;;;;-1:-1:-1;;;43756:99:0;;;;;;;:::i;:::-;43865:38;43879:4;43885:2;43889:7;43898:4;43865:13;:38::i;:::-;43596:314;;;;:::o;41148:276::-;41221:13;41246:23;41261:7;41246:14;:23::i;:::-;41280:21;41304:10;:8;:10::i;:::-;41280:34;;41355:1;41337:7;41331:21;:25;:86;;;;;;;;;;;;;;;;;41383:7;41392:18;:7;:16;:18::i;:::-;41366:45;;;;;;;;;:::i;:::-;;;;;;;;;;;;;41331:86;41324:93;41148:276;-1:-1:-1;;;41148:276:0:o;19137:198::-;18150:13;:11;:13::i;:::-;-1:-1:-1;;;;;19225:22:0;::::1;19217:73;;;::::0;-1:-1:-1;;;19217:73:0;;8830:2:1;19217:73:0::1;::::0;::::1;8812:21:1::0;8869:2;8849:18;;;8842:30;8908:34;8888:18;;;8881:62;-1:-1:-1;;;8959:18:1;;;8952:36;9005:19;;19217:73:0::1;8628:402:1::0;19217:73:0::1;19300:28;19319:8;19300:18;:28::i;:::-;19137:198:::0;:::o;56652:222::-;56754:4;-1:-1:-1;;;;;;56777:50:0;;-1:-1:-1;;;56777:50:0;;:90;;;56831:36;56855:11;56831:23;:36::i;51813:133::-;45668:4;45277:16;;;:7;:16;;;;;;-1:-1:-1;;;;;45277:16:0;51886:53;;;;-1:-1:-1;;;51886:53:0;;7566:2:1;51886:53:0;;;7548:21:1;7605:2;7585:18;;;7578:30;-1:-1:-1;;;7624:18:1;;;7617:54;7688:18;;51886:53:0;7364:348:1;51115:171:0;51189:24;;;;:15;:24;;;;;:29;;-1:-1:-1;;;;;;51189:29:0;-1:-1:-1;;;;;51189:29:0;;;;;;;;:24;;51242:23;51189:24;51242:14;:23::i;:::-;-1:-1:-1;;;;;51233:46:0;;;;;;;;;;;51115:171;;:::o;45887:261::-;45980:4;45996:13;46012:23;46027:7;46012:14;:23::i;:::-;45996:39;;46064:5;-1:-1:-1;;;;;46053:16:0;:7;-1:-1:-1;;;;;46053:16:0;;:52;;;-1:-1:-1;;;;;;42855:25:0;;;42832:4;42855:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;46073:32;46053:87;;;;46133:7;-1:-1:-1;;;;;46109:31:0;:20;46121:7;46109:11;:20::i;:::-;-1:-1:-1;;;;;46109:31:0;;46053:87;46045:96;45887:261;-1:-1:-1;;;;45887:261:0:o;49770:1233::-;49924:4;-1:-1:-1;;;;;49897:31:0;:23;49912:7;49897:14;:23::i;:::-;-1:-1:-1;;;;;49897:31:0;;49889:81;;;;-1:-1:-1;;;49889:81:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;49988:16:0;;49980:65;;;;-1:-1:-1;;;49980:65:0;;9643:2:1;49980:65:0;;;9625:21:1;9682:2;9662:18;;;9655:30;9721:34;9701:18;;;9694:62;-1:-1:-1;;;9772:18:1;;;9765:34;9816:19;;49980:65:0;9441:400:1;49980:65:0;50056:42;50077:4;50083:2;50087:7;50096:1;50056:20;:42::i;:::-;50225:4;-1:-1:-1;;;;;50198:31:0;:23;50213:7;50198:14;:23::i;:::-;-1:-1:-1;;;;;50198:31:0;;50190:81;;;;-1:-1:-1;;;50190:81:0;;;;;;;:::i;:::-;50340:24;;;;:15;:24;;;;;;;;50333:31;;-1:-1:-1;;;;;;50333:31:0;;;;;;-1:-1:-1;;;;;50808:15:0;;;;;;:9;:15;;;;;:20;;-1:-1:-1;;50808:20:0;;;50842:13;;;;;;;;;:18;;50333:31;50842:18;;;50880:16;;;:7;:16;;;;;;:21;;;;;;;;;;50917:27;;50356:7;;50917:27;;;41885:336;41815:406;;:::o;18415:130::-;18329:6;;-1:-1:-1;;;;;18329:6:0;16939:10;18478:23;18470:68;;;;-1:-1:-1;;;18470:68:0;;10048:2:1;18470:68:0;;;10030:21:1;;;10067:18;;;10060:30;10126:34;10106:18;;;10099:62;10178:18;;18470:68:0;9846:356:1;46478:108:0;46553:26;46563:2;46567:7;46553:26;;;;;;;;;;;;:9;:26::i;19489:187::-;19581:6;;;-1:-1:-1;;;;;19597:17:0;;;-1:-1:-1;;;;;;19597:17:0;;;;;;;19629:40;;19581:6;;;19597:17;19581:6;;19629:40;;19562:16;;19629:40;19552:124;19489:187;:::o;51422:307::-;51572:8;-1:-1:-1;;;;;51563:17:0;:5;-1:-1:-1;;;;;51563:17:0;;51555:55;;;;-1:-1:-1;;;51555:55:0;;10409:2:1;51555:55:0;;;10391:21:1;10448:2;10428:18;;;10421:30;10487:27;10467:18;;;10460:55;10532:18;;51555:55:0;10207:349:1;51555:55:0;-1:-1:-1;;;;;51620:25:0;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;:46;;-1:-1:-1;;51620:46:0;;;;;;;;;;51681:41;;540::1;;;51681::0;;513:18:1;51681:41:0;;;;;;;51422:307;;;:::o;44771:305::-;44921:28;44931:4;44937:2;44941:7;44921:9;:28::i;:::-;44967:47;44990:4;44996:2;45000:7;45009:4;44967:22;:47::i;:::-;44959:110;;;;-1:-1:-1;;;44959:110:0;;;;;;;:::i;62728:135::-;62780:13;62805:51;;;;;;;;;;;;;;;;;;;62728:135;:::o;14359:696::-;14415:13;14464:14;14481:17;14492:5;14481:10;:17::i;:::-;14501:1;14481:21;14464:38;;14516:20;14550:6;14539:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;14539:18:0;-1:-1:-1;14516:41:0;-1:-1:-1;14677:28:0;;;14693:2;14677:28;14732:280;-1:-1:-1;;14763:5:0;-1:-1:-1;;;14897:2:0;14886:14;;14881:30;14763:5;14868:44;14956:2;14947:11;;;-1:-1:-1;14976:21:0;14732:280;14976:21;-1:-1:-1;15032:6:0;14359:696;-1:-1:-1;;;14359:696:0:o;39917:300::-;40019:4;-1:-1:-1;;;;;;40054:40:0;;-1:-1:-1;;;40054:40:0;;:104;;-1:-1:-1;;;;;;;40110:48:0;;-1:-1:-1;;;40110:48:0;40054:104;:156;;;-1:-1:-1;;;;;;;;;;31721:40:0;;;40174:36;31613:155;63119:229;63285:56;63312:4;63318:2;63322:7;63331:9;63285:26;:56::i;46807:309::-;46931:18;46937:2;46941:7;46931:5;:18::i;:::-;46980:53;47011:1;47015:2;47019:7;47028:4;46980:22;:53::i;:::-;46959:150;;;;-1:-1:-1;;;46959:150:0;;;;;;;:::i;52498:831::-;52647:4;-1:-1:-1;;;;;52667:13:0;;21166:19;:23;52663:660;;52702:71;;-1:-1:-1;;;52702:71:0;;-1:-1:-1;;;;;52702:36:0;;;;;:71;;16939:10;;52753:4;;52759:7;;52768:4;;52702:71;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;52702:71:0;;;;;;;;-1:-1:-1;;52702:71:0;;;;;;;;;;;;:::i;:::-;;;52698:573;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;52940:6;:13;52957:1;52940:18;52936:321;;52982:60;;-1:-1:-1;;;52982:60:0;;;;;;;:::i;52936:321::-;53209:6;53203:13;53194:6;53190:2;53186:15;53179:38;52698:573;-1:-1:-1;;;;;;52823:51:0;-1:-1:-1;;;52823:51:0;;-1:-1:-1;52816:58:0;;52663:660;-1:-1:-1;53308:4:0;52498:831;;;;;;:::o;11332:890::-;11385:7;;-1:-1:-1;;;11460:15:0;;11456:99;;-1:-1:-1;;;11495:15:0;;;-1:-1:-1;11538:2:0;11528:12;11456:99;11581:6;11572:5;:15;11568:99;;11616:6;11607:15;;;-1:-1:-1;11650:2:0;11640:12;11568:99;11693:6;11684:5;:15;11680:99;;11728:6;11719:15;;;-1:-1:-1;11762:2:0;11752:12;11680:99;11805:5;11796;:14;11792:96;;11839:5;11830:14;;;-1:-1:-1;11872:1:0;11862:11;11792:96;11914:5;11905;:14;11901:96;;11948:5;11939:14;;;-1:-1:-1;11981:1:0;11971:11;11901:96;12023:5;12014;:14;12010:96;;12057:5;12048:14;;;-1:-1:-1;12090:1:0;12080:11;12010:96;12132:5;12123;:14;12119:64;;12167:1;12157:11;12209:6;11332:890;-1:-1:-1;;11332:890:0:o;57759:::-;58018:1;58006:9;:13;58002:219;;;58147:63;;-1:-1:-1;;;58147:63:0;;12062:2:1;58147:63:0;;;12044:21:1;12101:2;12081:18;;;12074:30;12140:34;12120:18;;;12113:62;-1:-1:-1;;;12191:18:1;;;12184:51;12252:19;;58147:63:0;11860:417:1;58002:219:0;58249:12;-1:-1:-1;;;;;58276:18:0;;58272:183;;58310:40;58342:7;59458:10;:17;;59431:24;;;;:15;:24;;;;;:44;;;59485:24;;;;;;;;;;;;59355:161;58310:40;58272:183;;;58379:2;-1:-1:-1;;;;;58371:10:0;:4;-1:-1:-1;;;;;58371:10:0;;58367:88;;58397:47;58430:4;58436:7;58397:32;:47::i;:::-;-1:-1:-1;;;;;58468:16:0;;58464:179;;58500:45;58537:7;58500:36;:45::i;:::-;58464:179;;;58572:4;-1:-1:-1;;;;;58566:10:0;:2;-1:-1:-1;;;;;58566:10:0;;58562:81;;58592:40;58620:2;58624:7;58592:27;:40::i;:::-;57920:729;57759:890;;;;:::o;47438:920::-;-1:-1:-1;;;;;47517:16:0;;47509:61;;;;-1:-1:-1;;;47509:61:0;;12484:2:1;47509:61:0;;;12466:21:1;;;12503:18;;;12496:30;12562:34;12542:18;;;12535:62;12614:18;;47509:61:0;12282:356:1;47509:61:0;45668:4;45277:16;;;:7;:16;;;;;;-1:-1:-1;;;;;45277:16:0;45691:31;47580:58;;;;-1:-1:-1;;;47580:58:0;;12845:2:1;47580:58:0;;;12827:21:1;12884:2;12864:18;;;12857:30;12923;12903:18;;;12896:58;12971:18;;47580:58:0;12643:352:1;47580:58:0;47649:48;47678:1;47682:2;47686:7;47695:1;47649:20;:48::i;:::-;45668:4;45277:16;;;:7;:16;;;;;;-1:-1:-1;;;;;45277:16:0;45691:31;47784:58;;;;-1:-1:-1;;;47784:58:0;;12845:2:1;47784:58:0;;;12827:21:1;12884:2;12864:18;;;12857:30;12923;12903:18;;;12896:58;12971:18;;47784:58:0;12643:352:1;47784:58:0;-1:-1:-1;;;;;48184:13:0;;;;;;:9;:13;;;;;;;;:18;;48201:1;48184:18;;;48223:16;;;:7;:16;;;;;;:21;;-1:-1:-1;;;;;;48223:21:0;;;;;48260:33;48231:7;;48184:13;;48260:33;;48184:13;;48260:33;62916:129:::1;62869:176:::0;:::o;60133:970::-;60395:22;60445:1;60420:22;60437:4;60420:16;:22::i;:::-;:26;;;;:::i;:::-;60456:18;60477:26;;;:17;:26;;;;;;60395:51;;-1:-1:-1;60607:28:0;;;60603:323;;-1:-1:-1;;;;;60673:18:0;;60651:19;60673:18;;;:12;:18;;;;;;;;:34;;;;;;;;;60722:30;;;;;;:44;;;60838:30;;:17;:30;;;;;:43;;;60603:323;-1:-1:-1;61019:26:0;;;;:17;:26;;;;;;;;61012:33;;;-1:-1:-1;;;;;61062:18:0;;;;;:12;:18;;;;;:34;;;;;;;61055:41;60133:970::o;61391:1061::-;61665:10;:17;61640:22;;61665:21;;61685:1;;61665:21;:::i;:::-;61696:18;61717:24;;;:15;:24;;;;;;62085:10;:26;;61640:46;;-1:-1:-1;61717:24:0;;61640:46;;62085:26;;;;;;:::i;:::-;;;;;;;;;62063:48;;62147:11;62122:10;62133;62122:22;;;;;;;;:::i;:::-;;;;;;;;;;;;:36;;;;62226:28;;;:15;:28;;;;;;;:41;;;62395:24;;;;;62388:31;62429:10;:16;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;61462:990;;;61391:1061;:::o;58943:217::-;59027:14;59044:20;59061:2;59044:16;:20::i;:::-;-1:-1:-1;;;;;59074:16:0;;;;;;;:12;:16;;;;;;;;:24;;;;;;;;:34;;;59118:26;;;:17;:26;;;;;;:35;;;;-1:-1:-1;58943:217:0:o;14:131:1:-;-1:-1:-1;;;;;;88:32:1;;78:43;;68:71;;135:1;132;125:12;150:245;208:6;261:2;249:9;240:7;236:23;232:32;229:52;;;277:1;274;267:12;229:52;316:9;303:23;335:30;359:5;335:30;:::i;592:250::-;677:1;687:113;701:6;698:1;695:13;687:113;;;777:11;;;771:18;758:11;;;751:39;723:2;716:10;687:113;;;-1:-1:-1;;834:1:1;816:16;;809:27;592:250::o;847:271::-;889:3;927:5;921:12;954:6;949:3;942:19;970:76;1039:6;1032:4;1027:3;1023:14;1016:4;1009:5;1005:16;970:76;:::i;:::-;1100:2;1079:15;-1:-1:-1;;1075:29:1;1066:39;;;;1107:4;1062:50;;847:271;-1:-1:-1;;847:271:1:o;1123:220::-;1272:2;1261:9;1254:21;1235:4;1292:45;1333:2;1322:9;1318:18;1310:6;1292:45;:::i;1348:180::-;1407:6;1460:2;1448:9;1439:7;1435:23;1431:32;1428:52;;;1476:1;1473;1466:12;1428:52;-1:-1:-1;1499:23:1;;1348:180;-1:-1:-1;1348:180:1:o;1741:173::-;1809:20;;-1:-1:-1;;;;;1858:31:1;;1848:42;;1838:70;;1904:1;1901;1894:12;1838:70;1741:173;;;:::o;1919:254::-;1987:6;1995;2048:2;2036:9;2027:7;2023:23;2019:32;2016:52;;;2064:1;2061;2054:12;2016:52;2087:29;2106:9;2087:29;:::i;:::-;2077:39;2163:2;2148:18;;;;2135:32;;-1:-1:-1;;;1919:254:1:o;2360:328::-;2437:6;2445;2453;2506:2;2494:9;2485:7;2481:23;2477:32;2474:52;;;2522:1;2519;2512:12;2474:52;2545:29;2564:9;2545:29;:::i;:::-;2535:39;;2593:38;2627:2;2616:9;2612:18;2593:38;:::i;:::-;2583:48;;2678:2;2667:9;2663:18;2650:32;2640:42;;2360:328;;;;;:::o;2693:186::-;2752:6;2805:2;2793:9;2784:7;2780:23;2776:32;2773:52;;;2821:1;2818;2811:12;2773:52;2844:29;2863:9;2844:29;:::i;2884:347::-;2949:6;2957;3010:2;2998:9;2989:7;2985:23;2981:32;2978:52;;;3026:1;3023;3016:12;2978:52;3049:29;3068:9;3049:29;:::i;:::-;3039:39;;3128:2;3117:9;3113:18;3100:32;3175:5;3168:13;3161:21;3154:5;3151:32;3141:60;;3197:1;3194;3187:12;3141:60;3220:5;3210:15;;;2884:347;;;;;:::o;3236:127::-;3297:10;3292:3;3288:20;3285:1;3278:31;3328:4;3325:1;3318:15;3352:4;3349:1;3342:15;3368:1138;3463:6;3471;3479;3487;3540:3;3528:9;3519:7;3515:23;3511:33;3508:53;;;3557:1;3554;3547:12;3508:53;3580:29;3599:9;3580:29;:::i;:::-;3570:39;;3628:38;3662:2;3651:9;3647:18;3628:38;:::i;:::-;3618:48;;3713:2;3702:9;3698:18;3685:32;3675:42;;3768:2;3757:9;3753:18;3740:32;3791:18;3832:2;3824:6;3821:14;3818:34;;;3848:1;3845;3838:12;3818:34;3886:6;3875:9;3871:22;3861:32;;3931:7;3924:4;3920:2;3916:13;3912:27;3902:55;;3953:1;3950;3943:12;3902:55;3989:2;3976:16;4011:2;4007;4004:10;4001:36;;;4017:18;;:::i;:::-;4092:2;4086:9;4060:2;4146:13;;-1:-1:-1;;4142:22:1;;;4166:2;4138:31;4134:40;4122:53;;;4190:18;;;4210:22;;;4187:46;4184:72;;;4236:18;;:::i;:::-;4276:10;4272:2;4265:22;4311:2;4303:6;4296:18;4351:7;4346:2;4341;4337;4333:11;4329:20;4326:33;4323:53;;;4372:1;4369;4362:12;4323:53;4428:2;4423;4419;4415:11;4410:2;4402:6;4398:15;4385:46;4473:1;4468:2;4463;4455:6;4451:15;4447:24;4440:35;4494:6;4484:16;;;;;;;3368:1138;;;;;;;:::o;4511:260::-;4579:6;4587;4640:2;4628:9;4619:7;4615:23;4611:32;4608:52;;;4656:1;4653;4646:12;4608:52;4679:29;4698:9;4679:29;:::i;:::-;4669:39;;4727:38;4761:2;4750:9;4746:18;4727:38;:::i;:::-;4717:48;;4511:260;;;;;:::o;4776:380::-;4855:1;4851:12;;;;4898;;;4919:61;;4973:4;4965:6;4961:17;4951:27;;4919:61;5026:2;5018:6;5015:14;4995:18;4992:38;4989:161;;5072:10;5067:3;5063:20;5060:1;5053:31;5107:4;5104:1;5097:15;5135:4;5132:1;5125:15;4989:161;;4776:380;;;:::o;5993:409::-;6195:2;6177:21;;;6234:2;6214:18;;;6207:30;6273:34;6268:2;6253:18;;6246:62;-1:-1:-1;;;6339:2:1;6324:18;;6317:43;6392:3;6377:19;;5993:409::o;7232:127::-;7293:10;7288:3;7284:20;7281:1;7274:31;7324:4;7321:1;7314:15;7348:4;7345:1;7338:15;8127:496;8306:3;8344:6;8338:13;8360:66;8419:6;8414:3;8407:4;8399:6;8395:17;8360:66;:::i;:::-;8489:13;;8448:16;;;;8511:70;8489:13;8448:16;8558:4;8546:17;;8511:70;:::i;:::-;8597:20;;8127:496;-1:-1:-1;;;;8127:496:1:o;9035:401::-;9237:2;9219:21;;;9276:2;9256:18;;;9249:30;9315:34;9310:2;9295:18;;9288:62;-1:-1:-1;;;9381:2:1;9366:18;;9359:35;9426:3;9411:19;;9035:401::o;10561:414::-;10763:2;10745:21;;;10802:2;10782:18;;;10775:30;10841:34;10836:2;10821:18;;10814:62;-1:-1:-1;;;10907:2:1;10892:18;;10885:48;10965:3;10950:19;;10561:414::o;11112:489::-;-1:-1:-1;;;;;11381:15:1;;;11363:34;;11433:15;;11428:2;11413:18;;11406:43;11480:2;11465:18;;11458:34;;;11528:3;11523:2;11508:18;;11501:31;;;11306:4;;11549:46;;11575:19;;11567:6;11549:46;:::i;:::-;11541:54;11112:489;-1:-1:-1;;;;;;11112:489:1:o;11606:249::-;11675:6;11728:2;11716:9;11707:7;11703:23;11699:32;11696:52;;;11744:1;11741;11734:12;11696:52;11776:9;11770:16;11795:30;11819:5;11795:30;:::i;13000:225::-;13067:9;;;13088:11;;;13085:134;;;13141:10;13136:3;13132:20;13129:1;13122:31;13176:4;13173:1;13166:15;13204:4;13201:1;13194:15;13230:127;13291:10;13286:3;13282:20;13279:1;13272:31;13322:4;13319:1;13312:15;13346:4;13343:1;13336:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1319600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2634",
								"getApproved(uint256)": "4792",
								"isApprovedForAll(address,address)": "infinite",
								"name()": "infinite",
								"owner()": "2420",
								"ownerOf(uint256)": "2561",
								"renounceOwnership()": "infinite",
								"safeMint(address)": "infinite",
								"safeTransferFrom(address,address,uint256)": "infinite",
								"safeTransferFrom(address,address,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "26705",
								"supportsInterface(bytes4)": "infinite",
								"symbol()": "infinite",
								"tokenByIndex(uint256)": "6826",
								"tokenOfOwnerByIndex(address,uint256)": "4975",
								"tokenURI(uint256)": "infinite",
								"totalSupply()": "2393",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "28446"
							},
							"internal": {
								"_baseURI()": "infinite",
								"_beforeTokenTransfer(address,address,uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 62523,
									"end": 63561,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 62523,
									"end": 63561,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 62523,
									"end": 63561,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 62676,
									"end": 62722,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 62676,
									"end": 62722,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 62676,
									"end": 62722,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 62676,
									"end": 62722,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 62676,
									"end": 62722,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 62676,
									"end": 62722,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 62676,
									"end": 62722,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 62676,
									"end": 62722,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 62676,
									"end": 62722,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 62676,
									"end": 62722,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 62676,
									"end": 62722,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 39737,
									"end": 39850,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 39737,
									"end": 39850,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 39737,
									"end": 39850,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 39737,
									"end": 39850,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 39737,
									"end": 39850,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 39737,
									"end": 39850,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 39737,
									"end": 39850,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 39737,
									"end": 39850,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 39737,
									"end": 39850,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 39737,
									"end": 39850,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 39737,
									"end": 39850,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 39737,
									"end": 39850,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 39737,
									"end": 39850,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4172745F47616C6C617279"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 39737,
									"end": 39850,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 39737,
									"end": 39850,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 39737,
									"end": 39850,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 39737,
									"end": 39850,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 39737,
									"end": 39850,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 39737,
									"end": 39850,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 39737,
									"end": 39850,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 39737,
									"end": 39850,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 39737,
									"end": 39850,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 39737,
									"end": 39850,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 39737,
									"end": 39850,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 39737,
									"end": 39850,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 39737,
									"end": 39850,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 39737,
									"end": 39850,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 39737,
									"end": 39850,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 39737,
									"end": 39850,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "41525447"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 39737,
									"end": 39850,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 39737,
									"end": 39850,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 39737,
									"end": 39850,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 39811,
									"end": 39816,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 39803,
									"end": 39808,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 39803,
									"end": 39816,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 39803,
									"end": 39816,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 39803,
									"end": 39816,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 39803,
									"end": 39816,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 39803,
									"end": 39816,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 39803,
									"end": 39816,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 39803,
									"end": 39816,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 39803,
									"end": 39816,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 39803,
									"end": 39816,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 39826,
									"end": 39833,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 39826,
									"end": 39843,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 39836,
									"end": 39843,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 39826,
									"end": 39833,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 39826,
									"end": 39843,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 39826,
									"end": 39843,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 39826,
									"end": 39843,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 39826,
									"end": 39843,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 39826,
									"end": 39843,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 39737,
									"end": 39850,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 39737,
									"end": 39850,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 17992,
									"end": 18024,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 18011,
									"end": 18023,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 18011,
									"end": 18021,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 18011,
									"end": 18021,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 18011,
									"end": 18021,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 18011,
									"end": 18023,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 18011,
									"end": 18023,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 18011,
									"end": 18023,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 18011,
									"end": 18023,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 18011,
									"end": 18023,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 17992,
									"end": 18010,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 17992,
									"end": 18024,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 17992,
									"end": 18024,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 17992,
									"end": 18024,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 62523,
									"end": 63561,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 62523,
									"end": 63561,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 16860,
									"end": 16956,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 16860,
									"end": 16956,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 16939,
									"end": 16949,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 16939,
									"end": 16949,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 16860,
									"end": 16956,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 19489,
									"end": 19676,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 19489,
									"end": 19676,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 19581,
									"end": 19587,
									"name": "PUSH",
									"source": 0,
									"value": "A"
								},
								{
									"begin": 19581,
									"end": 19587,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 19581,
									"end": 19587,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 19597,
									"end": 19614,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 19597,
									"end": 19614,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 19597,
									"end": 19614,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 19597,
									"end": 19614,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 19597,
									"end": 19614,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 19597,
									"end": 19614,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 19597,
									"end": 19614,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 19597,
									"end": 19614,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 19597,
									"end": 19614,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 19597,
									"end": 19614,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 19629,
									"end": 19669,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 19629,
									"end": 19669,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 19581,
									"end": 19587,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 19581,
									"end": 19587,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 19581,
									"end": 19587,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 19597,
									"end": 19614,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 19581,
									"end": 19587,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 19581,
									"end": 19587,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 19629,
									"end": 19669,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 19629,
									"end": 19669,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 19562,
									"end": 19578,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 19562,
									"end": 19578,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 19629,
									"end": 19669,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 19552,
									"end": 19676,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 19489,
									"end": 19676,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 19489,
									"end": 19676,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 141,
									"name": "tag",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 14,
									"end": 141,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 75,
									"end": 85,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B71"
								},
								{
									"begin": 70,
									"end": 73,
									"name": "PUSH",
									"source": 1,
									"value": "E0"
								},
								{
									"begin": 66,
									"end": 86,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 63,
									"end": 64,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 87,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 106,
									"end": 110,
									"name": "PUSH",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 103,
									"end": 104,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 96,
									"end": 111,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 130,
									"end": 134,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 127,
									"end": 128,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 135,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 146,
									"end": 526,
									"name": "tag",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 146,
									"end": 526,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 225,
									"end": 226,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 221,
									"end": 233,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 221,
									"end": 233,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 221,
									"end": 233,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 221,
									"end": 233,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 268,
									"end": 280,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 268,
									"end": 280,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 268,
									"end": 280,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 289,
									"end": 350,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 289,
									"end": 350,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 343,
									"end": 347,
									"name": "PUSH",
									"source": 1,
									"value": "7F"
								},
								{
									"begin": 335,
									"end": 341,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 331,
									"end": 348,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 321,
									"end": 348,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 321,
									"end": 348,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 289,
									"end": 350,
									"name": "tag",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 289,
									"end": 350,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 396,
									"end": 398,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 388,
									"end": 394,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 385,
									"end": 399,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 365,
									"end": 383,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 362,
									"end": 400,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 359,
									"end": 520,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 359,
									"end": 520,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 442,
									"end": 452,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B71"
								},
								{
									"begin": 437,
									"end": 440,
									"name": "PUSH",
									"source": 1,
									"value": "E0"
								},
								{
									"begin": 433,
									"end": 453,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 430,
									"end": 431,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 423,
									"end": 454,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 477,
									"end": 481,
									"name": "PUSH",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 474,
									"end": 475,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 467,
									"end": 482,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 505,
									"end": 509,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 502,
									"end": 503,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 495,
									"end": 510,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 359,
									"end": 520,
									"name": "tag",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 359,
									"end": 520,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 359,
									"end": 520,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 146,
									"end": 526,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 146,
									"end": 526,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 146,
									"end": 526,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 146,
									"end": 526,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 657,
									"end": 1202,
									"name": "tag",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 657,
									"end": 1202,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 759,
									"end": 761,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 754,
									"end": 757,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 751,
									"end": 762,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 748,
									"end": 1196,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 748,
									"end": 1196,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 748,
									"end": 1196,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 795,
									"end": 796,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 820,
									"end": 825,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 816,
									"end": 818,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 809,
									"end": 826,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 865,
									"end": 869,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 861,
									"end": 863,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 851,
									"end": 870,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 935,
									"end": 937,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 923,
									"end": 933,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 919,
									"end": 938,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 916,
									"end": 917,
									"name": "PUSH",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 912,
									"end": 939,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 906,
									"end": 910,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 902,
									"end": 940,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 971,
									"end": 975,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 959,
									"end": 969,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 956,
									"end": 976,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 953,
									"end": 1000,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 953,
									"end": 1000,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 953,
									"end": 1000,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 994,
									"end": 998,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 953,
									"end": 1000,
									"name": "tag",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 953,
									"end": 1000,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1049,
									"end": 1051,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 1044,
									"end": 1047,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1040,
									"end": 1052,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1037,
									"end": 1038,
									"name": "PUSH",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 1033,
									"end": 1053,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 1027,
									"end": 1031,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1023,
									"end": 1054,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1013,
									"end": 1054,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1013,
									"end": 1054,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "tag",
									"source": 1,
									"value": "32"
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1122,
									"end": 1124,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1115,
									"end": 1120,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1112,
									"end": 1125,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "34"
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1167,
									"end": 1184,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1167,
									"end": 1184,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1167,
									"end": 1184,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1148,
									"end": 1149,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1137,
									"end": 1150,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "32"
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "tag",
									"source": 1,
									"value": "34"
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1108,
									"end": 1111,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1108,
									"end": 1111,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1108,
									"end": 1111,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 748,
									"end": 1196,
									"name": "tag",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 748,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 657,
									"end": 1202,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 657,
									"end": 1202,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 657,
									"end": 1202,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 657,
									"end": 1202,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1378,
									"end": 2730,
									"name": "tag",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 1378,
									"end": 2730,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1498,
									"end": 1508,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1498,
									"end": 1508,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1520,
									"end": 1550,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1520,
									"end": 1550,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1517,
									"end": 1573,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1517,
									"end": 1573,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "38"
								},
								{
									"begin": 1517,
									"end": 1573,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1553,
									"end": 1571,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "38"
								},
								{
									"begin": 1553,
									"end": 1571,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 1553,
									"end": 1571,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1553,
									"end": 1571,
									"name": "tag",
									"source": 1,
									"value": "38"
								},
								{
									"begin": 1553,
									"end": 1571,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1679,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "39"
								},
								{
									"begin": 1672,
									"end": 1678,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1632,
									"end": 1670,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1664,
									"end": 1668,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1658,
									"end": 1669,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 1632,
									"end": 1670,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 1632,
									"end": 1670,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1632,
									"end": 1670,
									"name": "tag",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1632,
									"end": 1670,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1626,
									"end": 1630,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1679,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 1582,
									"end": 1679,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1679,
									"name": "tag",
									"source": 1,
									"value": "39"
								},
								{
									"begin": 1582,
									"end": 1679,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1734,
									"end": 1738,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1734,
									"end": 1738,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1798,
									"end": 1800,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 1787,
									"end": 1801,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1787,
									"end": 1801,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1815,
									"end": 1816,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1810,
									"end": 2473,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1810,
									"end": 2473,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 1810,
									"end": 2473,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "42"
								},
								{
									"begin": 1810,
									"end": 2473,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2517,
									"end": 2518,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2534,
									"end": 2540,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2531,
									"end": 2620,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2531,
									"end": 2620,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "43"
								},
								{
									"begin": 2531,
									"end": 2620,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2586,
									"end": 2605,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 2586,
									"end": 2605,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2586,
									"end": 2605,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2580,
									"end": 2606,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2531,
									"end": 2620,
									"name": "tag",
									"source": 1,
									"value": "43"
								},
								{
									"begin": 2531,
									"end": 2620,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1335,
									"end": 1336,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 1331,
									"end": 1342,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 1331,
									"end": 1342,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1331,
									"end": 1342,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 1327,
									"end": 1351,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 1323,
									"end": 1352,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 1313,
									"end": 1353,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1359,
									"end": 1360,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1355,
									"end": 1366,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1355,
									"end": 1366,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1355,
									"end": 1366,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 1310,
									"end": 1367,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 2633,
									"end": 2714,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 2633,
									"end": 2714,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1780,
									"end": 2724,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "34"
								},
								{
									"begin": 1780,
									"end": 2724,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1810,
									"end": 2473,
									"name": "tag",
									"source": 1,
									"value": "42"
								},
								{
									"begin": 1810,
									"end": 2473,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 604,
									"end": 605,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 597,
									"end": 611,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 597,
									"end": 611,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 597,
									"end": 611,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 641,
									"end": 645,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 628,
									"end": 646,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 628,
									"end": 646,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1846,
									"end": 1866,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 1846,
									"end": 1866,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1846,
									"end": 1866,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "tag",
									"source": 1,
									"value": "46"
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1978,
									"end": 1985,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1975,
									"end": 1976,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1972,
									"end": 1986,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "48"
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2067,
									"end": 2086,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 2067,
									"end": 2086,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 2067,
									"end": 2086,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2061,
									"end": 2087,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2046,
									"end": 2088,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2046,
									"end": 2088,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 2159,
									"end": 2186,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 2159,
									"end": 2186,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2159,
									"end": 2186,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2159,
									"end": 2186,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 2127,
									"end": 2128,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 2115,
									"end": 2129,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2115,
									"end": 2129,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2115,
									"end": 2129,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2115,
									"end": 2129,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1994,
									"end": 2013,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1994,
									"end": 2013,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "46"
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "tag",
									"source": 1,
									"value": "48"
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1968,
									"end": 1971,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2228,
									"end": 2234,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 2219,
									"end": 2226,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2216,
									"end": 2235,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 2213,
									"end": 2414,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2213,
									"end": 2414,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "49"
								},
								{
									"begin": 2213,
									"end": 2414,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2289,
									"end": 2308,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 2289,
									"end": 2308,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 2289,
									"end": 2308,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2283,
									"end": 2309,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2372,
									"end": 2373,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 2368,
									"end": 2382,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 2368,
									"end": 2382,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2368,
									"end": 2382,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 2384,
									"end": 2387,
									"name": "PUSH",
									"source": 1,
									"value": "F8"
								},
								{
									"begin": 2364,
									"end": 2388,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2360,
									"end": 2397,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 2356,
									"end": 2398,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 2341,
									"end": 2399,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2326,
									"end": 2400,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2326,
									"end": 2400,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 2213,
									"end": 2414,
									"name": "tag",
									"source": 1,
									"value": "49"
								},
								{
									"begin": 2213,
									"end": 2414,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2460,
									"end": 2461,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 2444,
									"end": 2458,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2444,
									"end": 2458,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2444,
									"end": 2458,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 2440,
									"end": 2462,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2427,
									"end": 2463,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2427,
									"end": 2463,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1378,
									"end": 2730,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1378,
									"end": 2730,
									"name": "tag",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 1378,
									"end": 2730,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 62523,
									"end": 63561,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 62523,
									"end": 63561,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 62523,
									"end": 63561,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 62523,
									"end": 63561,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 62523,
									"end": 63561,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 62523,
									"end": 63561,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 62523,
									"end": 63561,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122094da7ceb18d67c78611337fb3c84db95ac5e9c9d6f38bf936b73f5543a1dfd3f64736f6c63430008120033",
									".code": [
										{
											"begin": 62523,
											"end": 63561,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 62523,
											"end": 63561,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 62523,
											"end": 63561,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 62523,
											"end": 63561,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 62523,
											"end": 63561,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 62523,
											"end": 63561,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 62523,
											"end": 63561,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 62523,
											"end": 63561,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 62523,
											"end": 63561,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 62523,
											"end": 63561,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 62523,
											"end": 63561,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 62523,
											"end": 63561,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 62523,
											"end": 63561,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 62523,
											"end": 63561,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 62523,
											"end": 63561,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 62523,
											"end": 63561,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 62523,
											"end": 63561,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 62523,
											"end": 63561,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 62523,
											"end": 63561,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 62523,
											"end": 63561,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 62523,
											"end": 63561,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 62523,
											"end": 63561,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 62523,
											"end": 63561,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 62523,
											"end": 63561,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 62523,
											"end": 63561,
											"name": "PUSH",
											"source": 0,
											"value": "6352211E"
										},
										{
											"begin": 62523,
											"end": 63561,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 62523,
											"end": 63561,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 62523,
											"end": 63561,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 62523,
											"end": 63561,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 62523,
											"end": 63561,
											"name": "PUSH",
											"source": 0,
											"value": "A22CB465"
										},
										{
											"begin": 62523,
											"end": 63561,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 62523,
											"end": 63561,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 62523,
											"end": 63561,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 62523,
											"end": 63561,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 62523,
											"end": 63561,
											"name": "PUSH",
											"source": 0,
											"value": "A22CB465"
										},
										{
											"begin": 62523,
											"end": 63561,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 62523,
											"end": 63561,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 62523,
											"end": 63561,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 62523,
											"end": 63561,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 62523,
											"end": 63561,
											"name": "PUSH",
											"source": 0,
											"value": "B88D4FDE"
										},
										{
											"begin": 62523,
											"end": 63561,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 62523,
											"end": 63561,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 62523,
											"end": 63561,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 62523,
											"end": 63561,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 62523,
											"end": 63561,
											"name": "PUSH",
											"source": 0,
											"value": "C87B56DD"
										},
										{
											"begin": 62523,
											"end": 63561,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 62523,
											"end": 63561,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 62523,
											"end": 63561,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 62523,
											"end": 63561,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 62523,
											"end": 63561,
											"name": "PUSH",
											"source": 0,
											"value": "E985E9C5"
										},
										{
											"begin": 62523,
											"end": 63561,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 62523,
											"end": 63561,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 62523,
											"end": 63561,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 62523,
											"end": 63561,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 62523,
											"end": 63561,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 62523,
											"end": 63561,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 62523,
											"end": 63561,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 62523,
											"end": 63561,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 62523,
											"end": 63561,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 62523,
											"end": 63561,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 62523,
											"end": 63561,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 62523,
											"end": 63561,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 62523,
											"end": 63561,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 62523,
											"end": 63561,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 62523,
											"end": 63561,
											"name": "PUSH",
											"source": 0,
											"value": "6352211E"
										},
										{
											"begin": 62523,
											"end": 63561,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 62523,
											"end": 63561,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 62523,
											"end": 63561,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 62523,
											"end": 63561,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 62523,
											"end": 63561,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 62523,
											"end": 63561,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 62523,
											"end": 63561,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 62523,
											"end": 63561,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 62523,
											"end": 63561,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 62523,
											"end": 63561,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 62523,
											"end": 63561,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 62523,
											"end": 63561,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 62523,
											"end": 63561,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 62523,
											"end": 63561,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 62523,
											"end": 63561,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 62523,
											"end": 63561,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 62523,
											"end": 63561,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 62523,
											"end": 63561,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 62523,
											"end": 63561,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 62523,
											"end": 63561,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 62523,
											"end": 63561,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 62523,
											"end": 63561,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 62523,
											"end": 63561,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 62523,
											"end": 63561,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 62523,
											"end": 63561,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 62523,
											"end": 63561,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 62523,
											"end": 63561,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 62523,
											"end": 63561,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 62523,
											"end": 63561,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 62523,
											"end": 63561,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 62523,
											"end": 63561,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 62523,
											"end": 63561,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 62523,
											"end": 63561,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 62523,
											"end": 63561,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 62523,
											"end": 63561,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 62523,
											"end": 63561,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 62523,
											"end": 63561,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 62523,
											"end": 63561,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 62523,
											"end": 63561,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 62523,
											"end": 63561,
											"name": "PUSH",
											"source": 0,
											"value": "2F745C59"
										},
										{
											"begin": 62523,
											"end": 63561,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 62523,
											"end": 63561,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 62523,
											"end": 63561,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 62523,
											"end": 63561,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 62523,
											"end": 63561,
											"name": "PUSH",
											"source": 0,
											"value": "40D097C3"
										},
										{
											"begin": 62523,
											"end": 63561,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 62523,
											"end": 63561,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 62523,
											"end": 63561,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 62523,
											"end": 63561,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 62523,
											"end": 63561,
											"name": "PUSH",
											"source": 0,
											"value": "42842E0E"
										},
										{
											"begin": 62523,
											"end": 63561,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 62523,
											"end": 63561,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 62523,
											"end": 63561,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 62523,
											"end": 63561,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 62523,
											"end": 63561,
											"name": "PUSH",
											"source": 0,
											"value": "4F6CCCE7"
										},
										{
											"begin": 62523,
											"end": 63561,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 62523,
											"end": 63561,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 62523,
											"end": 63561,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 62523,
											"end": 63561,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 62523,
											"end": 63561,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 62523,
											"end": 63561,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 62523,
											"end": 63561,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 62523,
											"end": 63561,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 62523,
											"end": 63561,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 62523,
											"end": 63561,
											"name": "PUSH",
											"source": 0,
											"value": "1FFC9A7"
										},
										{
											"begin": 62523,
											"end": 63561,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 62523,
											"end": 63561,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 62523,
											"end": 63561,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 62523,
											"end": 63561,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 62523,
											"end": 63561,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 62523,
											"end": 63561,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 62523,
											"end": 63561,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 62523,
											"end": 63561,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 62523,
											"end": 63561,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 62523,
											"end": 63561,
											"name": "PUSH",
											"source": 0,
											"value": "81812FC"
										},
										{
											"begin": 62523,
											"end": 63561,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 62523,
											"end": 63561,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 62523,
											"end": 63561,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 62523,
											"end": 63561,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 62523,
											"end": 63561,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 62523,
											"end": 63561,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 62523,
											"end": 63561,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 62523,
											"end": 63561,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 62523,
											"end": 63561,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 62523,
											"end": 63561,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 62523,
											"end": 63561,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 62523,
											"end": 63561,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 62523,
											"end": 63561,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 62523,
											"end": 63561,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 62523,
											"end": 63561,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 62523,
											"end": 63561,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 62523,
											"end": 63561,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 62523,
											"end": 63561,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 63354,
											"end": 63559,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 63354,
											"end": 63559,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 63354,
											"end": 63559,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 63354,
											"end": 63559,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 63354,
											"end": 63559,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 63354,
											"end": 63559,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 63354,
											"end": 63559,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 63354,
											"end": 63559,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 63354,
											"end": 63559,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 63354,
											"end": 63559,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 63354,
											"end": 63559,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 63354,
											"end": 63559,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 63354,
											"end": 63559,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 63354,
											"end": 63559,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 63354,
											"end": 63559,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 63354,
											"end": 63559,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 565,
											"end": 579,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 565,
											"end": 579,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 558,
											"end": 580,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 540,
											"end": 581,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 540,
											"end": 581,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 528,
											"end": 530,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 513,
											"end": 531,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 63354,
											"end": 63559,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 63354,
											"end": 63559,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 63354,
											"end": 63559,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 63354,
											"end": 63559,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 63354,
											"end": 63559,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 63354,
											"end": 63559,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 63354,
											"end": 63559,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 63354,
											"end": 63559,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 63354,
											"end": 63559,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 40818,
											"end": 40916,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 40818,
											"end": 40916,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40818,
											"end": 40916,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 40818,
											"end": 40916,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 40818,
											"end": 40916,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40818,
											"end": 40916,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 40818,
											"end": 40916,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40818,
											"end": 40916,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 40818,
											"end": 40916,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 40818,
											"end": 40916,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 40818,
											"end": 40916,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40818,
											"end": 40916,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40818,
											"end": 40916,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 40818,
											"end": 40916,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42282,
											"end": 42449,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 42282,
											"end": 42449,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42282,
											"end": 42449,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 42282,
											"end": 42449,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 42282,
											"end": 42449,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 42282,
											"end": 42449,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 42282,
											"end": 42449,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 42282,
											"end": 42449,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42282,
											"end": 42449,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 42282,
											"end": 42449,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42282,
											"end": 42449,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 42282,
											"end": 42449,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42282,
											"end": 42449,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 42282,
											"end": 42449,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42282,
											"end": 42449,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 42282,
											"end": 42449,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1697,
											"end": 1729,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1697,
											"end": 1729,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1697,
											"end": 1729,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1679,
											"end": 1730,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1679,
											"end": 1730,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1667,
											"end": 1669,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1652,
											"end": 1670,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 42282,
											"end": 42449,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 1533,
											"end": 1736,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 41815,
											"end": 42221,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 41815,
											"end": 42221,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41815,
											"end": 42221,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 41815,
											"end": 42221,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 41815,
											"end": 42221,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 41815,
											"end": 42221,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 41815,
											"end": 42221,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 41815,
											"end": 42221,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41815,
											"end": 42221,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 41815,
											"end": 42221,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41815,
											"end": 42221,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 41815,
											"end": 42221,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41815,
											"end": 42221,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 41815,
											"end": 42221,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41815,
											"end": 42221,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 57277,
											"end": 57388,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 57277,
											"end": 57388,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57364,
											"end": 57374,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 57364,
											"end": 57381,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 57277,
											"end": 57388,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 57277,
											"end": 57388,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57277,
											"end": 57388,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 57277,
											"end": 57388,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2324,
											"end": 2349,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2324,
											"end": 2349,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2324,
											"end": 2349,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2312,
											"end": 2314,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2297,
											"end": 2315,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 57277,
											"end": 57388,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 2178,
											"end": 2355,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 42959,
											"end": 43285,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 42959,
											"end": 43285,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42959,
											"end": 43285,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 42959,
											"end": 43285,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 42959,
											"end": 43285,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 42959,
											"end": 43285,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 42959,
											"end": 43285,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 42959,
											"end": 43285,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42959,
											"end": 43285,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 42959,
											"end": 43285,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42959,
											"end": 43285,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 42959,
											"end": 43285,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 56953,
											"end": 57206,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 56953,
											"end": 57206,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56953,
											"end": 57206,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 56953,
											"end": 57206,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 56953,
											"end": 57206,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 56953,
											"end": 57206,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 56953,
											"end": 57206,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 56953,
											"end": 57206,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 56953,
											"end": 57206,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 56953,
											"end": 57206,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56953,
											"end": 57206,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 56953,
											"end": 57206,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 62869,
											"end": 63045,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 62869,
											"end": 63045,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 62869,
											"end": 63045,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 62869,
											"end": 63045,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 62869,
											"end": 63045,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 62869,
											"end": 63045,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 62869,
											"end": 63045,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 62869,
											"end": 63045,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 62869,
											"end": 63045,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 62869,
											"end": 63045,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 62869,
											"end": 63045,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 62869,
											"end": 63045,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43351,
											"end": 43530,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 43351,
											"end": 43530,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43351,
											"end": 43530,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 43351,
											"end": 43530,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 43351,
											"end": 43530,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 43351,
											"end": 43530,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 43351,
											"end": 43530,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 43351,
											"end": 43530,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43351,
											"end": 43530,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 43351,
											"end": 43530,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43351,
											"end": 43530,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 43351,
											"end": 43530,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 57460,
											"end": 57690,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 57460,
											"end": 57690,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57460,
											"end": 57690,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 57460,
											"end": 57690,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 57460,
											"end": 57690,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 57460,
											"end": 57690,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 57460,
											"end": 57690,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 57460,
											"end": 57690,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 57460,
											"end": 57690,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 57460,
											"end": 57690,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57460,
											"end": 57690,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 57460,
											"end": 57690,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40537,
											"end": 40756,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 40537,
											"end": 40756,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40537,
											"end": 40756,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 40537,
											"end": 40756,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 40537,
											"end": 40756,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 40537,
											"end": 40756,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 40537,
											"end": 40756,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 40537,
											"end": 40756,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40537,
											"end": 40756,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 40537,
											"end": 40756,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40537,
											"end": 40756,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 40537,
											"end": 40756,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40276,
											"end": 40480,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 40276,
											"end": 40480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40276,
											"end": 40480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 40276,
											"end": 40480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 40276,
											"end": 40480,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 40276,
											"end": 40480,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 40276,
											"end": 40480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 40276,
											"end": 40480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40276,
											"end": 40480,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 40276,
											"end": 40480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40276,
											"end": 40480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 40276,
											"end": 40480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18887,
											"end": 18988,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 18887,
											"end": 18988,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18887,
											"end": 18988,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 18887,
											"end": 18988,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 18887,
											"end": 18988,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18257,
											"end": 18342,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 18257,
											"end": 18342,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18329,
											"end": 18335,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 18329,
											"end": 18335,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18329,
											"end": 18335,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18257,
											"end": 18342,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 18257,
											"end": 18342,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40980,
											"end": 41082,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 40980,
											"end": 41082,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40980,
											"end": 41082,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 40980,
											"end": 41082,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 40980,
											"end": 41082,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42516,
											"end": 42669,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 42516,
											"end": 42669,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42516,
											"end": 42669,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 42516,
											"end": 42669,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 42516,
											"end": 42669,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 42516,
											"end": 42669,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 42516,
											"end": 42669,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 42516,
											"end": 42669,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42516,
											"end": 42669,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 42516,
											"end": 42669,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42516,
											"end": 42669,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 42516,
											"end": 42669,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43596,
											"end": 43910,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 43596,
											"end": 43910,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43596,
											"end": 43910,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 43596,
											"end": 43910,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 43596,
											"end": 43910,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 43596,
											"end": 43910,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 43596,
											"end": 43910,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 43596,
											"end": 43910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43596,
											"end": 43910,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 43596,
											"end": 43910,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43596,
											"end": 43910,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 43596,
											"end": 43910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41148,
											"end": 41424,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 41148,
											"end": 41424,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41148,
											"end": 41424,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 41148,
											"end": 41424,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 41148,
											"end": 41424,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 41148,
											"end": 41424,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 41148,
											"end": 41424,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 41148,
											"end": 41424,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41148,
											"end": 41424,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 41148,
											"end": 41424,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41148,
											"end": 41424,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 41148,
											"end": 41424,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42735,
											"end": 42897,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 42735,
											"end": 42897,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42735,
											"end": 42897,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 42735,
											"end": 42897,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 42735,
											"end": 42897,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 42735,
											"end": 42897,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 42735,
											"end": 42897,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 42735,
											"end": 42897,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42735,
											"end": 42897,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 42735,
											"end": 42897,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 42855,
											"end": 42880,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 42855,
											"end": 42880,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 42855,
											"end": 42880,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 42832,
											"end": 42836,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 42855,
											"end": 42880,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42855,
											"end": 42880,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42855,
											"end": 42880,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 42855,
											"end": 42873,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 42855,
											"end": 42880,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 42855,
											"end": 42880,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42855,
											"end": 42880,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42855,
											"end": 42880,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 42855,
											"end": 42880,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 42855,
											"end": 42880,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42855,
											"end": 42880,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 42855,
											"end": 42880,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 42855,
											"end": 42890,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 42855,
											"end": 42890,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42855,
											"end": 42890,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 42855,
											"end": 42890,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 42855,
											"end": 42890,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 42855,
											"end": 42890,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 42855,
											"end": 42890,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 42855,
											"end": 42890,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42855,
											"end": 42890,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 42855,
											"end": 42890,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 42855,
											"end": 42890,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 42855,
											"end": 42890,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 42855,
											"end": 42890,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 42855,
											"end": 42890,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 42855,
											"end": 42890,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42735,
											"end": 42897,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19137,
											"end": 19335,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 19137,
											"end": 19335,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19137,
											"end": 19335,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 19137,
											"end": 19335,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 19137,
											"end": 19335,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 19137,
											"end": 19335,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 19137,
											"end": 19335,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 19137,
											"end": 19335,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19137,
											"end": 19335,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 19137,
											"end": 19335,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19137,
											"end": 19335,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 19137,
											"end": 19335,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 63354,
											"end": 63559,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 63354,
											"end": 63559,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 63489,
											"end": 63493,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 63516,
											"end": 63552,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 63540,
											"end": 63551,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 63516,
											"end": 63539,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 63516,
											"end": 63552,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 63516,
											"end": 63552,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 63516,
											"end": 63552,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 63509,
											"end": 63552,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 63354,
											"end": 63559,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 63354,
											"end": 63559,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40818,
											"end": 40916,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 40818,
											"end": 40916,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40872,
											"end": 40885,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 40904,
											"end": 40909,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40897,
											"end": 40909,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40897,
											"end": 40909,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 40897,
											"end": 40909,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 40897,
											"end": 40909,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40897,
											"end": 40909,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 40897,
											"end": 40909,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40897,
											"end": 40909,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 40897,
											"end": 40909,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40897,
											"end": 40909,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40897,
											"end": 40909,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 40897,
											"end": 40909,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40897,
											"end": 40909,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 40897,
											"end": 40909,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40897,
											"end": 40909,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40897,
											"end": 40909,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 40897,
											"end": 40909,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 40897,
											"end": 40909,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 40897,
											"end": 40909,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40897,
											"end": 40909,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 40897,
											"end": 40909,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 40897,
											"end": 40909,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40897,
											"end": 40909,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40897,
											"end": 40909,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40897,
											"end": 40909,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 40897,
											"end": 40909,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 40897,
											"end": 40909,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40897,
											"end": 40909,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 40897,
											"end": 40909,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40897,
											"end": 40909,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40897,
											"end": 40909,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40897,
											"end": 40909,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40897,
											"end": 40909,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 40897,
											"end": 40909,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 40897,
											"end": 40909,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40897,
											"end": 40909,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 40897,
											"end": 40909,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40897,
											"end": 40909,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 40897,
											"end": 40909,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 40897,
											"end": 40909,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40897,
											"end": 40909,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 40897,
											"end": 40909,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40897,
											"end": 40909,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 40897,
											"end": 40909,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40897,
											"end": 40909,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40897,
											"end": 40909,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 40897,
											"end": 40909,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 40897,
											"end": 40909,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 40897,
											"end": 40909,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40897,
											"end": 40909,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 40897,
											"end": 40909,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 40897,
											"end": 40909,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 40897,
											"end": 40909,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 40897,
											"end": 40909,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 40897,
											"end": 40909,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40897,
											"end": 40909,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 40897,
											"end": 40909,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 40897,
											"end": 40909,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 40897,
											"end": 40909,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 40897,
											"end": 40909,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 40897,
											"end": 40909,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 40897,
											"end": 40909,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40897,
											"end": 40909,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 40897,
											"end": 40909,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40897,
											"end": 40909,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40897,
											"end": 40909,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 40897,
											"end": 40909,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40897,
											"end": 40909,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 40897,
											"end": 40909,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40897,
											"end": 40909,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 40897,
											"end": 40909,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40897,
											"end": 40909,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40897,
											"end": 40909,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40897,
											"end": 40909,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40897,
											"end": 40909,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 40897,
											"end": 40909,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 40897,
											"end": 40909,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40897,
											"end": 40909,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 40897,
											"end": 40909,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40897,
											"end": 40909,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 40897,
											"end": 40909,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40897,
											"end": 40909,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40897,
											"end": 40909,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 40897,
											"end": 40909,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40897,
											"end": 40909,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 40897,
											"end": 40909,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40897,
											"end": 40909,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 40897,
											"end": 40909,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40897,
											"end": 40909,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40897,
											"end": 40909,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 40897,
											"end": 40909,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40897,
											"end": 40909,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40897,
											"end": 40909,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 40897,
											"end": 40909,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 40897,
											"end": 40909,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 40897,
											"end": 40909,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 40897,
											"end": 40909,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 40897,
											"end": 40909,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40897,
											"end": 40909,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 40897,
											"end": 40909,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 40897,
											"end": 40909,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 40897,
											"end": 40909,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 40897,
											"end": 40909,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40897,
											"end": 40909,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40897,
											"end": 40909,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 40897,
											"end": 40909,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40897,
											"end": 40909,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40897,
											"end": 40909,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40897,
											"end": 40909,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40897,
											"end": 40909,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40897,
											"end": 40909,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40897,
											"end": 40909,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40897,
											"end": 40909,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40818,
											"end": 40916,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40818,
											"end": 40916,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42282,
											"end": 42449,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 42282,
											"end": 42449,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42358,
											"end": 42365,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 42377,
											"end": 42400,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 42392,
											"end": 42399,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 42377,
											"end": 42391,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 42377,
											"end": 42400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42377,
											"end": 42400,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 42377,
											"end": 42400,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 42418,
											"end": 42442,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 42418,
											"end": 42442,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42418,
											"end": 42442,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42418,
											"end": 42442,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 42418,
											"end": 42433,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 42418,
											"end": 42442,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 42418,
											"end": 42442,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 42418,
											"end": 42442,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 42418,
											"end": 42442,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42418,
											"end": 42442,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 42418,
											"end": 42442,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 42418,
											"end": 42442,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 42418,
											"end": 42442,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42282,
											"end": 42449,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41815,
											"end": 42221,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 41815,
											"end": 42221,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41895,
											"end": 41908,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 41911,
											"end": 41934,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 41926,
											"end": 41933,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 41911,
											"end": 41925,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 41911,
											"end": 41934,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41911,
											"end": 41934,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 41911,
											"end": 41934,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41895,
											"end": 41934,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41895,
											"end": 41934,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41958,
											"end": 41963,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 41952,
											"end": 41963,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 41952,
											"end": 41954,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 41952,
											"end": 41963,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 41952,
											"end": 41963,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 41944,
											"end": 42001,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 41944,
											"end": 42001,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 41944,
											"end": 42001,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 41944,
											"end": 42001,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 41944,
											"end": 42001,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41944,
											"end": 42001,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5363,
											"end": 5365,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 41944,
											"end": 42001,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 41944,
											"end": 42001,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 41944,
											"end": 42001,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5345,
											"end": 5366,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5402,
											"end": 5404,
											"name": "PUSH",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 5382,
											"end": 5400,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5382,
											"end": 5400,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5382,
											"end": 5400,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5375,
											"end": 5405,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5441,
											"end": 5475,
											"name": "PUSH",
											"source": 1,
											"value": "4552433732313A20617070726F76616C20746F2063757272656E74206F776E65"
										},
										{
											"begin": 5421,
											"end": 5439,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 5421,
											"end": 5439,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5421,
											"end": 5439,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5414,
											"end": 5476,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "39"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5492,
											"end": 5510,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 5492,
											"end": 5510,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5492,
											"end": 5510,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5485,
											"end": 5516,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5533,
											"end": 5552,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 5533,
											"end": 5552,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 41944,
											"end": 42001,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 41944,
											"end": 42001,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41944,
											"end": 42001,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 41944,
											"end": 42001,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 41944,
											"end": 42001,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41944,
											"end": 42001,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41944,
											"end": 42001,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 41944,
											"end": 42001,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41944,
											"end": 42001,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 41944,
											"end": 42001,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 41944,
											"end": 42001,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16939,
											"end": 16949,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 42033,
											"end": 42054,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 42033,
											"end": 42054,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 42033,
											"end": 42054,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 42033,
											"end": 42054,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42033,
											"end": 42095,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 42033,
											"end": 42095,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 42058,
											"end": 42095,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 42075,
											"end": 42080,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16939,
											"end": 16949,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 42735,
											"end": 42897,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 42735,
											"end": 42897,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42058,
											"end": 42095,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 42058,
											"end": 42095,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42012,
											"end": 42182,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 42012,
											"end": 42182,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 42012,
											"end": 42182,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 42012,
											"end": 42182,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 42012,
											"end": 42182,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42012,
											"end": 42182,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5765,
											"end": 5767,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 42012,
											"end": 42182,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 42012,
											"end": 42182,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 42012,
											"end": 42182,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5747,
											"end": 5768,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5804,
											"end": 5806,
											"name": "PUSH",
											"source": 1,
											"value": "3D"
										},
										{
											"begin": 5784,
											"end": 5802,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5784,
											"end": 5802,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5784,
											"end": 5802,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5777,
											"end": 5807,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5843,
											"end": 5877,
											"name": "PUSH",
											"source": 1,
											"value": "4552433732313A20617070726F76652063616C6C6572206973206E6F7420746F"
										},
										{
											"begin": 5823,
											"end": 5841,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 5823,
											"end": 5841,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5823,
											"end": 5841,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5816,
											"end": 5878,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5914,
											"end": 5945,
											"name": "PUSH",
											"source": 1,
											"value": "6B656E206F776E6572206F7220617070726F76656420666F7220616C6C000000"
										},
										{
											"begin": 5894,
											"end": 5912,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 5894,
											"end": 5912,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5894,
											"end": 5912,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5887,
											"end": 5946,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5963,
											"end": 5982,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 5963,
											"end": 5982,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 42012,
											"end": 42182,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 5563,
											"end": 5988,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 42012,
											"end": 42182,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 42012,
											"end": 42182,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42193,
											"end": 42214,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 42202,
											"end": 42204,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 42206,
											"end": 42213,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 42193,
											"end": 42201,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 42193,
											"end": 42214,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42193,
											"end": 42214,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 42193,
											"end": 42214,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41885,
											"end": 42221,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41815,
											"end": 42221,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41815,
											"end": 42221,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41815,
											"end": 42221,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42959,
											"end": 43285,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 42959,
											"end": 43285,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43148,
											"end": 43189,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 16939,
											"end": 16949,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 43181,
											"end": 43188,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 43148,
											"end": 43166,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 43148,
											"end": 43189,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43148,
											"end": 43189,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 43148,
											"end": 43189,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43140,
											"end": 43239,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 43140,
											"end": 43239,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 43140,
											"end": 43239,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 43140,
											"end": 43239,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 43140,
											"end": 43239,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43140,
											"end": 43239,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43140,
											"end": 43239,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 43140,
											"end": 43239,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43140,
											"end": 43239,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 43140,
											"end": 43239,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43140,
											"end": 43239,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 43140,
											"end": 43239,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43140,
											"end": 43239,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 43140,
											"end": 43239,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43250,
											"end": 43278,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 43260,
											"end": 43264,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 43266,
											"end": 43268,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 43270,
											"end": 43277,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 43250,
											"end": 43259,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 43250,
											"end": 43278,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 56953,
											"end": 57206,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 56953,
											"end": 57206,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57050,
											"end": 57057,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57085,
											"end": 57108,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 57102,
											"end": 57107,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 57085,
											"end": 57101,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 57085,
											"end": 57108,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 57085,
											"end": 57108,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 57085,
											"end": 57108,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57077,
											"end": 57082,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 57077,
											"end": 57108,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 57069,
											"end": 57156,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 57069,
											"end": 57156,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57069,
											"end": 57156,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 57069,
											"end": 57156,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 57069,
											"end": 57156,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57069,
											"end": 57156,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6609,
											"end": 6611,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 57069,
											"end": 57156,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 57069,
											"end": 57156,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 57069,
											"end": 57156,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6591,
											"end": 6612,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6648,
											"end": 6650,
											"name": "PUSH",
											"source": 1,
											"value": "2B"
										},
										{
											"begin": 6628,
											"end": 6646,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 6628,
											"end": 6646,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6628,
											"end": 6646,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6621,
											"end": 6651,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6687,
											"end": 6721,
											"name": "PUSH",
											"source": 1,
											"value": "455243373231456E756D657261626C653A206F776E657220696E646578206F75"
										},
										{
											"begin": 6667,
											"end": 6685,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 6667,
											"end": 6685,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6667,
											"end": 6685,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6660,
											"end": 6722,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "74206F6620626F756E6473"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6738,
											"end": 6756,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 6738,
											"end": 6756,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6738,
											"end": 6756,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6731,
											"end": 6772,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6789,
											"end": 6808,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 6789,
											"end": 6808,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 57069,
											"end": 57156,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 6407,
											"end": 6814,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 57069,
											"end": 57156,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 57069,
											"end": 57156,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 57173,
											"end": 57192,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 57173,
											"end": 57192,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57173,
											"end": 57192,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 57173,
											"end": 57192,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 57173,
											"end": 57192,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57173,
											"end": 57192,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57173,
											"end": 57192,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57173,
											"end": 57192,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 57173,
											"end": 57185,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 57173,
											"end": 57192,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 57173,
											"end": 57192,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57173,
											"end": 57192,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57173,
											"end": 57192,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 57173,
											"end": 57192,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 57173,
											"end": 57192,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57173,
											"end": 57192,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 57173,
											"end": 57192,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 57173,
											"end": 57199,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 57173,
											"end": 57199,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 57173,
											"end": 57199,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 57173,
											"end": 57199,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 57173,
											"end": 57199,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57173,
											"end": 57199,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 57173,
											"end": 57199,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 57173,
											"end": 57199,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 57173,
											"end": 57199,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56953,
											"end": 57206,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 62869,
											"end": 63045,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 62869,
											"end": 63045,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18150,
											"end": 18163,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 18150,
											"end": 18161,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 18150,
											"end": 18163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18150,
											"end": 18163,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 18150,
											"end": 18163,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 62926,
											"end": 62941,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 62944,
											"end": 62969,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 62944,
											"end": 62959,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 941,
											"end": 955,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 941,
											"end": 955,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 850,
											"end": 962,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 62944,
											"end": 62969,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 62944,
											"end": 62969,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 62926,
											"end": 62969,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 62926,
											"end": 62969,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 62979,
											"end": 63006,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 62979,
											"end": 62994,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 1055,
											"end": 1074,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1055,
											"end": 1074,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1073,
											"end": 1074,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1055,
											"end": 1074,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1055,
											"end": 1074,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1055,
											"end": 1074,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 968,
											"end": 1091,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 62979,
											"end": 63006,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 62979,
											"end": 63006,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 63016,
											"end": 63038,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 63026,
											"end": 63028,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 63030,
											"end": 63037,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 63016,
											"end": 63025,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 63016,
											"end": 63038,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 63016,
											"end": 63038,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 63016,
											"end": 63038,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 62916,
											"end": 63045,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 62869,
											"end": 63045,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 62869,
											"end": 63045,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43351,
											"end": 43530,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 43351,
											"end": 43530,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43484,
											"end": 43523,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 43501,
											"end": 43505,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 43507,
											"end": 43509,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 43511,
											"end": 43518,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 43484,
											"end": 43523,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 43484,
											"end": 43523,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 43484,
											"end": 43523,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43484,
											"end": 43523,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 43484,
											"end": 43523,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43484,
											"end": 43523,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 43484,
											"end": 43523,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43484,
											"end": 43523,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43484,
											"end": 43523,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43484,
											"end": 43523,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43484,
											"end": 43523,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43484,
											"end": 43523,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43484,
											"end": 43500,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 43484,
											"end": 43523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 57460,
											"end": 57690,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 57460,
											"end": 57690,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57535,
											"end": 57542,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57570,
											"end": 57600,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 57364,
											"end": 57374,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 57364,
											"end": 57381,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 57364,
											"end": 57381,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57277,
											"end": 57388,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 57570,
											"end": 57600,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 57570,
											"end": 57600,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57562,
											"end": 57567,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 57562,
											"end": 57600,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 57554,
											"end": 57649,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 57554,
											"end": 57649,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57554,
											"end": 57649,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 57554,
											"end": 57649,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 57554,
											"end": 57649,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57554,
											"end": 57649,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7021,
											"end": 7023,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 57554,
											"end": 57649,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 57554,
											"end": 57649,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 57554,
											"end": 57649,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7003,
											"end": 7024,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7060,
											"end": 7062,
											"name": "PUSH",
											"source": 1,
											"value": "2C"
										},
										{
											"begin": 7040,
											"end": 7058,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 7040,
											"end": 7058,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7040,
											"end": 7058,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7033,
											"end": 7063,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7099,
											"end": 7133,
											"name": "PUSH",
											"source": 1,
											"value": "455243373231456E756D657261626C653A20676C6F62616C20696E646578206F"
										},
										{
											"begin": 7079,
											"end": 7097,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 7079,
											"end": 7097,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7079,
											"end": 7097,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7072,
											"end": 7134,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7574206F6620626F756E6473"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7150,
											"end": 7168,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 7150,
											"end": 7168,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7150,
											"end": 7168,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7143,
											"end": 7185,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7202,
											"end": 7221,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 7202,
											"end": 7221,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 57554,
											"end": 57649,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 6819,
											"end": 7227,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 57554,
											"end": 57649,
											"name": "tag",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 57554,
											"end": 57649,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57666,
											"end": 57676,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 57677,
											"end": 57682,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 57666,
											"end": 57683,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57666,
											"end": 57683,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 57666,
											"end": 57683,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57666,
											"end": 57683,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 57666,
											"end": 57683,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 57666,
											"end": 57683,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57666,
											"end": 57683,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 57666,
											"end": 57683,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 57666,
											"end": 57683,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 57666,
											"end": 57683,
											"name": "tag",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 57666,
											"end": 57683,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57666,
											"end": 57683,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57666,
											"end": 57683,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57666,
											"end": 57683,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 57666,
											"end": 57683,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 57666,
											"end": 57683,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57666,
											"end": 57683,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 57666,
											"end": 57683,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 57666,
											"end": 57683,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 57659,
											"end": 57683,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57659,
											"end": 57683,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57460,
											"end": 57690,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 57460,
											"end": 57690,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57460,
											"end": 57690,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57460,
											"end": 57690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40537,
											"end": 40756,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 40537,
											"end": 40756,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40609,
											"end": 40616,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 45277,
											"end": 45293,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 45277,
											"end": 45293,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 45277,
											"end": 45293,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 45277,
											"end": 45284,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 45277,
											"end": 45293,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 45277,
											"end": 45293,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 45277,
											"end": 45293,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 45277,
											"end": 45293,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 45277,
											"end": 45293,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 45277,
											"end": 45293,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 45277,
											"end": 45293,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 45277,
											"end": 45293,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40671,
											"end": 40727,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 40671,
											"end": 40727,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 40671,
											"end": 40727,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 40671,
											"end": 40727,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 40671,
											"end": 40727,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40671,
											"end": 40727,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7566,
											"end": 7568,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 40671,
											"end": 40727,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 40671,
											"end": 40727,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 40671,
											"end": 40727,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7548,
											"end": 7569,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7605,
											"end": 7607,
											"name": "PUSH",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 7585,
											"end": 7603,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 7585,
											"end": 7603,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7585,
											"end": 7603,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7578,
											"end": 7608,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "115490CDCC8C4E881A5B9D985B1A59081D1BDAD95B881251"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "42"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7624,
											"end": 7642,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 7624,
											"end": 7642,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7624,
											"end": 7642,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7617,
											"end": 7671,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7688,
											"end": 7706,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 7688,
											"end": 7706,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 40671,
											"end": 40727,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 7364,
											"end": 7712,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 40276,
											"end": 40480,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 40276,
											"end": 40480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40348,
											"end": 40355,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 40375,
											"end": 40394,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 40375,
											"end": 40394,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 40367,
											"end": 40440,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 40367,
											"end": 40440,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 40367,
											"end": 40440,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 40367,
											"end": 40440,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 40367,
											"end": 40440,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40367,
											"end": 40440,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7919,
											"end": 7921,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 40367,
											"end": 40440,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 40367,
											"end": 40440,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 40367,
											"end": 40440,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7901,
											"end": 7922,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7958,
											"end": 7960,
											"name": "PUSH",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 7938,
											"end": 7956,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 7938,
											"end": 7956,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7938,
											"end": 7956,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7931,
											"end": 7961,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7997,
											"end": 8031,
											"name": "PUSH",
											"source": 1,
											"value": "4552433732313A2061646472657373207A65726F206973206E6F742061207661"
										},
										{
											"begin": 7977,
											"end": 7995,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 7977,
											"end": 7995,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7977,
											"end": 7995,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7970,
											"end": 8032,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3634B21037BBB732B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8048,
											"end": 8066,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 8048,
											"end": 8066,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8048,
											"end": 8066,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8041,
											"end": 8080,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8097,
											"end": 8116,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 8097,
											"end": 8116,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 40367,
											"end": 40440,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 7717,
											"end": 8122,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 40367,
											"end": 40440,
											"name": "tag",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 40367,
											"end": 40440,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 40457,
											"end": 40473,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 40457,
											"end": 40473,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40457,
											"end": 40473,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40457,
											"end": 40473,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40457,
											"end": 40473,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 40457,
											"end": 40466,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 40457,
											"end": 40473,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 40457,
											"end": 40473,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 40457,
											"end": 40473,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 40457,
											"end": 40473,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40457,
											"end": 40473,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 40457,
											"end": 40473,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 40457,
											"end": 40473,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40276,
											"end": 40480,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18887,
											"end": 18988,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 18887,
											"end": 18988,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18150,
											"end": 18163,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 18150,
											"end": 18161,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 18150,
											"end": 18163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18150,
											"end": 18163,
											"name": "tag",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 18150,
											"end": 18163,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18951,
											"end": 18981,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 18978,
											"end": 18979,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18951,
											"end": 18969,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 18951,
											"end": 18981,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18951,
											"end": 18981,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 18951,
											"end": 18981,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18887,
											"end": 18988,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40980,
											"end": 41082,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 40980,
											"end": 41082,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41036,
											"end": 41049,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 41068,
											"end": 41075,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 41061,
											"end": 41075,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41061,
											"end": 41075,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 41061,
											"end": 41075,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 41061,
											"end": 41075,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41061,
											"end": 41075,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 41061,
											"end": 41075,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42516,
											"end": 42669,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 42516,
											"end": 42669,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42610,
											"end": 42662,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 16939,
											"end": 16949,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 42643,
											"end": 42651,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 42653,
											"end": 42661,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 42610,
											"end": 42628,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 42610,
											"end": 42662,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43596,
											"end": 43910,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 43596,
											"end": 43910,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43764,
											"end": 43805,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 16939,
											"end": 16949,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 43797,
											"end": 43804,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 43764,
											"end": 43782,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 43764,
											"end": 43805,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43764,
											"end": 43805,
											"name": "tag",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 43764,
											"end": 43805,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43756,
											"end": 43855,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 43756,
											"end": 43855,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 43756,
											"end": 43855,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 43756,
											"end": 43855,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 43756,
											"end": 43855,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43756,
											"end": 43855,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43756,
											"end": 43855,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 43756,
											"end": 43855,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43756,
											"end": 43855,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 43756,
											"end": 43855,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43756,
											"end": 43855,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 43756,
											"end": 43855,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43756,
											"end": 43855,
											"name": "tag",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 43756,
											"end": 43855,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43865,
											"end": 43903,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 43879,
											"end": 43883,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 43885,
											"end": 43887,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 43889,
											"end": 43896,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 43898,
											"end": 43902,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 43865,
											"end": 43878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 43865,
											"end": 43903,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43865,
											"end": 43903,
											"name": "tag",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 43865,
											"end": 43903,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43596,
											"end": 43910,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43596,
											"end": 43910,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43596,
											"end": 43910,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43596,
											"end": 43910,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43596,
											"end": 43910,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41148,
											"end": 41424,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 41148,
											"end": 41424,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41221,
											"end": 41234,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 41246,
											"end": 41269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 41261,
											"end": 41268,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 41246,
											"end": 41260,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 41246,
											"end": 41269,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41246,
											"end": 41269,
											"name": "tag",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 41246,
											"end": 41269,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41280,
											"end": 41301,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 41304,
											"end": 41314,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 41304,
											"end": 41312,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 41304,
											"end": 41314,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41304,
											"end": 41314,
											"name": "tag",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 41304,
											"end": 41314,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41280,
											"end": 41314,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41280,
											"end": 41314,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41355,
											"end": 41356,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 41337,
											"end": 41344,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41331,
											"end": 41352,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 41331,
											"end": 41356,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 41331,
											"end": 41417,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 41331,
											"end": 41417,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 41331,
											"end": 41417,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 41331,
											"end": 41417,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 41331,
											"end": 41417,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41331,
											"end": 41417,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 41331,
											"end": 41417,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41331,
											"end": 41417,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 41331,
											"end": 41417,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 41331,
											"end": 41417,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41331,
											"end": 41417,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 41331,
											"end": 41417,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41331,
											"end": 41417,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 41331,
											"end": 41417,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41331,
											"end": 41417,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 41331,
											"end": 41417,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41331,
											"end": 41417,
											"name": "tag",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 41331,
											"end": 41417,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41383,
											"end": 41390,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41392,
											"end": 41410,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 41392,
											"end": 41399,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 41392,
											"end": 41408,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 41392,
											"end": 41410,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41392,
											"end": 41410,
											"name": "tag",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 41392,
											"end": 41410,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41366,
											"end": 41411,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 41366,
											"end": 41411,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 41366,
											"end": 41411,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 41366,
											"end": 41411,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41366,
											"end": 41411,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 41366,
											"end": 41411,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 41366,
											"end": 41411,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41366,
											"end": 41411,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41366,
											"end": 41411,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 41366,
											"end": 41411,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41366,
											"end": 41411,
											"name": "tag",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 41366,
											"end": 41411,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41366,
											"end": 41411,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 41366,
											"end": 41411,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 41366,
											"end": 41411,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 41366,
											"end": 41411,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41366,
											"end": 41411,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 41366,
											"end": 41411,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 41366,
											"end": 41411,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 41366,
											"end": 41411,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41366,
											"end": 41411,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 41366,
											"end": 41411,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41366,
											"end": 41411,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 41366,
											"end": 41411,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 41331,
											"end": 41417,
											"name": "tag",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 41331,
											"end": 41417,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41324,
											"end": 41417,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 41148,
											"end": 41424,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 41148,
											"end": 41424,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19137,
											"end": 19335,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 19137,
											"end": 19335,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18150,
											"end": 18163,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 18150,
											"end": 18161,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 18150,
											"end": 18163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18150,
											"end": 18163,
											"name": "tag",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 18150,
											"end": 18163,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 19225,
											"end": 19247,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19225,
											"end": 19247,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19217,
											"end": 19290,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 19217,
											"end": 19290,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19217,
											"end": 19290,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19217,
											"end": 19290,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 19217,
											"end": 19290,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19217,
											"end": 19290,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8830,
											"end": 8832,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 19217,
											"end": 19290,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 19217,
											"end": 19290,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19217,
											"end": 19290,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8812,
											"end": 8833,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8869,
											"end": 8871,
											"name": "PUSH",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 8849,
											"end": 8867,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 8849,
											"end": 8867,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8849,
											"end": 8867,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8842,
											"end": 8872,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8908,
											"end": 8942,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 8888,
											"end": 8906,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 8888,
											"end": 8906,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8888,
											"end": 8906,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8881,
											"end": 8943,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8959,
											"end": 8977,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 8959,
											"end": 8977,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8959,
											"end": 8977,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8952,
											"end": 8988,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9005,
											"end": 9024,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 9005,
											"end": 9024,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19217,
											"end": 19290,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 8628,
											"end": 9030,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 19217,
											"end": 19290,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 19217,
											"end": 19290,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19300,
											"end": 19328,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 19319,
											"end": 19327,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19300,
											"end": 19318,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 19300,
											"end": 19328,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19300,
											"end": 19328,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 19300,
											"end": 19328,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19137,
											"end": 19335,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19137,
											"end": 19335,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 56652,
											"end": 56874,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 56652,
											"end": 56874,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56754,
											"end": 56758,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 56777,
											"end": 56827,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 56777,
											"end": 56827,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "780E9D63"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 56777,
											"end": 56827,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 56777,
											"end": 56827,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56777,
											"end": 56867,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 56777,
											"end": 56867,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 56777,
											"end": 56867,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 56831,
											"end": 56867,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 56855,
											"end": 56866,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 56831,
											"end": 56854,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 56831,
											"end": 56867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 51813,
											"end": 51946,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 51813,
											"end": 51946,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 45668,
											"end": 45672,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 45277,
											"end": 45293,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 45277,
											"end": 45293,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 45277,
											"end": 45293,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 45277,
											"end": 45284,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 45277,
											"end": 45293,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 45277,
											"end": 45293,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 45277,
											"end": 45293,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 45277,
											"end": 45293,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45277,
											"end": 45293,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 45277,
											"end": 45293,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 45277,
											"end": 45293,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 51886,
											"end": 51939,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 51886,
											"end": 51939,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 51886,
											"end": 51939,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 51886,
											"end": 51939,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 51886,
											"end": 51939,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 51886,
											"end": 51939,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7566,
											"end": 7568,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 51886,
											"end": 51939,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 51886,
											"end": 51939,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 51886,
											"end": 51939,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7548,
											"end": 7569,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7605,
											"end": 7607,
											"name": "PUSH",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 7585,
											"end": 7603,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 7585,
											"end": 7603,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7585,
											"end": 7603,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7578,
											"end": 7608,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "115490CDCC8C4E881A5B9D985B1A59081D1BDAD95B881251"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "42"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7624,
											"end": 7642,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 7624,
											"end": 7642,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7624,
											"end": 7642,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7617,
											"end": 7671,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7688,
											"end": 7706,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 7688,
											"end": 7706,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 51886,
											"end": 51939,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 7364,
											"end": 7712,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 51115,
											"end": 51286,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 51115,
											"end": 51286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51189,
											"end": 51213,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 51189,
											"end": 51213,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 51189,
											"end": 51213,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 51189,
											"end": 51213,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 51189,
											"end": 51204,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 51189,
											"end": 51213,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 51189,
											"end": 51213,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 51189,
											"end": 51213,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 51189,
											"end": 51213,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51189,
											"end": 51213,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 51189,
											"end": 51218,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51189,
											"end": 51218,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 51189,
											"end": 51218,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 51189,
											"end": 51218,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 51189,
											"end": 51218,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 51189,
											"end": 51218,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51189,
											"end": 51218,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 51189,
											"end": 51218,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 51189,
											"end": 51218,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51189,
											"end": 51218,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 51189,
											"end": 51218,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 51189,
											"end": 51213,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 51189,
											"end": 51213,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51242,
											"end": 51265,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 51189,
											"end": 51213,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 51242,
											"end": 51256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 51242,
											"end": 51265,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 51242,
											"end": 51265,
											"name": "tag",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 51242,
											"end": 51265,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 51233,
											"end": 51279,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 51233,
											"end": 51279,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 51233,
											"end": 51279,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 51233,
											"end": 51279,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 51233,
											"end": 51279,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 51233,
											"end": 51279,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 51233,
											"end": 51279,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51233,
											"end": 51279,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 51233,
											"end": 51279,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 51233,
											"end": 51279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51233,
											"end": 51279,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 51115,
											"end": 51286,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 51115,
											"end": 51286,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 51115,
											"end": 51286,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 45887,
											"end": 46148,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 45887,
											"end": 46148,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 45980,
											"end": 45984,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 45996,
											"end": 46009,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 46012,
											"end": 46035,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 46027,
											"end": 46034,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 46012,
											"end": 46026,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 46012,
											"end": 46035,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 46012,
											"end": 46035,
											"name": "tag",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 46012,
											"end": 46035,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 45996,
											"end": 46035,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45996,
											"end": 46035,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 46064,
											"end": 46069,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 46053,
											"end": 46069,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 46053,
											"end": 46060,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 46053,
											"end": 46069,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 46053,
											"end": 46069,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 46053,
											"end": 46105,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 46053,
											"end": 46105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 46053,
											"end": 46105,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 42855,
											"end": 42880,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42855,
											"end": 42880,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 42855,
											"end": 42880,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 42832,
											"end": 42836,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 42855,
											"end": 42880,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42855,
											"end": 42880,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42855,
											"end": 42880,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 42855,
											"end": 42873,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 42855,
											"end": 42880,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 42855,
											"end": 42880,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42855,
											"end": 42880,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42855,
											"end": 42880,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 42855,
											"end": 42880,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 42855,
											"end": 42880,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42855,
											"end": 42880,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 42855,
											"end": 42880,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 42855,
											"end": 42890,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 42855,
											"end": 42890,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 42855,
											"end": 42890,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 42855,
											"end": 42890,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 42855,
											"end": 42890,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 42855,
											"end": 42890,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 42855,
											"end": 42890,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42855,
											"end": 42890,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 42855,
											"end": 42890,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 42855,
											"end": 42890,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 42855,
											"end": 42890,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 42855,
											"end": 42890,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 46073,
											"end": 46105,
											"name": "tag",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 46073,
											"end": 46105,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46053,
											"end": 46140,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 46053,
											"end": 46140,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 46053,
											"end": 46140,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 46053,
											"end": 46140,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 46133,
											"end": 46140,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 46109,
											"end": 46140,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 46109,
											"end": 46129,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 46121,
											"end": 46128,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 46109,
											"end": 46120,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 46109,
											"end": 46129,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 46109,
											"end": 46129,
											"name": "tag",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 46109,
											"end": 46129,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 46109,
											"end": 46140,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 46109,
											"end": 46140,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 46053,
											"end": 46140,
											"name": "tag",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 46053,
											"end": 46140,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46045,
											"end": 46141,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 45887,
											"end": 46148,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 45887,
											"end": 46148,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 49770,
											"end": 51003,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 49770,
											"end": 51003,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49924,
											"end": 49928,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 49897,
											"end": 49928,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 49897,
											"end": 49920,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 49912,
											"end": 49919,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 49897,
											"end": 49911,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 49897,
											"end": 49920,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 49897,
											"end": 49920,
											"name": "tag",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 49897,
											"end": 49920,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 49897,
											"end": 49928,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 49897,
											"end": 49928,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 49889,
											"end": 49970,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 49889,
											"end": 49970,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 49889,
											"end": 49970,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 49889,
											"end": 49970,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 49889,
											"end": 49970,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49889,
											"end": 49970,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 49889,
											"end": 49970,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 49889,
											"end": 49970,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 49889,
											"end": 49970,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 49889,
											"end": 49970,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49889,
											"end": 49970,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 49889,
											"end": 49970,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 49889,
											"end": 49970,
											"name": "tag",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 49889,
											"end": 49970,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 49988,
											"end": 50004,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 49988,
											"end": 50004,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 49980,
											"end": 50045,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 49980,
											"end": 50045,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 49980,
											"end": 50045,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 49980,
											"end": 50045,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 49980,
											"end": 50045,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49980,
											"end": 50045,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9643,
											"end": 9645,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 49980,
											"end": 50045,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 49980,
											"end": 50045,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 49980,
											"end": 50045,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9625,
											"end": 9646,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9682,
											"end": 9684,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 9662,
											"end": 9680,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9662,
											"end": 9680,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9662,
											"end": 9680,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9655,
											"end": 9685,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9721,
											"end": 9755,
											"name": "PUSH",
											"source": 1,
											"value": "4552433732313A207472616E7366657220746F20746865207A65726F20616464"
										},
										{
											"begin": 9701,
											"end": 9719,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 9701,
											"end": 9719,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9701,
											"end": 9719,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9694,
											"end": 9756,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9772,
											"end": 9790,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 9772,
											"end": 9790,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9772,
											"end": 9790,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9765,
											"end": 9799,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9816,
											"end": 9835,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 9816,
											"end": 9835,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 49980,
											"end": 50045,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 9441,
											"end": 9841,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 49980,
											"end": 50045,
											"name": "tag",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 49980,
											"end": 50045,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50056,
											"end": 50098,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 50077,
											"end": 50081,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 50083,
											"end": 50085,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 50087,
											"end": 50094,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 50096,
											"end": 50097,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 50056,
											"end": 50076,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 50056,
											"end": 50098,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 50056,
											"end": 50098,
											"name": "tag",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 50056,
											"end": 50098,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50225,
											"end": 50229,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 50198,
											"end": 50229,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 50198,
											"end": 50221,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 50213,
											"end": 50220,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 50198,
											"end": 50212,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 50198,
											"end": 50221,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 50198,
											"end": 50221,
											"name": "tag",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 50198,
											"end": 50221,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 50198,
											"end": 50229,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 50198,
											"end": 50229,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 50190,
											"end": 50271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 50190,
											"end": 50271,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50190,
											"end": 50271,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 50190,
											"end": 50271,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 50190,
											"end": 50271,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 50190,
											"end": 50271,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 50190,
											"end": 50271,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 50190,
											"end": 50271,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 50190,
											"end": 50271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 50190,
											"end": 50271,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 50190,
											"end": 50271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 50190,
											"end": 50271,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 50190,
											"end": 50271,
											"name": "tag",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 50190,
											"end": 50271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50340,
											"end": 50364,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 50340,
											"end": 50364,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 50340,
											"end": 50364,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 50340,
											"end": 50364,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 50340,
											"end": 50355,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 50340,
											"end": 50364,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 50340,
											"end": 50364,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 50340,
											"end": 50364,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 50340,
											"end": 50364,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 50340,
											"end": 50364,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 50340,
											"end": 50364,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50340,
											"end": 50364,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 50340,
											"end": 50364,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 50333,
											"end": 50364,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50333,
											"end": 50364,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 50333,
											"end": 50364,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 50333,
											"end": 50364,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 50333,
											"end": 50364,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 50333,
											"end": 50364,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 50333,
											"end": 50364,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 50333,
											"end": 50364,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 50808,
											"end": 50823,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 50808,
											"end": 50823,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 50808,
											"end": 50823,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 50808,
											"end": 50823,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50808,
											"end": 50823,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 50808,
											"end": 50823,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 50808,
											"end": 50817,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 50808,
											"end": 50823,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 50808,
											"end": 50823,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 50808,
											"end": 50823,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 50808,
											"end": 50823,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 50808,
											"end": 50823,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 50808,
											"end": 50828,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50808,
											"end": 50828,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 50808,
											"end": 50828,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 50808,
											"end": 50828,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 50808,
											"end": 50828,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 50842,
											"end": 50855,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 50842,
											"end": 50855,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 50842,
											"end": 50855,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 50842,
											"end": 50855,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50842,
											"end": 50855,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 50842,
											"end": 50855,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 50842,
											"end": 50855,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 50842,
											"end": 50855,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 50842,
											"end": 50855,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 50842,
											"end": 50860,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50842,
											"end": 50860,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 50333,
											"end": 50364,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 50842,
											"end": 50860,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 50842,
											"end": 50860,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 50842,
											"end": 50860,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 50880,
											"end": 50896,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 50880,
											"end": 50896,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 50880,
											"end": 50896,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 50880,
											"end": 50887,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 50880,
											"end": 50896,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 50880,
											"end": 50896,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 50880,
											"end": 50896,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 50880,
											"end": 50896,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 50880,
											"end": 50896,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 50880,
											"end": 50896,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 50880,
											"end": 50901,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50880,
											"end": 50901,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 50880,
											"end": 50901,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 50880,
											"end": 50901,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 50880,
											"end": 50901,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 50880,
											"end": 50901,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 50880,
											"end": 50901,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 50880,
											"end": 50901,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 50880,
											"end": 50901,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 50880,
											"end": 50901,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 50917,
											"end": 50944,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 50917,
											"end": 50944,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 50356,
											"end": 50363,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 50356,
											"end": 50363,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 50917,
											"end": 50944,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 50917,
											"end": 50944,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 50917,
											"end": 50944,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 41885,
											"end": 42221,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41815,
											"end": 42221,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41815,
											"end": 42221,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41815,
											"end": 42221,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18415,
											"end": 18545,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 18415,
											"end": 18545,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18329,
											"end": 18335,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 18329,
											"end": 18335,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18329,
											"end": 18335,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16939,
											"end": 16949,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 18478,
											"end": 18501,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 18470,
											"end": 18538,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 18470,
											"end": 18538,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18470,
											"end": 18538,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18470,
											"end": 18538,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 18470,
											"end": 18538,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18470,
											"end": 18538,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10048,
											"end": 10050,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 18470,
											"end": 18538,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 18470,
											"end": 18538,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18470,
											"end": 18538,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10030,
											"end": 10051,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10030,
											"end": 10051,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10030,
											"end": 10051,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10067,
											"end": 10085,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 10067,
											"end": 10085,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10067,
											"end": 10085,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10060,
											"end": 10090,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10126,
											"end": 10160,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 10106,
											"end": 10124,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 10106,
											"end": 10124,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10106,
											"end": 10124,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10099,
											"end": 10161,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10178,
											"end": 10196,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 10178,
											"end": 10196,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18470,
											"end": 18538,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 9846,
											"end": 10202,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 46478,
											"end": 46586,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 46478,
											"end": 46586,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46553,
											"end": 46579,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 46563,
											"end": 46565,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 46567,
											"end": 46574,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 46553,
											"end": 46579,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 46553,
											"end": 46579,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 46553,
											"end": 46579,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 46553,
											"end": 46579,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 46553,
											"end": 46579,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 46553,
											"end": 46579,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 46553,
											"end": 46579,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 46553,
											"end": 46579,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 46553,
											"end": 46579,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 46553,
											"end": 46579,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 46553,
											"end": 46579,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 46553,
											"end": 46579,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 46553,
											"end": 46562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 46553,
											"end": 46579,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19489,
											"end": 19676,
											"name": "tag",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 19489,
											"end": 19676,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19581,
											"end": 19587,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 19581,
											"end": 19587,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19581,
											"end": 19587,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 19597,
											"end": 19614,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 19597,
											"end": 19614,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19597,
											"end": 19614,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 19597,
											"end": 19614,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 19597,
											"end": 19614,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19597,
											"end": 19614,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19597,
											"end": 19614,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 19597,
											"end": 19614,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19597,
											"end": 19614,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 19597,
											"end": 19614,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 19629,
											"end": 19669,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19629,
											"end": 19669,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19581,
											"end": 19587,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19581,
											"end": 19587,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19581,
											"end": 19587,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19597,
											"end": 19614,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19581,
											"end": 19587,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19581,
											"end": 19587,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19629,
											"end": 19669,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 19629,
											"end": 19669,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19562,
											"end": 19578,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19562,
											"end": 19578,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19629,
											"end": 19669,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 19552,
											"end": 19676,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19489,
											"end": 19676,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19489,
											"end": 19676,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 51422,
											"end": 51729,
											"name": "tag",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 51422,
											"end": 51729,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51572,
											"end": 51580,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 51563,
											"end": 51580,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 51563,
											"end": 51568,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 51563,
											"end": 51580,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 51563,
											"end": 51580,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 51555,
											"end": 51610,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 51555,
											"end": 51610,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 51555,
											"end": 51610,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 51555,
											"end": 51610,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 51555,
											"end": 51610,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 51555,
											"end": 51610,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10409,
											"end": 10411,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 51555,
											"end": 51610,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 51555,
											"end": 51610,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 51555,
											"end": 51610,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10391,
											"end": 10412,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10448,
											"end": 10450,
											"name": "PUSH",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 10428,
											"end": 10446,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 10428,
											"end": 10446,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10428,
											"end": 10446,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10421,
											"end": 10451,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10487,
											"end": 10514,
											"name": "PUSH",
											"source": 1,
											"value": "4552433732313A20617070726F766520746F2063616C6C657200000000000000"
										},
										{
											"begin": 10467,
											"end": 10485,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 10467,
											"end": 10485,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10467,
											"end": 10485,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10460,
											"end": 10515,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10532,
											"end": 10550,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 10532,
											"end": 10550,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 51555,
											"end": 51610,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 10207,
											"end": 10556,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 51555,
											"end": 51610,
											"name": "tag",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 51555,
											"end": 51610,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 51620,
											"end": 51645,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 51620,
											"end": 51645,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 51620,
											"end": 51645,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 51620,
											"end": 51645,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 51620,
											"end": 51645,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 51620,
											"end": 51645,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 51620,
											"end": 51645,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 51620,
											"end": 51638,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 51620,
											"end": 51645,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 51620,
											"end": 51645,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51620,
											"end": 51645,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 51620,
											"end": 51645,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 51620,
											"end": 51645,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 51620,
											"end": 51645,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51620,
											"end": 51645,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 51620,
											"end": 51645,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 51620,
											"end": 51655,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 51620,
											"end": 51655,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 51620,
											"end": 51655,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 51620,
											"end": 51655,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51620,
											"end": 51655,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 51620,
											"end": 51655,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 51620,
											"end": 51655,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 51620,
											"end": 51655,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 51620,
											"end": 51655,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 51620,
											"end": 51655,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 51620,
											"end": 51655,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 51620,
											"end": 51655,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51620,
											"end": 51655,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 51620,
											"end": 51666,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51620,
											"end": 51666,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 51620,
											"end": 51666,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 51620,
											"end": 51666,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 51620,
											"end": 51666,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 51620,
											"end": 51666,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 51620,
											"end": 51666,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51620,
											"end": 51666,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 51620,
											"end": 51666,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 51620,
											"end": 51666,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51620,
											"end": 51666,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 51620,
											"end": 51666,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 51681,
											"end": 51722,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 51681,
											"end": 51722,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 540,
											"end": 581,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 540,
											"end": 581,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 540,
											"end": 581,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 51681,
											"end": 51722,
											"name": "PUSH",
											"source": 0,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 51681,
											"end": 51722,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 513,
											"end": 531,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 51681,
											"end": 51722,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 51681,
											"end": 51722,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 51681,
											"end": 51722,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51681,
											"end": 51722,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 51681,
											"end": 51722,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 51681,
											"end": 51722,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51681,
											"end": 51722,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 51422,
											"end": 51729,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 51422,
											"end": 51729,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 51422,
											"end": 51729,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 51422,
											"end": 51729,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 44771,
											"end": 45076,
											"name": "tag",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 44771,
											"end": 45076,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44921,
											"end": 44949,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 44931,
											"end": 44935,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 44937,
											"end": 44939,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 44941,
											"end": 44948,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 44921,
											"end": 44930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 44921,
											"end": 44949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 44921,
											"end": 44949,
											"name": "tag",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 44921,
											"end": 44949,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44967,
											"end": 45014,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "273"
										},
										{
											"begin": 44990,
											"end": 44994,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 44996,
											"end": 44998,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 45000,
											"end": 45007,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 45009,
											"end": 45013,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 44967,
											"end": 44989,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "274"
										},
										{
											"begin": 44967,
											"end": 45014,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 44967,
											"end": 45014,
											"name": "tag",
											"source": 0,
											"value": "273"
										},
										{
											"begin": 44967,
											"end": 45014,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44959,
											"end": 45069,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 44959,
											"end": 45069,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 44959,
											"end": 45069,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 44959,
											"end": 45069,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 44959,
											"end": 45069,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 44959,
											"end": 45069,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 44959,
											"end": 45069,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 44959,
											"end": 45069,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 44959,
											"end": 45069,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 44959,
											"end": 45069,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44959,
											"end": 45069,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 44959,
											"end": 45069,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 62728,
											"end": 62863,
											"name": "tag",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 62728,
											"end": 62863,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 62780,
											"end": 62793,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 62805,
											"end": 62856,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 62805,
											"end": 62856,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 62805,
											"end": 62856,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 62805,
											"end": 62856,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 62805,
											"end": 62856,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 62805,
											"end": 62856,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 62805,
											"end": 62856,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 62805,
											"end": 62856,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 62805,
											"end": 62856,
											"name": "PUSH",
											"source": 0,
											"value": "2A"
										},
										{
											"begin": 62805,
											"end": 62856,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 62805,
											"end": 62856,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 62805,
											"end": 62856,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 62805,
											"end": 62856,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 62805,
											"end": 62856,
											"name": "PUSH data",
											"source": 0,
											"value": "4FF9D37B4D45DB38E4BE6A16CDA3C01DFC5C1CAFE39C931D51D438268FC8FB1"
										},
										{
											"begin": 62805,
											"end": 62856,
											"name": "PUSH",
											"source": 0,
											"value": "2A"
										},
										{
											"begin": 62805,
											"end": 62856,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 62805,
											"end": 62856,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 62805,
											"end": 62856,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 62805,
											"end": 62856,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 62728,
											"end": 62863,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 62728,
											"end": 62863,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14359,
											"end": 15055,
											"name": "tag",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 14359,
											"end": 15055,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14415,
											"end": 14428,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 14464,
											"end": 14478,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14481,
											"end": 14498,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 14492,
											"end": 14497,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14481,
											"end": 14491,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "281"
										},
										{
											"begin": 14481,
											"end": 14498,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14481,
											"end": 14498,
											"name": "tag",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 14481,
											"end": 14498,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14501,
											"end": 14502,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 14481,
											"end": 14502,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14464,
											"end": 14502,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14464,
											"end": 14502,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14516,
											"end": 14536,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14550,
											"end": 14556,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14539,
											"end": 14557,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14539,
											"end": 14557,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14539,
											"end": 14557,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 14539,
											"end": 14557,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14539,
											"end": 14557,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "283"
										},
										{
											"begin": 14539,
											"end": 14557,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14539,
											"end": 14557,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "283"
										},
										{
											"begin": 14539,
											"end": 14557,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "284"
										},
										{
											"begin": 14539,
											"end": 14557,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14539,
											"end": 14557,
											"name": "tag",
											"source": 0,
											"value": "283"
										},
										{
											"begin": 14539,
											"end": 14557,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14539,
											"end": 14557,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14539,
											"end": 14557,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14539,
											"end": 14557,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14539,
											"end": 14557,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14539,
											"end": 14557,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14539,
											"end": 14557,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14539,
											"end": 14557,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14539,
											"end": 14557,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 14539,
											"end": 14557,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14539,
											"end": 14557,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 14539,
											"end": 14557,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 14539,
											"end": 14557,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14539,
											"end": 14557,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14539,
											"end": 14557,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14539,
											"end": 14557,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14539,
											"end": 14557,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14539,
											"end": 14557,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14539,
											"end": 14557,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14539,
											"end": 14557,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14539,
											"end": 14557,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14539,
											"end": 14557,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "285"
										},
										{
											"begin": 14539,
											"end": 14557,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14539,
											"end": 14557,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14539,
											"end": 14557,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14539,
											"end": 14557,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14539,
											"end": 14557,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14539,
											"end": 14557,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14539,
											"end": 14557,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 14539,
											"end": 14557,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14539,
											"end": 14557,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 14539,
											"end": 14557,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14539,
											"end": 14557,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14539,
											"end": 14557,
											"name": "tag",
											"source": 0,
											"value": "285"
										},
										{
											"begin": 14539,
											"end": 14557,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14516,
											"end": 14557,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14677,
											"end": 14705,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14677,
											"end": 14705,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14677,
											"end": 14705,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14693,
											"end": 14695,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14677,
											"end": 14705,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14732,
											"end": 15012,
											"name": "tag",
											"source": 0,
											"value": "286"
										},
										{
											"begin": 14732,
											"end": 15012,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 14763,
											"end": 14768,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "181899199A1A9B1B9C1CB0B131B232B3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "81"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14897,
											"end": 14899,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 14886,
											"end": 14900,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 14886,
											"end": 14900,
											"name": "MOD",
											"source": 0
										},
										{
											"begin": 14881,
											"end": 14911,
											"name": "BYTE",
											"source": 0
										},
										{
											"begin": 14763,
											"end": 14768,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14868,
											"end": 14912,
											"name": "MSTORE8",
											"source": 0
										},
										{
											"begin": 14956,
											"end": 14958,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 14947,
											"end": 14958,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 14947,
											"end": 14958,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 14947,
											"end": 14958,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14976,
											"end": 14997,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 14732,
											"end": 15012,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "286"
										},
										{
											"begin": 14976,
											"end": 14997,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15032,
											"end": 15038,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 14359,
											"end": 15055,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14359,
											"end": 15055,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 39917,
											"end": 40217,
											"name": "tag",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 39917,
											"end": 40217,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40019,
											"end": 40023,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 40054,
											"end": 40094,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 40054,
											"end": 40094,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80AC58CD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 40054,
											"end": 40094,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 40054,
											"end": 40094,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40054,
											"end": 40158,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "293"
										},
										{
											"begin": 40054,
											"end": 40158,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 40110,
											"end": 40158,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 40110,
											"end": 40158,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5B5E139F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 40110,
											"end": 40158,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 40054,
											"end": 40158,
											"name": "tag",
											"source": 0,
											"value": "293"
										},
										{
											"begin": 40054,
											"end": 40158,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40054,
											"end": 40210,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40054,
											"end": 40210,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 40054,
											"end": 40210,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1FFC9A7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 31721,
											"end": 31761,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 31721,
											"end": 31761,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31721,
											"end": 31761,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 40174,
											"end": 40210,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 31613,
											"end": 31768,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 63119,
											"end": 63348,
											"name": "tag",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 63119,
											"end": 63348,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 63285,
											"end": 63341,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 63312,
											"end": 63316,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 63318,
											"end": 63320,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 63322,
											"end": 63329,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 63331,
											"end": 63340,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 63285,
											"end": 63311,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "301"
										},
										{
											"begin": 63285,
											"end": 63341,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 46807,
											"end": 47116,
											"name": "tag",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 46807,
											"end": 47116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46931,
											"end": 46949,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "304"
										},
										{
											"begin": 46937,
											"end": 46939,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 46941,
											"end": 46948,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 46931,
											"end": 46936,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "305"
										},
										{
											"begin": 46931,
											"end": 46949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 46931,
											"end": 46949,
											"name": "tag",
											"source": 0,
											"value": "304"
										},
										{
											"begin": 46931,
											"end": 46949,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46980,
											"end": 47033,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "306"
										},
										{
											"begin": 47011,
											"end": 47012,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 47015,
											"end": 47017,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 47019,
											"end": 47026,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 47028,
											"end": 47032,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 46980,
											"end": 47002,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "274"
										},
										{
											"begin": 46980,
											"end": 47033,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 46980,
											"end": 47033,
											"name": "tag",
											"source": 0,
											"value": "306"
										},
										{
											"begin": 46980,
											"end": 47033,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46959,
											"end": 47109,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 46959,
											"end": 47109,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 46959,
											"end": 47109,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 46959,
											"end": 47109,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 46959,
											"end": 47109,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 46959,
											"end": 47109,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 46959,
											"end": 47109,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 46959,
											"end": 47109,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 46959,
											"end": 47109,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 46959,
											"end": 47109,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46959,
											"end": 47109,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 46959,
											"end": 47109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 52498,
											"end": 53329,
											"name": "tag",
											"source": 0,
											"value": "274"
										},
										{
											"begin": 52498,
											"end": 53329,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52647,
											"end": 52651,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 52667,
											"end": 52680,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 52667,
											"end": 52680,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21166,
											"end": 21185,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 21166,
											"end": 21189,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 52663,
											"end": 53323,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "312"
										},
										{
											"begin": 52663,
											"end": 53323,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 52702,
											"end": 52773,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 52702,
											"end": 52773,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A85BD01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 52702,
											"end": 52773,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 52702,
											"end": 52773,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 52702,
											"end": 52738,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 52702,
											"end": 52738,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 52702,
											"end": 52738,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52702,
											"end": 52738,
											"name": "PUSH",
											"source": 0,
											"value": "150B7A02"
										},
										{
											"begin": 52702,
											"end": 52738,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52702,
											"end": 52773,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "314"
										},
										{
											"begin": 52702,
											"end": 52773,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16939,
											"end": 16949,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 16939,
											"end": 16949,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52753,
											"end": 52757,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 52753,
											"end": 52757,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52759,
											"end": 52766,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 52759,
											"end": 52766,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52768,
											"end": 52772,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 52768,
											"end": 52772,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52702,
											"end": 52773,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 52702,
											"end": 52773,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 52702,
											"end": 52773,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "315"
										},
										{
											"begin": 52702,
											"end": 52773,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 52702,
											"end": 52773,
											"name": "tag",
											"source": 0,
											"value": "314"
										},
										{
											"begin": 52702,
											"end": 52773,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52702,
											"end": 52773,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 52702,
											"end": 52773,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 52702,
											"end": 52773,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 52702,
											"end": 52773,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 52702,
											"end": 52773,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 52702,
											"end": 52773,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 52702,
											"end": 52773,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 52702,
											"end": 52773,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 52702,
											"end": 52773,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 52702,
											"end": 52773,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 52702,
											"end": 52773,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 52702,
											"end": 52773,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 52702,
											"end": 52773,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 52702,
											"end": 52773,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 52702,
											"end": 52773,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 52702,
											"end": 52773,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 52702,
											"end": 52773,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 52702,
											"end": 52773,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "316"
										},
										{
											"begin": 52702,
											"end": 52773,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 52702,
											"end": 52773,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 52702,
											"end": 52773,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 52702,
											"end": 52773,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 52702,
											"end": 52773,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 52702,
											"end": 52773,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 52702,
											"end": 52773,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52702,
											"end": 52773,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 52702,
											"end": 52773,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 52702,
											"end": 52773,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 52702,
											"end": 52773,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 52702,
											"end": 52773,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 52702,
											"end": 52773,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52702,
											"end": 52773,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 52702,
											"end": 52773,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 52702,
											"end": 52773,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "317"
										},
										{
											"begin": 52702,
											"end": 52773,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 52702,
											"end": 52773,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 52702,
											"end": 52773,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 52702,
											"end": 52773,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52702,
											"end": 52773,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "318"
										},
										{
											"begin": 52702,
											"end": 52773,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 52702,
											"end": 52773,
											"name": "tag",
											"source": 0,
											"value": "317"
										},
										{
											"begin": 52702,
											"end": 52773,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52702,
											"end": 52773,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 52702,
											"end": 52773,
											"name": "tag",
											"source": 0,
											"value": "316"
										},
										{
											"begin": 52702,
											"end": 52773,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52698,
											"end": 53271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "319"
										},
										{
											"begin": 52698,
											"end": 53271,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 52698,
											"end": 53271,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 52698,
											"end": 53271,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 52698,
											"end": 53271,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 52698,
											"end": 53271,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 52698,
											"end": 53271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "324"
										},
										{
											"begin": 52698,
											"end": 53271,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 52698,
											"end": 53271,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 52698,
											"end": 53271,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 52698,
											"end": 53271,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 52698,
											"end": 53271,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 52698,
											"end": 53271,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 52698,
											"end": 53271,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 52698,
											"end": 53271,
											"name": "PUSH",
											"source": 0,
											"value": "3F"
										},
										{
											"begin": 52698,
											"end": 53271,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 52698,
											"end": 53271,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 52698,
											"end": 53271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 52698,
											"end": 53271,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 52698,
											"end": 53271,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 52698,
											"end": 53271,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 52698,
											"end": 53271,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 52698,
											"end": 53271,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 52698,
											"end": 53271,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 52698,
											"end": 53271,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 52698,
											"end": 53271,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 52698,
											"end": 53271,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 52698,
											"end": 53271,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 52698,
											"end": 53271,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 52698,
											"end": 53271,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 52698,
											"end": 53271,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 52698,
											"end": 53271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "323"
										},
										{
											"begin": 52698,
											"end": 53271,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 52698,
											"end": 53271,
											"name": "tag",
											"source": 0,
											"value": "324"
										},
										{
											"begin": 52698,
											"end": 53271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52698,
											"end": 53271,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 52698,
											"end": 53271,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 52698,
											"end": 53271,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 52698,
											"end": 53271,
											"name": "tag",
											"source": 0,
											"value": "323"
										},
										{
											"begin": 52698,
											"end": 53271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52698,
											"end": 53271,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 52940,
											"end": 52946,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 52940,
											"end": 52953,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 52957,
											"end": 52958,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 52940,
											"end": 52958,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 52936,
											"end": 53257,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "325"
										},
										{
											"begin": 52936,
											"end": 53257,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 52982,
											"end": 53042,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 52982,
											"end": 53042,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 52982,
											"end": 53042,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 52982,
											"end": 53042,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 52982,
											"end": 53042,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 52982,
											"end": 53042,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 52982,
											"end": 53042,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 52982,
											"end": 53042,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52982,
											"end": 53042,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 52982,
											"end": 53042,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 52936,
											"end": 53257,
											"name": "tag",
											"source": 0,
											"value": "325"
										},
										{
											"begin": 52936,
											"end": 53257,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53209,
											"end": 53215,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53203,
											"end": 53216,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 53194,
											"end": 53200,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53190,
											"end": 53192,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 53186,
											"end": 53201,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 53179,
											"end": 53217,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 52698,
											"end": 53271,
											"name": "tag",
											"source": 0,
											"value": "319"
										},
										{
											"begin": 52698,
											"end": 53271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 52823,
											"end": 52874,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A85BD01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 52823,
											"end": 52874,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 52823,
											"end": 52874,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 52816,
											"end": 52874,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 52816,
											"end": 52874,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 52663,
											"end": 53323,
											"name": "tag",
											"source": 0,
											"value": "312"
										},
										{
											"begin": 52663,
											"end": 53323,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 53308,
											"end": 53312,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 52498,
											"end": 53329,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 52498,
											"end": 53329,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 52498,
											"end": 53329,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 52498,
											"end": 53329,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 52498,
											"end": 53329,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 52498,
											"end": 53329,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 52498,
											"end": 53329,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11332,
											"end": 12222,
											"name": "tag",
											"source": 0,
											"value": "281"
										},
										{
											"begin": 11332,
											"end": 12222,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11385,
											"end": 11392,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11385,
											"end": 11392,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "184F03E93FF9F4DAA797ED6E38ED64BF6A1F01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11460,
											"end": 11475,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11460,
											"end": 11475,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 11456,
											"end": 11555,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "331"
										},
										{
											"begin": 11456,
											"end": 11555,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "184F03E93FF9F4DAA797ED6E38ED64BF6A1F01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11495,
											"end": 11510,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11495,
											"end": 11510,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 11495,
											"end": 11510,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11538,
											"end": 11540,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11528,
											"end": 11540,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11456,
											"end": 11555,
											"name": "tag",
											"source": 0,
											"value": "331"
										},
										{
											"begin": 11456,
											"end": 11555,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11581,
											"end": 11587,
											"name": "PUSH",
											"source": 0,
											"value": "4EE2D6D415B85ACEF8100000000"
										},
										{
											"begin": 11572,
											"end": 11577,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11572,
											"end": 11587,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 11568,
											"end": 11667,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "334"
										},
										{
											"begin": 11568,
											"end": 11667,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11616,
											"end": 11622,
											"name": "PUSH",
											"source": 0,
											"value": "4EE2D6D415B85ACEF8100000000"
										},
										{
											"begin": 11607,
											"end": 11622,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11607,
											"end": 11622,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 11607,
											"end": 11622,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11650,
											"end": 11652,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11640,
											"end": 11652,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11568,
											"end": 11667,
											"name": "tag",
											"source": 0,
											"value": "334"
										},
										{
											"begin": 11568,
											"end": 11667,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11693,
											"end": 11699,
											"name": "PUSH",
											"source": 0,
											"value": "2386F26FC10000"
										},
										{
											"begin": 11684,
											"end": 11689,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11684,
											"end": 11699,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 11680,
											"end": 11779,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "337"
										},
										{
											"begin": 11680,
											"end": 11779,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11728,
											"end": 11734,
											"name": "PUSH",
											"source": 0,
											"value": "2386F26FC10000"
										},
										{
											"begin": 11719,
											"end": 11734,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11719,
											"end": 11734,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 11719,
											"end": 11734,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11762,
											"end": 11764,
											"name": "PUSH",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 11752,
											"end": 11764,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11680,
											"end": 11779,
											"name": "tag",
											"source": 0,
											"value": "337"
										},
										{
											"begin": 11680,
											"end": 11779,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11805,
											"end": 11810,
											"name": "PUSH",
											"source": 0,
											"value": "5F5E100"
										},
										{
											"begin": 11796,
											"end": 11801,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11796,
											"end": 11810,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 11792,
											"end": 11888,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "340"
										},
										{
											"begin": 11792,
											"end": 11888,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11839,
											"end": 11844,
											"name": "PUSH",
											"source": 0,
											"value": "5F5E100"
										},
										{
											"begin": 11830,
											"end": 11844,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11830,
											"end": 11844,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 11830,
											"end": 11844,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11872,
											"end": 11873,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 11862,
											"end": 11873,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11792,
											"end": 11888,
											"name": "tag",
											"source": 0,
											"value": "340"
										},
										{
											"begin": 11792,
											"end": 11888,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11914,
											"end": 11919,
											"name": "PUSH",
											"source": 0,
											"value": "2710"
										},
										{
											"begin": 11905,
											"end": 11910,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11905,
											"end": 11919,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 11901,
											"end": 11997,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "343"
										},
										{
											"begin": 11901,
											"end": 11997,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11948,
											"end": 11953,
											"name": "PUSH",
											"source": 0,
											"value": "2710"
										},
										{
											"begin": 11939,
											"end": 11953,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11939,
											"end": 11953,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 11939,
											"end": 11953,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11981,
											"end": 11982,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11971,
											"end": 11982,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11901,
											"end": 11997,
											"name": "tag",
											"source": 0,
											"value": "343"
										},
										{
											"begin": 11901,
											"end": 11997,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12023,
											"end": 12028,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 12014,
											"end": 12019,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12014,
											"end": 12028,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 12010,
											"end": 12106,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "346"
										},
										{
											"begin": 12010,
											"end": 12106,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12057,
											"end": 12062,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 12048,
											"end": 12062,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12048,
											"end": 12062,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 12048,
											"end": 12062,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12090,
											"end": 12091,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 12080,
											"end": 12091,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12010,
											"end": 12106,
											"name": "tag",
											"source": 0,
											"value": "346"
										},
										{
											"begin": 12010,
											"end": 12106,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12132,
											"end": 12137,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 12123,
											"end": 12128,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12123,
											"end": 12137,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 12119,
											"end": 12183,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 12119,
											"end": 12183,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12167,
											"end": 12168,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 12157,
											"end": 12168,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12209,
											"end": 12215,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 11332,
											"end": 12222,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11332,
											"end": 12222,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 57759,
											"end": 58649,
											"name": "tag",
											"source": 0,
											"value": "301"
										},
										{
											"begin": 57759,
											"end": 58649,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58018,
											"end": 58019,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 58006,
											"end": 58015,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 58006,
											"end": 58019,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 58002,
											"end": 58221,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 58002,
											"end": 58221,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "354"
										},
										{
											"begin": 58002,
											"end": 58221,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58147,
											"end": 58210,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 58147,
											"end": 58210,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 58147,
											"end": 58210,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 58147,
											"end": 58210,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12062,
											"end": 12064,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 58147,
											"end": 58210,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 58147,
											"end": 58210,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 58147,
											"end": 58210,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12044,
											"end": 12065,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12101,
											"end": 12103,
											"name": "PUSH",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 12081,
											"end": 12099,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 12081,
											"end": 12099,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12081,
											"end": 12099,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12074,
											"end": 12104,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12140,
											"end": 12174,
											"name": "PUSH",
											"source": 1,
											"value": "455243373231456E756D657261626C653A20636F6E7365637574697665207472"
										},
										{
											"begin": 12120,
											"end": 12138,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 12120,
											"end": 12138,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12120,
											"end": 12138,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12113,
											"end": 12175,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "185B9CD9995C9CC81B9BDD081CDD5C1C1BDC9D1959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12191,
											"end": 12209,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 12191,
											"end": 12209,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12191,
											"end": 12209,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12184,
											"end": 12235,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12252,
											"end": 12271,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 12252,
											"end": 12271,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 58147,
											"end": 58210,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 11860,
											"end": 12277,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 58002,
											"end": 58221,
											"name": "tag",
											"source": 0,
											"value": "354"
										},
										{
											"begin": 58002,
											"end": 58221,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58249,
											"end": 58261,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 58276,
											"end": 58294,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 58276,
											"end": 58294,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 58272,
											"end": 58455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "357"
										},
										{
											"begin": 58272,
											"end": 58455,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58310,
											"end": 58350,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "358"
										},
										{
											"begin": 58342,
											"end": 58349,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 59458,
											"end": 59468,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 59458,
											"end": 59475,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59458,
											"end": 59475,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 59431,
											"end": 59455,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 59431,
											"end": 59455,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 59431,
											"end": 59455,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 59431,
											"end": 59455,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 59431,
											"end": 59446,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 59431,
											"end": 59455,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 59431,
											"end": 59455,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 59431,
											"end": 59455,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 59431,
											"end": 59455,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 59431,
											"end": 59455,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 59431,
											"end": 59475,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 59431,
											"end": 59475,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59431,
											"end": 59475,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 59485,
											"end": 59509,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 59485,
											"end": 59509,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 59485,
											"end": 59509,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 59485,
											"end": 59509,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 59485,
											"end": 59509,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 59485,
											"end": 59509,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 59485,
											"end": 59509,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59485,
											"end": 59509,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 59485,
											"end": 59509,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 59485,
											"end": 59509,
											"name": "PUSH",
											"source": 0,
											"value": "F3F7A9FE364FAAB93B216DA50A3214154F22A0A2B415B23A84C8169E8B636EE3"
										},
										{
											"begin": 59485,
											"end": 59509,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 59485,
											"end": 59509,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 59355,
											"end": 59516,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 58310,
											"end": 58350,
											"name": "tag",
											"source": 0,
											"value": "358"
										},
										{
											"begin": 58310,
											"end": 58350,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58272,
											"end": 58455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "362"
										},
										{
											"begin": 58272,
											"end": 58455,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 58272,
											"end": 58455,
											"name": "tag",
											"source": 0,
											"value": "357"
										},
										{
											"begin": 58272,
											"end": 58455,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58379,
											"end": 58381,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 58371,
											"end": 58381,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 58371,
											"end": 58375,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 58371,
											"end": 58381,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 58371,
											"end": 58381,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 58367,
											"end": 58455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "362"
										},
										{
											"begin": 58367,
											"end": 58455,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58397,
											"end": 58444,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "362"
										},
										{
											"begin": 58430,
											"end": 58434,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 58436,
											"end": 58443,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 58397,
											"end": 58429,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "363"
										},
										{
											"begin": 58397,
											"end": 58444,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 58397,
											"end": 58444,
											"name": "tag",
											"source": 0,
											"value": "362"
										},
										{
											"begin": 58397,
											"end": 58444,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 58468,
											"end": 58484,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 58468,
											"end": 58484,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 58464,
											"end": 58643,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "364"
										},
										{
											"begin": 58464,
											"end": 58643,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58500,
											"end": 58545,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "365"
										},
										{
											"begin": 58537,
											"end": 58544,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 58500,
											"end": 58536,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "366"
										},
										{
											"begin": 58500,
											"end": 58545,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 58500,
											"end": 58545,
											"name": "tag",
											"source": 0,
											"value": "365"
										},
										{
											"begin": 58500,
											"end": 58545,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58464,
											"end": 58643,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "369"
										},
										{
											"begin": 58464,
											"end": 58643,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 58464,
											"end": 58643,
											"name": "tag",
											"source": 0,
											"value": "364"
										},
										{
											"begin": 58464,
											"end": 58643,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58572,
											"end": 58576,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 58566,
											"end": 58576,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 58566,
											"end": 58568,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 58566,
											"end": 58576,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 58566,
											"end": 58576,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 58562,
											"end": 58643,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "369"
										},
										{
											"begin": 58562,
											"end": 58643,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58592,
											"end": 58632,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "369"
										},
										{
											"begin": 58620,
											"end": 58622,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 58624,
											"end": 58631,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 58592,
											"end": 58619,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "370"
										},
										{
											"begin": 58592,
											"end": 58632,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 58592,
											"end": 58632,
											"name": "tag",
											"source": 0,
											"value": "369"
										},
										{
											"begin": 58592,
											"end": 58632,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57920,
											"end": 58649,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57759,
											"end": 58649,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57759,
											"end": 58649,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57759,
											"end": 58649,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57759,
											"end": 58649,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57759,
											"end": 58649,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 47438,
											"end": 48358,
											"name": "tag",
											"source": 0,
											"value": "305"
										},
										{
											"begin": 47438,
											"end": 48358,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 47517,
											"end": 47533,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 47517,
											"end": 47533,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 47509,
											"end": 47570,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "372"
										},
										{
											"begin": 47509,
											"end": 47570,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 47509,
											"end": 47570,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 47509,
											"end": 47570,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 47509,
											"end": 47570,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47509,
											"end": 47570,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12484,
											"end": 12486,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 47509,
											"end": 47570,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 47509,
											"end": 47570,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 47509,
											"end": 47570,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12466,
											"end": 12487,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12466,
											"end": 12487,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12466,
											"end": 12487,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12503,
											"end": 12521,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 12503,
											"end": 12521,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12503,
											"end": 12521,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12496,
											"end": 12526,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12562,
											"end": 12596,
											"name": "PUSH",
											"source": 1,
											"value": "4552433732313A206D696E7420746F20746865207A65726F2061646472657373"
										},
										{
											"begin": 12542,
											"end": 12560,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 12542,
											"end": 12560,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12542,
											"end": 12560,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12535,
											"end": 12597,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12614,
											"end": 12632,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 12614,
											"end": 12632,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 47509,
											"end": 47570,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 12282,
											"end": 12638,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 47509,
											"end": 47570,
											"name": "tag",
											"source": 0,
											"value": "372"
										},
										{
											"begin": 47509,
											"end": 47570,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 45668,
											"end": 45672,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 45277,
											"end": 45293,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 45277,
											"end": 45293,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 45277,
											"end": 45293,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 45277,
											"end": 45284,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 45277,
											"end": 45293,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 45277,
											"end": 45293,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 45277,
											"end": 45293,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 45277,
											"end": 45293,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45277,
											"end": 45293,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 45277,
											"end": 45293,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 45277,
											"end": 45293,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 45691,
											"end": 45722,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 47580,
											"end": 47638,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "376"
										},
										{
											"begin": 47580,
											"end": 47638,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 47580,
											"end": 47638,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 47580,
											"end": 47638,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 47580,
											"end": 47638,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47580,
											"end": 47638,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12845,
											"end": 12847,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 47580,
											"end": 47638,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 47580,
											"end": 47638,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 47580,
											"end": 47638,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12827,
											"end": 12848,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12884,
											"end": 12886,
											"name": "PUSH",
											"source": 1,
											"value": "1C"
										},
										{
											"begin": 12864,
											"end": 12882,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 12864,
											"end": 12882,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12864,
											"end": 12882,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12857,
											"end": 12887,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12923,
											"end": 12953,
											"name": "PUSH",
											"source": 1,
											"value": "4552433732313A20746F6B656E20616C7265616479206D696E74656400000000"
										},
										{
											"begin": 12903,
											"end": 12921,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 12903,
											"end": 12921,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12903,
											"end": 12921,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12896,
											"end": 12954,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12971,
											"end": 12989,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 12971,
											"end": 12989,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 47580,
											"end": 47638,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 12643,
											"end": 12995,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 47580,
											"end": 47638,
											"name": "tag",
											"source": 0,
											"value": "376"
										},
										{
											"begin": 47580,
											"end": 47638,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47649,
											"end": 47697,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "379"
										},
										{
											"begin": 47678,
											"end": 47679,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 47682,
											"end": 47684,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 47686,
											"end": 47693,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 47695,
											"end": 47696,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 47649,
											"end": 47669,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 47649,
											"end": 47697,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 47649,
											"end": 47697,
											"name": "tag",
											"source": 0,
											"value": "379"
										},
										{
											"begin": 47649,
											"end": 47697,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 45668,
											"end": 45672,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 45277,
											"end": 45293,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 45277,
											"end": 45293,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 45277,
											"end": 45293,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 45277,
											"end": 45284,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 45277,
											"end": 45293,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 45277,
											"end": 45293,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 45277,
											"end": 45293,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 45277,
											"end": 45293,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45277,
											"end": 45293,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 45277,
											"end": 45293,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 45277,
											"end": 45293,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 45691,
											"end": 45722,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 47784,
											"end": 47842,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "381"
										},
										{
											"begin": 47784,
											"end": 47842,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 47784,
											"end": 47842,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 47784,
											"end": 47842,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 47784,
											"end": 47842,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47784,
											"end": 47842,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12845,
											"end": 12847,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 47784,
											"end": 47842,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 47784,
											"end": 47842,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 47784,
											"end": 47842,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12827,
											"end": 12848,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12884,
											"end": 12886,
											"name": "PUSH",
											"source": 1,
											"value": "1C"
										},
										{
											"begin": 12864,
											"end": 12882,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 12864,
											"end": 12882,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12864,
											"end": 12882,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12857,
											"end": 12887,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12923,
											"end": 12953,
											"name": "PUSH",
											"source": 1,
											"value": "4552433732313A20746F6B656E20616C7265616479206D696E74656400000000"
										},
										{
											"begin": 12903,
											"end": 12921,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 12903,
											"end": 12921,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12903,
											"end": 12921,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12896,
											"end": 12954,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12971,
											"end": 12989,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 12971,
											"end": 12989,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 47784,
											"end": 47842,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 12643,
											"end": 12995,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 47784,
											"end": 47842,
											"name": "tag",
											"source": 0,
											"value": "381"
										},
										{
											"begin": 47784,
											"end": 47842,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 48184,
											"end": 48197,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 48184,
											"end": 48197,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 48184,
											"end": 48197,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 48184,
											"end": 48197,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 48184,
											"end": 48197,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 48184,
											"end": 48197,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 48184,
											"end": 48193,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 48184,
											"end": 48197,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 48184,
											"end": 48197,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 48184,
											"end": 48197,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 48184,
											"end": 48197,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 48184,
											"end": 48197,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 48184,
											"end": 48197,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 48184,
											"end": 48197,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 48184,
											"end": 48197,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 48184,
											"end": 48202,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 48184,
											"end": 48202,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 48201,
											"end": 48202,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 48184,
											"end": 48202,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 48184,
											"end": 48202,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 48184,
											"end": 48202,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 48223,
											"end": 48239,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 48223,
											"end": 48239,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 48223,
											"end": 48239,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 48223,
											"end": 48230,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 48223,
											"end": 48239,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 48223,
											"end": 48239,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 48223,
											"end": 48239,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 48223,
											"end": 48239,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 48223,
											"end": 48239,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 48223,
											"end": 48239,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 48223,
											"end": 48244,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 48223,
											"end": 48244,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 48223,
											"end": 48244,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 48223,
											"end": 48244,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 48223,
											"end": 48244,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 48223,
											"end": 48244,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 48223,
											"end": 48244,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 48260,
											"end": 48293,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 48231,
											"end": 48238,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 48231,
											"end": 48238,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 48184,
											"end": 48197,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 48184,
											"end": 48197,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 48260,
											"end": 48293,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 48260,
											"end": 48293,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 48184,
											"end": 48197,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 48184,
											"end": 48197,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 48260,
											"end": 48293,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 62916,
											"end": 63045,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 62869,
											"end": 63045,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 62869,
											"end": 63045,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 60133,
											"end": 61103,
											"name": "tag",
											"source": 0,
											"value": "363"
										},
										{
											"begin": 60133,
											"end": 61103,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60395,
											"end": 60417,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60445,
											"end": 60446,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 60420,
											"end": 60442,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "389"
										},
										{
											"begin": 60437,
											"end": 60441,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 60420,
											"end": 60436,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 60420,
											"end": 60442,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 60420,
											"end": 60442,
											"name": "tag",
											"source": 0,
											"value": "389"
										},
										{
											"begin": 60420,
											"end": 60442,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60420,
											"end": 60446,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "390"
										},
										{
											"begin": 60420,
											"end": 60446,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 60420,
											"end": 60446,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60420,
											"end": 60446,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "391"
										},
										{
											"begin": 60420,
											"end": 60446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 60420,
											"end": 60446,
											"name": "tag",
											"source": 0,
											"value": "390"
										},
										{
											"begin": 60420,
											"end": 60446,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60456,
											"end": 60474,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60477,
											"end": 60503,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 60477,
											"end": 60503,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60477,
											"end": 60503,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60477,
											"end": 60494,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 60477,
											"end": 60503,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 60477,
											"end": 60503,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60477,
											"end": 60503,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60477,
											"end": 60503,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60477,
											"end": 60503,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 60477,
											"end": 60503,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60395,
											"end": 60446,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60395,
											"end": 60446,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 60607,
											"end": 60635,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60607,
											"end": 60635,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60607,
											"end": 60635,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 60603,
											"end": 60926,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "392"
										},
										{
											"begin": 60603,
											"end": 60926,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 60673,
											"end": 60691,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 60673,
											"end": 60691,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 60651,
											"end": 60670,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60673,
											"end": 60691,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60673,
											"end": 60691,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60673,
											"end": 60691,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60673,
											"end": 60685,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 60673,
											"end": 60691,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 60673,
											"end": 60691,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60673,
											"end": 60691,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60673,
											"end": 60691,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60673,
											"end": 60691,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60673,
											"end": 60691,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60673,
											"end": 60691,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 60673,
											"end": 60691,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 60673,
											"end": 60707,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 60673,
											"end": 60707,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 60673,
											"end": 60707,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60673,
											"end": 60707,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60673,
											"end": 60707,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60673,
											"end": 60707,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60673,
											"end": 60707,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 60673,
											"end": 60707,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 60673,
											"end": 60707,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60722,
											"end": 60752,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 60722,
											"end": 60752,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 60722,
											"end": 60752,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60722,
											"end": 60752,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60722,
											"end": 60752,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 60722,
											"end": 60752,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 60722,
											"end": 60766,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60722,
											"end": 60766,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60722,
											"end": 60766,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 60838,
											"end": 60868,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 60838,
											"end": 60868,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60838,
											"end": 60855,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 60838,
											"end": 60868,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60838,
											"end": 60868,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 60838,
											"end": 60868,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60838,
											"end": 60868,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60838,
											"end": 60868,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 60838,
											"end": 60881,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60838,
											"end": 60881,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60838,
											"end": 60881,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 60603,
											"end": 60926,
											"name": "tag",
											"source": 0,
											"value": "392"
										},
										{
											"begin": 60603,
											"end": 60926,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 61019,
											"end": 61045,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 61019,
											"end": 61045,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 61019,
											"end": 61045,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 61019,
											"end": 61045,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61019,
											"end": 61036,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 61019,
											"end": 61045,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 61019,
											"end": 61045,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61019,
											"end": 61045,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 61019,
											"end": 61045,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61019,
											"end": 61045,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 61019,
											"end": 61045,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61019,
											"end": 61045,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 61019,
											"end": 61045,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 61012,
											"end": 61045,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 61012,
											"end": 61045,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61012,
											"end": 61045,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 61062,
											"end": 61080,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61062,
											"end": 61080,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 61062,
											"end": 61080,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 61062,
											"end": 61080,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 61062,
											"end": 61080,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61062,
											"end": 61074,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 61062,
											"end": 61080,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 61062,
											"end": 61080,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61062,
											"end": 61080,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 61062,
											"end": 61080,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 61062,
											"end": 61080,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 61062,
											"end": 61096,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 61062,
											"end": 61096,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 61062,
											"end": 61096,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61062,
											"end": 61096,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61062,
											"end": 61096,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61062,
											"end": 61096,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 61062,
											"end": 61096,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 61055,
											"end": 61096,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 60133,
											"end": 61103,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 61391,
											"end": 62452,
											"name": "tag",
											"source": 0,
											"value": "366"
										},
										{
											"begin": 61391,
											"end": 62452,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61665,
											"end": 61675,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 61665,
											"end": 61682,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 61640,
											"end": 61662,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 61640,
											"end": 61662,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61665,
											"end": 61686,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "394"
										},
										{
											"begin": 61665,
											"end": 61686,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61685,
											"end": 61686,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 61685,
											"end": 61686,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61665,
											"end": 61686,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "391"
										},
										{
											"begin": 61665,
											"end": 61686,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 61665,
											"end": 61686,
											"name": "tag",
											"source": 0,
											"value": "394"
										},
										{
											"begin": 61665,
											"end": 61686,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61696,
											"end": 61714,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 61717,
											"end": 61741,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 61717,
											"end": 61741,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 61717,
											"end": 61741,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61717,
											"end": 61732,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 61717,
											"end": 61741,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 61717,
											"end": 61741,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61717,
											"end": 61741,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 61717,
											"end": 61741,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 61717,
											"end": 61741,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 61717,
											"end": 61741,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 62085,
											"end": 62095,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 62085,
											"end": 62111,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 62085,
											"end": 62111,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 61640,
											"end": 61686,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 61640,
											"end": 61686,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 61717,
											"end": 61741,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61717,
											"end": 61741,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 61640,
											"end": 61686,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 61640,
											"end": 61686,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 62085,
											"end": 62111,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 62085,
											"end": 62111,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 62085,
											"end": 62111,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "396"
										},
										{
											"begin": 62085,
											"end": 62111,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 62085,
											"end": 62111,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "396"
										},
										{
											"begin": 62085,
											"end": 62111,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 62085,
											"end": 62111,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 62085,
											"end": 62111,
											"name": "tag",
											"source": 0,
											"value": "396"
										},
										{
											"begin": 62085,
											"end": 62111,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 62085,
											"end": 62111,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 62085,
											"end": 62111,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 62085,
											"end": 62111,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 62085,
											"end": 62111,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 62085,
											"end": 62111,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 62085,
											"end": 62111,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 62085,
											"end": 62111,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 62085,
											"end": 62111,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 62063,
											"end": 62111,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 62063,
											"end": 62111,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 62147,
											"end": 62158,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 62122,
											"end": 62132,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 62133,
											"end": 62143,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 62122,
											"end": 62144,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 62122,
											"end": 62144,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 62122,
											"end": 62144,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 62122,
											"end": 62144,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 62122,
											"end": 62144,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "399"
										},
										{
											"begin": 62122,
											"end": 62144,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 62122,
											"end": 62144,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "399"
										},
										{
											"begin": 62122,
											"end": 62144,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 62122,
											"end": 62144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 62122,
											"end": 62144,
											"name": "tag",
											"source": 0,
											"value": "399"
										},
										{
											"begin": 62122,
											"end": 62144,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 62122,
											"end": 62144,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 62122,
											"end": 62144,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 62122,
											"end": 62144,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 62122,
											"end": 62144,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 62122,
											"end": 62144,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 62122,
											"end": 62144,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 62122,
											"end": 62144,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 62122,
											"end": 62144,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 62122,
											"end": 62144,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 62122,
											"end": 62144,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 62122,
											"end": 62144,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 62122,
											"end": 62158,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 62122,
											"end": 62158,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 62122,
											"end": 62158,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 62122,
											"end": 62158,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 62226,
											"end": 62254,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 62226,
											"end": 62254,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 62226,
											"end": 62254,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 62226,
											"end": 62241,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 62226,
											"end": 62254,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 62226,
											"end": 62254,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 62226,
											"end": 62254,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 62226,
											"end": 62254,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 62226,
											"end": 62254,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 62226,
											"end": 62254,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 62226,
											"end": 62254,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 62226,
											"end": 62267,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 62226,
											"end": 62267,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 62226,
											"end": 62267,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 62395,
											"end": 62419,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 62395,
											"end": 62419,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 62395,
											"end": 62419,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 62395,
											"end": 62419,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 62395,
											"end": 62419,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 62388,
											"end": 62419,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 62429,
											"end": 62439,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 62429,
											"end": 62445,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 62429,
											"end": 62445,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 62429,
											"end": 62445,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 62429,
											"end": 62445,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "402"
										},
										{
											"begin": 62429,
											"end": 62445,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 62429,
											"end": 62445,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "402"
										},
										{
											"begin": 62429,
											"end": 62445,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "403"
										},
										{
											"begin": 62429,
											"end": 62445,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 62429,
											"end": 62445,
											"name": "tag",
											"source": 0,
											"value": "402"
										},
										{
											"begin": 62429,
											"end": 62445,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 62429,
											"end": 62445,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 62429,
											"end": 62445,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 62429,
											"end": 62445,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 62429,
											"end": 62445,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 62429,
											"end": 62445,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 62429,
											"end": 62445,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 62429,
											"end": 62445,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 62429,
											"end": 62445,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 62429,
											"end": 62445,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 62429,
											"end": 62445,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 62429,
											"end": 62445,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 62429,
											"end": 62445,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 62429,
											"end": 62445,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 62429,
											"end": 62445,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 62429,
											"end": 62445,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 62429,
											"end": 62445,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 62429,
											"end": 62445,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 61462,
											"end": 62452,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 61462,
											"end": 62452,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 61462,
											"end": 62452,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 61391,
											"end": 62452,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 61391,
											"end": 62452,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 58943,
											"end": 59160,
											"name": "tag",
											"source": 0,
											"value": "370"
										},
										{
											"begin": 58943,
											"end": 59160,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59027,
											"end": 59041,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 59044,
											"end": 59064,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "406"
										},
										{
											"begin": 59061,
											"end": 59063,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 59044,
											"end": 59060,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 59044,
											"end": 59064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 59044,
											"end": 59064,
											"name": "tag",
											"source": 0,
											"value": "406"
										},
										{
											"begin": 59044,
											"end": 59064,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 59074,
											"end": 59090,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59074,
											"end": 59090,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 59074,
											"end": 59090,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 59074,
											"end": 59090,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 59074,
											"end": 59090,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59074,
											"end": 59090,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 59074,
											"end": 59090,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 59074,
											"end": 59086,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 59074,
											"end": 59090,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 59074,
											"end": 59090,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59074,
											"end": 59090,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 59074,
											"end": 59090,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 59074,
											"end": 59090,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 59074,
											"end": 59090,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59074,
											"end": 59090,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 59074,
											"end": 59090,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 59074,
											"end": 59098,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 59074,
											"end": 59098,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 59074,
											"end": 59098,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 59074,
											"end": 59098,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 59074,
											"end": 59098,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 59074,
											"end": 59098,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59074,
											"end": 59098,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 59074,
											"end": 59098,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 59074,
											"end": 59108,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 59074,
											"end": 59108,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59074,
											"end": 59108,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 59118,
											"end": 59144,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 59118,
											"end": 59144,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 59118,
											"end": 59144,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 59118,
											"end": 59135,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 59118,
											"end": 59144,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59118,
											"end": 59144,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 59118,
											"end": 59144,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 59118,
											"end": 59144,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59118,
											"end": 59144,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 59118,
											"end": 59144,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 59118,
											"end": 59153,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 59118,
											"end": 59153,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59118,
											"end": 59153,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 59118,
											"end": 59153,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 58943,
											"end": 59160,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14,
											"end": 145,
											"name": "tag",
											"source": 1,
											"value": "407"
										},
										{
											"begin": 14,
											"end": 145,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 88,
											"end": 120,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 88,
											"end": 120,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 78,
											"end": 121,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 78,
											"end": 121,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 68,
											"end": 139,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 68,
											"end": 139,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 135,
											"end": 136,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 132,
											"end": 133,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 125,
											"end": 137,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 150,
											"end": 395,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 150,
											"end": 395,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 208,
											"end": 214,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 261,
											"end": 263,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 249,
											"end": 258,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 240,
											"end": 247,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 236,
											"end": 259,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 232,
											"end": 264,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 229,
											"end": 281,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 229,
											"end": 281,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "415"
										},
										{
											"begin": 229,
											"end": 281,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 277,
											"end": 278,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 274,
											"end": 275,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 267,
											"end": 279,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 229,
											"end": 281,
											"name": "tag",
											"source": 1,
											"value": "415"
										},
										{
											"begin": 229,
											"end": 281,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 316,
											"end": 325,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 303,
											"end": 326,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 335,
											"end": 365,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "207"
										},
										{
											"begin": 359,
											"end": 364,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 335,
											"end": 365,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "407"
										},
										{
											"begin": 335,
											"end": 365,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 592,
											"end": 842,
											"name": "tag",
											"source": 1,
											"value": "408"
										},
										{
											"begin": 592,
											"end": 842,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 677,
											"end": 678,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 687,
											"end": 800,
											"name": "tag",
											"source": 1,
											"value": "419"
										},
										{
											"begin": 687,
											"end": 800,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 701,
											"end": 707,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 698,
											"end": 699,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 695,
											"end": 708,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 687,
											"end": 800,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 687,
											"end": 800,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "421"
										},
										{
											"begin": 687,
											"end": 800,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 777,
											"end": 788,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 777,
											"end": 788,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 777,
											"end": 788,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 771,
											"end": 789,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 758,
											"end": 769,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 758,
											"end": 769,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 758,
											"end": 769,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 751,
											"end": 790,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 723,
											"end": 725,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 716,
											"end": 726,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 687,
											"end": 800,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "419"
										},
										{
											"begin": 687,
											"end": 800,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 687,
											"end": 800,
											"name": "tag",
											"source": 1,
											"value": "421"
										},
										{
											"begin": 687,
											"end": 800,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 834,
											"end": 835,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 816,
											"end": 832,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 816,
											"end": 832,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 809,
											"end": 836,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 592,
											"end": 842,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 847,
											"end": 1118,
											"name": "tag",
											"source": 1,
											"value": "409"
										},
										{
											"begin": 847,
											"end": 1118,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 889,
											"end": 892,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 927,
											"end": 932,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 921,
											"end": 933,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 954,
											"end": 960,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 949,
											"end": 952,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 942,
											"end": 961,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 970,
											"end": 1046,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "423"
										},
										{
											"begin": 1039,
											"end": 1045,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1032,
											"end": 1036,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1027,
											"end": 1030,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1023,
											"end": 1037,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1016,
											"end": 1020,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1009,
											"end": 1014,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1005,
											"end": 1021,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 970,
											"end": 1046,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "408"
										},
										{
											"begin": 970,
											"end": 1046,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 970,
											"end": 1046,
											"name": "tag",
											"source": 1,
											"value": "423"
										},
										{
											"begin": 970,
											"end": 1046,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1100,
											"end": 1102,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1079,
											"end": 1094,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1075,
											"end": 1104,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1066,
											"end": 1105,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1066,
											"end": 1105,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1066,
											"end": 1105,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1066,
											"end": 1105,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1107,
											"end": 1111,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1062,
											"end": 1112,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1062,
											"end": 1112,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 847,
											"end": 1118,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 847,
											"end": 1118,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1123,
											"end": 1343,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 1123,
											"end": 1343,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1272,
											"end": 1274,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1261,
											"end": 1270,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1254,
											"end": 1275,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1235,
											"end": 1239,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1292,
											"end": 1337,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "207"
										},
										{
											"begin": 1333,
											"end": 1335,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1322,
											"end": 1331,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1318,
											"end": 1336,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1310,
											"end": 1316,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1292,
											"end": 1337,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "409"
										},
										{
											"begin": 1292,
											"end": 1337,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1348,
											"end": 1528,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 1348,
											"end": 1528,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1407,
											"end": 1413,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1460,
											"end": 1462,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1448,
											"end": 1457,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1439,
											"end": 1446,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1435,
											"end": 1458,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1431,
											"end": 1463,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1428,
											"end": 1480,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1428,
											"end": 1480,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "427"
										},
										{
											"begin": 1428,
											"end": 1480,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1476,
											"end": 1477,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1473,
											"end": 1474,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1466,
											"end": 1478,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1428,
											"end": 1480,
											"name": "tag",
											"source": 1,
											"value": "427"
										},
										{
											"begin": 1428,
											"end": 1480,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1499,
											"end": 1522,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1499,
											"end": 1522,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1348,
											"end": 1528,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1348,
											"end": 1528,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1741,
											"end": 1914,
											"name": "tag",
											"source": 1,
											"value": "410"
										},
										{
											"begin": 1741,
											"end": 1914,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1809,
											"end": 1829,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1809,
											"end": 1829,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1858,
											"end": 1889,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1858,
											"end": 1889,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1848,
											"end": 1890,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1848,
											"end": 1890,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1838,
											"end": 1908,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "430"
										},
										{
											"begin": 1838,
											"end": 1908,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1904,
											"end": 1905,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1901,
											"end": 1902,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1894,
											"end": 1906,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1838,
											"end": 1908,
											"name": "tag",
											"source": 1,
											"value": "430"
										},
										{
											"begin": 1838,
											"end": 1908,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1741,
											"end": 1914,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1741,
											"end": 1914,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1741,
											"end": 1914,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1741,
											"end": 1914,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1919,
											"end": 2173,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1919,
											"end": 2173,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1987,
											"end": 1993,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1995,
											"end": 2001,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2048,
											"end": 2050,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2036,
											"end": 2045,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2027,
											"end": 2034,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2023,
											"end": 2046,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2019,
											"end": 2051,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2016,
											"end": 2068,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2016,
											"end": 2068,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "432"
										},
										{
											"begin": 2016,
											"end": 2068,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2064,
											"end": 2065,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2061,
											"end": 2062,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2054,
											"end": 2066,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2016,
											"end": 2068,
											"name": "tag",
											"source": 1,
											"value": "432"
										},
										{
											"begin": 2016,
											"end": 2068,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2087,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "433"
										},
										{
											"begin": 2106,
											"end": 2115,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2087,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "410"
										},
										{
											"begin": 2087,
											"end": 2116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2087,
											"end": 2116,
											"name": "tag",
											"source": 1,
											"value": "433"
										},
										{
											"begin": 2087,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2077,
											"end": 2116,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 2163,
											"end": 2165,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2148,
											"end": 2166,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 2148,
											"end": 2166,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2148,
											"end": 2166,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 2148,
											"end": 2166,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2135,
											"end": 2167,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2135,
											"end": 2167,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1919,
											"end": 2173,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2360,
											"end": 2688,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 2360,
											"end": 2688,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2437,
											"end": 2443,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2445,
											"end": 2451,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2453,
											"end": 2459,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2506,
											"end": 2508,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2494,
											"end": 2503,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2485,
											"end": 2492,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2481,
											"end": 2504,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2477,
											"end": 2509,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2474,
											"end": 2526,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2474,
											"end": 2526,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "436"
										},
										{
											"begin": 2474,
											"end": 2526,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2522,
											"end": 2523,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2519,
											"end": 2520,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2512,
											"end": 2524,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2474,
											"end": 2526,
											"name": "tag",
											"source": 1,
											"value": "436"
										},
										{
											"begin": 2474,
											"end": 2526,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2545,
											"end": 2574,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "437"
										},
										{
											"begin": 2564,
											"end": 2573,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2545,
											"end": 2574,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "410"
										},
										{
											"begin": 2545,
											"end": 2574,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2545,
											"end": 2574,
											"name": "tag",
											"source": 1,
											"value": "437"
										},
										{
											"begin": 2545,
											"end": 2574,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2535,
											"end": 2574,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2535,
											"end": 2574,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2593,
											"end": 2631,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "438"
										},
										{
											"begin": 2627,
											"end": 2629,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2616,
											"end": 2625,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2612,
											"end": 2630,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2593,
											"end": 2631,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "410"
										},
										{
											"begin": 2593,
											"end": 2631,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2593,
											"end": 2631,
											"name": "tag",
											"source": 1,
											"value": "438"
										},
										{
											"begin": 2593,
											"end": 2631,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2583,
											"end": 2631,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2583,
											"end": 2631,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2678,
											"end": 2680,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2667,
											"end": 2676,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2663,
											"end": 2681,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2650,
											"end": 2682,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2640,
											"end": 2682,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2640,
											"end": 2682,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2360,
											"end": 2688,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2360,
											"end": 2688,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2360,
											"end": 2688,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2360,
											"end": 2688,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2360,
											"end": 2688,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2360,
											"end": 2688,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2693,
											"end": 2879,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2693,
											"end": 2879,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2752,
											"end": 2758,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2805,
											"end": 2807,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2793,
											"end": 2802,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2784,
											"end": 2791,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2780,
											"end": 2803,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2776,
											"end": 2808,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2773,
											"end": 2825,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2773,
											"end": 2825,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "440"
										},
										{
											"begin": 2773,
											"end": 2825,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2821,
											"end": 2822,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2818,
											"end": 2819,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2811,
											"end": 2823,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2773,
											"end": 2825,
											"name": "tag",
											"source": 1,
											"value": "440"
										},
										{
											"begin": 2773,
											"end": 2825,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2844,
											"end": 2873,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "207"
										},
										{
											"begin": 2863,
											"end": 2872,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2844,
											"end": 2873,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "410"
										},
										{
											"begin": 2844,
											"end": 2873,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2884,
											"end": 3231,
											"name": "tag",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 2884,
											"end": 3231,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2949,
											"end": 2955,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2957,
											"end": 2963,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3010,
											"end": 3012,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2998,
											"end": 3007,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2989,
											"end": 2996,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3008,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2981,
											"end": 3013,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2978,
											"end": 3030,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2978,
											"end": 3030,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "443"
										},
										{
											"begin": 2978,
											"end": 3030,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3026,
											"end": 3027,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3023,
											"end": 3024,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3016,
											"end": 3028,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2978,
											"end": 3030,
											"name": "tag",
											"source": 1,
											"value": "443"
										},
										{
											"begin": 2978,
											"end": 3030,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3049,
											"end": 3078,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "444"
										},
										{
											"begin": 3068,
											"end": 3077,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3049,
											"end": 3078,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "410"
										},
										{
											"begin": 3049,
											"end": 3078,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3049,
											"end": 3078,
											"name": "tag",
											"source": 1,
											"value": "444"
										},
										{
											"begin": 3049,
											"end": 3078,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3039,
											"end": 3078,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3039,
											"end": 3078,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3128,
											"end": 3130,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3117,
											"end": 3126,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3113,
											"end": 3131,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3100,
											"end": 3132,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 3175,
											"end": 3180,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3168,
											"end": 3181,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3161,
											"end": 3182,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3154,
											"end": 3159,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3151,
											"end": 3183,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 3141,
											"end": 3201,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "445"
										},
										{
											"begin": 3141,
											"end": 3201,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3197,
											"end": 3198,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3194,
											"end": 3195,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3187,
											"end": 3199,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3141,
											"end": 3201,
											"name": "tag",
											"source": 1,
											"value": "445"
										},
										{
											"begin": 3141,
											"end": 3201,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3220,
											"end": 3225,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3210,
											"end": 3225,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3210,
											"end": 3225,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3210,
											"end": 3225,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2884,
											"end": 3231,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2884,
											"end": 3231,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2884,
											"end": 3231,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2884,
											"end": 3231,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2884,
											"end": 3231,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2884,
											"end": 3231,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3236,
											"end": 3363,
											"name": "tag",
											"source": 1,
											"value": "284"
										},
										{
											"begin": 3236,
											"end": 3363,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3297,
											"end": 3307,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 3292,
											"end": 3295,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 3288,
											"end": 3308,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 3285,
											"end": 3286,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3278,
											"end": 3309,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3328,
											"end": 3332,
											"name": "PUSH",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 3325,
											"end": 3326,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3318,
											"end": 3333,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3352,
											"end": 3356,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3349,
											"end": 3350,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3342,
											"end": 3357,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3368,
											"end": 4506,
											"name": "tag",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 3368,
											"end": 4506,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3463,
											"end": 3469,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3471,
											"end": 3477,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3479,
											"end": 3485,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3487,
											"end": 3493,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3540,
											"end": 3543,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 3528,
											"end": 3537,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3519,
											"end": 3526,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 3515,
											"end": 3538,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3511,
											"end": 3544,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3561,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3561,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "448"
										},
										{
											"begin": 3508,
											"end": 3561,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3557,
											"end": 3558,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3554,
											"end": 3555,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3547,
											"end": 3559,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3561,
											"name": "tag",
											"source": 1,
											"value": "448"
										},
										{
											"begin": 3508,
											"end": 3561,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3580,
											"end": 3609,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "449"
										},
										{
											"begin": 3599,
											"end": 3608,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3580,
											"end": 3609,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "410"
										},
										{
											"begin": 3580,
											"end": 3609,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3580,
											"end": 3609,
											"name": "tag",
											"source": 1,
											"value": "449"
										},
										{
											"begin": 3580,
											"end": 3609,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3570,
											"end": 3609,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3570,
											"end": 3609,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3628,
											"end": 3666,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "450"
										},
										{
											"begin": 3662,
											"end": 3664,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3651,
											"end": 3660,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3647,
											"end": 3665,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3628,
											"end": 3666,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "410"
										},
										{
											"begin": 3628,
											"end": 3666,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3628,
											"end": 3666,
											"name": "tag",
											"source": 1,
											"value": "450"
										},
										{
											"begin": 3628,
											"end": 3666,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3618,
											"end": 3666,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3618,
											"end": 3666,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3713,
											"end": 3715,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3702,
											"end": 3711,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3698,
											"end": 3716,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3685,
											"end": 3717,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 3675,
											"end": 3717,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3675,
											"end": 3717,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3768,
											"end": 3770,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 3757,
											"end": 3766,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3753,
											"end": 3771,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3740,
											"end": 3772,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 3791,
											"end": 3809,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3832,
											"end": 3834,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3824,
											"end": 3830,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3821,
											"end": 3835,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 3818,
											"end": 3852,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3818,
											"end": 3852,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "451"
										},
										{
											"begin": 3818,
											"end": 3852,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3848,
											"end": 3849,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3845,
											"end": 3846,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3838,
											"end": 3850,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3818,
											"end": 3852,
											"name": "tag",
											"source": 1,
											"value": "451"
										},
										{
											"begin": 3818,
											"end": 3852,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3886,
											"end": 3892,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3875,
											"end": 3884,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 3871,
											"end": 3893,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3861,
											"end": 3893,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3861,
											"end": 3893,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3931,
											"end": 3938,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 3924,
											"end": 3928,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 3920,
											"end": 3922,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3916,
											"end": 3929,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3912,
											"end": 3939,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 3902,
											"end": 3957,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "452"
										},
										{
											"begin": 3902,
											"end": 3957,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3953,
											"end": 3954,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3950,
											"end": 3951,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3943,
											"end": 3955,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3902,
											"end": 3957,
											"name": "tag",
											"source": 1,
											"value": "452"
										},
										{
											"begin": 3902,
											"end": 3957,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3989,
											"end": 3991,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3976,
											"end": 3992,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 4011,
											"end": 4013,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4007,
											"end": 4009,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4004,
											"end": 4014,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 4001,
											"end": 4037,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4001,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "454"
										},
										{
											"begin": 4001,
											"end": 4037,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4017,
											"end": 4035,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "454"
										},
										{
											"begin": 4017,
											"end": 4035,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "284"
										},
										{
											"begin": 4017,
											"end": 4035,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4017,
											"end": 4035,
											"name": "tag",
											"source": 1,
											"value": "454"
										},
										{
											"begin": 4017,
											"end": 4035,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 4094,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4086,
											"end": 4095,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4060,
											"end": 4062,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 4146,
											"end": 4159,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4146,
											"end": 4159,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4142,
											"end": 4164,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4142,
											"end": 4164,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4142,
											"end": 4164,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4166,
											"end": 4168,
											"name": "PUSH",
											"source": 1,
											"value": "3F"
										},
										{
											"begin": 4138,
											"end": 4169,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4134,
											"end": 4174,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4122,
											"end": 4175,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4122,
											"end": 4175,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4122,
											"end": 4175,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4190,
											"end": 4208,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4190,
											"end": 4208,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4190,
											"end": 4208,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 4210,
											"end": 4232,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4210,
											"end": 4232,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4210,
											"end": 4232,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 4187,
											"end": 4233,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 4184,
											"end": 4256,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4184,
											"end": 4256,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "456"
										},
										{
											"begin": 4184,
											"end": 4256,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4236,
											"end": 4254,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "456"
										},
										{
											"begin": 4236,
											"end": 4254,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "284"
										},
										{
											"begin": 4236,
											"end": 4254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4236,
											"end": 4254,
											"name": "tag",
											"source": 1,
											"value": "456"
										},
										{
											"begin": 4236,
											"end": 4254,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4276,
											"end": 4286,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4272,
											"end": 4274,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4265,
											"end": 4287,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4311,
											"end": 4313,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4303,
											"end": 4309,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4296,
											"end": 4314,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4351,
											"end": 4358,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 4346,
											"end": 4348,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4341,
											"end": 4343,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4337,
											"end": 4339,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 4333,
											"end": 4344,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4329,
											"end": 4349,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4326,
											"end": 4359,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 4323,
											"end": 4376,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4323,
											"end": 4376,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "457"
										},
										{
											"begin": 4323,
											"end": 4376,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4372,
											"end": 4373,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4369,
											"end": 4370,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4362,
											"end": 4374,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4323,
											"end": 4376,
											"name": "tag",
											"source": 1,
											"value": "457"
										},
										{
											"begin": 4323,
											"end": 4376,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4428,
											"end": 4430,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4423,
											"end": 4425,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4419,
											"end": 4421,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4415,
											"end": 4426,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4410,
											"end": 4412,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4402,
											"end": 4408,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4398,
											"end": 4413,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4385,
											"end": 4431,
											"name": "CALLDATACOPY",
											"source": 1
										},
										{
											"begin": 4473,
											"end": 4474,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4468,
											"end": 4470,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4463,
											"end": 4465,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4455,
											"end": 4461,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4451,
											"end": 4466,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4447,
											"end": 4471,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4440,
											"end": 4475,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4494,
											"end": 4500,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4484,
											"end": 4500,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 4484,
											"end": 4500,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4484,
											"end": 4500,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4484,
											"end": 4500,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4484,
											"end": 4500,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4484,
											"end": 4500,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4484,
											"end": 4500,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3368,
											"end": 4506,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3368,
											"end": 4506,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 3368,
											"end": 4506,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3368,
											"end": 4506,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 3368,
											"end": 4506,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3368,
											"end": 4506,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3368,
											"end": 4506,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3368,
											"end": 4506,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4511,
											"end": 4771,
											"name": "tag",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 4511,
											"end": 4771,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4579,
											"end": 4585,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4587,
											"end": 4593,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4640,
											"end": 4642,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4628,
											"end": 4637,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4619,
											"end": 4626,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4615,
											"end": 4638,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4611,
											"end": 4643,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 4608,
											"end": 4660,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4608,
											"end": 4660,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "459"
										},
										{
											"begin": 4608,
											"end": 4660,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4656,
											"end": 4657,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4653,
											"end": 4654,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4646,
											"end": 4658,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4608,
											"end": 4660,
											"name": "tag",
											"source": 1,
											"value": "459"
										},
										{
											"begin": 4608,
											"end": 4660,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4679,
											"end": 4708,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "460"
										},
										{
											"begin": 4698,
											"end": 4707,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4679,
											"end": 4708,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "410"
										},
										{
											"begin": 4679,
											"end": 4708,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4679,
											"end": 4708,
											"name": "tag",
											"source": 1,
											"value": "460"
										},
										{
											"begin": 4679,
											"end": 4708,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4669,
											"end": 4708,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4669,
											"end": 4708,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4727,
											"end": 4765,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "461"
										},
										{
											"begin": 4761,
											"end": 4763,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4750,
											"end": 4759,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4746,
											"end": 4764,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4727,
											"end": 4765,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "410"
										},
										{
											"begin": 4727,
											"end": 4765,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4727,
											"end": 4765,
											"name": "tag",
											"source": 1,
											"value": "461"
										},
										{
											"begin": 4727,
											"end": 4765,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4717,
											"end": 4765,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4717,
											"end": 4765,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4511,
											"end": 4771,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4511,
											"end": 4771,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4511,
											"end": 4771,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4511,
											"end": 4771,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4511,
											"end": 4771,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4511,
											"end": 4771,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 5156,
											"name": "tag",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 4776,
											"end": 5156,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4856,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4851,
											"end": 4863,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4851,
											"end": 4863,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4851,
											"end": 4863,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 4851,
											"end": 4863,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4898,
											"end": 4910,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4898,
											"end": 4910,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4898,
											"end": 4910,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4919,
											"end": 4980,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "463"
										},
										{
											"begin": 4919,
											"end": 4980,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4973,
											"end": 4977,
											"name": "PUSH",
											"source": 1,
											"value": "7F"
										},
										{
											"begin": 4965,
											"end": 4971,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4961,
											"end": 4978,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4978,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4978,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4919,
											"end": 4980,
											"name": "tag",
											"source": 1,
											"value": "463"
										},
										{
											"begin": 4919,
											"end": 4980,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5026,
											"end": 5028,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5018,
											"end": 5024,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5015,
											"end": 5029,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 4995,
											"end": 5013,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4992,
											"end": 5030,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4989,
											"end": 5150,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "464"
										},
										{
											"begin": 4989,
											"end": 5150,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5072,
											"end": 5082,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 5067,
											"end": 5070,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 5063,
											"end": 5083,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 5060,
											"end": 5061,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5053,
											"end": 5084,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5107,
											"end": 5111,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 5104,
											"end": 5105,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5097,
											"end": 5112,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5135,
											"end": 5139,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5132,
											"end": 5133,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5125,
											"end": 5140,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4989,
											"end": 5150,
											"name": "tag",
											"source": 1,
											"value": "464"
										},
										{
											"begin": 4989,
											"end": 5150,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4989,
											"end": 5150,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 5156,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 5156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 5156,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 5156,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5993,
											"end": 6402,
											"name": "tag",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 5993,
											"end": 6402,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6195,
											"end": 6197,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6177,
											"end": 6198,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6177,
											"end": 6198,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6177,
											"end": 6198,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6234,
											"end": 6236,
											"name": "PUSH",
											"source": 1,
											"value": "2D"
										},
										{
											"begin": 6214,
											"end": 6232,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6214,
											"end": 6232,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6214,
											"end": 6232,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6207,
											"end": 6237,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6273,
											"end": 6307,
											"name": "PUSH",
											"source": 1,
											"value": "4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65"
										},
										{
											"begin": 6268,
											"end": 6270,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6253,
											"end": 6271,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6253,
											"end": 6271,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6246,
											"end": 6308,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1C881BDC88185C1C1C9BDD9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "9A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6339,
											"end": 6341,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 6324,
											"end": 6342,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6324,
											"end": 6342,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6317,
											"end": 6360,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6392,
											"end": 6395,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 6377,
											"end": 6396,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6377,
											"end": 6396,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5993,
											"end": 6402,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7232,
											"end": 7359,
											"name": "tag",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 7232,
											"end": 7359,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7293,
											"end": 7303,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 7288,
											"end": 7291,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 7284,
											"end": 7304,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 7281,
											"end": 7282,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7274,
											"end": 7305,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7324,
											"end": 7328,
											"name": "PUSH",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 7321,
											"end": 7322,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7314,
											"end": 7329,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7348,
											"end": 7352,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 7345,
											"end": 7346,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7338,
											"end": 7353,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 8127,
											"end": 8623,
											"name": "tag",
											"source": 1,
											"value": "211"
										},
										{
											"begin": 8127,
											"end": 8623,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8306,
											"end": 8309,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8344,
											"end": 8350,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8338,
											"end": 8351,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8360,
											"end": 8426,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "474"
										},
										{
											"begin": 8419,
											"end": 8425,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8414,
											"end": 8417,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8407,
											"end": 8411,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8399,
											"end": 8405,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 8395,
											"end": 8412,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8360,
											"end": 8426,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "408"
										},
										{
											"begin": 8360,
											"end": 8426,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8360,
											"end": 8426,
											"name": "tag",
											"source": 1,
											"value": "474"
										},
										{
											"begin": 8360,
											"end": 8426,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8489,
											"end": 8502,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8489,
											"end": 8502,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8448,
											"end": 8464,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8448,
											"end": 8464,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8448,
											"end": 8464,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8448,
											"end": 8464,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8511,
											"end": 8581,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "475"
										},
										{
											"begin": 8489,
											"end": 8502,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8448,
											"end": 8464,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8558,
											"end": 8562,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8546,
											"end": 8563,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 8546,
											"end": 8563,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8511,
											"end": 8581,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "408"
										},
										{
											"begin": 8511,
											"end": 8581,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8511,
											"end": 8581,
											"name": "tag",
											"source": 1,
											"value": "475"
										},
										{
											"begin": 8511,
											"end": 8581,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8597,
											"end": 8617,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8597,
											"end": 8617,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 8127,
											"end": 8623,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8127,
											"end": 8623,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9035,
											"end": 9436,
											"name": "tag",
											"source": 1,
											"value": "242"
										},
										{
											"begin": 9035,
											"end": 9436,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9237,
											"end": 9239,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9219,
											"end": 9240,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9219,
											"end": 9240,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9219,
											"end": 9240,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9276,
											"end": 9278,
											"name": "PUSH",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 9256,
											"end": 9274,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9256,
											"end": 9274,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9256,
											"end": 9274,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9249,
											"end": 9279,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9315,
											"end": 9349,
											"name": "PUSH",
											"source": 1,
											"value": "4552433732313A207472616E736665722066726F6D20696E636F727265637420"
										},
										{
											"begin": 9310,
											"end": 9312,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9295,
											"end": 9313,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9295,
											"end": 9313,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9288,
											"end": 9350,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "37BBB732B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9381,
											"end": 9383,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 9366,
											"end": 9384,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9366,
											"end": 9384,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9359,
											"end": 9394,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9426,
											"end": 9429,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 9411,
											"end": 9430,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9411,
											"end": 9430,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9035,
											"end": 9436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10561,
											"end": 10975,
											"name": "tag",
											"source": 1,
											"value": "277"
										},
										{
											"begin": 10561,
											"end": 10975,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10763,
											"end": 10765,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10745,
											"end": 10766,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10745,
											"end": 10766,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10745,
											"end": 10766,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10802,
											"end": 10804,
											"name": "PUSH",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 10782,
											"end": 10800,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10782,
											"end": 10800,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10782,
											"end": 10800,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10775,
											"end": 10805,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10841,
											"end": 10875,
											"name": "PUSH",
											"source": 1,
											"value": "4552433732313A207472616E7366657220746F206E6F6E204552433732315265"
										},
										{
											"begin": 10836,
											"end": 10838,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10821,
											"end": 10839,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10821,
											"end": 10839,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10814,
											"end": 10876,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "31B2B4BB32B91034B6B83632B6B2B73A32B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10907,
											"end": 10909,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 10892,
											"end": 10910,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10892,
											"end": 10910,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10885,
											"end": 10933,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10965,
											"end": 10968,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 10950,
											"end": 10969,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10950,
											"end": 10969,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10561,
											"end": 10975,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11112,
											"end": 11601,
											"name": "tag",
											"source": 1,
											"value": "315"
										},
										{
											"begin": 11112,
											"end": 11601,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11381,
											"end": 11396,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 11381,
											"end": 11396,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11381,
											"end": 11396,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11363,
											"end": 11397,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11363,
											"end": 11397,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11433,
											"end": 11448,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11433,
											"end": 11448,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11428,
											"end": 11430,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11413,
											"end": 11431,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11413,
											"end": 11431,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11406,
											"end": 11449,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11480,
											"end": 11482,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11465,
											"end": 11483,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11465,
											"end": 11483,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11458,
											"end": 11492,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11458,
											"end": 11492,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11458,
											"end": 11492,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11528,
											"end": 11531,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 11523,
											"end": 11525,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 11508,
											"end": 11526,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11508,
											"end": 11526,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11501,
											"end": 11532,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11501,
											"end": 11532,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11501,
											"end": 11532,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11306,
											"end": 11310,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11306,
											"end": 11310,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11549,
											"end": 11595,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "484"
										},
										{
											"begin": 11549,
											"end": 11595,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11575,
											"end": 11594,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11575,
											"end": 11594,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11567,
											"end": 11573,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11549,
											"end": 11595,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "409"
										},
										{
											"begin": 11549,
											"end": 11595,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11549,
											"end": 11595,
											"name": "tag",
											"source": 1,
											"value": "484"
										},
										{
											"begin": 11549,
											"end": 11595,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11541,
											"end": 11595,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": 11112,
											"end": 11601,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11112,
											"end": 11601,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11606,
											"end": 11855,
											"name": "tag",
											"source": 1,
											"value": "318"
										},
										{
											"begin": 11606,
											"end": 11855,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11675,
											"end": 11681,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11728,
											"end": 11730,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11716,
											"end": 11725,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11707,
											"end": 11714,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11703,
											"end": 11726,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 11699,
											"end": 11731,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 11696,
											"end": 11748,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 11696,
											"end": 11748,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "486"
										},
										{
											"begin": 11696,
											"end": 11748,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11744,
											"end": 11745,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11741,
											"end": 11742,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11734,
											"end": 11746,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 11696,
											"end": 11748,
											"name": "tag",
											"source": 1,
											"value": "486"
										},
										{
											"begin": 11696,
											"end": 11748,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11776,
											"end": 11785,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11770,
											"end": 11786,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 11795,
											"end": 11825,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "207"
										},
										{
											"begin": 11819,
											"end": 11824,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11795,
											"end": 11825,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "407"
										},
										{
											"begin": 11795,
											"end": 11825,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13000,
											"end": 13225,
											"name": "tag",
											"source": 1,
											"value": "391"
										},
										{
											"begin": 13000,
											"end": 13225,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13067,
											"end": 13076,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13067,
											"end": 13076,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13067,
											"end": 13076,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 13088,
											"end": 13099,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13088,
											"end": 13099,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13088,
											"end": 13099,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 13085,
											"end": 13219,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 13085,
											"end": 13219,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 13085,
											"end": 13219,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 13141,
											"end": 13151,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 13136,
											"end": 13139,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 13132,
											"end": 13152,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 13129,
											"end": 13130,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13122,
											"end": 13153,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13176,
											"end": 13180,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 13173,
											"end": 13174,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 13166,
											"end": 13181,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13204,
											"end": 13208,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 13201,
											"end": 13202,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13194,
											"end": 13209,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 13230,
											"end": 13357,
											"name": "tag",
											"source": 1,
											"value": "403"
										},
										{
											"begin": 13230,
											"end": 13357,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13291,
											"end": 13301,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 13286,
											"end": 13289,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 13282,
											"end": 13302,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 13279,
											"end": 13280,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13272,
											"end": 13303,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13322,
											"end": 13326,
											"name": "PUSH",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 13319,
											"end": 13320,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 13312,
											"end": 13327,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13346,
											"end": 13350,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 13343,
											"end": 13344,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13336,
											"end": 13351,
											"name": "REVERT",
											"source": 1
										}
									],
									".data": {
										"04FF9D37B4D45DB38E4BE6A16CDA3C01DFC5C1CAFE39C931D51D438268FC8FB1": "68747470733a2f2f6170692e6e706f696e742e696f2f3237356438326562303736303634636437316530"
									}
								}
							},
							"sourceList": [
								"MY MainNFT/Art_Gallary_flattened.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"ownerOf(uint256)": "6352211e",
							"renounceOwnership()": "715018a6",
							"safeMint(address)": "40d097c3",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenByIndex(uint256)": "4f6ccce7",
							"tokenOfOwnerByIndex(address,uint256)": "2f745c59",
							"tokenURI(uint256)": "c87b56dd",
							"totalSupply()": "18160ddd",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"safeMint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenByIndex(uint256)\":{\"details\":\"See {IERC721Enumerable-tokenByIndex}.\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"See {IERC721Enumerable-tokenOfOwnerByIndex}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"totalSupply()\":{\"details\":\"See {IERC721Enumerable-totalSupply}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"MY MainNFT/Art_Gallary_flattened.sol\":\"Art_Gallary\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"MY MainNFT/Art_Gallary_flattened.sol\":{\"keccak256\":\"0xaf5042eaa850dd12634ada6c4a80f9eac944cbf1a07306ac12ad88fb4ebdf638\",\"urls\":[\"bzz-raw://92d8b46669fb9a8ae9be91f30bae3e59b90f4f3d79266cb86bcc26fafe432e46\",\"dweb:/ipfs/QmTFBZv39VF38YMNmvi1QeXEe9S3A16qk8Xr8tiBwghQu5\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1807,
								"contract": "MY MainNFT/Art_Gallary_flattened.sol:Art_Gallary",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 1809,
								"contract": "MY MainNFT/Art_Gallary_flattened.sol:Art_Gallary",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 1813,
								"contract": "MY MainNFT/Art_Gallary_flattened.sol:Art_Gallary",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 1817,
								"contract": "MY MainNFT/Art_Gallary_flattened.sol:Art_Gallary",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1821,
								"contract": "MY MainNFT/Art_Gallary_flattened.sol:Art_Gallary",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 1827,
								"contract": "MY MainNFT/Art_Gallary_flattened.sol:Art_Gallary",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 2720,
								"contract": "MY MainNFT/Art_Gallary_flattened.sol:Art_Gallary",
								"label": "_ownedTokens",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))"
							},
							{
								"astId": 2724,
								"contract": "MY MainNFT/Art_Gallary_flattened.sol:Art_Gallary",
								"label": "_ownedTokensIndex",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_uint256,t_uint256)"
							},
							{
								"astId": 2727,
								"contract": "MY MainNFT/Art_Gallary_flattened.sol:Art_Gallary",
								"label": "_allTokens",
								"offset": 0,
								"slot": "8",
								"type": "t_array(t_uint256)dyn_storage"
							},
							{
								"astId": 2731,
								"contract": "MY MainNFT/Art_Gallary_flattened.sol:Art_Gallary",
								"label": "_allTokensIndex",
								"offset": 0,
								"slot": "9",
								"type": "t_mapping(t_uint256,t_uint256)"
							},
							{
								"astId": 1137,
								"contract": "MY MainNFT/Art_Gallary_flattened.sol:Art_Gallary",
								"label": "_owner",
								"offset": 0,
								"slot": "10",
								"type": "t_address"
							},
							{
								"astId": 3073,
								"contract": "MY MainNFT/Art_Gallary_flattened.sol:Art_Gallary",
								"label": "_tokenIdCounter",
								"offset": 0,
								"slot": "11",
								"type": "t_struct(Counter)5_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_uint256)dyn_storage": {
								"base": "t_uint256",
								"encoding": "dynamic_array",
								"label": "uint256[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(uint256 => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_uint256,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_uint256,t_uint256)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(Counter)5_storage": {
								"encoding": "inplace",
								"label": "struct Counters.Counter",
								"members": [
									{
										"astId": 4,
										"contract": "MY MainNFT/Art_Gallary_flattened.sol:Art_Gallary",
										"label": "_value",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"MY MainNFT/Art_Gallary_flattened.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"MY MainNFT/Art_Gallary_flattened.sol\":{\"keccak256\":\"0xaf5042eaa850dd12634ada6c4a80f9eac944cbf1a07306ac12ad88fb4ebdf638\",\"urls\":[\"bzz-raw://92d8b46669fb9a8ae9be91f30bae3e59b90f4f3d79266cb86bcc26fafe432e46\",\"dweb:/ipfs/QmTFBZv39VF38YMNmvi1QeXEe9S3A16qk8Xr8tiBwghQu5\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Counters": {
					"abi": [],
					"devdoc": {
						"author": "Matt Condon (@shrugs)",
						"details": "Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids. Include with `using Counters for Counters.Counter;`",
						"kind": "dev",
						"methods": {},
						"title": "Counters",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"MY MainNFT/Art_Gallary_flattened.sol\":447:1418  library Counters {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":447:1418  library Counters {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212202e0ffbf645a5c66ea8ed67bb7a63e170d510e4550bd962ee1f0b5ba633f9d6a064736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202e0ffbf645a5c66ea8ed67bb7a63e170d510e4550bd962ee1f0b5ba633f9d6a064736f6c63430008120033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2E 0xF 0xFB 0xF6 GASLIMIT 0xA5 0xC6 PUSH15 0xA8ED67BB7A63E170D510E4550BD962 0xEE 0x1F SIGNEXTEND JUMPDEST 0xA6 CALLER 0xF9 0xD6 LOG0 PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "447:971:0:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;447:971:0;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202e0ffbf645a5c66ea8ed67bb7a63e170d510e4550bd962ee1f0b5ba633f9d6a064736f6c63430008120033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2E 0xF 0xFB 0xF6 GASLIMIT 0xA5 0xC6 PUSH15 0xA8ED67BB7A63E170D510E4550BD962 0xEE 0x1F SIGNEXTEND JUMPDEST 0xA6 CALLER 0xF9 0xD6 LOG0 PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "447:971:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"current(struct Counters.Counter storage pointer)": "infinite",
								"decrement(struct Counters.Counter storage pointer)": "infinite",
								"increment(struct Counters.Counter storage pointer)": "infinite",
								"reset(struct Counters.Counter storage pointer)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 447,
									"end": 1418,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 447,
									"end": 1418,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 447,
									"end": 1418,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 447,
									"end": 1418,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 447,
									"end": 1418,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 447,
									"end": 1418,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 447,
									"end": 1418,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 447,
									"end": 1418,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 447,
									"end": 1418,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 447,
									"end": 1418,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 447,
									"end": 1418,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 447,
									"end": 1418,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 447,
									"end": 1418,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 447,
									"end": 1418,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 447,
									"end": 1418,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 447,
									"end": 1418,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 447,
									"end": 1418,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 447,
									"end": 1418,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 447,
									"end": 1418,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 447,
									"end": 1418,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 447,
									"end": 1418,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 447,
									"end": 1418,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 447,
									"end": 1418,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 447,
									"end": 1418,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 447,
									"end": 1418,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 447,
									"end": 1418,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 447,
									"end": 1418,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 447,
									"end": 1418,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 447,
									"end": 1418,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 447,
									"end": 1418,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 447,
									"end": 1418,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 447,
									"end": 1418,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 447,
									"end": 1418,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 447,
									"end": 1418,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212202e0ffbf645a5c66ea8ed67bb7a63e170d510e4550bd962ee1f0b5ba633f9d6a064736f6c63430008120033",
									".code": [
										{
											"begin": 447,
											"end": 1418,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 447,
											"end": 1418,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 447,
											"end": 1418,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 447,
											"end": 1418,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 447,
											"end": 1418,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 447,
											"end": 1418,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 447,
											"end": 1418,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 447,
											"end": 1418,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 447,
											"end": 1418,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"MY MainNFT/Art_Gallary_flattened.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Matt Condon (@shrugs)\",\"details\":\"Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids. Include with `using Counters for Counters.Counter;`\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Counters\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"MY MainNFT/Art_Gallary_flattened.sol\":\"Counters\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"MY MainNFT/Art_Gallary_flattened.sol\":{\"keccak256\":\"0xaf5042eaa850dd12634ada6c4a80f9eac944cbf1a07306ac12ad88fb4ebdf638\",\"urls\":[\"bzz-raw://92d8b46669fb9a8ae9be91f30bae3e59b90f4f3d79266cb86bcc26fafe432e46\",\"dweb:/ipfs/QmTFBZv39VF38YMNmvi1QeXEe9S3A16qk8Xr8tiBwghQu5\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"MY MainNFT/Art_Gallary_flattened.sol\":\"ERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"MY MainNFT/Art_Gallary_flattened.sol\":{\"keccak256\":\"0xaf5042eaa850dd12634ada6c4a80f9eac944cbf1a07306ac12ad88fb4ebdf638\",\"urls\":[\"bzz-raw://92d8b46669fb9a8ae9be91f30bae3e59b90f4f3d79266cb86bcc26fafe432e46\",\"dweb:/ipfs/QmTFBZv39VF38YMNmvi1QeXEe9S3A16qk8Xr8tiBwghQu5\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC721": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"constructor": {
								"details": "Initializes the contract by setting a `name` and a `symbol` to the token collection."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"MY MainNFT/Art_Gallary_flattened.sol\":38975:55654  contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {... */\n  mstore(0x40, 0x80)\n    /* \"MY MainNFT/Art_Gallary_flattened.sol\":39737:39850  constructor(string memory name_, string memory symbol_) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"MY MainNFT/Art_Gallary_flattened.sol\":39803:39808  _name */\n  0x00\n    /* \"MY MainNFT/Art_Gallary_flattened.sol\":39803:39816  _name = name_ */\n  tag_6\n    /* \"MY MainNFT/Art_Gallary_flattened.sol\":39811:39816  name_ */\n  dup4\n    /* \"MY MainNFT/Art_Gallary_flattened.sol\":39803:39808  _name */\n  dup3\n    /* \"MY MainNFT/Art_Gallary_flattened.sol\":39803:39816  _name = name_ */\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \"MY MainNFT/Art_Gallary_flattened.sol\":39826:39833  _symbol */\n  0x01\n    /* \"MY MainNFT/Art_Gallary_flattened.sol\":39826:39843  _symbol = symbol_ */\n  tag_8\n    /* \"MY MainNFT/Art_Gallary_flattened.sol\":39836:39843  symbol_ */\n  dup3\n    /* \"MY MainNFT/Art_Gallary_flattened.sol\":39826:39833  _symbol */\n  dup3\n    /* \"MY MainNFT/Art_Gallary_flattened.sol\":39826:39843  _symbol = symbol_ */\n  tag_7\n  jump\t// in\ntag_8:\n  pop\n    /* \"MY MainNFT/Art_Gallary_flattened.sol\":39737:39850  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"MY MainNFT/Art_Gallary_flattened.sol\":38975:55654  contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {... */\n  jump(tag_16)\n    /* \"#utility.yul\":14:141   */\ntag_10:\n    /* \"#utility.yul\":75:85   */\n  0x4e487b71\n    /* \"#utility.yul\":70:73   */\n  0xe0\n    /* \"#utility.yul\":66:86   */\n  shl\n    /* \"#utility.yul\":63:64   */\n  0x00\n    /* \"#utility.yul\":56:87   */\n  mstore\n    /* \"#utility.yul\":106:110   */\n  0x41\n    /* \"#utility.yul\":103:104   */\n  0x04\n    /* \"#utility.yul\":96:111   */\n  mstore\n    /* \"#utility.yul\":130:134   */\n  0x24\n    /* \"#utility.yul\":127:128   */\n  0x00\n    /* \"#utility.yul\":120:135   */\n  revert\n    /* \"#utility.yul\":146:986   */\ntag_11:\n    /* \"#utility.yul\":200:205   */\n  0x00\n    /* \"#utility.yul\":253:256   */\n  dup3\n    /* \"#utility.yul\":246:250   */\n  0x1f\n    /* \"#utility.yul\":238:244   */\n  dup4\n    /* \"#utility.yul\":234:251   */\n  add\n    /* \"#utility.yul\":230:257   */\n  slt\n    /* \"#utility.yul\":220:275   */\n  tag_19\n  jumpi\n    /* \"#utility.yul\":271:272   */\n  0x00\n    /* \"#utility.yul\":268:269   */\n  dup1\n    /* \"#utility.yul\":261:273   */\n  revert\n    /* \"#utility.yul\":220:275   */\ntag_19:\n    /* \"#utility.yul\":294:307   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":356:366   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":353:389   */\n  iszero\n  tag_21\n  jumpi\n    /* \"#utility.yul\":369:387   */\n  tag_21\n  tag_10\n  jump\t// in\ntag_21:\n    /* \"#utility.yul\":444:446   */\n  0x40\n    /* \"#utility.yul\":438:447   */\n  mload\n    /* \"#utility.yul\":412:414   */\n  0x1f\n    /* \"#utility.yul\":498:511   */\n  dup4\n  add\n  not(0x1f)\n    /* \"#utility.yul\":494:516   */\n  swap1\n  dup2\n  and\n    /* \"#utility.yul\":518:520   */\n  0x3f\n    /* \"#utility.yul\":490:521   */\n  add\n    /* \"#utility.yul\":486:526   */\n  and\n    /* \"#utility.yul\":474:527   */\n  dup2\n  add\n  swap1\n    /* \"#utility.yul\":542:560   */\n  dup3\n  dup3\n  gt\n    /* \"#utility.yul\":562:584   */\n  dup2\n  dup4\n  lt\n    /* \"#utility.yul\":539:585   */\n  or\n    /* \"#utility.yul\":536:608   */\n  iszero\n  tag_23\n  jumpi\n    /* \"#utility.yul\":588:606   */\n  tag_23\n  tag_10\n  jump\t// in\ntag_23:\n    /* \"#utility.yul\":628:638   */\n  dup2\n    /* \"#utility.yul\":624:626   */\n  0x40\n    /* \"#utility.yul\":617:639   */\n  mstore\n    /* \"#utility.yul\":663:665   */\n  dup4\n    /* \"#utility.yul\":655:661   */\n  dup2\n    /* \"#utility.yul\":648:666   */\n  mstore\n    /* \"#utility.yul\":685:689   */\n  0x20\n    /* \"#utility.yul\":675:689   */\n  swap3\n  pop\n    /* \"#utility.yul\":730:733   */\n  dup7\n    /* \"#utility.yul\":725:727   */\n  dup4\n    /* \"#utility.yul\":720:722   */\n  dup6\n    /* \"#utility.yul\":712:718   */\n  dup9\n    /* \"#utility.yul\":708:723   */\n  add\n    /* \"#utility.yul\":704:728   */\n  add\n    /* \"#utility.yul\":701:734   */\n  gt\n    /* \"#utility.yul\":698:751   */\n  iszero\n  tag_24\n  jumpi\n    /* \"#utility.yul\":747:748   */\n  0x00\n    /* \"#utility.yul\":744:745   */\n  dup1\n    /* \"#utility.yul\":737:749   */\n  revert\n    /* \"#utility.yul\":698:751   */\ntag_24:\n    /* \"#utility.yul\":769:770   */\n  0x00\n    /* \"#utility.yul\":760:770   */\n  swap2\n  pop\n    /* \"#utility.yul\":779:912   */\ntag_25:\n    /* \"#utility.yul\":793:795   */\n  dup4\n    /* \"#utility.yul\":790:791   */\n  dup3\n    /* \"#utility.yul\":787:796   */\n  lt\n    /* \"#utility.yul\":779:912   */\n  iszero\n  tag_27\n  jumpi\n    /* \"#utility.yul\":881:895   */\n  dup6\n  dup3\n  add\n    /* \"#utility.yul\":877:900   */\n  dup4\n  add\n    /* \"#utility.yul\":871:901   */\n  mload\n    /* \"#utility.yul\":850:864   */\n  dup2\n  dup4\n  add\n    /* \"#utility.yul\":846:869   */\n  dup5\n  add\n    /* \"#utility.yul\":839:902   */\n  mstore\n    /* \"#utility.yul\":804:814   */\n  swap1\n  dup3\n  add\n  swap1\n    /* \"#utility.yul\":779:912   */\n  jump(tag_25)\ntag_27:\n    /* \"#utility.yul\":954:955   */\n  0x00\n    /* \"#utility.yul\":932:947   */\n  swap4\n  dup2\n  add\n    /* \"#utility.yul\":928:952   */\n  swap1\n  swap3\n  add\n    /* \"#utility.yul\":921:956   */\n  swap3\n  swap1\n  swap3\n  mstore\n    /* \"#utility.yul\":936:942   */\n  swap5\n    /* \"#utility.yul\":146:986   */\n  swap4\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":991:1553   */\ntag_3:\n    /* \"#utility.yul\":1090:1096   */\n  0x00\n    /* \"#utility.yul\":1098:1104   */\n  dup1\n    /* \"#utility.yul\":1151:1153   */\n  0x40\n    /* \"#utility.yul\":1139:1148   */\n  dup4\n    /* \"#utility.yul\":1130:1137   */\n  dup6\n    /* \"#utility.yul\":1126:1149   */\n  sub\n    /* \"#utility.yul\":1122:1154   */\n  slt\n    /* \"#utility.yul\":1119:1171   */\n  iszero\n  tag_29\n  jumpi\n    /* \"#utility.yul\":1167:1168   */\n  0x00\n    /* \"#utility.yul\":1164:1165   */\n  dup1\n    /* \"#utility.yul\":1157:1169   */\n  revert\n    /* \"#utility.yul\":1119:1171   */\ntag_29:\n    /* \"#utility.yul\":1194:1210   */\n  dup3\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1259:1273   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":1256:1290   */\n  iszero\n  tag_30\n  jumpi\n    /* \"#utility.yul\":1286:1287   */\n  0x00\n    /* \"#utility.yul\":1283:1284   */\n  dup1\n    /* \"#utility.yul\":1276:1288   */\n  revert\n    /* \"#utility.yul\":1256:1290   */\ntag_30:\n    /* \"#utility.yul\":1309:1370   */\n  tag_31\n    /* \"#utility.yul\":1362:1369   */\n  dup7\n    /* \"#utility.yul\":1353:1359   */\n  dup4\n    /* \"#utility.yul\":1342:1351   */\n  dup8\n    /* \"#utility.yul\":1338:1360   */\n  add\n    /* \"#utility.yul\":1309:1370   */\n  tag_11\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":1299:1370   */\n  swap4\n  pop\n    /* \"#utility.yul\":1416:1418   */\n  0x20\n    /* \"#utility.yul\":1405:1414   */\n  dup6\n    /* \"#utility.yul\":1401:1419   */\n  add\n    /* \"#utility.yul\":1395:1420   */\n  mload\n    /* \"#utility.yul\":1379:1420   */\n  swap2\n  pop\n    /* \"#utility.yul\":1445:1447   */\n  dup1\n    /* \"#utility.yul\":1435:1443   */\n  dup3\n    /* \"#utility.yul\":1432:1448   */\n  gt\n    /* \"#utility.yul\":1429:1465   */\n  iszero\n  tag_32\n  jumpi\n    /* \"#utility.yul\":1461:1462   */\n  0x00\n    /* \"#utility.yul\":1458:1459   */\n  dup1\n    /* \"#utility.yul\":1451:1463   */\n  revert\n    /* \"#utility.yul\":1429:1465   */\ntag_32:\n  pop\n    /* \"#utility.yul\":1484:1547   */\n  tag_33\n    /* \"#utility.yul\":1539:1546   */\n  dup6\n    /* \"#utility.yul\":1528:1536   */\n  dup3\n    /* \"#utility.yul\":1517:1526   */\n  dup7\n    /* \"#utility.yul\":1513:1537   */\n  add\n    /* \"#utility.yul\":1484:1547   */\n  tag_11\n  jump\t// in\ntag_33:\n    /* \"#utility.yul\":1474:1547   */\n  swap2\n  pop\n  pop\n    /* \"#utility.yul\":991:1553   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1558:1938   */\ntag_12:\n    /* \"#utility.yul\":1637:1638   */\n  0x01\n    /* \"#utility.yul\":1633:1645   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":1680:1692   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":1701:1762   */\n  tag_35\n  jumpi\n    /* \"#utility.yul\":1755:1759   */\n  0x7f\n    /* \"#utility.yul\":1747:1753   */\n  dup3\n    /* \"#utility.yul\":1743:1760   */\n  and\n    /* \"#utility.yul\":1733:1760   */\n  swap2\n  pop\n    /* \"#utility.yul\":1701:1762   */\ntag_35:\n    /* \"#utility.yul\":1808:1810   */\n  0x20\n    /* \"#utility.yul\":1800:1806   */\n  dup3\n    /* \"#utility.yul\":1797:1811   */\n  lt\n    /* \"#utility.yul\":1777:1795   */\n  dup2\n    /* \"#utility.yul\":1774:1812   */\n  sub\n    /* \"#utility.yul\":1771:1932   */\n  tag_36\n  jumpi\n    /* \"#utility.yul\":1854:1864   */\n  0x4e487b71\n    /* \"#utility.yul\":1849:1852   */\n  0xe0\n    /* \"#utility.yul\":1845:1865   */\n  shl\n    /* \"#utility.yul\":1842:1843   */\n  0x00\n    /* \"#utility.yul\":1835:1866   */\n  mstore\n    /* \"#utility.yul\":1889:1893   */\n  0x22\n    /* \"#utility.yul\":1886:1887   */\n  0x04\n    /* \"#utility.yul\":1879:1894   */\n  mstore\n    /* \"#utility.yul\":1917:1921   */\n  0x24\n    /* \"#utility.yul\":1914:1915   */\n  0x00\n    /* \"#utility.yul\":1907:1922   */\n  revert\n    /* \"#utility.yul\":1771:1932   */\ntag_36:\n  pop\n    /* \"#utility.yul\":1558:1938   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2069:2614   */\ntag_14:\n    /* \"#utility.yul\":2171:2173   */\n  0x1f\n    /* \"#utility.yul\":2166:2169   */\n  dup3\n    /* \"#utility.yul\":2163:2174   */\n  gt\n    /* \"#utility.yul\":2160:2608   */\n  iszero\n  tag_39\n  jumpi\n    /* \"#utility.yul\":2207:2208   */\n  0x00\n    /* \"#utility.yul\":2232:2237   */\n  dup2\n    /* \"#utility.yul\":2228:2230   */\n  dup2\n    /* \"#utility.yul\":2221:2238   */\n  mstore\n    /* \"#utility.yul\":2277:2281   */\n  0x20\n    /* \"#utility.yul\":2273:2275   */\n  dup2\n    /* \"#utility.yul\":2263:2282   */\n  keccak256\n    /* \"#utility.yul\":2347:2349   */\n  0x1f\n    /* \"#utility.yul\":2335:2345   */\n  dup6\n    /* \"#utility.yul\":2331:2350   */\n  add\n    /* \"#utility.yul\":2328:2329   */\n  0x05\n    /* \"#utility.yul\":2324:2351   */\n  shr\n    /* \"#utility.yul\":2318:2322   */\n  dup2\n    /* \"#utility.yul\":2314:2352   */\n  add\n    /* \"#utility.yul\":2383:2387   */\n  0x20\n    /* \"#utility.yul\":2371:2381   */\n  dup7\n    /* \"#utility.yul\":2368:2388   */\n  lt\n    /* \"#utility.yul\":2365:2412   */\n  iszero\n  tag_40\n  jumpi\n  pop\n    /* \"#utility.yul\":2406:2410   */\n  dup1\n    /* \"#utility.yul\":2365:2412   */\ntag_40:\n    /* \"#utility.yul\":2461:2463   */\n  0x1f\n    /* \"#utility.yul\":2456:2459   */\n  dup6\n    /* \"#utility.yul\":2452:2464   */\n  add\n    /* \"#utility.yul\":2449:2450   */\n  0x05\n    /* \"#utility.yul\":2445:2465   */\n  shr\n    /* \"#utility.yul\":2439:2443   */\n  dup3\n    /* \"#utility.yul\":2435:2466   */\n  add\n    /* \"#utility.yul\":2425:2466   */\n  swap2\n  pop\n    /* \"#utility.yul\":2516:2598   */\ntag_41:\n    /* \"#utility.yul\":2534:2536   */\n  dup2\n    /* \"#utility.yul\":2527:2532   */\n  dup2\n    /* \"#utility.yul\":2524:2537   */\n  lt\n    /* \"#utility.yul\":2516:2598   */\n  iszero\n  tag_43\n  jumpi\n    /* \"#utility.yul\":2579:2596   */\n  dup3\n  dup2\n  sstore\n    /* \"#utility.yul\":2560:2561   */\n  0x01\n    /* \"#utility.yul\":2549:2562   */\n  add\n    /* \"#utility.yul\":2516:2598   */\n  jump(tag_41)\ntag_43:\n    /* \"#utility.yul\":2520:2523   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":2160:2608   */\ntag_39:\n    /* \"#utility.yul\":2069:2614   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2790:4142   */\ntag_7:\n    /* \"#utility.yul\":2910:2920   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":2932:2962   */\n  dup2\n  gt\n    /* \"#utility.yul\":2929:2985   */\n  iszero\n  tag_47\n  jumpi\n    /* \"#utility.yul\":2965:2983   */\n  tag_47\n  tag_10\n  jump\t// in\ntag_47:\n    /* \"#utility.yul\":2994:3091   */\n  tag_48\n    /* \"#utility.yul\":3084:3090   */\n  dup2\n    /* \"#utility.yul\":3044:3082   */\n  tag_49\n    /* \"#utility.yul\":3076:3080   */\n  dup5\n    /* \"#utility.yul\":3070:3081   */\n  sload\n    /* \"#utility.yul\":3044:3082   */\n  tag_12\n  jump\t// in\ntag_49:\n    /* \"#utility.yul\":3038:3042   */\n  dup5\n    /* \"#utility.yul\":2994:3091   */\n  tag_14\n  jump\t// in\ntag_48:\n    /* \"#utility.yul\":3146:3150   */\n  0x20\n  dup1\n    /* \"#utility.yul\":3210:3212   */\n  0x1f\n    /* \"#utility.yul\":3199:3213   */\n  dup4\n  gt\n    /* \"#utility.yul\":3227:3228   */\n  0x01\n    /* \"#utility.yul\":3222:3885   */\n  dup2\n  eq\n  tag_51\n  jumpi\n    /* \"#utility.yul\":3929:3930   */\n  0x00\n    /* \"#utility.yul\":3946:3952   */\n  dup5\n    /* \"#utility.yul\":3943:4032   */\n  iszero\n  tag_52\n  jumpi\n  pop\n    /* \"#utility.yul\":3998:4017   */\n  dup6\n  dup4\n  add\n    /* \"#utility.yul\":3992:4018   */\n  mload\n    /* \"#utility.yul\":3943:4032   */\ntag_52:\n  not(0x00)\n    /* \"#utility.yul\":2747:2748   */\n  0x03\n    /* \"#utility.yul\":2743:2754   */\n  dup7\n  swap1\n  shl\n    /* \"#utility.yul\":2739:2763   */\n  shr\n    /* \"#utility.yul\":2735:2764   */\n  not\n    /* \"#utility.yul\":2725:2765   */\n  and\n    /* \"#utility.yul\":2771:2772   */\n  0x01\n    /* \"#utility.yul\":2767:2778   */\n  dup6\n  swap1\n  shl\n    /* \"#utility.yul\":2722:2779   */\n  or\n    /* \"#utility.yul\":4045:4126   */\n  dup6\n  sstore\n    /* \"#utility.yul\":3192:4136   */\n  jump(tag_43)\n    /* \"#utility.yul\":3222:3885   */\ntag_51:\n    /* \"#utility.yul\":2016:2017   */\n  0x00\n    /* \"#utility.yul\":2009:2023   */\n  dup6\n  dup2\n  mstore\n    /* \"#utility.yul\":2053:2057   */\n  0x20\n    /* \"#utility.yul\":2040:2058   */\n  dup2\n  keccak256\n  not(0x1f)\n    /* \"#utility.yul\":3258:3278   */\n  dup7\n  and\n  swap2\n    /* \"#utility.yul\":3376:3612   */\ntag_55:\n    /* \"#utility.yul\":3390:3397   */\n  dup3\n    /* \"#utility.yul\":3387:3388   */\n  dup2\n    /* \"#utility.yul\":3384:3398   */\n  lt\n    /* \"#utility.yul\":3376:3612   */\n  iszero\n  tag_57\n  jumpi\n    /* \"#utility.yul\":3479:3498   */\n  dup9\n  dup7\n  add\n    /* \"#utility.yul\":3473:3499   */\n  mload\n    /* \"#utility.yul\":3458:3500   */\n  dup3\n  sstore\n    /* \"#utility.yul\":3571:3598   */\n  swap5\n  dup5\n  add\n  swap5\n    /* \"#utility.yul\":3539:3540   */\n  0x01\n    /* \"#utility.yul\":3527:3541   */\n  swap1\n  swap2\n  add\n  swap1\n    /* \"#utility.yul\":3406:3425   */\n  dup5\n  add\n    /* \"#utility.yul\":3376:3612   */\n  jump(tag_55)\ntag_57:\n    /* \"#utility.yul\":3380:3383   */\n  pop\n    /* \"#utility.yul\":3640:3646   */\n  dup6\n    /* \"#utility.yul\":3631:3638   */\n  dup3\n    /* \"#utility.yul\":3628:3647   */\n  lt\n    /* \"#utility.yul\":3625:3826   */\n  iszero\n  tag_58\n  jumpi\n    /* \"#utility.yul\":3701:3720   */\n  dup8\n  dup6\n  add\n    /* \"#utility.yul\":3695:3721   */\n  mload\n  not(0x00)\n    /* \"#utility.yul\":3784:3785   */\n  0x03\n    /* \"#utility.yul\":3780:3794   */\n  dup9\n  swap1\n  shl\n    /* \"#utility.yul\":3796:3799   */\n  0xf8\n    /* \"#utility.yul\":3776:3800   */\n  and\n    /* \"#utility.yul\":3772:3809   */\n  shr\n    /* \"#utility.yul\":3768:3810   */\n  not\n    /* \"#utility.yul\":3753:3811   */\n  and\n    /* \"#utility.yul\":3738:3812   */\n  dup2\n  sstore\n    /* \"#utility.yul\":3625:3826   */\ntag_58:\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":3872:3873   */\n  0x01\n    /* \"#utility.yul\":3856:3870   */\n  swap1\n  dup2\n  shl\n    /* \"#utility.yul\":3852:3874   */\n  add\n    /* \"#utility.yul\":3839:3875   */\n  swap1\n  sstore\n  pop\n    /* \"#utility.yul\":2790:4142   */\n  jump\t// out\ntag_16:\n    /* \"MY MainNFT/Art_Gallary_flattened.sol\":38975:55654  contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":38975:55654  contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x6352211e\n      gt\n      tag_16\n      jumpi\n      dup1\n      0xa22cb465\n      gt\n      tag_17\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xb88d4fde\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xc87b56dd\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_15\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_17:\n      dup1\n      0x6352211e\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_11\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_16:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x081812fc\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x42842e0e\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":39917:40217  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_3:\n      tag_18\n      tag_19\n      calldatasize\n      0x04\n      tag_20\n      jump\t// in\n    tag_19:\n      tag_21\n      jump\t// in\n    tag_18:\n      mload(0x40)\n        /* \"#utility.yul\":565:579   */\n      swap1\n      iszero\n        /* \"#utility.yul\":558:580   */\n      iszero\n        /* \"#utility.yul\":540:581   */\n      dup2\n      mstore\n        /* \"#utility.yul\":528:530   */\n      0x20\n        /* \"#utility.yul\":513:531   */\n      add\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":39917:40217  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_22:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":40818:40916  function name() public view virtual override returns (string memory) {... */\n    tag_4:\n      tag_24\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      tag_22\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":42282:42449  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_5:\n      tag_28\n      tag_29\n      calldatasize\n      0x04\n      tag_30\n      jump\t// in\n    tag_29:\n      tag_31\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1697:1729   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1679:1730   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1667:1669   */\n      0x20\n        /* \"#utility.yul\":1652:1670   */\n      add\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":42282:42449  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n      tag_22\n        /* \"#utility.yul\":1533:1736   */\n      jump\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":41815:42221  function approve(address to, uint256 tokenId) public virtual override {... */\n    tag_6:\n      tag_34\n      tag_35\n      calldatasize\n      0x04\n      tag_36\n      jump\t// in\n    tag_35:\n      tag_37\n      jump\t// in\n    tag_34:\n      stop\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":42959:43285  function transferFrom(... */\n    tag_7:\n      tag_34\n      tag_39\n      calldatasize\n      0x04\n      tag_40\n      jump\t// in\n    tag_39:\n      tag_41\n      jump\t// in\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":43351:43530  function safeTransferFrom(... */\n    tag_8:\n      tag_34\n      tag_43\n      calldatasize\n      0x04\n      tag_40\n      jump\t// in\n    tag_43:\n      tag_44\n      jump\t// in\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":40537:40756  function ownerOf(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_9:\n      tag_28\n      tag_46\n      calldatasize\n      0x04\n      tag_30\n      jump\t// in\n    tag_46:\n      tag_47\n      jump\t// in\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":40276:40480  function balanceOf(address owner) public view virtual override returns (uint256) {... */\n    tag_10:\n      tag_49\n      tag_50\n      calldatasize\n      0x04\n      tag_51\n      jump\t// in\n    tag_50:\n      tag_52\n      jump\t// in\n    tag_49:\n      mload(0x40)\n        /* \"#utility.yul\":2848:2873   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":2836:2838   */\n      0x20\n        /* \"#utility.yul\":2821:2839   */\n      add\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":40276:40480  function balanceOf(address owner) public view virtual override returns (uint256) {... */\n      tag_22\n        /* \"#utility.yul\":2702:2879   */\n      jump\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":40980:41082  function symbol() public view virtual override returns (string memory) {... */\n    tag_11:\n      tag_24\n      tag_56\n      jump\t// in\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":42516:42669  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_12:\n      tag_34\n      tag_59\n      calldatasize\n      0x04\n      tag_60\n      jump\t// in\n    tag_59:\n      tag_61\n      jump\t// in\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":43596:43910  function safeTransferFrom(... */\n    tag_13:\n      tag_34\n      tag_63\n      calldatasize\n      0x04\n      tag_64\n      jump\t// in\n    tag_63:\n      tag_65\n      jump\t// in\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":41148:41424  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_14:\n      tag_24\n      tag_67\n      calldatasize\n      0x04\n      tag_30\n      jump\t// in\n    tag_67:\n      tag_68\n      jump\t// in\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":42735:42897  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n    tag_15:\n      tag_18\n      tag_71\n      calldatasize\n      0x04\n      tag_72\n      jump\t// in\n    tag_71:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":42855:42880  _operatorApprovals[owner] */\n      swap2\n      dup3\n      and\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":42832:42836  bool */\n      0x00\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":42855:42880  _operatorApprovals[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":42855:42873  _operatorApprovals */\n      0x05\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":42855:42880  _operatorApprovals[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":42855:42890  _operatorApprovals[owner][operator] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":42735:42897  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n      jump\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":39917:40217  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_21:\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":40019:40023  bool */\n      0x00\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":40054:40094  interfaceId == type(IERC721).interfaceId */\n      dup3\n      and\n      shl(0xe0, 0x80ac58cd)\n      eq\n      dup1\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":40054:40158  interfaceId == type(IERC721).interfaceId ||... */\n      tag_76\n      jumpi\n      pop\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":40110:40158  interfaceId == type(IERC721Metadata).interfaceId */\n      dup3\n      and\n      shl(0xe0, 0x5b5e139f)\n      eq\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":40054:40158  interfaceId == type(IERC721).interfaceId ||... */\n    tag_76:\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":40054:40210  interfaceId == type(IERC721).interfaceId ||... */\n      dup1\n      tag_78\n      jumpi\n      pop\n      shl(0xe0, 0x01ffc9a7)\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":31721:31761  interfaceId == type(IERC165).interfaceId */\n      dup4\n      and\n      eq\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":40174:40210  super.supportsInterface(interfaceId) */\n    tag_78:\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":40035:40210  return... */\n      swap3\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":39917:40217  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":40818:40916  function name() public view virtual override returns (string memory) {... */\n    tag_25:\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":40872:40885  string memory */\n      0x60\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":40904:40909  _name */\n      0x00\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":40897:40909  return _name */\n      dup1\n      sload\n      tag_81\n      swap1\n      tag_82\n      jump\t// in\n    tag_81:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_83\n      swap1\n      tag_82\n      jump\t// in\n    tag_83:\n      dup1\n      iszero\n      tag_84\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_85\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_84)\n    tag_85:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_86:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_86\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_84:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":40818:40916  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":42282:42449  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_31:\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":42358:42365  address */\n      0x00\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":42377:42400  _requireMinted(tokenId) */\n      tag_88\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":42392:42399  tokenId */\n      dup3\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":42377:42391  _requireMinted */\n      tag_89\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":42377:42400  _requireMinted(tokenId) */\n      jump\t// in\n    tag_88:\n      pop\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":42418:42442  _tokenApprovals[tokenId] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":42418:42433  _tokenApprovals */\n      0x04\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":42418:42442  _tokenApprovals[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":42282:42449  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n      jump\t// out\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":41815:42221  function approve(address to, uint256 tokenId) public virtual override {... */\n    tag_37:\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":41895:41908  address owner */\n      0x00\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":41911:41934  ERC721.ownerOf(tokenId) */\n      tag_91\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":41926:41933  tokenId */\n      dup3\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":41911:41925  ERC721.ownerOf */\n      tag_47\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":41911:41934  ERC721.ownerOf(tokenId) */\n      jump\t// in\n    tag_91:\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":41895:41934  address owner = ERC721.ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":41958:41963  owner */\n      dup1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":41952:41963  to != owner */\n      and\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":41952:41954  to */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":41952:41963  to != owner */\n      and\n      sub\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":41944:42001  require(to != owner, \"ERC721: approval to current owner\") */\n      tag_92\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5363:5365   */\n      0x20\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":41944:42001  require(to != owner, \"ERC721: approval to current owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5345:5366   */\n      mstore\n        /* \"#utility.yul\":5402:5404   */\n      0x21\n        /* \"#utility.yul\":5382:5400   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5375:5405   */\n      mstore\n        /* \"#utility.yul\":5441:5475   */\n      0x4552433732313a20617070726f76616c20746f2063757272656e74206f776e65\n        /* \"#utility.yul\":5421:5439   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5414:5476   */\n      mstore\n      shl(0xf9, 0x39)\n        /* \"#utility.yul\":5492:5510   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5485:5516   */\n      mstore\n        /* \"#utility.yul\":5533:5552   */\n      0x84\n      add\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":41944:42001  require(to != owner, \"ERC721: approval to current owner\") */\n    tag_93:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_92:\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":16939:16949  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":42033:42054  _msgSender() == owner */\n      dup3\n      and\n      eq\n      dup1\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":42033:42095  _msgSender() == owner || isApprovedForAll(owner, _msgSender()) */\n      tag_98\n      jumpi\n      pop\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":42058:42095  isApprovedForAll(owner, _msgSender()) */\n      tag_98\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":42075:42080  owner */\n      dup2\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":16939:16949  msg.sender */\n      caller\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":42735:42897  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n      tag_71\n      jump\t// in\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":42058:42095  isApprovedForAll(owner, _msgSender()) */\n    tag_98:\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":42012:42182  require(... */\n      tag_100\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5765:5767   */\n      0x20\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":42012:42182  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5747:5768   */\n      mstore\n        /* \"#utility.yul\":5804:5806   */\n      0x3d\n        /* \"#utility.yul\":5784:5802   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5777:5807   */\n      mstore\n        /* \"#utility.yul\":5843:5877   */\n      0x4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f\n        /* \"#utility.yul\":5823:5841   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5816:5878   */\n      mstore\n        /* \"#utility.yul\":5914:5945   */\n      0x6b656e206f776e6572206f7220617070726f76656420666f7220616c6c000000\n        /* \"#utility.yul\":5894:5912   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5887:5946   */\n      mstore\n        /* \"#utility.yul\":5963:5982   */\n      0x84\n      add\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":42012:42182  require(... */\n      tag_93\n        /* \"#utility.yul\":5563:5988   */\n      jump\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":42012:42182  require(... */\n    tag_100:\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":42193:42214  _approve(to, tokenId) */\n      tag_103\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":42202:42204  to */\n      dup4\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":42206:42213  tokenId */\n      dup4\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":42193:42201  _approve */\n      tag_104\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":42193:42214  _approve(to, tokenId) */\n      jump\t// in\n    tag_103:\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":41885:42221  {... */\n      pop\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":41815:42221  function approve(address to, uint256 tokenId) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":42959:43285  function transferFrom(... */\n    tag_41:\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":43148:43189  _isApprovedOrOwner(_msgSender(), tokenId) */\n      tag_106\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":16939:16949  msg.sender */\n      caller\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":43181:43188  tokenId */\n      dup3\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":43148:43166  _isApprovedOrOwner */\n      tag_108\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":43148:43189  _isApprovedOrOwner(_msgSender(), tokenId) */\n      jump\t// in\n    tag_106:\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":43140:43239  require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: caller is not token owner or approved\") */\n      tag_109\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_93\n      swap1\n      tag_111\n      jump\t// in\n    tag_109:\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":43250:43278  _transfer(from, to, tokenId) */\n      tag_103\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":43260:43264  from */\n      dup4\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":43266:43268  to */\n      dup4\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":43270:43277  tokenId */\n      dup4\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":43250:43259  _transfer */\n      tag_113\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":43250:43278  _transfer(from, to, tokenId) */\n      jump\t// in\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":43351:43530  function safeTransferFrom(... */\n    tag_44:\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":43484:43523  safeTransferFrom(from, to, tokenId, \"\") */\n      tag_103\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":43501:43505  from */\n      dup4\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":43507:43509  to */\n      dup4\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":43511:43518  tokenId */\n      dup4\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":43484:43523  safeTransferFrom(from, to, tokenId, \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":43484:43500  safeTransferFrom */\n      tag_65\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":43484:43523  safeTransferFrom(from, to, tokenId, \"\") */\n      jump\t// in\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":40537:40756  function ownerOf(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_47:\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":40609:40616  address */\n      0x00\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":45277:45293  _owners[tokenId] */\n      dup2\n      dup2\n      mstore\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":45277:45284  _owners */\n      0x02\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":45277:45293  _owners[tokenId] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup1\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":40671:40727  require(owner != address(0), \"ERC721: invalid token ID\") */\n      tag_78\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6609:6611   */\n      0x20\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":40671:40727  require(owner != address(0), \"ERC721: invalid token ID\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6591:6612   */\n      mstore\n        /* \"#utility.yul\":6648:6650   */\n      0x18\n        /* \"#utility.yul\":6628:6646   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6621:6651   */\n      mstore\n      shl(0x42, 0x115490cdcc8c4e881a5b9d985b1a59081d1bdad95b881251)\n        /* \"#utility.yul\":6667:6685   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6660:6714   */\n      mstore\n        /* \"#utility.yul\":6731:6749   */\n      0x64\n      add\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":40671:40727  require(owner != address(0), \"ERC721: invalid token ID\") */\n      tag_93\n        /* \"#utility.yul\":6407:6755   */\n      jump\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":40276:40480  function balanceOf(address owner) public view virtual override returns (uint256) {... */\n    tag_52:\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":40348:40355  uint256 */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":40375:40394  owner != address(0) */\n      dup3\n      and\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":40367:40440  require(owner != address(0), \"ERC721: address zero is not a valid owner\") */\n      tag_123\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6962:6964   */\n      0x20\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":40367:40440  require(owner != address(0), \"ERC721: address zero is not a valid owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6944:6965   */\n      mstore\n        /* \"#utility.yul\":7001:7003   */\n      0x29\n        /* \"#utility.yul\":6981:6999   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6974:7004   */\n      mstore\n        /* \"#utility.yul\":7040:7074   */\n      0x4552433732313a2061646472657373207a65726f206973206e6f742061207661\n        /* \"#utility.yul\":7020:7038   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7013:7075   */\n      mstore\n      shl(0xb9, 0x3634b21037bbb732b9)\n        /* \"#utility.yul\":7091:7109   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":7084:7123   */\n      mstore\n        /* \"#utility.yul\":7140:7159   */\n      0x84\n      add\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":40367:40440  require(owner != address(0), \"ERC721: address zero is not a valid owner\") */\n      tag_93\n        /* \"#utility.yul\":6760:7165   */\n      jump\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":40367:40440  require(owner != address(0), \"ERC721: address zero is not a valid owner\") */\n    tag_123:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":40457:40473  _balances[owner] */\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":40457:40466  _balances */\n      0x03\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":40457:40473  _balances[owner] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":40276:40480  function balanceOf(address owner) public view virtual override returns (uint256) {... */\n      jump\t// out\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":40980:41082  function symbol() public view virtual override returns (string memory) {... */\n    tag_56:\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":41036:41049  string memory */\n      0x60\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":41068:41075  _symbol */\n      0x01\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":41061:41075  return _symbol */\n      dup1\n      sload\n      tag_81\n      swap1\n      tag_82\n      jump\t// in\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":42516:42669  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_61:\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":42610:42662  _setApprovalForAll(_msgSender(), operator, approved) */\n      tag_133\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":16939:16949  msg.sender */\n      caller\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":42643:42651  operator */\n      dup4\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":42653:42661  approved */\n      dup4\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":42610:42628  _setApprovalForAll */\n      tag_135\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":42610:42662  _setApprovalForAll(_msgSender(), operator, approved) */\n      jump\t// in\n    tag_133:\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":42516:42669  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":43596:43910  function safeTransferFrom(... */\n    tag_65:\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":43764:43805  _isApprovedOrOwner(_msgSender(), tokenId) */\n      tag_137\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":16939:16949  msg.sender */\n      caller\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":43797:43804  tokenId */\n      dup4\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":43764:43782  _isApprovedOrOwner */\n      tag_108\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":43764:43805  _isApprovedOrOwner(_msgSender(), tokenId) */\n      jump\t// in\n    tag_137:\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":43756:43855  require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: caller is not token owner or approved\") */\n      tag_139\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_93\n      swap1\n      tag_111\n      jump\t// in\n    tag_139:\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":43865:43903  _safeTransfer(from, to, tokenId, data) */\n      tag_141\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":43879:43883  from */\n      dup5\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":43885:43887  to */\n      dup5\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":43889:43896  tokenId */\n      dup5\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":43898:43902  data */\n      dup5\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":43865:43878  _safeTransfer */\n      tag_142\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":43865:43903  _safeTransfer(from, to, tokenId, data) */\n      jump\t// in\n    tag_141:\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":43596:43910  function safeTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":41148:41424  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_68:\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":41221:41234  string memory */\n      0x60\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":41246:41269  _requireMinted(tokenId) */\n      tag_144\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":41261:41268  tokenId */\n      dup3\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":41246:41260  _requireMinted */\n      tag_89\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":41246:41269  _requireMinted(tokenId) */\n      jump\t// in\n    tag_144:\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":41280:41301  string memory baseURI */\n      0x00\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":41304:41314  _baseURI() */\n      tag_145\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":41742:41751  return \"\" */\n      0x40\n      dup1\n      mload\n      0x20\n      dup2\n      add\n      swap1\n      swap2\n      mstore\n      0x00\n      dup2\n      mstore\n      swap1\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":41666:41758  function _baseURI() internal view virtual returns (string memory) {... */\n      jump\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":41304:41314  _baseURI() */\n    tag_145:\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":41280:41314  string memory baseURI = _baseURI() */\n      swap1\n      pop\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":41355:41356  0 */\n      0x00\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":41337:41344  baseURI */\n      dup2\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":41331:41352  bytes(baseURI).length */\n      mload\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":41331:41356  bytes(baseURI).length > 0 */\n      gt\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":41331:41417  bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \"\" */\n      tag_147\n      jumpi\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      jump(tag_148)\n    tag_147:\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":41383:41390  baseURI */\n      dup1\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":41392:41410  tokenId.toString() */\n      tag_149\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":41392:41399  tokenId */\n      dup5\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":41392:41408  tokenId.toString */\n      tag_150\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":41392:41410  tokenId.toString() */\n      jump\t// in\n    tag_149:\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":41366:41411  abi.encodePacked(baseURI, tokenId.toString()) */\n      add(0x20, mload(0x40))\n      tag_151\n      swap3\n      swap2\n      swap1\n      tag_152\n      jump\t// in\n    tag_151:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":41331:41417  bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \"\" */\n    tag_148:\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":41324:41417  return bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \"\" */\n      swap4\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":41148:41424  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":51813:51946  function _requireMinted(uint256 tokenId) internal view virtual {... */\n    tag_89:\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":45668:45672  bool */\n      0x00\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":45277:45293  _owners[tokenId] */\n      dup2\n      dup2\n      mstore\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":45277:45284  _owners */\n      0x02\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":45277:45293  _owners[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":51886:51939  require(_exists(tokenId), \"ERC721: invalid token ID\") */\n      tag_158\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6609:6611   */\n      0x20\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":51886:51939  require(_exists(tokenId), \"ERC721: invalid token ID\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6591:6612   */\n      mstore\n        /* \"#utility.yul\":6648:6650   */\n      0x18\n        /* \"#utility.yul\":6628:6646   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6621:6651   */\n      mstore\n      shl(0x42, 0x115490cdcc8c4e881a5b9d985b1a59081d1bdad95b881251)\n        /* \"#utility.yul\":6667:6685   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6660:6714   */\n      mstore\n        /* \"#utility.yul\":6731:6749   */\n      0x64\n      add\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":51886:51939  require(_exists(tokenId), \"ERC721: invalid token ID\") */\n      tag_93\n        /* \"#utility.yul\":6407:6755   */\n      jump\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":51886:51939  require(_exists(tokenId), \"ERC721: invalid token ID\") */\n    tag_158:\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":51813:51946  function _requireMinted(uint256 tokenId) internal view virtual {... */\n      pop\n      jump\t// out\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":51115:51286  function _approve(address to, uint256 tokenId) internal virtual {... */\n    tag_104:\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":51189:51213  _tokenApprovals[tokenId] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":51189:51204  _tokenApprovals */\n      0x04\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":51189:51213  _tokenApprovals[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":51189:51218  _tokenApprovals[tokenId] = to */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup5\n      and\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":51189:51213  _tokenApprovals[tokenId] */\n      dup2\n      swap1\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":51242:51265  ERC721.ownerOf(tokenId) */\n      tag_162\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":51189:51213  _tokenApprovals[tokenId] */\n      dup3\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":51242:51256  ERC721.ownerOf */\n      tag_47\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":51242:51265  ERC721.ownerOf(tokenId) */\n      jump\t// in\n    tag_162:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":51233:51279  Approval(ERC721.ownerOf(tokenId), to, tokenId) */\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":51115:51286  function _approve(address to, uint256 tokenId) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":45887:46148  function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {... */\n    tag_108:\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":45980:45984  bool */\n      0x00\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":45996:46009  address owner */\n      dup1\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":46012:46035  ERC721.ownerOf(tokenId) */\n      tag_164\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":46027:46034  tokenId */\n      dup4\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":46012:46026  ERC721.ownerOf */\n      tag_47\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":46012:46035  ERC721.ownerOf(tokenId) */\n      jump\t// in\n    tag_164:\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":45996:46035  address owner = ERC721.ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":46064:46069  owner */\n      dup1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":46053:46069  spender == owner */\n      and\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":46053:46060  spender */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":46053:46069  spender == owner */\n      and\n      eq\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":46053:46105  spender == owner || isApprovedForAll(owner, spender) */\n      dup1\n      tag_166\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":42855:42880  _operatorApprovals[owner] */\n      dup1\n      dup3\n      and\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":42832:42836  bool */\n      0x00\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":42855:42880  _operatorApprovals[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":42855:42873  _operatorApprovals */\n      0x05\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":42855:42880  _operatorApprovals[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":42855:42890  _operatorApprovals[owner][operator] */\n      swap4\n      dup9\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n      sload\n      0xff\n      and\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":46073:46105  isApprovedForAll(owner, spender) */\n    tag_166:\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":46053:46140  spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender */\n      dup1\n      tag_167\n      jumpi\n      pop\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":46133:46140  spender */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":46109:46140  getApproved(tokenId) == spender */\n      and\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":46109:46129  getApproved(tokenId) */\n      tag_168\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":46121:46128  tokenId */\n      dup5\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":46109:46120  getApproved */\n      tag_31\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":46109:46129  getApproved(tokenId) */\n      jump\t// in\n    tag_168:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":46109:46140  getApproved(tokenId) == spender */\n      and\n      eq\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":46053:46140  spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender */\n    tag_167:\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":46045:46141  return (spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender) */\n      swap5\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":45887:46148  function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":49770:51003  function _transfer(... */\n    tag_113:\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":49924:49928  from */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":49897:49928  ERC721.ownerOf(tokenId) == from */\n      and\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":49897:49920  ERC721.ownerOf(tokenId) */\n      tag_170\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":49912:49919  tokenId */\n      dup3\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":49897:49911  ERC721.ownerOf */\n      tag_47\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":49897:49920  ERC721.ownerOf(tokenId) */\n      jump\t// in\n    tag_170:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":49897:49928  ERC721.ownerOf(tokenId) == from */\n      and\n      eq\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":49889:49970  require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer from incorrect owner\") */\n      tag_171\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_93\n      swap1\n      tag_173\n      jump\t// in\n    tag_171:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":49988:50004  to != address(0) */\n      dup3\n      and\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":49980:50045  require(to != address(0), \"ERC721: transfer to the zero address\") */\n      tag_174\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8279:8281   */\n      0x20\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":49980:50045  require(to != address(0), \"ERC721: transfer to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8261:8282   */\n      mstore\n        /* \"#utility.yul\":8318:8320   */\n      0x24\n        /* \"#utility.yul\":8298:8316   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":8291:8321   */\n      mstore\n        /* \"#utility.yul\":8357:8391   */\n      0x4552433732313a207472616e7366657220746f20746865207a65726f20616464\n        /* \"#utility.yul\":8337:8355   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8330:8392   */\n      mstore\n      shl(0xe0, 0x72657373)\n        /* \"#utility.yul\":8408:8426   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":8401:8435   */\n      mstore\n        /* \"#utility.yul\":8452:8471   */\n      0x84\n      add\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":49980:50045  require(to != address(0), \"ERC721: transfer to the zero address\") */\n      tag_93\n        /* \"#utility.yul\":8077:8477   */\n      jump\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":49980:50045  require(to != address(0), \"ERC721: transfer to the zero address\") */\n    tag_174:\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":50225:50229  from */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":50198:50229  ERC721.ownerOf(tokenId) == from */\n      and\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":50198:50221  ERC721.ownerOf(tokenId) */\n      tag_179\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":50213:50220  tokenId */\n      dup3\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":50198:50212  ERC721.ownerOf */\n      tag_47\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":50198:50221  ERC721.ownerOf(tokenId) */\n      jump\t// in\n    tag_179:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":50198:50229  ERC721.ownerOf(tokenId) == from */\n      and\n      eq\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":50190:50271  require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer from incorrect owner\") */\n      tag_180\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_93\n      swap1\n      tag_173\n      jump\t// in\n    tag_180:\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":50340:50364  _tokenApprovals[tokenId] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":50340:50355  _tokenApprovals */\n      0x04\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":50340:50364  _tokenApprovals[tokenId] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":50333:50364  delete _tokenApprovals[tokenId] */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      swap1\n      dup2\n      and\n      swap1\n      swap2\n      sstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":50808:50823  _balances[from] */\n      dup8\n      dup2\n      and\n      dup1\n      dup7\n      mstore\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":50808:50817  _balances */\n      0x03\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":50808:50823  _balances[from] */\n      dup6\n      mstore\n      dup4\n      dup7\n      keccak256\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":50808:50828  _balances[from] -= 1 */\n      dup1\n      sload\n      not(0x00)\n      add\n      swap1\n      sstore\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":50842:50855  _balances[to] */\n      swap1\n      dup8\n      and\n      dup1\n      dup7\n      mstore\n      dup4\n      dup7\n      keccak256\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":50842:50860  _balances[to] += 1 */\n      dup1\n      sload\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":50333:50364  delete _tokenApprovals[tokenId] */\n      0x01\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":50842:50860  _balances[to] += 1 */\n      add\n      swap1\n      sstore\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":50880:50896  _owners[tokenId] */\n      dup7\n      dup7\n      mstore\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":50880:50887  _owners */\n      0x02\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":50880:50896  _owners[tokenId] */\n      swap1\n      swap5\n      mstore\n      dup3\n      dup6\n      keccak256\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":50880:50901  _owners[tokenId] = to */\n      dup1\n      sload\n      swap1\n      swap3\n      and\n      dup5\n      or\n      swap1\n      swap2\n      sstore\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":50917:50944  Transfer(from, to, tokenId) */\n      swap1\n      mload\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":50356:50363  tokenId */\n      dup5\n      swap4\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":50917:50944  Transfer(from, to, tokenId) */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap2\n      log4\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":41885:42221  {... */\n      pop\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":41815:42221  function approve(address to, uint256 tokenId) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":51422:51729  function _setApprovalForAll(... */\n    tag_135:\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":51572:51580  operator */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":51563:51580  owner != operator */\n      and\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":51563:51568  owner */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":51563:51580  owner != operator */\n      and\n      sub\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":51555:51610  require(owner != operator, \"ERC721: approve to caller\") */\n      tag_186\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8684:8686   */\n      0x20\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":51555:51610  require(owner != operator, \"ERC721: approve to caller\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8666:8687   */\n      mstore\n        /* \"#utility.yul\":8723:8725   */\n      0x19\n        /* \"#utility.yul\":8703:8721   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8696:8726   */\n      mstore\n        /* \"#utility.yul\":8762:8789   */\n      0x4552433732313a20617070726f766520746f2063616c6c657200000000000000\n        /* \"#utility.yul\":8742:8760   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8735:8790   */\n      mstore\n        /* \"#utility.yul\":8807:8825   */\n      0x64\n      add\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":51555:51610  require(owner != operator, \"ERC721: approve to caller\") */\n      tag_93\n        /* \"#utility.yul\":8482:8831   */\n      jump\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":51555:51610  require(owner != operator, \"ERC721: approve to caller\") */\n    tag_186:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":51620:51645  _operatorApprovals[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":51620:51638  _operatorApprovals */\n      0x05\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":51620:51645  _operatorApprovals[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":51620:51655  _operatorApprovals[owner][operator] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":51620:51666  _operatorApprovals[owner][operator] = approved */\n      dup1\n      sload\n      not(0xff)\n      and\n      dup7\n      iszero\n      iszero\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":51681:51722  ApprovalForAll(owner, operator, approved) */\n      swap2\n      mload\n        /* \"#utility.yul\":540:581   */\n      swap2\n      dup3\n      mstore\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":51681:51722  ApprovalForAll(owner, operator, approved) */\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n      swap2\n        /* \"#utility.yul\":513:531   */\n      add\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":51681:51722  ApprovalForAll(owner, operator, approved) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":51422:51729  function _setApprovalForAll(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":44771:45076  function _safeTransfer(... */\n    tag_142:\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":44921:44949  _transfer(from, to, tokenId) */\n      tag_191\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":44931:44935  from */\n      dup5\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":44937:44939  to */\n      dup5\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":44941:44948  tokenId */\n      dup5\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":44921:44930  _transfer */\n      tag_113\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":44921:44949  _transfer(from, to, tokenId) */\n      jump\t// in\n    tag_191:\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":44967:45014  _checkOnERC721Received(from, to, tokenId, data) */\n      tag_192\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":44990:44994  from */\n      dup5\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":44996:44998  to */\n      dup5\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":45000:45007  tokenId */\n      dup5\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":45009:45013  data */\n      dup5\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":44967:44989  _checkOnERC721Received */\n      tag_193\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":44967:45014  _checkOnERC721Received(from, to, tokenId, data) */\n      jump\t// in\n    tag_192:\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":44959:45069  require(_checkOnERC721Received(from, to, tokenId, data), \"ERC721: transfer to non ERC721Receiver implementer\") */\n      tag_141\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_93\n      swap1\n      tag_196\n      jump\t// in\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":14359:15055  function toString(uint256 value) internal pure returns (string memory) {... */\n    tag_150:\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":14415:14428  string memory */\n      0x60\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":14464:14478  uint256 length */\n      0x00\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":14481:14498  Math.log10(value) */\n      tag_199\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":14492:14497  value */\n      dup4\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":14481:14491  Math.log10 */\n      tag_200\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":14481:14498  Math.log10(value) */\n      jump\t// in\n    tag_199:\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":14501:14502  1 */\n      0x01\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":14481:14502  Math.log10(value) + 1 */\n      add\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":14464:14502  uint256 length = Math.log10(value) + 1 */\n      swap1\n      pop\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":14516:14536  string memory buffer */\n      0x00\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":14550:14556  length */\n      dup2\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":14539:14557  new string(length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_202\n      jumpi\n      tag_202\n      tag_203\n      jump\t// in\n    tag_202:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_204\n      jumpi\n      0x20\n      dup3\n      add\n      dup2\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_204:\n      pop\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":14516:14557  string memory buffer = new string(length) */\n      swap1\n      pop\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":14677:14705  add(buffer, add(32, length)) */\n      dup2\n      dup2\n      add\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":14693:14695  32 */\n      0x20\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":14677:14705  add(buffer, add(32, length)) */\n      add\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":14732:15012  while (true) {... */\n    tag_205:\n      not(0x00)\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":14763:14768  ptr-- */\n      add\n      shl(0x81, 0x181899199a1a9b1b9c1cb0b131b232b3)\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":14897:14899  10 */\n      0x0a\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":14886:14900  mod(value, 10) */\n      dup7\n      mod\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":14881:14911  byte(mod(value, 10), _SYMBOLS) */\n      byte\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":14763:14768  ptr-- */\n      dup2\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":14868:14912  mstore8(ptr, byte(mod(value, 10), _SYMBOLS)) */\n      mstore8\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":14956:14958  10 */\n      0x0a\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":14947:14958  value /= 10 */\n      dup6\n      div\n      swap5\n      pop\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":14976:14997  if (value == 0) break */\n      dup5\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":14732:15012  while (true) {... */\n      tag_205\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":14976:14997  if (value == 0) break */\n      jumpi\n      pop\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":15032:15038  buffer */\n      swap4\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":14359:15055  function toString(uint256 value) internal pure returns (string memory) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":52498:53329  function _checkOnERC721Received(... */\n    tag_193:\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":52647:52651  bool */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":52667:52680  to.isContract */\n      dup5\n      and\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":21166:21185  account.code.length */\n      extcodesize\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":21166:21189  account.code.length > 0 */\n      iszero\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":52663:53323  if (to.isContract()) {... */\n      tag_218\n      jumpi\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":52702:52773  IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) */\n      mload(0x40)\n      shl(0xe1, 0x0a85bd01)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":52702:52738  IERC721Receiver(to).onERC721Received */\n      dup6\n      and\n      swap1\n      0x150b7a02\n      swap1\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":52702:52773  IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) */\n      tag_220\n      swap1\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":16939:16949  msg.sender */\n      caller\n      swap1\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":52753:52757  from */\n      dup10\n      swap1\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":52759:52766  tokenId */\n      dup9\n      swap1\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":52768:52772  data */\n      dup9\n      swap1\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":52702:52773  IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) */\n      0x04\n      add\n      tag_221\n      jump\t// in\n    tag_220:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_222\n      jumpi\n      pop\n      0x40\n      dup1\n      mload\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      tag_223\n      swap2\n      dup2\n      add\n      swap1\n      tag_224\n      jump\t// in\n    tag_223:\n      0x01\n    tag_222:\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":52698:53271  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {... */\n      tag_225\n      jumpi\n      returndatasize\n      dup1\n      dup1\n      iszero\n      tag_230\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_229)\n    tag_230:\n      0x60\n      swap2\n      pop\n    tag_229:\n      pop\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":52940:52946  reason */\n      dup1\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":52940:52953  reason.length */\n      mload\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":52957:52958  0 */\n      0x00\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":52940:52958  reason.length == 0 */\n      sub\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":52936:53257  if (reason.length == 0) {... */\n      tag_231\n      jumpi\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":52982:53042  revert(\"ERC721: transfer to non ERC721Receiver implementer\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_93\n      swap1\n      tag_196\n      jump\t// in\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":52936:53257  if (reason.length == 0) {... */\n    tag_231:\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":53209:53215  reason */\n      dup1\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":53203:53216  mload(reason) */\n      mload\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":53194:53200  reason */\n      dup2\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":53190:53192  32 */\n      0x20\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":53186:53201  add(32, reason) */\n      add\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":53179:53217  revert(add(32, reason), mload(reason)) */\n      revert\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":52698:53271  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {... */\n    tag_225:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":52823:52874  retval == IERC721Receiver.onERC721Received.selector */\n      and\n      shl(0xe1, 0x0a85bd01)\n      eq\n      swap1\n      pop\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":52816:52874  return retval == IERC721Receiver.onERC721Received.selector */\n      jump(tag_167)\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":52663:53323  if (to.isContract()) {... */\n    tag_218:\n      pop\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":53308:53312  true */\n      0x01\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":52498:53329  function _checkOnERC721Received(... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":11332:12222  function log10(uint256 value) internal pure returns (uint256) {... */\n    tag_200:\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":11385:11392  uint256 */\n      0x00\n      dup1\n      shl(0x40, 0x184f03e93ff9f4daa797ed6e38ed64bf6a1f01)\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":11460:11475  value >= 10**64 */\n      dup4\n      lt\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":11456:11555  if (value >= 10**64) {... */\n      tag_237\n      jumpi\n      shl(0x40, 0x184f03e93ff9f4daa797ed6e38ed64bf6a1f01)\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":11495:11510  value /= 10**64 */\n      dup4\n      div\n      swap3\n      pop\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":11538:11540  64 */\n      0x40\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":11528:11540  result += 64 */\n      add\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":11456:11555  if (value >= 10**64) {... */\n    tag_237:\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":11581:11587  10**32 */\n      0x04ee2d6d415b85acef8100000000\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":11572:11577  value */\n      dup4\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":11572:11587  value >= 10**32 */\n      lt\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":11568:11667  if (value >= 10**32) {... */\n      tag_240\n      jumpi\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":11616:11622  10**32 */\n      0x04ee2d6d415b85acef8100000000\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":11607:11622  value /= 10**32 */\n      dup4\n      div\n      swap3\n      pop\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":11650:11652  32 */\n      0x20\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":11640:11652  result += 32 */\n      add\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":11568:11667  if (value >= 10**32) {... */\n    tag_240:\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":11693:11699  10**16 */\n      0x2386f26fc10000\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":11684:11689  value */\n      dup4\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":11684:11699  value >= 10**16 */\n      lt\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":11680:11779  if (value >= 10**16) {... */\n      tag_243\n      jumpi\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":11728:11734  10**16 */\n      0x2386f26fc10000\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":11719:11734  value /= 10**16 */\n      dup4\n      div\n      swap3\n      pop\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":11762:11764  16 */\n      0x10\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":11752:11764  result += 16 */\n      add\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":11680:11779  if (value >= 10**16) {... */\n    tag_243:\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":11805:11810  10**8 */\n      0x05f5e100\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":11796:11801  value */\n      dup4\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":11796:11810  value >= 10**8 */\n      lt\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":11792:11888  if (value >= 10**8) {... */\n      tag_246\n      jumpi\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":11839:11844  10**8 */\n      0x05f5e100\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":11830:11844  value /= 10**8 */\n      dup4\n      div\n      swap3\n      pop\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":11872:11873  8 */\n      0x08\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":11862:11873  result += 8 */\n      add\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":11792:11888  if (value >= 10**8) {... */\n    tag_246:\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":11914:11919  10**4 */\n      0x2710\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":11905:11910  value */\n      dup4\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":11905:11919  value >= 10**4 */\n      lt\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":11901:11997  if (value >= 10**4) {... */\n      tag_249\n      jumpi\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":11948:11953  10**4 */\n      0x2710\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":11939:11953  value /= 10**4 */\n      dup4\n      div\n      swap3\n      pop\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":11981:11982  4 */\n      0x04\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":11971:11982  result += 4 */\n      add\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":11901:11997  if (value >= 10**4) {... */\n    tag_249:\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":12023:12028  10**2 */\n      0x64\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":12014:12019  value */\n      dup4\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":12014:12028  value >= 10**2 */\n      lt\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":12010:12106  if (value >= 10**2) {... */\n      tag_252\n      jumpi\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":12057:12062  10**2 */\n      0x64\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":12048:12062  value /= 10**2 */\n      dup4\n      div\n      swap3\n      pop\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":12090:12091  2 */\n      0x02\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":12080:12091  result += 2 */\n      add\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":12010:12106  if (value >= 10**2) {... */\n    tag_252:\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":12132:12137  10**1 */\n      0x0a\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":12123:12128  value */\n      dup4\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":12123:12137  value >= 10**1 */\n      lt\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":12119:12183  if (value >= 10**1) {... */\n      tag_78\n      jumpi\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":12167:12168  1 */\n      0x01\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":12157:12168  result += 1 */\n      add\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":12209:12215  result */\n      swap3\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":11332:12222  function log10(uint256 value) internal pure returns (uint256) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:145   */\n    tag_257:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"#utility.yul\":88:120   */\n      dup2\n      and\n        /* \"#utility.yul\":78:121   */\n      dup2\n      eq\n        /* \"#utility.yul\":68:139   */\n      tag_158\n      jumpi\n        /* \"#utility.yul\":135:136   */\n      0x00\n        /* \"#utility.yul\":132:133   */\n      dup1\n        /* \"#utility.yul\":125:137   */\n      revert\n        /* \"#utility.yul\":150:395   */\n    tag_20:\n        /* \"#utility.yul\":208:214   */\n      0x00\n        /* \"#utility.yul\":261:263   */\n      0x20\n        /* \"#utility.yul\":249:258   */\n      dup3\n        /* \"#utility.yul\":240:247   */\n      dup5\n        /* \"#utility.yul\":236:259   */\n      sub\n        /* \"#utility.yul\":232:264   */\n      slt\n        /* \"#utility.yul\":229:281   */\n      iszero\n      tag_265\n      jumpi\n        /* \"#utility.yul\":277:278   */\n      0x00\n        /* \"#utility.yul\":274:275   */\n      dup1\n        /* \"#utility.yul\":267:279   */\n      revert\n        /* \"#utility.yul\":229:281   */\n    tag_265:\n        /* \"#utility.yul\":316:325   */\n      dup2\n        /* \"#utility.yul\":303:326   */\n      calldataload\n        /* \"#utility.yul\":335:365   */\n      tag_148\n        /* \"#utility.yul\":359:364   */\n      dup2\n        /* \"#utility.yul\":335:365   */\n      tag_257\n      jump\t// in\n        /* \"#utility.yul\":592:842   */\n    tag_258:\n        /* \"#utility.yul\":677:678   */\n      0x00\n        /* \"#utility.yul\":687:800   */\n    tag_269:\n        /* \"#utility.yul\":701:707   */\n      dup4\n        /* \"#utility.yul\":698:699   */\n      dup2\n        /* \"#utility.yul\":695:708   */\n      lt\n        /* \"#utility.yul\":687:800   */\n      iszero\n      tag_271\n      jumpi\n        /* \"#utility.yul\":777:788   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":771:789   */\n      mload\n        /* \"#utility.yul\":758:769   */\n      dup4\n      dup3\n      add\n        /* \"#utility.yul\":751:790   */\n      mstore\n        /* \"#utility.yul\":723:725   */\n      0x20\n        /* \"#utility.yul\":716:726   */\n      add\n        /* \"#utility.yul\":687:800   */\n      jump(tag_269)\n    tag_271:\n      pop\n      pop\n        /* \"#utility.yul\":834:835   */\n      0x00\n        /* \"#utility.yul\":816:832   */\n      swap2\n      add\n        /* \"#utility.yul\":809:836   */\n      mstore\n        /* \"#utility.yul\":592:842   */\n      jump\t// out\n        /* \"#utility.yul\":847:1118   */\n    tag_259:\n        /* \"#utility.yul\":889:892   */\n      0x00\n        /* \"#utility.yul\":927:932   */\n      dup2\n        /* \"#utility.yul\":921:933   */\n      mload\n        /* \"#utility.yul\":954:960   */\n      dup1\n        /* \"#utility.yul\":949:952   */\n      dup5\n        /* \"#utility.yul\":942:961   */\n      mstore\n        /* \"#utility.yul\":970:1046   */\n      tag_273\n        /* \"#utility.yul\":1039:1045   */\n      dup2\n        /* \"#utility.yul\":1032:1036   */\n      0x20\n        /* \"#utility.yul\":1027:1030   */\n      dup7\n        /* \"#utility.yul\":1023:1037   */\n      add\n        /* \"#utility.yul\":1016:1020   */\n      0x20\n        /* \"#utility.yul\":1009:1014   */\n      dup7\n        /* \"#utility.yul\":1005:1021   */\n      add\n        /* \"#utility.yul\":970:1046   */\n      tag_258\n      jump\t// in\n    tag_273:\n        /* \"#utility.yul\":1100:1102   */\n      0x1f\n        /* \"#utility.yul\":1079:1094   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":1075:1104   */\n      and\n        /* \"#utility.yul\":1066:1105   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":1107:1111   */\n      0x20\n        /* \"#utility.yul\":1062:1112   */\n      add\n      swap3\n        /* \"#utility.yul\":847:1118   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1123:1343   */\n    tag_27:\n        /* \"#utility.yul\":1272:1274   */\n      0x20\n        /* \"#utility.yul\":1261:1270   */\n      dup2\n        /* \"#utility.yul\":1254:1275   */\n      mstore\n        /* \"#utility.yul\":1235:1239   */\n      0x00\n        /* \"#utility.yul\":1292:1337   */\n      tag_148\n        /* \"#utility.yul\":1333:1335   */\n      0x20\n        /* \"#utility.yul\":1322:1331   */\n      dup4\n        /* \"#utility.yul\":1318:1336   */\n      add\n        /* \"#utility.yul\":1310:1316   */\n      dup5\n        /* \"#utility.yul\":1292:1337   */\n      tag_259\n      jump\t// in\n        /* \"#utility.yul\":1348:1528   */\n    tag_30:\n        /* \"#utility.yul\":1407:1413   */\n      0x00\n        /* \"#utility.yul\":1460:1462   */\n      0x20\n        /* \"#utility.yul\":1448:1457   */\n      dup3\n        /* \"#utility.yul\":1439:1446   */\n      dup5\n        /* \"#utility.yul\":1435:1458   */\n      sub\n        /* \"#utility.yul\":1431:1463   */\n      slt\n        /* \"#utility.yul\":1428:1480   */\n      iszero\n      tag_277\n      jumpi\n        /* \"#utility.yul\":1476:1477   */\n      0x00\n        /* \"#utility.yul\":1473:1474   */\n      dup1\n        /* \"#utility.yul\":1466:1478   */\n      revert\n        /* \"#utility.yul\":1428:1480   */\n    tag_277:\n      pop\n        /* \"#utility.yul\":1499:1522   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":1348:1528   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1741:1914   */\n    tag_260:\n        /* \"#utility.yul\":1809:1829   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1858:1889   */\n      dup2\n      and\n        /* \"#utility.yul\":1848:1890   */\n      dup2\n      eq\n        /* \"#utility.yul\":1838:1908   */\n      tag_280\n      jumpi\n        /* \"#utility.yul\":1904:1905   */\n      0x00\n        /* \"#utility.yul\":1901:1902   */\n      dup1\n        /* \"#utility.yul\":1894:1906   */\n      revert\n        /* \"#utility.yul\":1838:1908   */\n    tag_280:\n        /* \"#utility.yul\":1741:1914   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1919:2173   */\n    tag_36:\n        /* \"#utility.yul\":1987:1993   */\n      0x00\n        /* \"#utility.yul\":1995:2001   */\n      dup1\n        /* \"#utility.yul\":2048:2050   */\n      0x40\n        /* \"#utility.yul\":2036:2045   */\n      dup4\n        /* \"#utility.yul\":2027:2034   */\n      dup6\n        /* \"#utility.yul\":2023:2046   */\n      sub\n        /* \"#utility.yul\":2019:2051   */\n      slt\n        /* \"#utility.yul\":2016:2068   */\n      iszero\n      tag_282\n      jumpi\n        /* \"#utility.yul\":2064:2065   */\n      0x00\n        /* \"#utility.yul\":2061:2062   */\n      dup1\n        /* \"#utility.yul\":2054:2066   */\n      revert\n        /* \"#utility.yul\":2016:2068   */\n    tag_282:\n        /* \"#utility.yul\":2087:2116   */\n      tag_283\n        /* \"#utility.yul\":2106:2115   */\n      dup4\n        /* \"#utility.yul\":2087:2116   */\n      tag_260\n      jump\t// in\n    tag_283:\n        /* \"#utility.yul\":2077:2116   */\n      swap5\n        /* \"#utility.yul\":2163:2165   */\n      0x20\n        /* \"#utility.yul\":2148:2166   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":2135:2167   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1919:2173   */\n      jump\t// out\n        /* \"#utility.yul\":2178:2506   */\n    tag_40:\n        /* \"#utility.yul\":2255:2261   */\n      0x00\n        /* \"#utility.yul\":2263:2269   */\n      dup1\n        /* \"#utility.yul\":2271:2277   */\n      0x00\n        /* \"#utility.yul\":2324:2326   */\n      0x60\n        /* \"#utility.yul\":2312:2321   */\n      dup5\n        /* \"#utility.yul\":2303:2310   */\n      dup7\n        /* \"#utility.yul\":2299:2322   */\n      sub\n        /* \"#utility.yul\":2295:2327   */\n      slt\n        /* \"#utility.yul\":2292:2344   */\n      iszero\n      tag_285\n      jumpi\n        /* \"#utility.yul\":2340:2341   */\n      0x00\n        /* \"#utility.yul\":2337:2338   */\n      dup1\n        /* \"#utility.yul\":2330:2342   */\n      revert\n        /* \"#utility.yul\":2292:2344   */\n    tag_285:\n        /* \"#utility.yul\":2363:2392   */\n      tag_286\n        /* \"#utility.yul\":2382:2391   */\n      dup5\n        /* \"#utility.yul\":2363:2392   */\n      tag_260\n      jump\t// in\n    tag_286:\n        /* \"#utility.yul\":2353:2392   */\n      swap3\n      pop\n        /* \"#utility.yul\":2411:2449   */\n      tag_287\n        /* \"#utility.yul\":2445:2447   */\n      0x20\n        /* \"#utility.yul\":2434:2443   */\n      dup6\n        /* \"#utility.yul\":2430:2448   */\n      add\n        /* \"#utility.yul\":2411:2449   */\n      tag_260\n      jump\t// in\n    tag_287:\n        /* \"#utility.yul\":2401:2449   */\n      swap2\n      pop\n        /* \"#utility.yul\":2496:2498   */\n      0x40\n        /* \"#utility.yul\":2485:2494   */\n      dup5\n        /* \"#utility.yul\":2481:2499   */\n      add\n        /* \"#utility.yul\":2468:2500   */\n      calldataload\n        /* \"#utility.yul\":2458:2500   */\n      swap1\n      pop\n        /* \"#utility.yul\":2178:2506   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":2511:2697   */\n    tag_51:\n        /* \"#utility.yul\":2570:2576   */\n      0x00\n        /* \"#utility.yul\":2623:2625   */\n      0x20\n        /* \"#utility.yul\":2611:2620   */\n      dup3\n        /* \"#utility.yul\":2602:2609   */\n      dup5\n        /* \"#utility.yul\":2598:2621   */\n      sub\n        /* \"#utility.yul\":2594:2626   */\n      slt\n        /* \"#utility.yul\":2591:2643   */\n      iszero\n      tag_289\n      jumpi\n        /* \"#utility.yul\":2639:2640   */\n      0x00\n        /* \"#utility.yul\":2636:2637   */\n      dup1\n        /* \"#utility.yul\":2629:2641   */\n      revert\n        /* \"#utility.yul\":2591:2643   */\n    tag_289:\n        /* \"#utility.yul\":2662:2691   */\n      tag_148\n        /* \"#utility.yul\":2681:2690   */\n      dup3\n        /* \"#utility.yul\":2662:2691   */\n      tag_260\n      jump\t// in\n        /* \"#utility.yul\":2884:3231   */\n    tag_60:\n        /* \"#utility.yul\":2949:2955   */\n      0x00\n        /* \"#utility.yul\":2957:2963   */\n      dup1\n        /* \"#utility.yul\":3010:3012   */\n      0x40\n        /* \"#utility.yul\":2998:3007   */\n      dup4\n        /* \"#utility.yul\":2989:2996   */\n      dup6\n        /* \"#utility.yul\":2985:3008   */\n      sub\n        /* \"#utility.yul\":2981:3013   */\n      slt\n        /* \"#utility.yul\":2978:3030   */\n      iszero\n      tag_293\n      jumpi\n        /* \"#utility.yul\":3026:3027   */\n      0x00\n        /* \"#utility.yul\":3023:3024   */\n      dup1\n        /* \"#utility.yul\":3016:3028   */\n      revert\n        /* \"#utility.yul\":2978:3030   */\n    tag_293:\n        /* \"#utility.yul\":3049:3078   */\n      tag_294\n        /* \"#utility.yul\":3068:3077   */\n      dup4\n        /* \"#utility.yul\":3049:3078   */\n      tag_260\n      jump\t// in\n    tag_294:\n        /* \"#utility.yul\":3039:3078   */\n      swap2\n      pop\n        /* \"#utility.yul\":3128:3130   */\n      0x20\n        /* \"#utility.yul\":3117:3126   */\n      dup4\n        /* \"#utility.yul\":3113:3131   */\n      add\n        /* \"#utility.yul\":3100:3132   */\n      calldataload\n        /* \"#utility.yul\":3175:3180   */\n      dup1\n        /* \"#utility.yul\":3168:3181   */\n      iszero\n        /* \"#utility.yul\":3161:3182   */\n      iszero\n        /* \"#utility.yul\":3154:3159   */\n      dup2\n        /* \"#utility.yul\":3151:3183   */\n      eq\n        /* \"#utility.yul\":3141:3201   */\n      tag_295\n      jumpi\n        /* \"#utility.yul\":3197:3198   */\n      0x00\n        /* \"#utility.yul\":3194:3195   */\n      dup1\n        /* \"#utility.yul\":3187:3199   */\n      revert\n        /* \"#utility.yul\":3141:3201   */\n    tag_295:\n        /* \"#utility.yul\":3220:3225   */\n      dup1\n        /* \"#utility.yul\":3210:3225   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":2884:3231   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3236:3363   */\n    tag_203:\n        /* \"#utility.yul\":3297:3307   */\n      0x4e487b71\n        /* \"#utility.yul\":3292:3295   */\n      0xe0\n        /* \"#utility.yul\":3288:3308   */\n      shl\n        /* \"#utility.yul\":3285:3286   */\n      0x00\n        /* \"#utility.yul\":3278:3309   */\n      mstore\n        /* \"#utility.yul\":3328:3332   */\n      0x41\n        /* \"#utility.yul\":3325:3326   */\n      0x04\n        /* \"#utility.yul\":3318:3333   */\n      mstore\n        /* \"#utility.yul\":3352:3356   */\n      0x24\n        /* \"#utility.yul\":3349:3350   */\n      0x00\n        /* \"#utility.yul\":3342:3357   */\n      revert\n        /* \"#utility.yul\":3368:4506   */\n    tag_64:\n        /* \"#utility.yul\":3463:3469   */\n      0x00\n        /* \"#utility.yul\":3471:3477   */\n      dup1\n        /* \"#utility.yul\":3479:3485   */\n      0x00\n        /* \"#utility.yul\":3487:3493   */\n      dup1\n        /* \"#utility.yul\":3540:3543   */\n      0x80\n        /* \"#utility.yul\":3528:3537   */\n      dup6\n        /* \"#utility.yul\":3519:3526   */\n      dup8\n        /* \"#utility.yul\":3515:3538   */\n      sub\n        /* \"#utility.yul\":3511:3544   */\n      slt\n        /* \"#utility.yul\":3508:3561   */\n      iszero\n      tag_298\n      jumpi\n        /* \"#utility.yul\":3557:3558   */\n      0x00\n        /* \"#utility.yul\":3554:3555   */\n      dup1\n        /* \"#utility.yul\":3547:3559   */\n      revert\n        /* \"#utility.yul\":3508:3561   */\n    tag_298:\n        /* \"#utility.yul\":3580:3609   */\n      tag_299\n        /* \"#utility.yul\":3599:3608   */\n      dup6\n        /* \"#utility.yul\":3580:3609   */\n      tag_260\n      jump\t// in\n    tag_299:\n        /* \"#utility.yul\":3570:3609   */\n      swap4\n      pop\n        /* \"#utility.yul\":3628:3666   */\n      tag_300\n        /* \"#utility.yul\":3662:3664   */\n      0x20\n        /* \"#utility.yul\":3651:3660   */\n      dup7\n        /* \"#utility.yul\":3647:3665   */\n      add\n        /* \"#utility.yul\":3628:3666   */\n      tag_260\n      jump\t// in\n    tag_300:\n        /* \"#utility.yul\":3618:3666   */\n      swap3\n      pop\n        /* \"#utility.yul\":3713:3715   */\n      0x40\n        /* \"#utility.yul\":3702:3711   */\n      dup6\n        /* \"#utility.yul\":3698:3716   */\n      add\n        /* \"#utility.yul\":3685:3717   */\n      calldataload\n        /* \"#utility.yul\":3675:3717   */\n      swap2\n      pop\n        /* \"#utility.yul\":3768:3770   */\n      0x60\n        /* \"#utility.yul\":3757:3766   */\n      dup6\n        /* \"#utility.yul\":3753:3771   */\n      add\n        /* \"#utility.yul\":3740:3772   */\n      calldataload\n        /* \"#utility.yul\":3791:3809   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3832:3834   */\n      dup1\n        /* \"#utility.yul\":3824:3830   */\n      dup3\n        /* \"#utility.yul\":3821:3835   */\n      gt\n        /* \"#utility.yul\":3818:3852   */\n      iszero\n      tag_301\n      jumpi\n        /* \"#utility.yul\":3848:3849   */\n      0x00\n        /* \"#utility.yul\":3845:3846   */\n      dup1\n        /* \"#utility.yul\":3838:3850   */\n      revert\n        /* \"#utility.yul\":3818:3852   */\n    tag_301:\n        /* \"#utility.yul\":3886:3892   */\n      dup2\n        /* \"#utility.yul\":3875:3884   */\n      dup8\n        /* \"#utility.yul\":3871:3893   */\n      add\n        /* \"#utility.yul\":3861:3893   */\n      swap2\n      pop\n        /* \"#utility.yul\":3931:3938   */\n      dup8\n        /* \"#utility.yul\":3924:3928   */\n      0x1f\n        /* \"#utility.yul\":3920:3922   */\n      dup4\n        /* \"#utility.yul\":3916:3929   */\n      add\n        /* \"#utility.yul\":3912:3939   */\n      slt\n        /* \"#utility.yul\":3902:3957   */\n      tag_302\n      jumpi\n        /* \"#utility.yul\":3953:3954   */\n      0x00\n        /* \"#utility.yul\":3950:3951   */\n      dup1\n        /* \"#utility.yul\":3943:3955   */\n      revert\n        /* \"#utility.yul\":3902:3957   */\n    tag_302:\n        /* \"#utility.yul\":3989:3991   */\n      dup2\n        /* \"#utility.yul\":3976:3992   */\n      calldataload\n        /* \"#utility.yul\":4011:4013   */\n      dup2\n        /* \"#utility.yul\":4007:4009   */\n      dup2\n        /* \"#utility.yul\":4004:4014   */\n      gt\n        /* \"#utility.yul\":4001:4037   */\n      iszero\n      tag_304\n      jumpi\n        /* \"#utility.yul\":4017:4035   */\n      tag_304\n      tag_203\n      jump\t// in\n    tag_304:\n        /* \"#utility.yul\":4092:4094   */\n      0x40\n        /* \"#utility.yul\":4086:4095   */\n      mload\n        /* \"#utility.yul\":4060:4062   */\n      0x1f\n        /* \"#utility.yul\":4146:4159   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":4142:4164   */\n      swap1\n      dup2\n      and\n        /* \"#utility.yul\":4166:4168   */\n      0x3f\n        /* \"#utility.yul\":4138:4169   */\n      add\n        /* \"#utility.yul\":4134:4174   */\n      and\n        /* \"#utility.yul\":4122:4175   */\n      dup2\n      add\n      swap1\n        /* \"#utility.yul\":4190:4208   */\n      dup4\n      dup3\n      gt\n        /* \"#utility.yul\":4210:4232   */\n      dup2\n      dup4\n      lt\n        /* \"#utility.yul\":4187:4233   */\n      or\n        /* \"#utility.yul\":4184:4256   */\n      iszero\n      tag_306\n      jumpi\n        /* \"#utility.yul\":4236:4254   */\n      tag_306\n      tag_203\n      jump\t// in\n    tag_306:\n        /* \"#utility.yul\":4276:4286   */\n      dup2\n        /* \"#utility.yul\":4272:4274   */\n      0x40\n        /* \"#utility.yul\":4265:4287   */\n      mstore\n        /* \"#utility.yul\":4311:4313   */\n      dup3\n        /* \"#utility.yul\":4303:4309   */\n      dup2\n        /* \"#utility.yul\":4296:4314   */\n      mstore\n        /* \"#utility.yul\":4351:4358   */\n      dup11\n        /* \"#utility.yul\":4346:4348   */\n      0x20\n        /* \"#utility.yul\":4341:4343   */\n      dup5\n        /* \"#utility.yul\":4337:4339   */\n      dup8\n        /* \"#utility.yul\":4333:4344   */\n      add\n        /* \"#utility.yul\":4329:4349   */\n      add\n        /* \"#utility.yul\":4326:4359   */\n      gt\n        /* \"#utility.yul\":4323:4376   */\n      iszero\n      tag_307\n      jumpi\n        /* \"#utility.yul\":4372:4373   */\n      0x00\n        /* \"#utility.yul\":4369:4370   */\n      dup1\n        /* \"#utility.yul\":4362:4374   */\n      revert\n        /* \"#utility.yul\":4323:4376   */\n    tag_307:\n        /* \"#utility.yul\":4428:4430   */\n      dup3\n        /* \"#utility.yul\":4423:4425   */\n      0x20\n        /* \"#utility.yul\":4419:4421   */\n      dup7\n        /* \"#utility.yul\":4415:4426   */\n      add\n        /* \"#utility.yul\":4410:4412   */\n      0x20\n        /* \"#utility.yul\":4402:4408   */\n      dup4\n        /* \"#utility.yul\":4398:4413   */\n      add\n        /* \"#utility.yul\":4385:4431   */\n      calldatacopy\n        /* \"#utility.yul\":4473:4474   */\n      0x00\n        /* \"#utility.yul\":4468:4470   */\n      0x20\n        /* \"#utility.yul\":4463:4465   */\n      dup5\n        /* \"#utility.yul\":4455:4461   */\n      dup4\n        /* \"#utility.yul\":4451:4466   */\n      add\n        /* \"#utility.yul\":4447:4471   */\n      add\n        /* \"#utility.yul\":4440:4475   */\n      mstore\n        /* \"#utility.yul\":4494:4500   */\n      dup1\n        /* \"#utility.yul\":4484:4500   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":3368:4506   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4511:4771   */\n    tag_72:\n        /* \"#utility.yul\":4579:4585   */\n      0x00\n        /* \"#utility.yul\":4587:4593   */\n      dup1\n        /* \"#utility.yul\":4640:4642   */\n      0x40\n        /* \"#utility.yul\":4628:4637   */\n      dup4\n        /* \"#utility.yul\":4619:4626   */\n      dup6\n        /* \"#utility.yul\":4615:4638   */\n      sub\n        /* \"#utility.yul\":4611:4643   */\n      slt\n        /* \"#utility.yul\":4608:4660   */\n      iszero\n      tag_309\n      jumpi\n        /* \"#utility.yul\":4656:4657   */\n      0x00\n        /* \"#utility.yul\":4653:4654   */\n      dup1\n        /* \"#utility.yul\":4646:4658   */\n      revert\n        /* \"#utility.yul\":4608:4660   */\n    tag_309:\n        /* \"#utility.yul\":4679:4708   */\n      tag_310\n        /* \"#utility.yul\":4698:4707   */\n      dup4\n        /* \"#utility.yul\":4679:4708   */\n      tag_260\n      jump\t// in\n    tag_310:\n        /* \"#utility.yul\":4669:4708   */\n      swap2\n      pop\n        /* \"#utility.yul\":4727:4765   */\n      tag_311\n        /* \"#utility.yul\":4761:4763   */\n      0x20\n        /* \"#utility.yul\":4750:4759   */\n      dup5\n        /* \"#utility.yul\":4746:4764   */\n      add\n        /* \"#utility.yul\":4727:4765   */\n      tag_260\n      jump\t// in\n    tag_311:\n        /* \"#utility.yul\":4717:4765   */\n      swap1\n      pop\n        /* \"#utility.yul\":4511:4771   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4776:5156   */\n    tag_82:\n        /* \"#utility.yul\":4855:4856   */\n      0x01\n        /* \"#utility.yul\":4851:4863   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":4898:4910   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":4919:4980   */\n      tag_313\n      jumpi\n        /* \"#utility.yul\":4973:4977   */\n      0x7f\n        /* \"#utility.yul\":4965:4971   */\n      dup3\n        /* \"#utility.yul\":4961:4978   */\n      and\n        /* \"#utility.yul\":4951:4978   */\n      swap2\n      pop\n        /* \"#utility.yul\":4919:4980   */\n    tag_313:\n        /* \"#utility.yul\":5026:5028   */\n      0x20\n        /* \"#utility.yul\":5018:5024   */\n      dup3\n        /* \"#utility.yul\":5015:5029   */\n      lt\n        /* \"#utility.yul\":4995:5013   */\n      dup2\n        /* \"#utility.yul\":4992:5030   */\n      sub\n        /* \"#utility.yul\":4989:5150   */\n      tag_314\n      jumpi\n        /* \"#utility.yul\":5072:5082   */\n      0x4e487b71\n        /* \"#utility.yul\":5067:5070   */\n      0xe0\n        /* \"#utility.yul\":5063:5083   */\n      shl\n        /* \"#utility.yul\":5060:5061   */\n      0x00\n        /* \"#utility.yul\":5053:5084   */\n      mstore\n        /* \"#utility.yul\":5107:5111   */\n      0x22\n        /* \"#utility.yul\":5104:5105   */\n      0x04\n        /* \"#utility.yul\":5097:5112   */\n      mstore\n        /* \"#utility.yul\":5135:5139   */\n      0x24\n        /* \"#utility.yul\":5132:5133   */\n      0x00\n        /* \"#utility.yul\":5125:5140   */\n      revert\n        /* \"#utility.yul\":4989:5150   */\n    tag_314:\n      pop\n        /* \"#utility.yul\":4776:5156   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5993:6402   */\n    tag_111:\n        /* \"#utility.yul\":6195:6197   */\n      0x20\n        /* \"#utility.yul\":6177:6198   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":6234:6236   */\n      0x2d\n        /* \"#utility.yul\":6214:6232   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":6207:6237   */\n      mstore\n        /* \"#utility.yul\":6273:6307   */\n      0x4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e65\n        /* \"#utility.yul\":6268:6270   */\n      0x40\n        /* \"#utility.yul\":6253:6271   */\n      dup3\n      add\n        /* \"#utility.yul\":6246:6308   */\n      mstore\n      shl(0x9a, 0x1c881bdc88185c1c1c9bdd9959)\n        /* \"#utility.yul\":6339:6341   */\n      0x60\n        /* \"#utility.yul\":6324:6342   */\n      dup3\n      add\n        /* \"#utility.yul\":6317:6360   */\n      mstore\n        /* \"#utility.yul\":6392:6395   */\n      0x80\n        /* \"#utility.yul\":6377:6396   */\n      add\n      swap1\n        /* \"#utility.yul\":5993:6402   */\n      jump\t// out\n        /* \"#utility.yul\":7170:7666   */\n    tag_152:\n        /* \"#utility.yul\":7349:7352   */\n      0x00\n        /* \"#utility.yul\":7387:7393   */\n      dup4\n        /* \"#utility.yul\":7381:7394   */\n      mload\n        /* \"#utility.yul\":7403:7469   */\n      tag_321\n        /* \"#utility.yul\":7462:7468   */\n      dup2\n        /* \"#utility.yul\":7457:7460   */\n      dup5\n        /* \"#utility.yul\":7450:7454   */\n      0x20\n        /* \"#utility.yul\":7442:7448   */\n      dup9\n        /* \"#utility.yul\":7438:7455   */\n      add\n        /* \"#utility.yul\":7403:7469   */\n      tag_258\n      jump\t// in\n    tag_321:\n        /* \"#utility.yul\":7532:7545   */\n      dup4\n      mload\n        /* \"#utility.yul\":7491:7507   */\n      swap1\n      dup4\n      add\n      swap1\n        /* \"#utility.yul\":7554:7624   */\n      tag_322\n        /* \"#utility.yul\":7532:7545   */\n      dup2\n        /* \"#utility.yul\":7491:7507   */\n      dup4\n        /* \"#utility.yul\":7601:7605   */\n      0x20\n        /* \"#utility.yul\":7589:7606   */\n      dup9\n      add\n        /* \"#utility.yul\":7554:7624   */\n      tag_258\n      jump\t// in\n    tag_322:\n        /* \"#utility.yul\":7640:7660   */\n      add\n      swap5\n        /* \"#utility.yul\":7170:7666   */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7671:8072   */\n    tag_173:\n        /* \"#utility.yul\":7873:7875   */\n      0x20\n        /* \"#utility.yul\":7855:7876   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":7912:7914   */\n      0x25\n        /* \"#utility.yul\":7892:7910   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":7885:7915   */\n      mstore\n        /* \"#utility.yul\":7951:7985   */\n      0x4552433732313a207472616e736665722066726f6d20696e636f727265637420\n        /* \"#utility.yul\":7946:7948   */\n      0x40\n        /* \"#utility.yul\":7931:7949   */\n      dup3\n      add\n        /* \"#utility.yul\":7924:7986   */\n      mstore\n      shl(0xd9, 0x37bbb732b9)\n        /* \"#utility.yul\":8017:8019   */\n      0x60\n        /* \"#utility.yul\":8002:8020   */\n      dup3\n      add\n        /* \"#utility.yul\":7995:8030   */\n      mstore\n        /* \"#utility.yul\":8062:8065   */\n      0x80\n        /* \"#utility.yul\":8047:8066   */\n      add\n      swap1\n        /* \"#utility.yul\":7671:8072   */\n      jump\t// out\n        /* \"#utility.yul\":8836:9250   */\n    tag_196:\n        /* \"#utility.yul\":9038:9040   */\n      0x20\n        /* \"#utility.yul\":9020:9041   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":9077:9079   */\n      0x32\n        /* \"#utility.yul\":9057:9075   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":9050:9080   */\n      mstore\n        /* \"#utility.yul\":9116:9150   */\n      0x4552433732313a207472616e7366657220746f206e6f6e204552433732315265\n        /* \"#utility.yul\":9111:9113   */\n      0x40\n        /* \"#utility.yul\":9096:9114   */\n      dup3\n      add\n        /* \"#utility.yul\":9089:9151   */\n      mstore\n      shl(0x71, 0x31b2b4bb32b91034b6b83632b6b2b73a32b9)\n        /* \"#utility.yul\":9182:9184   */\n      0x60\n        /* \"#utility.yul\":9167:9185   */\n      dup3\n      add\n        /* \"#utility.yul\":9160:9208   */\n      mstore\n        /* \"#utility.yul\":9240:9243   */\n      0x80\n        /* \"#utility.yul\":9225:9244   */\n      add\n      swap1\n        /* \"#utility.yul\":8836:9250   */\n      jump\t// out\n        /* \"#utility.yul\":9387:9876   */\n    tag_221:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":9656:9671   */\n      dup6\n      dup2\n      and\n        /* \"#utility.yul\":9638:9672   */\n      dup3\n      mstore\n        /* \"#utility.yul\":9708:9723   */\n      dup5\n      and\n        /* \"#utility.yul\":9703:9705   */\n      0x20\n        /* \"#utility.yul\":9688:9706   */\n      dup3\n      add\n        /* \"#utility.yul\":9681:9724   */\n      mstore\n        /* \"#utility.yul\":9755:9757   */\n      0x40\n        /* \"#utility.yul\":9740:9758   */\n      dup2\n      add\n        /* \"#utility.yul\":9733:9767   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":9803:9806   */\n      0x80\n        /* \"#utility.yul\":9798:9800   */\n      0x60\n        /* \"#utility.yul\":9783:9801   */\n      dup3\n      add\n        /* \"#utility.yul\":9776:9807   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":9581:9585   */\n      0x00\n      swap1\n        /* \"#utility.yul\":9824:9870   */\n      tag_329\n      swap1\n        /* \"#utility.yul\":9850:9869   */\n      dup4\n      add\n        /* \"#utility.yul\":9842:9848   */\n      dup5\n        /* \"#utility.yul\":9824:9870   */\n      tag_259\n      jump\t// in\n    tag_329:\n        /* \"#utility.yul\":9816:9870   */\n      swap7\n        /* \"#utility.yul\":9387:9876   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9881:10130   */\n    tag_224:\n        /* \"#utility.yul\":9950:9956   */\n      0x00\n        /* \"#utility.yul\":10003:10005   */\n      0x20\n        /* \"#utility.yul\":9991:10000   */\n      dup3\n        /* \"#utility.yul\":9982:9989   */\n      dup5\n        /* \"#utility.yul\":9978:10001   */\n      sub\n        /* \"#utility.yul\":9974:10006   */\n      slt\n        /* \"#utility.yul\":9971:10023   */\n      iszero\n      tag_331\n      jumpi\n        /* \"#utility.yul\":10019:10020   */\n      0x00\n        /* \"#utility.yul\":10016:10017   */\n      dup1\n        /* \"#utility.yul\":10009:10021   */\n      revert\n        /* \"#utility.yul\":9971:10023   */\n    tag_331:\n        /* \"#utility.yul\":10051:10060   */\n      dup2\n        /* \"#utility.yul\":10045:10061   */\n      mload\n        /* \"#utility.yul\":10070:10100   */\n      tag_148\n        /* \"#utility.yul\":10094:10099   */\n      dup2\n        /* \"#utility.yul\":10070:10100   */\n      tag_257\n      jump\t// in\n\n    auxdata: 0xa2646970667358221220fb1603bf7a641beea1889a6cc323f5e7183609259eaa976465096a3a18454cec64736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1844": {
									"entryPoint": null,
									"id": 1844,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_string_fromMemory": {
									"entryPoint": 112,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory": {
									"entryPoint": 287,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 453,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 536,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 393,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 90,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:4144:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "46:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "63:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "70:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "75:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "56:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "56:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "103:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "106:4:1",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "96:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "96:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "127:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "130:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "120:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "120:15:1"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "210:776:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "259:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "268:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "271:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "261:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "261:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "261:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "238:6:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "246:4:1",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "234:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "234:17:1"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "253:3:1"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "230:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "230:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "223:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "223:35:1"
															},
															"nodeType": "YulIf",
															"src": "220:55:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "284:23:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "300:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "294:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "294:13:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "288:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "316:28:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "334:2:1",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "338:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "330:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "330:10:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "342:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "326:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "326:18:1"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "320:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "367:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "369:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "369:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "369:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "359:2:1"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "363:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "356:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "356:10:1"
															},
															"nodeType": "YulIf",
															"src": "353:36:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "398:17:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "412:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "408:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "408:7:1"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "402:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "424:23:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "444:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "438:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "438:9:1"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "428:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "456:71:1",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "478:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_1",
																										"nodeType": "YulIdentifier",
																										"src": "502:2:1"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "506:4:1",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "498:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "498:13:1"
																							},
																							{
																								"name": "_3",
																								"nodeType": "YulIdentifier",
																								"src": "513:2:1"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "494:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "494:22:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "518:2:1",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "490:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "490:31:1"
																			},
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "523:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "486:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "486:40:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "474:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "474:53:1"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "460:10:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "586:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "588:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "588:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "588:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "545:10:1"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "557:2:1"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "542:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "542:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "565:10:1"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "577:6:1"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "562:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "562:22:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "539:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "539:46:1"
															},
															"nodeType": "YulIf",
															"src": "536:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "624:2:1",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "628:10:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "617:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "617:22:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "617:22:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "655:6:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "663:2:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "648:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "648:18:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "648:18:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "675:14:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "685:4:1",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "679:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "735:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "744:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "747:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "737:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "737:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "737:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "712:6:1"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "720:2:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "708:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "708:15:1"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "725:2:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "704:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "704:24:1"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "730:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "701:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "701:33:1"
															},
															"nodeType": "YulIf",
															"src": "698:53:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "760:10:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "769:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "764:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "825:87:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "854:6:1"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "862:1:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "850:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "850:14:1"
																						},
																						{
																							"name": "_4",
																							"nodeType": "YulIdentifier",
																							"src": "866:2:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "846:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "846:23:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "offset",
																											"nodeType": "YulIdentifier",
																											"src": "885:6:1"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "893:1:1"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "881:3:1"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "881:14:1"
																								},
																								{
																									"name": "_4",
																									"nodeType": "YulIdentifier",
																									"src": "897:2:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "877:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "877:23:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "871:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "871:30:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "839:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "839:63:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "839:63:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "790:1:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "793:2:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "787:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "787:9:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "797:19:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "799:15:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "808:1:1"
																				},
																				{
																					"name": "_4",
																					"nodeType": "YulIdentifier",
																					"src": "811:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "804:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "804:10:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "799:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "783:3:1",
																"statements": []
															},
															"src": "779:133:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nodeType": "YulIdentifier",
																						"src": "936:6:1"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "944:2:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "932:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "932:15:1"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "949:2:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "928:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "928:24:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "954:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "921:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "921:35:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "921:35:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "965:15:1",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "974:6:1"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "965:5:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_string_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "184:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "192:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "200:5:1",
														"type": ""
													}
												],
												"src": "146:840:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1109:444:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1155:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1164:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1167:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1157:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1157:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1157:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1130:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1139:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1126:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1126:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1151:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1122:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1122:32:1"
															},
															"nodeType": "YulIf",
															"src": "1119:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1180:30:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1200:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1194:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1194:16:1"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "1184:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1219:28:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1237:2:1",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1241:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1233:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1233:10:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1245:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "1229:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1229:18:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1223:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1274:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1283:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1286:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1276:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1276:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1276:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1262:6:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1270:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1259:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1259:14:1"
															},
															"nodeType": "YulIf",
															"src": "1256:34:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1299:71:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1342:9:1"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1353:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1338:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1338:22:1"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1362:7:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1309:28:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1309:61:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1299:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1379:41:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1405:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1416:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1401:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1401:18:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1395:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1395:25:1"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "1383:8:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1449:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1458:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1461:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1451:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1451:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1451:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "1435:8:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1445:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1432:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1432:16:1"
															},
															"nodeType": "YulIf",
															"src": "1429:36:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1474:73:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1517:9:1"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "1528:8:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1513:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1513:24:1"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1539:7:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1484:28:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1484:63:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1474:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1067:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1078:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1090:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1098:6:1",
														"type": ""
													}
												],
												"src": "991:562:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1613:325:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1623:22:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1637:1:1",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1640:4:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "1633:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1633:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1623:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1654:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1684:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1690:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1680:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1680:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "1658:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1731:31:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1733:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "1747:6:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1755:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "1743:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1743:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1733:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1711:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1704:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1704:26:1"
															},
															"nodeType": "YulIf",
															"src": "1701:61:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1821:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1842:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1849:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1854:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "1845:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1845:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1835:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1835:31:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1835:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1886:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1889:4:1",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1879:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1879:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1879:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1914:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1917:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1907:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1907:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1907:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1777:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1800:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1808:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1797:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1797:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "1774:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1774:38:1"
															},
															"nodeType": "YulIf",
															"src": "1771:161:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1593:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1602:6:1",
														"type": ""
													}
												],
												"src": "1558:380:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1999:65:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2016:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "2019:3:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2009:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2009:14:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2009:14:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2032:26:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2050:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2053:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "2040:9:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2040:18:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "2032:4:1"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "1982:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1990:4:1",
														"type": ""
													}
												],
												"src": "1943:121:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2150:464:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2183:425:1",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2197:11:1",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "2207:1:1",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nodeType": "YulTypedName",
																				"src": "2201:2:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "2228:2:1"
																				},
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "2232:5:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2221:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2221:17:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2221:17:1"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2251:31:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "2273:2:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2277:4:1",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nodeType": "YulIdentifier",
																				"src": "2263:9:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2263:19:1"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nodeType": "YulTypedName",
																				"src": "2255:4:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2295:57:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nodeType": "YulIdentifier",
																					"src": "2318:4:1"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2328:1:1",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nodeType": "YulIdentifier",
																									"src": "2335:10:1"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "2347:2:1",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2331:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2331:19:1"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nodeType": "YulIdentifier",
																						"src": "2324:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2324:27:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2314:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2314:38:1"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nodeType": "YulTypedName",
																				"src": "2299:11:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "2389:23:1",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "2391:19:1",
																					"value": {
																						"name": "data",
																						"nodeType": "YulIdentifier",
																						"src": "2406:4:1"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nodeType": "YulIdentifier",
																							"src": "2391:11:1"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nodeType": "YulIdentifier",
																					"src": "2371:10:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2383:4:1",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "2368:2:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2368:20:1"
																		},
																		"nodeType": "YulIf",
																		"src": "2365:47:1"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2425:41:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nodeType": "YulIdentifier",
																					"src": "2439:4:1"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2449:1:1",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nodeType": "YulIdentifier",
																									"src": "2456:3:1"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "2461:2:1",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2452:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2452:12:1"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nodeType": "YulIdentifier",
																						"src": "2445:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2445:20:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2435:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2435:31:1"
																		},
																		"variables": [
																			{
																				"name": "_2",
																				"nodeType": "YulTypedName",
																				"src": "2429:2:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2479:24:1",
																		"value": {
																			"name": "deleteStart",
																			"nodeType": "YulIdentifier",
																			"src": "2492:11:1"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nodeType": "YulTypedName",
																				"src": "2483:5:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "2577:21:1",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nodeType": "YulIdentifier",
																								"src": "2586:5:1"
																							},
																							{
																								"name": "_1",
																								"nodeType": "YulIdentifier",
																								"src": "2593:2:1"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nodeType": "YulIdentifier",
																							"src": "2579:6:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2579:17:1"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "2579:17:1"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "2527:5:1"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "2534:2:1"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "2524:2:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2524:13:1"
																		},
																		"nodeType": "YulForLoop",
																		"post": {
																			"nodeType": "YulBlock",
																			"src": "2538:26:1",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "2540:22:1",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nodeType": "YulIdentifier",
																								"src": "2553:5:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2560:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "2549:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2549:13:1"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nodeType": "YulIdentifier",
																							"src": "2540:5:1"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nodeType": "YulBlock",
																			"src": "2520:3:1",
																			"statements": []
																		},
																		"src": "2516:82:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "2166:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2171:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2163:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2163:11:1"
															},
															"nodeType": "YulIf",
															"src": "2160:448:1"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2122:5:1",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "2129:3:1",
														"type": ""
													},
													{
														"name": "startIndex",
														"nodeType": "YulTypedName",
														"src": "2134:10:1",
														"type": ""
													}
												],
												"src": "2069:545:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2704:81:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2714:65:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nodeType": "YulIdentifier",
																				"src": "2729:4:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "2747:1:1",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nodeType": "YulIdentifier",
																										"src": "2750:3:1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "2743:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2743:11:1"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "2760:1:1",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nodeType": "YulIdentifier",
																									"src": "2756:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2756:6:1"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nodeType": "YulIdentifier",
																							"src": "2739:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2739:24:1"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "2735:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2735:29:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2725:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2725:40:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2771:1:1",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nodeType": "YulIdentifier",
																				"src": "2774:3:1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "2767:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2767:11:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "2722:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2722:57:1"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nodeType": "YulIdentifier",
																	"src": "2714:4:1"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "2681:4:1",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "2687:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nodeType": "YulTypedName",
														"src": "2695:4:1",
														"type": ""
													}
												],
												"src": "2619:166:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2886:1256:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2896:24:1",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "2916:3:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2910:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2910:10:1"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nodeType": "YulTypedName",
																	"src": "2900:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2963:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "2965:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2965:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2965:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "2935:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2951:2:1",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2955:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "2947:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2947:10:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2959:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2943:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2943:18:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2932:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2932:30:1"
															},
															"nodeType": "YulIf",
															"src": "2929:56:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "3038:4:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nodeType": "YulIdentifier",
																						"src": "3076:4:1"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nodeType": "YulIdentifier",
																					"src": "3070:5:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3070:11:1"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nodeType": "YulIdentifier",
																			"src": "3044:25:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3044:38:1"
																	},
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "3084:6:1"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nodeType": "YulIdentifier",
																	"src": "2994:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2994:97:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2994:97:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3100:18:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3117:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulTypedName",
																	"src": "3104:9:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3127:23:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3146:4:1",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "srcOffset_1",
																	"nodeType": "YulTypedName",
																	"src": "3131:11:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3159:24:1",
															"value": {
																"name": "srcOffset_1",
																"nodeType": "YulIdentifier",
																"src": "3172:11:1"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulIdentifier",
																	"src": "3159:9:1"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3229:656:1",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "3243:35:1",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "3262:6:1"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "3274:2:1",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "3270:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3270:7:1"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "3258:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3258:20:1"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nodeType": "YulTypedName",
																						"src": "3247:7:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "3291:49:1",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "3335:4:1"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nodeType": "YulIdentifier",
																						"src": "3305:29:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3305:35:1"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nodeType": "YulTypedName",
																						"src": "3295:6:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "3353:10:1",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3362:1:1",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "3357:1:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "3440:172:1",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "3465:6:1"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nodeType": "YulIdentifier",
																														"src": "3483:3:1"
																													},
																													{
																														"name": "srcOffset",
																														"nodeType": "YulIdentifier",
																														"src": "3488:9:1"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nodeType": "YulIdentifier",
																													"src": "3479:3:1"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "3479:19:1"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "3473:5:1"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "3473:26:1"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "3458:6:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3458:42:1"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "3458:42:1"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "3517:24:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "3531:6:1"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "3539:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "3527:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3527:14:1"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nodeType": "YulIdentifier",
																									"src": "3517:6:1"
																								}
																							]
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "3558:40:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nodeType": "YulIdentifier",
																										"src": "3575:9:1"
																									},
																									{
																										"name": "srcOffset_1",
																										"nodeType": "YulIdentifier",
																										"src": "3586:11:1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "3571:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3571:27:1"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nodeType": "YulIdentifier",
																									"src": "3558:9:1"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "3387:1:1"
																						},
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "3390:7:1"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "3384:2:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3384:14:1"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "3399:28:1",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "3401:24:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "3410:1:1"
																									},
																									{
																										"name": "srcOffset_1",
																										"nodeType": "YulIdentifier",
																										"src": "3413:11:1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "3406:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3406:19:1"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "3401:1:1"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "3380:3:1",
																					"statements": []
																				},
																				"src": "3376:236:1"
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "3660:166:1",
																					"statements": [
																						{
																							"nodeType": "YulVariableDeclaration",
																							"src": "3678:43:1",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "3705:3:1"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "3710:9:1"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "3701:3:1"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "3701:19:1"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "3695:5:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3695:26:1"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nodeType": "YulTypedName",
																									"src": "3682:9:1",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "3745:6:1"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nodeType": "YulIdentifier",
																												"src": "3757:9:1"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nodeType": "YulLiteral",
																																				"src": "3784:1:1",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nodeType": "YulIdentifier",
																																				"src": "3787:6:1"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nodeType": "YulIdentifier",
																																			"src": "3780:3:1"
																																		},
																																		"nodeType": "YulFunctionCall",
																																		"src": "3780:14:1"
																																	},
																																	{
																																		"kind": "number",
																																		"nodeType": "YulLiteral",
																																		"src": "3796:3:1",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nodeType": "YulIdentifier",
																																	"src": "3776:3:1"
																																},
																																"nodeType": "YulFunctionCall",
																																"src": "3776:24:1"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nodeType": "YulLiteral",
																																		"src": "3806:1:1",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nodeType": "YulIdentifier",
																																	"src": "3802:3:1"
																																},
																																"nodeType": "YulFunctionCall",
																																"src": "3802:6:1"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nodeType": "YulIdentifier",
																															"src": "3772:3:1"
																														},
																														"nodeType": "YulFunctionCall",
																														"src": "3772:37:1"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nodeType": "YulIdentifier",
																													"src": "3768:3:1"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "3768:42:1"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nodeType": "YulIdentifier",
																											"src": "3753:3:1"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "3753:58:1"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "3738:6:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3738:74:1"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "3738:74:1"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "3631:7:1"
																						},
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "3640:6:1"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "3628:2:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3628:19:1"
																				},
																				"nodeType": "YulIf",
																				"src": "3625:201:1"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "3846:4:1"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "3860:1:1",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nodeType": "YulIdentifier",
																											"src": "3863:6:1"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nodeType": "YulIdentifier",
																										"src": "3856:3:1"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "3856:14:1"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "3872:1:1",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "3852:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3852:22:1"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "3839:6:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3839:36:1"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "3839:36:1"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "3222:663:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3227:1:1",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3902:234:1",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "3916:14:1",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3929:1:1",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nodeType": "YulTypedName",
																						"src": "3920:5:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "3965:67:1",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "3983:35:1",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "4002:3:1"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "4007:9:1"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "3998:3:1"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "3998:19:1"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "3992:5:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3992:26:1"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "3983:5:1"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nodeType": "YulIdentifier",
																					"src": "3946:6:1"
																				},
																				"nodeType": "YulIf",
																				"src": "3943:89:1"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "4052:4:1"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "4111:5:1"
																								},
																								{
																									"name": "newLen",
																									"nodeType": "YulIdentifier",
																									"src": "4118:6:1"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nodeType": "YulIdentifier",
																								"src": "4058:52:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "4058:67:1"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "4045:6:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4045:81:1"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "4045:81:1"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "3894:242:1",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "3202:6:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3210:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3199:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3199:14:1"
															},
															"nodeType": "YulSwitch",
															"src": "3192:944:1"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "2871:4:1",
														"type": ""
													},
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "2877:3:1",
														"type": ""
													}
												],
												"src": "2790:1352:1"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        let _4 := 0x20\n        if gt(add(add(offset, _1), _4), end) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _1) { i := add(i, _4) }\n        {\n            mstore(add(add(memPtr, i), _4), mload(add(add(offset, i), _4)))\n        }\n        mstore(add(add(memPtr, _1), _4), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x13E7 CODESIZE SUB DUP1 PUSH3 0x13E7 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x11F JUMP JUMPDEST PUSH1 0x0 PUSH3 0x42 DUP4 DUP3 PUSH3 0x218 JUMP JUMPDEST POP PUSH1 0x1 PUSH3 0x51 DUP3 DUP3 PUSH3 0x218 JUMP JUMPDEST POP POP POP PUSH3 0x2E4 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x82 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x9F JUMPI PUSH3 0x9F PUSH3 0x5A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0xCA JUMPI PUSH3 0xCA PUSH3 0x5A JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE PUSH1 0x20 SWAP3 POP DUP7 DUP4 DUP6 DUP9 ADD ADD GT ISZERO PUSH3 0xE7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 POP JUMPDEST DUP4 DUP3 LT ISZERO PUSH3 0x10B JUMPI DUP6 DUP3 ADD DUP4 ADD MLOAD DUP2 DUP4 ADD DUP5 ADD MSTORE SWAP1 DUP3 ADD SWAP1 PUSH3 0xEC JUMP JUMPDEST PUSH1 0x0 SWAP4 DUP2 ADD SWAP1 SWAP3 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x133 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x14B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x159 DUP7 DUP4 DUP8 ADD PUSH3 0x70 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x170 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x17F DUP6 DUP3 DUP7 ADD PUSH3 0x70 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x19E JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x1BF JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x213 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH3 0x1EE JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x20F JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x1FA JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x234 JUMPI PUSH3 0x234 PUSH3 0x5A JUMP JUMPDEST PUSH3 0x24C DUP2 PUSH3 0x245 DUP5 SLOAD PUSH3 0x189 JUMP JUMPDEST DUP5 PUSH3 0x1C5 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x284 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x26B JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0x20F JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x2B5 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x294 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x2D4 JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x10F3 DUP1 PUSH3 0x2F4 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x1B3 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x1C6 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x1D9 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x1EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x177 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x18A JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x111 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x13C JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x151 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x164 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE7 PUSH2 0xE2 CALLDATASIZE PUSH1 0x4 PUSH2 0xC7F JUMP JUMPDEST PUSH2 0x228 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x104 PUSH2 0x27A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0xCEC JUMP JUMPDEST PUSH2 0x124 PUSH2 0x11F CALLDATASIZE PUSH1 0x4 PUSH2 0xCFF JUMP JUMPDEST PUSH2 0x30C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xF3 JUMP JUMPDEST PUSH2 0x14F PUSH2 0x14A CALLDATASIZE PUSH1 0x4 PUSH2 0xD34 JUMP JUMPDEST PUSH2 0x333 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x14F PUSH2 0x15F CALLDATASIZE PUSH1 0x4 PUSH2 0xD5E JUMP JUMPDEST PUSH2 0x44D JUMP JUMPDEST PUSH2 0x14F PUSH2 0x172 CALLDATASIZE PUSH1 0x4 PUSH2 0xD5E JUMP JUMPDEST PUSH2 0x47E JUMP JUMPDEST PUSH2 0x124 PUSH2 0x185 CALLDATASIZE PUSH1 0x4 PUSH2 0xCFF JUMP JUMPDEST PUSH2 0x499 JUMP JUMPDEST PUSH2 0x19D PUSH2 0x198 CALLDATASIZE PUSH1 0x4 PUSH2 0xD9A JUMP JUMPDEST PUSH2 0x4F9 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xF3 JUMP JUMPDEST PUSH2 0x104 PUSH2 0x57F JUMP JUMPDEST PUSH2 0x14F PUSH2 0x1C1 CALLDATASIZE PUSH1 0x4 PUSH2 0xDB5 JUMP JUMPDEST PUSH2 0x58E JUMP JUMPDEST PUSH2 0x14F PUSH2 0x1D4 CALLDATASIZE PUSH1 0x4 PUSH2 0xE07 JUMP JUMPDEST PUSH2 0x59D JUMP JUMPDEST PUSH2 0x104 PUSH2 0x1E7 CALLDATASIZE PUSH1 0x4 PUSH2 0xCFF JUMP JUMPDEST PUSH2 0x5D5 JUMP JUMPDEST PUSH2 0xE7 PUSH2 0x1FA CALLDATASIZE PUSH1 0x4 PUSH2 0xEE3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x80AC58CD PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x259 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5B5E139F PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x274 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x289 SWAP1 PUSH2 0xF16 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2B5 SWAP1 PUSH2 0xF16 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x302 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2D7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x302 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2E5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x317 DUP3 PUSH2 0x649 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x33E DUP3 PUSH2 0x499 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x3B0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ DUP1 PUSH2 0x3CC JUMPI POP PUSH2 0x3CC DUP2 CALLER PUSH2 0x1FA JUMP JUMPDEST PUSH2 0x43E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F7420746F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6B656E206F776E6572206F7220617070726F76656420666F7220616C6C000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3A7 JUMP JUMPDEST PUSH2 0x448 DUP4 DUP4 PUSH2 0x6AB JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x457 CALLER DUP3 PUSH2 0x719 JUMP JUMPDEST PUSH2 0x473 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A7 SWAP1 PUSH2 0xF50 JUMP JUMPDEST PUSH2 0x448 DUP4 DUP4 DUP4 PUSH2 0x798 JUMP JUMPDEST PUSH2 0x448 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x59D JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x274 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x115490CDCC8C4E881A5B9D985B1A59081D1BDAD95B881251 PUSH1 0x42 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3A7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x563 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A2061646472657373207A65726F206973206E6F742061207661 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x3634B21037BBB732B9 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3A7 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x289 SWAP1 PUSH2 0xF16 JUMP JUMPDEST PUSH2 0x599 CALLER DUP4 DUP4 PUSH2 0x8FC JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x5A7 CALLER DUP4 PUSH2 0x719 JUMP JUMPDEST PUSH2 0x5C3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A7 SWAP1 PUSH2 0xF50 JUMP JUMPDEST PUSH2 0x5CF DUP5 DUP5 DUP5 DUP5 PUSH2 0x9CA JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x5E0 DUP3 PUSH2 0x649 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5F7 PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x617 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x642 JUMP JUMPDEST DUP1 PUSH2 0x621 DUP5 PUSH2 0x9FD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x632 SWAP3 SWAP2 SWAP1 PUSH2 0xF9D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x6A8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x115490CDCC8C4E881A5B9D985B1A59081D1BDAD95B881251 PUSH1 0x42 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3A7 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH2 0x6E0 DUP3 PUSH2 0x499 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x725 DUP4 PUSH2 0x499 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x76C JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP9 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST DUP1 PUSH2 0x790 JUMPI POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x785 DUP5 PUSH2 0x30C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x7AB DUP3 PUSH2 0x499 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x7D1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A7 SWAP1 PUSH2 0xFCC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x833 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3A7 JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x846 DUP3 PUSH2 0x499 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x86C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A7 SWAP1 PUSH2 0xFCC JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND SWAP1 SWAP2 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND DUP1 DUP7 MSTORE PUSH1 0x3 DUP6 MSTORE DUP4 DUP7 KECCAK256 DUP1 SLOAD PUSH1 0x0 NOT ADD SWAP1 SSTORE SWAP1 DUP8 AND DUP1 DUP7 MSTORE DUP4 DUP7 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE DUP7 DUP7 MSTORE PUSH1 0x2 SWAP1 SWAP5 MSTORE DUP3 DUP6 KECCAK256 DUP1 SLOAD SWAP1 SWAP3 AND DUP5 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD DUP5 SWAP4 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG4 POP POP POP JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x95D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3A7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x9D5 DUP5 DUP5 DUP5 PUSH2 0x798 JUMP JUMPDEST PUSH2 0x9E1 DUP5 DUP5 DUP5 DUP5 PUSH2 0xA90 JUMP JUMPDEST PUSH2 0x5CF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A7 SWAP1 PUSH2 0x1011 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0xA0A DUP4 PUSH2 0xB91 JUMP JUMPDEST PUSH1 0x1 ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xA2A JUMPI PUSH2 0xA2A PUSH2 0xDF1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xA54 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 ADD PUSH1 0x20 ADD JUMPDEST PUSH1 0x0 NOT ADD PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DIV SWAP5 POP DUP5 PUSH2 0xA5E JUMPI POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0xB86 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0xAD4 SWAP1 CALLER SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1063 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xB0F JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xB0C SWAP2 DUP2 ADD SWAP1 PUSH2 0x10A0 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xB6C JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0xB3D JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xB42 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0xB64 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A7 SWAP1 PUSH2 0x1011 JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ SWAP1 POP PUSH2 0x790 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 LT PUSH2 0xBD0 JUMPI PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 DIV SWAP3 POP PUSH1 0x40 ADD JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0xBFC JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DIV SWAP3 POP PUSH1 0x20 ADD JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0xC1A JUMPI PUSH7 0x2386F26FC10000 DUP4 DIV SWAP3 POP PUSH1 0x10 ADD JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0xC32 JUMPI PUSH4 0x5F5E100 DUP4 DIV SWAP3 POP PUSH1 0x8 ADD JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0xC46 JUMPI PUSH2 0x2710 DUP4 DIV SWAP3 POP PUSH1 0x4 ADD JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0xC58 JUMPI PUSH1 0x64 DUP4 DIV SWAP3 POP PUSH1 0x2 ADD JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x274 JUMPI PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x6A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC91 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x642 DUP2 PUSH2 0xC69 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xCB7 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xC9F JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0xCD8 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0xC9C JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x642 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xCC0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xD2F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD47 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD50 DUP4 PUSH2 0xD18 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xD73 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD7C DUP5 PUSH2 0xD18 JUMP JUMPDEST SWAP3 POP PUSH2 0xD8A PUSH1 0x20 DUP6 ADD PUSH2 0xD18 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDAC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x642 DUP3 PUSH2 0xD18 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xDC8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDD1 DUP4 PUSH2 0xD18 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xDE6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xE1D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE26 DUP6 PUSH2 0xD18 JUMP JUMPDEST SWAP4 POP PUSH2 0xE34 PUSH1 0x20 DUP7 ADD PUSH2 0xD18 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xE58 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xE6C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0xE7E JUMPI PUSH2 0xE7E PUSH2 0xDF1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0xEA6 JUMPI PUSH2 0xEA6 PUSH2 0xDF1 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP11 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0xEBF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xEF6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xEFF DUP4 PUSH2 0xD18 JUMP JUMPDEST SWAP2 POP PUSH2 0xF0D PUSH1 0x20 DUP5 ADD PUSH2 0xD18 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xF2A JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xF4A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2D SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65 PUSH1 0x40 DUP3 ADD MSTORE PUSH13 0x1C881BDC88185C1C1C9BDD9959 PUSH1 0x9A SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH2 0xFAF DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0xC9C JUMP JUMPDEST DUP4 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0xFC3 DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0xC9C JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x37BBB732B9 PUSH1 0xD9 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x32 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x40 DUP3 ADD MSTORE PUSH18 0x31B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x71 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x1096 SWAP1 DUP4 ADD DUP5 PUSH2 0xCC0 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x10B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x642 DUP2 PUSH2 0xC69 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xFB AND SUB 0xBF PUSH27 0x641BEEA1889A6CC323F5E7183609259EAA976465096A3A18454CEC PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "38975:16679:0:-:0;;;39737:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;39803:5;:13;39811:5;39803;:13;:::i;:::-;-1:-1:-1;39826:7:0;:17;39836:7;39826;:17;:::i;:::-;;39737:113;;38975:16679;;14:127:1;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:840;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:1;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:1;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;954:1;932:15;;;928:24;;;921:35;;;;936:6;146:840;-1:-1:-1;;;;146:840:1:o;991:562::-;1090:6;1098;1151:2;1139:9;1130:7;1126:23;1122:32;1119:52;;;1167:1;1164;1157:12;1119:52;1194:16;;-1:-1:-1;;;;;1259:14:1;;;1256:34;;;1286:1;1283;1276:12;1256:34;1309:61;1362:7;1353:6;1342:9;1338:22;1309:61;:::i;:::-;1299:71;;1416:2;1405:9;1401:18;1395:25;1379:41;;1445:2;1435:8;1432:16;1429:36;;;1461:1;1458;1451:12;1429:36;;1484:63;1539:7;1528:8;1517:9;1513:24;1484:63;:::i;:::-;1474:73;;;991:562;;;;;:::o;1558:380::-;1637:1;1633:12;;;;1680;;;1701:61;;1755:4;1747:6;1743:17;1733:27;;1701:61;1808:2;1800:6;1797:14;1777:18;1774:38;1771:161;;1854:10;1849:3;1845:20;1842:1;1835:31;1889:4;1886:1;1879:15;1917:4;1914:1;1907:15;1771:161;;1558:380;;;:::o;2069:545::-;2171:2;2166:3;2163:11;2160:448;;;2207:1;2232:5;2228:2;2221:17;2277:4;2273:2;2263:19;2347:2;2335:10;2331:19;2328:1;2324:27;2318:4;2314:38;2383:4;2371:10;2368:20;2365:47;;;-1:-1:-1;2406:4:1;2365:47;2461:2;2456:3;2452:12;2449:1;2445:20;2439:4;2435:31;2425:41;;2516:82;2534:2;2527:5;2524:13;2516:82;;;2579:17;;;2560:1;2549:13;2516:82;;;2520:3;;;2160:448;2069:545;;;:::o;2790:1352::-;2910:10;;-1:-1:-1;;;;;2932:30:1;;2929:56;;;2965:18;;:::i;:::-;2994:97;3084:6;3044:38;3076:4;3070:11;3044:38;:::i;:::-;3038:4;2994:97;:::i;:::-;3146:4;;3210:2;3199:14;;3227:1;3222:663;;;;3929:1;3946:6;3943:89;;;-1:-1:-1;3998:19:1;;;3992:26;3943:89;-1:-1:-1;;2747:1:1;2743:11;;;2739:24;2735:29;2725:40;2771:1;2767:11;;;2722:57;4045:81;;3192:944;;3222:663;2016:1;2009:14;;;2053:4;2040:18;;-1:-1:-1;;3258:20:1;;;3376:236;3390:7;3387:1;3384:14;3376:236;;;3479:19;;;3473:26;3458:42;;3571:27;;;;3539:1;3527:14;;;;3406:19;;3376:236;;;3380:3;3640:6;3631:7;3628:19;3625:201;;;3701:19;;;3695:26;-1:-1:-1;;3784:1:1;3780:14;;;3796:3;3776:24;3772:37;3768:42;3753:58;3738:74;;3625:201;-1:-1:-1;;;;;3872:1:1;3856:14;;;3852:22;3839:36;;-1:-1:-1;2790:1352:1:o;:::-;38975:16679:0;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_afterTokenTransfer_2692": {
									"entryPoint": null,
									"id": 2692,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_approve_2558": {
									"entryPoint": 1707,
									"id": 2558,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_baseURI_1995": {
									"entryPoint": null,
									"id": 1995,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_beforeTokenTransfer_2679": {
									"entryPoint": null,
									"id": 2679,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_checkOnERC721Received_2666": {
									"entryPoint": 2704,
									"id": 2666,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@_exists_2227": {
									"entryPoint": null,
									"id": 2227,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_isApprovedOrOwner_2261": {
									"entryPoint": 1817,
									"id": 2261,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_msgSender_1121": {
									"entryPoint": null,
									"id": 1121,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_ownerOf_2209": {
									"entryPoint": null,
									"id": 2209,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_requireMinted_2604": {
									"entryPoint": 1609,
									"id": 2604,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_safeTransfer_2196": {
									"entryPoint": 2506,
									"id": 2196,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_setApprovalForAll_2590": {
									"entryPoint": 2300,
									"id": 2590,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_2534": {
									"entryPoint": 1944,
									"id": 2534,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@approve_2038": {
									"entryPoint": 819,
									"id": 2038,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@balanceOf_1899": {
									"entryPoint": 1273,
									"id": 1899,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getApproved_2056": {
									"entryPoint": 780,
									"id": 2056,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isApprovedForAll_2091": {
									"entryPoint": null,
									"id": 2091,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isContract_1259": {
									"entryPoint": null,
									"id": 1259,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@log10_774": {
									"entryPoint": 2961,
									"id": 774,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@name_1937": {
									"entryPoint": 634,
									"id": 1937,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@ownerOf_1927": {
									"entryPoint": 1177,
									"id": 1927,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@safeTransferFrom_2137": {
									"entryPoint": 1150,
									"id": 2137,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@safeTransferFrom_2167": {
									"entryPoint": 1437,
									"id": 2167,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@setApprovalForAll_2073": {
									"entryPoint": 1422,
									"id": 2073,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_1620": {
									"entryPoint": null,
									"id": 1620,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_1875": {
									"entryPoint": 552,
									"id": 1875,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@symbol_1947": {
									"entryPoint": 1407,
									"id": 1947,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@toString_993": {
									"entryPoint": 2557,
									"id": 993,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@tokenURI_1986": {
									"entryPoint": 1493,
									"id": 1986,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@transferFrom_2118": {
									"entryPoint": 1101,
									"id": 2118,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 3352,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3482,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 3811,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 3422,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr": {
									"entryPoint": 3591,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 3509,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 3380,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 3199,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 4256,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 3327,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_string": {
									"entryPoint": 3264,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 3997,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 4195,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3308,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3920,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4113,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4044,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 3228,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 3862,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x12": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 3569,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_bytes4": {
									"entryPoint": 3177,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:10132:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "58:87:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "123:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "132:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "135:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "125:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "125:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "125:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "81:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "92:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "103:3:1",
																								"type": "",
																								"value": "224"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "108:10:1",
																								"type": "",
																								"value": "0xffffffff"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "99:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "99:20:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "88:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "88:32:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "78:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "78:43:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "71:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "71:51:1"
															},
															"nodeType": "YulIf",
															"src": "68:71:1"
														}
													]
												},
												"name": "validator_revert_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "47:5:1",
														"type": ""
													}
												],
												"src": "14:131:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "219:176:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "265:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "274:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "277:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "267:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "267:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "267:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "240:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "249:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "236:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "236:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "261:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "232:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "232:32:1"
															},
															"nodeType": "YulIf",
															"src": "229:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "290:36:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "316:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "303:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "303:23:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "294:5:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "359:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "335:23:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "335:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "335:30:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "374:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "384:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "374:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "185:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "196:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "208:6:1",
														"type": ""
													}
												],
												"src": "150:245:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "495:92:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "505:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "517:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "528:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "513:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "513:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "505:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "547:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "572:6:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "565:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "565:14:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "558:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "558:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "540:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "540:41:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "540:41:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "464:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "475:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "486:4:1",
														"type": ""
													}
												],
												"src": "400:187:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "658:184:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "668:10:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "677:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "672:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "737:63:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "762:3:1"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "767:1:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "758:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "758:11:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "781:3:1"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "786:1:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "777:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "777:11:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "771:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "771:18:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "751:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "751:39:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "751:39:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "698:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "701:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "695:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "695:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "709:19:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "711:15:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "720:1:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "723:2:1",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "716:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "716:10:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "711:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "691:3:1",
																"statements": []
															},
															"src": "687:113:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "820:3:1"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "825:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "816:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "816:16:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "834:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "809:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "809:27:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "809:27:1"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "636:3:1",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "641:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "646:6:1",
														"type": ""
													}
												],
												"src": "592:250:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "897:221:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "907:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "927:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "921:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "921:12:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "911:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "949:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "954:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "942:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "942:19:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "942:19:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1009:5:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1016:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1005:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1005:16:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "1027:3:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1032:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1023:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1023:14:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1039:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "970:34:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "970:76:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "970:76:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1055:57:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "1070:3:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "1083:6:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1091:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "1079:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1079:15:1"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1100:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "1096:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1096:7:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "1075:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1075:29:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1066:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1066:39:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1107:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1062:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1062:50:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1055:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_string",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "874:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "881:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "889:3:1",
														"type": ""
													}
												],
												"src": "847:271:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1244:99:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1261:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1272:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1254:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1254:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1254:21:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1284:53:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1310:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1322:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1333:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1318:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1318:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nodeType": "YulIdentifier",
																	"src": "1292:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1292:45:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1284:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1213:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1224:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1235:4:1",
														"type": ""
													}
												],
												"src": "1123:220:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1418:110:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1464:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1473:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1476:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1466:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1466:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1466:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1439:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1448:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1435:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1435:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1460:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1431:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1431:32:1"
															},
															"nodeType": "YulIf",
															"src": "1428:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1489:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1512:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1499:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1499:23:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1489:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1384:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1395:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1407:6:1",
														"type": ""
													}
												],
												"src": "1348:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1634:102:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1644:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1656:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1667:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1652:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1652:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1644:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1686:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1701:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1717:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1722:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "1713:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1713:11:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1726:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "1709:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1709:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1697:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1697:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1679:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1679:51:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1679:51:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1603:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1614:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1625:4:1",
														"type": ""
													}
												],
												"src": "1533:203:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1790:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1800:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1822:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1809:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1809:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1800:5:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1892:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1901:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1904:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1894:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1894:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1894:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1851:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1862:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1877:3:1",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1882:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "1873:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "1873:11:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1886:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "1869:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1869:19:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "1858:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1858:31:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1848:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1848:42:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1841:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1841:50:1"
															},
															"nodeType": "YulIf",
															"src": "1838:70:1"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1769:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1780:5:1",
														"type": ""
													}
												],
												"src": "1741:173:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2006:167:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2052:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2061:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2064:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2054:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2054:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2054:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2027:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2036:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2023:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2023:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2048:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2019:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2019:32:1"
															},
															"nodeType": "YulIf",
															"src": "2016:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2077:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2106:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2087:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2087:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2077:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2125:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2152:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2163:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2148:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2148:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2135:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2135:32:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2125:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1964:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1975:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1987:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1995:6:1",
														"type": ""
													}
												],
												"src": "1919:254:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2282:224:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2328:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2337:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2340:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2330:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2330:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2330:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2303:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2312:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2299:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2299:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2324:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2295:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2295:32:1"
															},
															"nodeType": "YulIf",
															"src": "2292:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2353:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2382:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2363:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2363:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2353:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2401:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2434:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2445:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2430:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2430:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2411:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2411:38:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2401:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2458:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2485:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2496:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2481:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2481:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2468:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2468:32:1"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "2458:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2232:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2243:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2255:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2263:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2271:6:1",
														"type": ""
													}
												],
												"src": "2178:328:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2581:116:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2627:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2636:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2639:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2629:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2629:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2629:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2602:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2611:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2598:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2598:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2623:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2594:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2594:32:1"
															},
															"nodeType": "YulIf",
															"src": "2591:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2652:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2681:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2662:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2662:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2652:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2547:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2558:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2570:6:1",
														"type": ""
													}
												],
												"src": "2511:186:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2803:76:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2813:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2825:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2836:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2821:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2821:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2813:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2855:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2866:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2848:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2848:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2848:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2772:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2783:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2794:4:1",
														"type": ""
													}
												],
												"src": "2702:177:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2968:263:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3014:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3023:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3026:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3016:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3016:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3016:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2989:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2998:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2985:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2985:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3010:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2981:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2981:32:1"
															},
															"nodeType": "YulIf",
															"src": "2978:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3039:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3068:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "3049:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3049:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3039:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3087:45:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3117:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3128:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3113:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3113:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3100:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3100:32:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "3091:5:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3185:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3194:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3197:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3187:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3187:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3187:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3154:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "3175:5:1"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "3168:6:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3168:13:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "3161:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3161:21:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "3151:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3151:32:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3144:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3144:40:1"
															},
															"nodeType": "YulIf",
															"src": "3141:60:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3210:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3220:5:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "3210:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2926:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2937:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2949:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2957:6:1",
														"type": ""
													}
												],
												"src": "2884:347:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3268:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3285:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3292:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3297:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "3288:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3288:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3278:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3278:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3278:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3325:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3328:4:1",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3318:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3318:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3318:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3349:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3352:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3342:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3342:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3342:15:1"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "3236:127:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3498:1008:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3545:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3554:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3557:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3547:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3547:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3547:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3519:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3528:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3515:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3515:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3540:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3511:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3511:33:1"
															},
															"nodeType": "YulIf",
															"src": "3508:53:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3570:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3599:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "3580:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3580:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3570:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3618:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3651:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3662:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3647:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3647:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "3628:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3628:38:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "3618:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3675:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3702:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3713:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3698:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3698:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3685:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3685:32:1"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "3675:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3726:46:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3757:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3768:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3753:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3753:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3740:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3740:32:1"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "3730:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3781:28:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3791:18:1",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "3785:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3836:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3845:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3848:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3838:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3838:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3838:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3824:6:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3832:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3821:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3821:14:1"
															},
															"nodeType": "YulIf",
															"src": "3818:34:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3861:32:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3875:9:1"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3886:6:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3871:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3871:22:1"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "3865:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3941:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3950:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3953:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3943:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3943:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3943:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "3920:2:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3924:4:1",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3916:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3916:13:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3931:7:1"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "3912:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3912:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3905:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3905:35:1"
															},
															"nodeType": "YulIf",
															"src": "3902:55:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3966:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "3989:2:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3976:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3976:16:1"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "3970:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4015:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "4017:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4017:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4017:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "4007:2:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4011:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4004:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4004:10:1"
															},
															"nodeType": "YulIf",
															"src": "4001:36:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4046:17:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4060:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "4056:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4056:7:1"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "4050:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4072:23:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4092:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4086:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4086:9:1"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "4076:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4104:71:1",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "4126:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_3",
																										"nodeType": "YulIdentifier",
																										"src": "4150:2:1"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "4154:4:1",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "4146:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4146:13:1"
																							},
																							{
																								"name": "_4",
																								"nodeType": "YulIdentifier",
																								"src": "4161:2:1"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "4142:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4142:22:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4166:2:1",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4138:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4138:31:1"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "4171:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4134:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4134:40:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4122:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4122:53:1"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "4108:10:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4234:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "4236:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4236:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4236:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "4193:10:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "4205:2:1"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "4190:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4190:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "4213:10:1"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "4225:6:1"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "4210:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4210:22:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "4187:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4187:46:1"
															},
															"nodeType": "YulIf",
															"src": "4184:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4272:2:1",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "4276:10:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4265:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4265:22:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4265:22:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "4303:6:1"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "4311:2:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4296:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4296:18:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4296:18:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4360:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4369:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4372:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4362:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4362:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4362:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "4337:2:1"
																					},
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "4341:2:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4333:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4333:11:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4346:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4329:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4329:20:1"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "4351:7:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4326:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4326:33:1"
															},
															"nodeType": "YulIf",
															"src": "4323:53:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "4402:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4410:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4398:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4398:15:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "4419:2:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4423:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4415:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4415:11:1"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "4428:2:1"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "4385:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4385:46:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4385:46:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nodeType": "YulIdentifier",
																						"src": "4455:6:1"
																					},
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "4463:2:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4451:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4451:15:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4468:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4447:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4447:24:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4473:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4440:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4440:35:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4440:35:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4484:16:1",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "4494:6:1"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "4484:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3440:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3451:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3463:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3471:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3479:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "3487:6:1",
														"type": ""
													}
												],
												"src": "3368:1138:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4598:173:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4644:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4653:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4656:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4646:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4646:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4646:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4619:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4628:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4615:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4615:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4640:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4611:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4611:32:1"
															},
															"nodeType": "YulIf",
															"src": "4608:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4669:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4698:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "4679:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4679:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4669:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4717:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4750:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4761:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4746:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4746:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "4727:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4727:38:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "4717:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4556:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4567:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4579:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4587:6:1",
														"type": ""
													}
												],
												"src": "4511:260:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4831:325:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4841:22:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4855:1:1",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "4858:4:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "4851:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4851:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "4841:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4872:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "4902:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4908:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4898:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4898:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "4876:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4949:31:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "4951:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "4965:6:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4973:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "4961:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4961:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "4951:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "4929:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4922:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4922:26:1"
															},
															"nodeType": "YulIf",
															"src": "4919:61:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5039:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5060:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5067:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5072:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "5063:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5063:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5053:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5053:31:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5053:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5104:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5107:4:1",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5097:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5097:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5097:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5132:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5135:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5125:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5125:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5125:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "4995:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "5018:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5026:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "5015:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5015:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "4992:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4992:38:1"
															},
															"nodeType": "YulIf",
															"src": "4989:161:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "4811:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "4820:6:1",
														"type": ""
													}
												],
												"src": "4776:380:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5335:223:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5352:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5363:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5345:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5345:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5345:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5386:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5397:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5382:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5382:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5402:2:1",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5375:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5375:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5375:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5425:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5436:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5421:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5421:18:1"
																	},
																	{
																		"hexValue": "4552433732313a20617070726f76616c20746f2063757272656e74206f776e65",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5441:34:1",
																		"type": "",
																		"value": "ERC721: approval to current owne"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5414:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5414:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5414:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5496:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5507:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5492:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5492:18:1"
																	},
																	{
																		"hexValue": "72",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5512:3:1",
																		"type": "",
																		"value": "r"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5485:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5485:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5485:31:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5525:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5537:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5548:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5533:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5533:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5525:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5312:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5326:4:1",
														"type": ""
													}
												],
												"src": "5161:397:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5737:251:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5754:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5765:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5747:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5747:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5747:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5788:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5799:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5784:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5784:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5804:2:1",
																		"type": "",
																		"value": "61"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5777:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5777:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5777:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5827:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5838:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5823:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5823:18:1"
																	},
																	{
																		"hexValue": "4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5843:34:1",
																		"type": "",
																		"value": "ERC721: approve caller is not to"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5816:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5816:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5816:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5898:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5909:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5894:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5894:18:1"
																	},
																	{
																		"hexValue": "6b656e206f776e6572206f7220617070726f76656420666f7220616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5914:31:1",
																		"type": "",
																		"value": "ken owner or approved for all"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5887:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5887:59:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5887:59:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5955:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5967:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5978:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5963:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5963:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5955:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5714:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5728:4:1",
														"type": ""
													}
												],
												"src": "5563:425:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6167:235:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6184:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6195:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6177:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6177:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6177:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6218:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6229:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6214:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6214:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6234:2:1",
																		"type": "",
																		"value": "45"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6207:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6207:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6207:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6257:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6268:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6253:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6253:18:1"
																	},
																	{
																		"hexValue": "4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e65",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6273:34:1",
																		"type": "",
																		"value": "ERC721: caller is not token owne"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6246:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6246:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6246:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6328:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6339:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6324:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6324:18:1"
																	},
																	{
																		"hexValue": "72206f7220617070726f766564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6344:15:1",
																		"type": "",
																		"value": "r or approved"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6317:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6317:43:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6317:43:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6369:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6381:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6392:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6377:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6377:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6369:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6144:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6158:4:1",
														"type": ""
													}
												],
												"src": "5993:409:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6581:174:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6598:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6609:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6591:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6591:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6591:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6632:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6643:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6628:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6628:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6648:2:1",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6621:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6621:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6621:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6671:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6682:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6667:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6667:18:1"
																	},
																	{
																		"hexValue": "4552433732313a20696e76616c696420746f6b656e204944",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6687:26:1",
																		"type": "",
																		"value": "ERC721: invalid token ID"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6660:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6660:54:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6660:54:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6723:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6735:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6746:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6731:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6731:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6723:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6558:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6572:4:1",
														"type": ""
													}
												],
												"src": "6407:348:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6934:231:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6951:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6962:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6944:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6944:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6944:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6985:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6996:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6981:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6981:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7001:2:1",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6974:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6974:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6974:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7024:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7035:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7020:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7020:18:1"
																	},
																	{
																		"hexValue": "4552433732313a2061646472657373207a65726f206973206e6f742061207661",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7040:34:1",
																		"type": "",
																		"value": "ERC721: address zero is not a va"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7013:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7013:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7013:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7095:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7106:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7091:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7091:18:1"
																	},
																	{
																		"hexValue": "6c6964206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7111:11:1",
																		"type": "",
																		"value": "lid owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7084:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7084:39:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7084:39:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7132:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7144:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7155:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7140:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7140:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7132:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6911:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6925:4:1",
														"type": ""
													}
												],
												"src": "6760:405:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7357:309:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7367:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7387:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "7381:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7381:13:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "7371:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "7442:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7450:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7438:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7438:17:1"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7457:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7462:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "7403:34:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7403:66:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7403:66:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7478:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7495:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7500:6:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7491:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7491:16:1"
															},
															"variables": [
																{
																	"name": "end_1",
																	"nodeType": "YulTypedName",
																	"src": "7482:5:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7516:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "7538:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "7532:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7532:13:1"
															},
															"variables": [
																{
																	"name": "length_1",
																	"nodeType": "YulTypedName",
																	"src": "7520:8:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "7593:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7601:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7589:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7589:17:1"
																	},
																	{
																		"name": "end_1",
																		"nodeType": "YulIdentifier",
																		"src": "7608:5:1"
																	},
																	{
																		"name": "length_1",
																		"nodeType": "YulIdentifier",
																		"src": "7615:8:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "7554:34:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7554:70:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7554:70:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7633:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "end_1",
																		"nodeType": "YulIdentifier",
																		"src": "7644:5:1"
																	},
																	{
																		"name": "length_1",
																		"nodeType": "YulIdentifier",
																		"src": "7651:8:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7640:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7640:20:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "7633:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7325:3:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7330:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7338:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7349:3:1",
														"type": ""
													}
												],
												"src": "7170:496:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7845:227:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7862:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7873:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7855:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7855:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7855:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7896:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7907:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7892:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7892:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7912:2:1",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7885:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7885:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7885:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7935:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7946:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7931:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7931:18:1"
																	},
																	{
																		"hexValue": "4552433732313a207472616e736665722066726f6d20696e636f727265637420",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7951:34:1",
																		"type": "",
																		"value": "ERC721: transfer from incorrect "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7924:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7924:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7924:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8006:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8017:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8002:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8002:18:1"
																	},
																	{
																		"hexValue": "6f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8022:7:1",
																		"type": "",
																		"value": "owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7995:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7995:35:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7995:35:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8039:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8051:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8062:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8047:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8047:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8039:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7822:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7836:4:1",
														"type": ""
													}
												],
												"src": "7671:401:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8251:226:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8268:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8279:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8261:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8261:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8261:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8302:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8313:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8298:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8298:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8318:2:1",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8291:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8291:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8291:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8341:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8352:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8337:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8337:18:1"
																	},
																	{
																		"hexValue": "4552433732313a207472616e7366657220746f20746865207a65726f20616464",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8357:34:1",
																		"type": "",
																		"value": "ERC721: transfer to the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8330:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8330:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8330:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8412:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8423:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8408:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8408:18:1"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8428:6:1",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8401:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8401:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8401:34:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8444:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8456:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8467:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8452:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8452:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8444:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8228:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8242:4:1",
														"type": ""
													}
												],
												"src": "8077:400:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8656:175:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8673:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8684:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8666:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8666:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8666:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8707:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8718:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8703:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8703:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8723:2:1",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8696:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8696:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8696:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8746:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8757:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8742:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8742:18:1"
																	},
																	{
																		"hexValue": "4552433732313a20617070726f766520746f2063616c6c6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8762:27:1",
																		"type": "",
																		"value": "ERC721: approve to caller"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8735:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8735:55:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8735:55:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8799:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8811:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8822:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8807:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8807:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8799:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8633:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8647:4:1",
														"type": ""
													}
												],
												"src": "8482:349:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9010:240:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9027:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9038:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9020:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9020:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9020:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9061:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9072:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9057:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9057:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9077:2:1",
																		"type": "",
																		"value": "50"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9050:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9050:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9050:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9100:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9111:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9096:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9096:18:1"
																	},
																	{
																		"hexValue": "4552433732313a207472616e7366657220746f206e6f6e204552433732315265",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9116:34:1",
																		"type": "",
																		"value": "ERC721: transfer to non ERC721Re"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9089:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9089:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9089:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9171:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9182:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9167:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9167:18:1"
																	},
																	{
																		"hexValue": "63656976657220696d706c656d656e746572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9187:20:1",
																		"type": "",
																		"value": "ceiver implementer"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9160:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9160:48:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9160:48:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9217:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9229:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9240:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9225:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9225:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9217:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8987:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9001:4:1",
														"type": ""
													}
												],
												"src": "8836:414:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9287:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9304:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9311:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9316:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "9307:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9307:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9297:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9297:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9297:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9344:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9347:4:1",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9337:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9337:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9337:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9368:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9371:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "9361:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9361:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9361:15:1"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "9255:127:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9590:286:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9600:29:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9618:3:1",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9623:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "9614:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9614:11:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9627:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "9610:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9610:19:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "9604:2:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9645:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "9660:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "9668:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "9656:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9656:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9638:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9638:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9638:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9692:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9703:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9688:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9688:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "9712:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "9720:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "9708:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9708:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9681:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9681:43:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9681:43:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9744:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9755:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9740:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9740:18:1"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "9760:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9733:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9733:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9733:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9787:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9798:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9783:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9783:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9803:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9776:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9776:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9776:31:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9816:54:1",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "9842:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9854:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9865:3:1",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9850:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9850:19:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nodeType": "YulIdentifier",
																	"src": "9824:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9824:46:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9816:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9535:9:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "9546:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "9554:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "9562:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9570:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9581:4:1",
														"type": ""
													}
												],
												"src": "9387:489:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9961:169:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10007:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10016:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10019:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "10009:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10009:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10009:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9982:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9991:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9978:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9978:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10003:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "9974:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9974:32:1"
															},
															"nodeType": "YulIf",
															"src": "9971:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10032:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10051:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "10045:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10045:16:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "10036:5:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10094:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "10070:23:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10070:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10070:30:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10109:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "10119:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "10109:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9927:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "9938:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9950:6:1",
														"type": ""
													}
												],
												"src": "9881:249:1"
											}
										]
									},
									"contents": "{\n    { }\n    function validator_revert_bytes4(value)\n    {\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value1 := value\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        let offset := calldataload(add(headStart, 96))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := calldataload(_2)\n        if gt(_3, _1) { panic_error_0x41() }\n        let _4 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_3, 0x1f), _4), 63), _4))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _3)\n        if gt(add(add(_2, _3), 32), dataEnd) { revert(0, 0) }\n        calldatacopy(add(memPtr, 32), add(_2, 32), _3)\n        mstore(add(add(memPtr, _3), 32), 0)\n        value3 := memPtr\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"ERC721: approval to current owne\")\n        mstore(add(headStart, 96), \"r\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 61)\n        mstore(add(headStart, 64), \"ERC721: approve caller is not to\")\n        mstore(add(headStart, 96), \"ken owner or approved for all\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 45)\n        mstore(add(headStart, 64), \"ERC721: caller is not token owne\")\n        mstore(add(headStart, 96), \"r or approved\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"ERC721: invalid token ID\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"ERC721: address zero is not a va\")\n        mstore(add(headStart, 96), \"lid owner\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), pos, length)\n        let end_1 := add(pos, length)\n        let length_1 := mload(value1)\n        copy_memory_to_memory_with_cleanup(add(value1, 0x20), end_1, length_1)\n        end := add(end_1, length_1)\n    }\n    function abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC721: transfer from incorrect \")\n        mstore(add(headStart, 96), \"owner\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC721: transfer to the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"ERC721: approve to caller\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 50)\n        mstore(add(headStart, 64), \"ERC721: transfer to non ERC721Re\")\n        mstore(add(headStart, 96), \"ceiver implementer\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x12()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), 128)\n        tail := abi_encode_string(value3, add(headStart, 128))\n    }\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x1B3 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x1C6 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x1D9 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x1EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x177 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x18A JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x111 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x13C JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x151 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x164 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE7 PUSH2 0xE2 CALLDATASIZE PUSH1 0x4 PUSH2 0xC7F JUMP JUMPDEST PUSH2 0x228 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x104 PUSH2 0x27A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0xCEC JUMP JUMPDEST PUSH2 0x124 PUSH2 0x11F CALLDATASIZE PUSH1 0x4 PUSH2 0xCFF JUMP JUMPDEST PUSH2 0x30C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xF3 JUMP JUMPDEST PUSH2 0x14F PUSH2 0x14A CALLDATASIZE PUSH1 0x4 PUSH2 0xD34 JUMP JUMPDEST PUSH2 0x333 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x14F PUSH2 0x15F CALLDATASIZE PUSH1 0x4 PUSH2 0xD5E JUMP JUMPDEST PUSH2 0x44D JUMP JUMPDEST PUSH2 0x14F PUSH2 0x172 CALLDATASIZE PUSH1 0x4 PUSH2 0xD5E JUMP JUMPDEST PUSH2 0x47E JUMP JUMPDEST PUSH2 0x124 PUSH2 0x185 CALLDATASIZE PUSH1 0x4 PUSH2 0xCFF JUMP JUMPDEST PUSH2 0x499 JUMP JUMPDEST PUSH2 0x19D PUSH2 0x198 CALLDATASIZE PUSH1 0x4 PUSH2 0xD9A JUMP JUMPDEST PUSH2 0x4F9 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xF3 JUMP JUMPDEST PUSH2 0x104 PUSH2 0x57F JUMP JUMPDEST PUSH2 0x14F PUSH2 0x1C1 CALLDATASIZE PUSH1 0x4 PUSH2 0xDB5 JUMP JUMPDEST PUSH2 0x58E JUMP JUMPDEST PUSH2 0x14F PUSH2 0x1D4 CALLDATASIZE PUSH1 0x4 PUSH2 0xE07 JUMP JUMPDEST PUSH2 0x59D JUMP JUMPDEST PUSH2 0x104 PUSH2 0x1E7 CALLDATASIZE PUSH1 0x4 PUSH2 0xCFF JUMP JUMPDEST PUSH2 0x5D5 JUMP JUMPDEST PUSH2 0xE7 PUSH2 0x1FA CALLDATASIZE PUSH1 0x4 PUSH2 0xEE3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x80AC58CD PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x259 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5B5E139F PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x274 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x289 SWAP1 PUSH2 0xF16 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2B5 SWAP1 PUSH2 0xF16 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x302 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2D7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x302 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2E5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x317 DUP3 PUSH2 0x649 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x33E DUP3 PUSH2 0x499 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x3B0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ DUP1 PUSH2 0x3CC JUMPI POP PUSH2 0x3CC DUP2 CALLER PUSH2 0x1FA JUMP JUMPDEST PUSH2 0x43E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F7420746F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6B656E206F776E6572206F7220617070726F76656420666F7220616C6C000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3A7 JUMP JUMPDEST PUSH2 0x448 DUP4 DUP4 PUSH2 0x6AB JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x457 CALLER DUP3 PUSH2 0x719 JUMP JUMPDEST PUSH2 0x473 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A7 SWAP1 PUSH2 0xF50 JUMP JUMPDEST PUSH2 0x448 DUP4 DUP4 DUP4 PUSH2 0x798 JUMP JUMPDEST PUSH2 0x448 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x59D JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x274 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x115490CDCC8C4E881A5B9D985B1A59081D1BDAD95B881251 PUSH1 0x42 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3A7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x563 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A2061646472657373207A65726F206973206E6F742061207661 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x3634B21037BBB732B9 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3A7 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x289 SWAP1 PUSH2 0xF16 JUMP JUMPDEST PUSH2 0x599 CALLER DUP4 DUP4 PUSH2 0x8FC JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x5A7 CALLER DUP4 PUSH2 0x719 JUMP JUMPDEST PUSH2 0x5C3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A7 SWAP1 PUSH2 0xF50 JUMP JUMPDEST PUSH2 0x5CF DUP5 DUP5 DUP5 DUP5 PUSH2 0x9CA JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x5E0 DUP3 PUSH2 0x649 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5F7 PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x617 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x642 JUMP JUMPDEST DUP1 PUSH2 0x621 DUP5 PUSH2 0x9FD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x632 SWAP3 SWAP2 SWAP1 PUSH2 0xF9D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x6A8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x115490CDCC8C4E881A5B9D985B1A59081D1BDAD95B881251 PUSH1 0x42 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3A7 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH2 0x6E0 DUP3 PUSH2 0x499 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x725 DUP4 PUSH2 0x499 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x76C JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP9 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST DUP1 PUSH2 0x790 JUMPI POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x785 DUP5 PUSH2 0x30C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x7AB DUP3 PUSH2 0x499 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x7D1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A7 SWAP1 PUSH2 0xFCC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x833 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3A7 JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x846 DUP3 PUSH2 0x499 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x86C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A7 SWAP1 PUSH2 0xFCC JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND SWAP1 SWAP2 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND DUP1 DUP7 MSTORE PUSH1 0x3 DUP6 MSTORE DUP4 DUP7 KECCAK256 DUP1 SLOAD PUSH1 0x0 NOT ADD SWAP1 SSTORE SWAP1 DUP8 AND DUP1 DUP7 MSTORE DUP4 DUP7 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE DUP7 DUP7 MSTORE PUSH1 0x2 SWAP1 SWAP5 MSTORE DUP3 DUP6 KECCAK256 DUP1 SLOAD SWAP1 SWAP3 AND DUP5 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD DUP5 SWAP4 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG4 POP POP POP JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x95D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3A7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x9D5 DUP5 DUP5 DUP5 PUSH2 0x798 JUMP JUMPDEST PUSH2 0x9E1 DUP5 DUP5 DUP5 DUP5 PUSH2 0xA90 JUMP JUMPDEST PUSH2 0x5CF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A7 SWAP1 PUSH2 0x1011 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0xA0A DUP4 PUSH2 0xB91 JUMP JUMPDEST PUSH1 0x1 ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xA2A JUMPI PUSH2 0xA2A PUSH2 0xDF1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xA54 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 ADD PUSH1 0x20 ADD JUMPDEST PUSH1 0x0 NOT ADD PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DIV SWAP5 POP DUP5 PUSH2 0xA5E JUMPI POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0xB86 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0xAD4 SWAP1 CALLER SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1063 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xB0F JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xB0C SWAP2 DUP2 ADD SWAP1 PUSH2 0x10A0 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xB6C JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0xB3D JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xB42 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0xB64 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A7 SWAP1 PUSH2 0x1011 JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ SWAP1 POP PUSH2 0x790 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 LT PUSH2 0xBD0 JUMPI PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 DIV SWAP3 POP PUSH1 0x40 ADD JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0xBFC JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DIV SWAP3 POP PUSH1 0x20 ADD JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0xC1A JUMPI PUSH7 0x2386F26FC10000 DUP4 DIV SWAP3 POP PUSH1 0x10 ADD JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0xC32 JUMPI PUSH4 0x5F5E100 DUP4 DIV SWAP3 POP PUSH1 0x8 ADD JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0xC46 JUMPI PUSH2 0x2710 DUP4 DIV SWAP3 POP PUSH1 0x4 ADD JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0xC58 JUMPI PUSH1 0x64 DUP4 DIV SWAP3 POP PUSH1 0x2 ADD JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x274 JUMPI PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x6A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC91 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x642 DUP2 PUSH2 0xC69 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xCB7 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xC9F JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0xCD8 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0xC9C JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x642 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xCC0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xD2F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD47 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD50 DUP4 PUSH2 0xD18 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xD73 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD7C DUP5 PUSH2 0xD18 JUMP JUMPDEST SWAP3 POP PUSH2 0xD8A PUSH1 0x20 DUP6 ADD PUSH2 0xD18 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDAC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x642 DUP3 PUSH2 0xD18 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xDC8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDD1 DUP4 PUSH2 0xD18 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xDE6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xE1D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE26 DUP6 PUSH2 0xD18 JUMP JUMPDEST SWAP4 POP PUSH2 0xE34 PUSH1 0x20 DUP7 ADD PUSH2 0xD18 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xE58 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xE6C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0xE7E JUMPI PUSH2 0xE7E PUSH2 0xDF1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0xEA6 JUMPI PUSH2 0xEA6 PUSH2 0xDF1 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP11 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0xEBF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xEF6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xEFF DUP4 PUSH2 0xD18 JUMP JUMPDEST SWAP2 POP PUSH2 0xF0D PUSH1 0x20 DUP5 ADD PUSH2 0xD18 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xF2A JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xF4A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2D SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65 PUSH1 0x40 DUP3 ADD MSTORE PUSH13 0x1C881BDC88185C1C1C9BDD9959 PUSH1 0x9A SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH2 0xFAF DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0xC9C JUMP JUMPDEST DUP4 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0xFC3 DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0xC9C JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x37BBB732B9 PUSH1 0xD9 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x32 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x40 DUP3 ADD MSTORE PUSH18 0x31B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x71 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x1096 SWAP1 DUP4 ADD DUP5 PUSH2 0xCC0 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x10B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x642 DUP2 PUSH2 0xC69 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xFB AND SUB 0xBF PUSH27 0x641BEEA1889A6CC323F5E7183609259EAA976465096A3A18454CEC PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "38975:16679:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;39917:300;;;;;;:::i;:::-;;:::i;:::-;;;565:14:1;;558:22;540:41;;528:2;513:18;39917:300:0;;;;;;;;40818:98;;;:::i;:::-;;;;;;;:::i;42282:167::-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;1697:32:1;;;1679:51;;1667:2;1652:18;42282:167:0;1533:203:1;41815:406:0;;;;;;:::i;:::-;;:::i;:::-;;42959:326;;;;;;:::i;:::-;;:::i;43351:179::-;;;;;;:::i;:::-;;:::i;40537:219::-;;;;;;:::i;:::-;;:::i;40276:204::-;;;;;;:::i;:::-;;:::i;:::-;;;2848:25:1;;;2836:2;2821:18;40276:204:0;2702:177:1;40980:102:0;;;:::i;42516:153::-;;;;;;:::i;:::-;;:::i;43596:314::-;;;;;;:::i;:::-;;:::i;41148:276::-;;;;;;:::i;:::-;;:::i;42735:162::-;;;;;;:::i;:::-;-1:-1:-1;;;;;42855:25:0;;;42832:4;42855:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;42735:162;39917:300;40019:4;-1:-1:-1;;;;;;40054:40:0;;-1:-1:-1;;;40054:40:0;;:104;;-1:-1:-1;;;;;;;40110:48:0;;-1:-1:-1;;;40110:48:0;40054:104;:156;;;-1:-1:-1;;;;;;;;;;31721:40:0;;;40174:36;40035:175;39917:300;-1:-1:-1;;39917:300:0:o;40818:98::-;40872:13;40904:5;40897:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;40818:98;:::o;42282:167::-;42358:7;42377:23;42392:7;42377:14;:23::i;:::-;-1:-1:-1;42418:24:0;;;;:15;:24;;;;;;-1:-1:-1;;;;;42418:24:0;;42282:167::o;41815:406::-;41895:13;41911:23;41926:7;41911:14;:23::i;:::-;41895:39;;41958:5;-1:-1:-1;;;;;41952:11:0;:2;-1:-1:-1;;;;;41952:11:0;;41944:57;;;;-1:-1:-1;;;41944:57:0;;5363:2:1;41944:57:0;;;5345:21:1;5402:2;5382:18;;;5375:30;5441:34;5421:18;;;5414:62;-1:-1:-1;;;5492:18:1;;;5485:31;5533:19;;41944:57:0;;;;;;;;;16939:10;-1:-1:-1;;;;;42033:21:0;;;;:62;;-1:-1:-1;42058:37:0;42075:5;16939:10;42735:162;:::i;42058:37::-;42012:170;;;;-1:-1:-1;;;42012:170:0;;5765:2:1;42012:170:0;;;5747:21:1;5804:2;5784:18;;;5777:30;5843:34;5823:18;;;5816:62;5914:31;5894:18;;;5887:59;5963:19;;42012:170:0;5563:425:1;42012:170:0;42193:21;42202:2;42206:7;42193:8;:21::i;:::-;41885:336;41815:406;;:::o;42959:326::-;43148:41;16939:10;43181:7;43148:18;:41::i;:::-;43140:99;;;;-1:-1:-1;;;43140:99:0;;;;;;;:::i;:::-;43250:28;43260:4;43266:2;43270:7;43250:9;:28::i;43351:179::-;43484:39;43501:4;43507:2;43511:7;43484:39;;;;;;;;;;;;:16;:39::i;40537:219::-;40609:7;45277:16;;;:7;:16;;;;;;-1:-1:-1;;;;;45277:16:0;;40671:56;;;;-1:-1:-1;;;40671:56:0;;6609:2:1;40671:56:0;;;6591:21:1;6648:2;6628:18;;;6621:30;-1:-1:-1;;;6667:18:1;;;6660:54;6731:18;;40671:56:0;6407:348:1;40276:204:0;40348:7;-1:-1:-1;;;;;40375:19:0;;40367:73;;;;-1:-1:-1;;;40367:73:0;;6962:2:1;40367:73:0;;;6944:21:1;7001:2;6981:18;;;6974:30;7040:34;7020:18;;;7013:62;-1:-1:-1;;;7091:18:1;;;7084:39;7140:19;;40367:73:0;6760:405:1;40367:73:0;-1:-1:-1;;;;;;40457:16:0;;;;;:9;:16;;;;;;;40276:204::o;40980:102::-;41036:13;41068:7;41061:14;;;;;:::i;42516:153::-;42610:52;16939:10;42643:8;42653;42610:18;:52::i;:::-;42516:153;;:::o;43596:314::-;43764:41;16939:10;43797:7;43764:18;:41::i;:::-;43756:99;;;;-1:-1:-1;;;43756:99:0;;;;;;;:::i;:::-;43865:38;43879:4;43885:2;43889:7;43898:4;43865:13;:38::i;:::-;43596:314;;;;:::o;41148:276::-;41221:13;41246:23;41261:7;41246:14;:23::i;:::-;41280:21;41304:10;41742:9;;;;;;;;;-1:-1:-1;41742:9:0;;;41666:92;41304:10;41280:34;;41355:1;41337:7;41331:21;:25;:86;;;;;;;;;;;;;;;;;41383:7;41392:18;:7;:16;:18::i;:::-;41366:45;;;;;;;;;:::i;:::-;;;;;;;;;;;;;41331:86;41324:93;41148:276;-1:-1:-1;;;41148:276:0:o;51813:133::-;45668:4;45277:16;;;:7;:16;;;;;;-1:-1:-1;;;;;45277:16:0;51886:53;;;;-1:-1:-1;;;51886:53:0;;6609:2:1;51886:53:0;;;6591:21:1;6648:2;6628:18;;;6621:30;-1:-1:-1;;;6667:18:1;;;6660:54;6731:18;;51886:53:0;6407:348:1;51886:53:0;51813:133;:::o;51115:171::-;51189:24;;;;:15;:24;;;;;:29;;-1:-1:-1;;;;;;51189:29:0;-1:-1:-1;;;;;51189:29:0;;;;;;;;:24;;51242:23;51189:24;51242:14;:23::i;:::-;-1:-1:-1;;;;;51233:46:0;;;;;;;;;;;51115:171;;:::o;45887:261::-;45980:4;45996:13;46012:23;46027:7;46012:14;:23::i;:::-;45996:39;;46064:5;-1:-1:-1;;;;;46053:16:0;:7;-1:-1:-1;;;;;46053:16:0;;:52;;;-1:-1:-1;;;;;;42855:25:0;;;42832:4;42855:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;46073:32;46053:87;;;;46133:7;-1:-1:-1;;;;;46109:31:0;:20;46121:7;46109:11;:20::i;:::-;-1:-1:-1;;;;;46109:31:0;;46053:87;46045:96;45887:261;-1:-1:-1;;;;45887:261:0:o;49770:1233::-;49924:4;-1:-1:-1;;;;;49897:31:0;:23;49912:7;49897:14;:23::i;:::-;-1:-1:-1;;;;;49897:31:0;;49889:81;;;;-1:-1:-1;;;49889:81:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;49988:16:0;;49980:65;;;;-1:-1:-1;;;49980:65:0;;8279:2:1;49980:65:0;;;8261:21:1;8318:2;8298:18;;;8291:30;8357:34;8337:18;;;8330:62;-1:-1:-1;;;8408:18:1;;;8401:34;8452:19;;49980:65:0;8077:400:1;49980:65:0;50225:4;-1:-1:-1;;;;;50198:31:0;:23;50213:7;50198:14;:23::i;:::-;-1:-1:-1;;;;;50198:31:0;;50190:81;;;;-1:-1:-1;;;50190:81:0;;;;;;;:::i;:::-;50340:24;;;;:15;:24;;;;;;;;50333:31;;-1:-1:-1;;;;;;50333:31:0;;;;;;-1:-1:-1;;;;;50808:15:0;;;;;;:9;:15;;;;;:20;;-1:-1:-1;;50808:20:0;;;50842:13;;;;;;;;;:18;;50333:31;50842:18;;;50880:16;;;:7;:16;;;;;;:21;;;;;;;;;;50917:27;;50356:7;;50917:27;;;41885:336;41815:406;;:::o;51422:307::-;51572:8;-1:-1:-1;;;;;51563:17:0;:5;-1:-1:-1;;;;;51563:17:0;;51555:55;;;;-1:-1:-1;;;51555:55:0;;8684:2:1;51555:55:0;;;8666:21:1;8723:2;8703:18;;;8696:30;8762:27;8742:18;;;8735:55;8807:18;;51555:55:0;8482:349:1;51555:55:0;-1:-1:-1;;;;;51620:25:0;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;:46;;-1:-1:-1;;51620:46:0;;;;;;;;;;51681:41;;540::1;;;51681::0;;513:18:1;51681:41:0;;;;;;;51422:307;;;:::o;44771:305::-;44921:28;44931:4;44937:2;44941:7;44921:9;:28::i;:::-;44967:47;44990:4;44996:2;45000:7;45009:4;44967:22;:47::i;:::-;44959:110;;;;-1:-1:-1;;;44959:110:0;;;;;;;:::i;14359:696::-;14415:13;14464:14;14481:17;14492:5;14481:10;:17::i;:::-;14501:1;14481:21;14464:38;;14516:20;14550:6;14539:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;14539:18:0;-1:-1:-1;14516:41:0;-1:-1:-1;14677:28:0;;;14693:2;14677:28;14732:280;-1:-1:-1;;14763:5:0;-1:-1:-1;;;14897:2:0;14886:14;;14881:30;14763:5;14868:44;14956:2;14947:11;;;-1:-1:-1;14976:21:0;14732:280;14976:21;-1:-1:-1;15032:6:0;14359:696;-1:-1:-1;;;14359:696:0:o;52498:831::-;52647:4;-1:-1:-1;;;;;52667:13:0;;21166:19;:23;52663:660;;52702:71;;-1:-1:-1;;;52702:71:0;;-1:-1:-1;;;;;52702:36:0;;;;;:71;;16939:10;;52753:4;;52759:7;;52768:4;;52702:71;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;52702:71:0;;;;;;;;-1:-1:-1;;52702:71:0;;;;;;;;;;;;:::i;:::-;;;52698:573;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;52940:6;:13;52957:1;52940:18;52936:321;;52982:60;;-1:-1:-1;;;52982:60:0;;;;;;;:::i;52936:321::-;53209:6;53203:13;53194:6;53190:2;53186:15;53179:38;52698:573;-1:-1:-1;;;;;;52823:51:0;-1:-1:-1;;;52823:51:0;;-1:-1:-1;52816:58:0;;52663:660;-1:-1:-1;53308:4:0;52498:831;;;;;;:::o;11332:890::-;11385:7;;-1:-1:-1;;;11460:15:0;;11456:99;;-1:-1:-1;;;11495:15:0;;;-1:-1:-1;11538:2:0;11528:12;11456:99;11581:6;11572:5;:15;11568:99;;11616:6;11607:15;;;-1:-1:-1;11650:2:0;11640:12;11568:99;11693:6;11684:5;:15;11680:99;;11728:6;11719:15;;;-1:-1:-1;11762:2:0;11752:12;11680:99;11805:5;11796;:14;11792:96;;11839:5;11830:14;;;-1:-1:-1;11872:1:0;11862:11;11792:96;11914:5;11905;:14;11901:96;;11948:5;11939:14;;;-1:-1:-1;11981:1:0;11971:11;11901:96;12023:5;12014;:14;12010:96;;12057:5;12048:14;;;-1:-1:-1;12090:1:0;12080:11;12010:96;12132:5;12123;:14;12119:64;;12167:1;12157:11;12209:6;11332:890;-1:-1:-1;;11332:890:0:o;14:131:1:-;-1:-1:-1;;;;;;88:32:1;;78:43;;68:71;;135:1;132;125:12;150:245;208:6;261:2;249:9;240:7;236:23;232:32;229:52;;;277:1;274;267:12;229:52;316:9;303:23;335:30;359:5;335:30;:::i;592:250::-;677:1;687:113;701:6;698:1;695:13;687:113;;;777:11;;;771:18;758:11;;;751:39;723:2;716:10;687:113;;;-1:-1:-1;;834:1:1;816:16;;809:27;592:250::o;847:271::-;889:3;927:5;921:12;954:6;949:3;942:19;970:76;1039:6;1032:4;1027:3;1023:14;1016:4;1009:5;1005:16;970:76;:::i;:::-;1100:2;1079:15;-1:-1:-1;;1075:29:1;1066:39;;;;1107:4;1062:50;;847:271;-1:-1:-1;;847:271:1:o;1123:220::-;1272:2;1261:9;1254:21;1235:4;1292:45;1333:2;1322:9;1318:18;1310:6;1292:45;:::i;1348:180::-;1407:6;1460:2;1448:9;1439:7;1435:23;1431:32;1428:52;;;1476:1;1473;1466:12;1428:52;-1:-1:-1;1499:23:1;;1348:180;-1:-1:-1;1348:180:1:o;1741:173::-;1809:20;;-1:-1:-1;;;;;1858:31:1;;1848:42;;1838:70;;1904:1;1901;1894:12;1838:70;1741:173;;;:::o;1919:254::-;1987:6;1995;2048:2;2036:9;2027:7;2023:23;2019:32;2016:52;;;2064:1;2061;2054:12;2016:52;2087:29;2106:9;2087:29;:::i;:::-;2077:39;2163:2;2148:18;;;;2135:32;;-1:-1:-1;;;1919:254:1:o;2178:328::-;2255:6;2263;2271;2324:2;2312:9;2303:7;2299:23;2295:32;2292:52;;;2340:1;2337;2330:12;2292:52;2363:29;2382:9;2363:29;:::i;:::-;2353:39;;2411:38;2445:2;2434:9;2430:18;2411:38;:::i;:::-;2401:48;;2496:2;2485:9;2481:18;2468:32;2458:42;;2178:328;;;;;:::o;2511:186::-;2570:6;2623:2;2611:9;2602:7;2598:23;2594:32;2591:52;;;2639:1;2636;2629:12;2591:52;2662:29;2681:9;2662:29;:::i;2884:347::-;2949:6;2957;3010:2;2998:9;2989:7;2985:23;2981:32;2978:52;;;3026:1;3023;3016:12;2978:52;3049:29;3068:9;3049:29;:::i;:::-;3039:39;;3128:2;3117:9;3113:18;3100:32;3175:5;3168:13;3161:21;3154:5;3151:32;3141:60;;3197:1;3194;3187:12;3141:60;3220:5;3210:15;;;2884:347;;;;;:::o;3236:127::-;3297:10;3292:3;3288:20;3285:1;3278:31;3328:4;3325:1;3318:15;3352:4;3349:1;3342:15;3368:1138;3463:6;3471;3479;3487;3540:3;3528:9;3519:7;3515:23;3511:33;3508:53;;;3557:1;3554;3547:12;3508:53;3580:29;3599:9;3580:29;:::i;:::-;3570:39;;3628:38;3662:2;3651:9;3647:18;3628:38;:::i;:::-;3618:48;;3713:2;3702:9;3698:18;3685:32;3675:42;;3768:2;3757:9;3753:18;3740:32;3791:18;3832:2;3824:6;3821:14;3818:34;;;3848:1;3845;3838:12;3818:34;3886:6;3875:9;3871:22;3861:32;;3931:7;3924:4;3920:2;3916:13;3912:27;3902:55;;3953:1;3950;3943:12;3902:55;3989:2;3976:16;4011:2;4007;4004:10;4001:36;;;4017:18;;:::i;:::-;4092:2;4086:9;4060:2;4146:13;;-1:-1:-1;;4142:22:1;;;4166:2;4138:31;4134:40;4122:53;;;4190:18;;;4210:22;;;4187:46;4184:72;;;4236:18;;:::i;:::-;4276:10;4272:2;4265:22;4311:2;4303:6;4296:18;4351:7;4346:2;4341;4337;4333:11;4329:20;4326:33;4323:53;;;4372:1;4369;4362:12;4323:53;4428:2;4423;4419;4415:11;4410:2;4402:6;4398:15;4385:46;4473:1;4468:2;4463;4455:6;4451:15;4447:24;4440:35;4494:6;4484:16;;;;;;;3368:1138;;;;;;;:::o;4511:260::-;4579:6;4587;4640:2;4628:9;4619:7;4615:23;4611:32;4608:52;;;4656:1;4653;4646:12;4608:52;4679:29;4698:9;4679:29;:::i;:::-;4669:39;;4727:38;4761:2;4750:9;4746:18;4727:38;:::i;:::-;4717:48;;4511:260;;;;;:::o;4776:380::-;4855:1;4851:12;;;;4898;;;4919:61;;4973:4;4965:6;4961:17;4951:27;;4919:61;5026:2;5018:6;5015:14;4995:18;4992:38;4989:161;;5072:10;5067:3;5063:20;5060:1;5053:31;5107:4;5104:1;5097:15;5135:4;5132:1;5125:15;4989:161;;4776:380;;;:::o;5993:409::-;6195:2;6177:21;;;6234:2;6214:18;;;6207:30;6273:34;6268:2;6253:18;;6246:62;-1:-1:-1;;;6339:2:1;6324:18;;6317:43;6392:3;6377:19;;5993:409::o;7170:496::-;7349:3;7387:6;7381:13;7403:66;7462:6;7457:3;7450:4;7442:6;7438:17;7403:66;:::i;:::-;7532:13;;7491:16;;;;7554:70;7532:13;7491:16;7601:4;7589:17;;7554:70;:::i;:::-;7640:20;;7170:496;-1:-1:-1;;;;7170:496:1:o;7671:401::-;7873:2;7855:21;;;7912:2;7892:18;;;7885:30;7951:34;7946:2;7931:18;;7924:62;-1:-1:-1;;;8017:2:1;8002:18;;7995:35;8062:3;8047:19;;7671:401::o;8836:414::-;9038:2;9020:21;;;9077:2;9057:18;;;9050:30;9116:34;9111:2;9096:18;;9089:62;-1:-1:-1;;;9182:2:1;9167:18;;9160:48;9240:3;9225:19;;8836:414::o;9387:489::-;-1:-1:-1;;;;;9656:15:1;;;9638:34;;9708:15;;9703:2;9688:18;;9681:43;9755:2;9740:18;;9733:34;;;9803:3;9798:2;9783:18;;9776:31;;;9581:4;;9824:46;;9850:19;;9842:6;9824:46;:::i;:::-;9816:54;9387:489;-1:-1:-1;;;;;;9387:489:1:o;9881:249::-;9950:6;10003:2;9991:9;9982:7;9978:23;9974:32;9971:52;;;10019:1;10016;10009:12;9971:52;10051:9;10045:16;10070:30;10094:5;10070:30;:::i"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "867800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2634",
								"getApproved(uint256)": "4769",
								"isApprovedForAll(address,address)": "infinite",
								"name()": "infinite",
								"ownerOf(uint256)": "2561",
								"safeTransferFrom(address,address,uint256)": "infinite",
								"safeTransferFrom(address,address,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "26705",
								"supportsInterface(bytes4)": "511",
								"symbol()": "infinite",
								"tokenURI(uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"__unsafe_increaseBalance(address,uint256)": "infinite",
								"_afterTokenTransfer(address,address,uint256,uint256)": "infinite",
								"_approve(address,uint256)": "infinite",
								"_baseURI()": "infinite",
								"_beforeTokenTransfer(address,address,uint256,uint256)": "infinite",
								"_burn(uint256)": "infinite",
								"_checkOnERC721Received(address,address,uint256,bytes memory)": "infinite",
								"_exists(uint256)": "infinite",
								"_isApprovedOrOwner(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_ownerOf(uint256)": "infinite",
								"_requireMinted(uint256)": "infinite",
								"_safeMint(address,uint256)": "infinite",
								"_safeMint(address,uint256,bytes memory)": "infinite",
								"_safeTransfer(address,address,uint256,bytes memory)": "infinite",
								"_setApprovalForAll(address,address,bool)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 38975,
									"end": 55654,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 38975,
									"end": 55654,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 38975,
									"end": 55654,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 39737,
									"end": 39850,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 39737,
									"end": 39850,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 39737,
									"end": 39850,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 39737,
									"end": 39850,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 39737,
									"end": 39850,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 39737,
									"end": 39850,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 39737,
									"end": 39850,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 39737,
									"end": 39850,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 39737,
									"end": 39850,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 39737,
									"end": 39850,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 39737,
									"end": 39850,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 39737,
									"end": 39850,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 39737,
									"end": 39850,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 39737,
									"end": 39850,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 39737,
									"end": 39850,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 39737,
									"end": 39850,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 39737,
									"end": 39850,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 39737,
									"end": 39850,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 39737,
									"end": 39850,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 39737,
									"end": 39850,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 39737,
									"end": 39850,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 39737,
									"end": 39850,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 39737,
									"end": 39850,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 39737,
									"end": 39850,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 39737,
									"end": 39850,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 39737,
									"end": 39850,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 39737,
									"end": 39850,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 39737,
									"end": 39850,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 39737,
									"end": 39850,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 39737,
									"end": 39850,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 39737,
									"end": 39850,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 39737,
									"end": 39850,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 39803,
									"end": 39808,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 39803,
									"end": 39816,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 39811,
									"end": 39816,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 39803,
									"end": 39808,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 39803,
									"end": 39816,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 39803,
									"end": 39816,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 39803,
									"end": 39816,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 39803,
									"end": 39816,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 39826,
									"end": 39833,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 39826,
									"end": 39843,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 39836,
									"end": 39843,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 39826,
									"end": 39833,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 39826,
									"end": 39843,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 39826,
									"end": 39843,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 39826,
									"end": 39843,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 39826,
									"end": 39843,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 39826,
									"end": 39843,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 39737,
									"end": 39850,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 39737,
									"end": 39850,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 38975,
									"end": 55654,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 38975,
									"end": 55654,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 141,
									"name": "tag",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 14,
									"end": 141,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 75,
									"end": 85,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B71"
								},
								{
									"begin": 70,
									"end": 73,
									"name": "PUSH",
									"source": 1,
									"value": "E0"
								},
								{
									"begin": 66,
									"end": 86,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 63,
									"end": 64,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 87,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 106,
									"end": 110,
									"name": "PUSH",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 103,
									"end": 104,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 96,
									"end": 111,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 130,
									"end": 134,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 127,
									"end": 128,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 135,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 146,
									"end": 986,
									"name": "tag",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 146,
									"end": 986,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 200,
									"end": 205,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 253,
									"end": 256,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 246,
									"end": 250,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 238,
									"end": 244,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 234,
									"end": 251,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 230,
									"end": 257,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 220,
									"end": 275,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 220,
									"end": 275,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 271,
									"end": 272,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 268,
									"end": 269,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 261,
									"end": 273,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 220,
									"end": 275,
									"name": "tag",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 220,
									"end": 275,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 294,
									"end": 307,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 294,
									"end": 307,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 356,
									"end": 366,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 356,
									"end": 366,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 356,
									"end": 366,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 353,
									"end": 389,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 353,
									"end": 389,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 353,
									"end": 389,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 369,
									"end": 387,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 369,
									"end": 387,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 369,
									"end": 387,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 369,
									"end": 387,
									"name": "tag",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 369,
									"end": 387,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 444,
									"end": 446,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 438,
									"end": 447,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 412,
									"end": 414,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 498,
									"end": 511,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 498,
									"end": 511,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 494,
									"end": 516,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 494,
									"end": 516,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 494,
									"end": 516,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 518,
									"end": 520,
									"name": "PUSH",
									"source": 1,
									"value": "3F"
								},
								{
									"begin": 490,
									"end": 521,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 486,
									"end": 526,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 474,
									"end": 527,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 474,
									"end": 527,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 474,
									"end": 527,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 542,
									"end": 560,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 542,
									"end": 560,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 542,
									"end": 560,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 562,
									"end": 584,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 562,
									"end": 584,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 562,
									"end": 584,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 539,
									"end": 585,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 536,
									"end": 608,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 536,
									"end": 608,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 536,
									"end": 608,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 588,
									"end": 606,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 588,
									"end": 606,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 588,
									"end": 606,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 588,
									"end": 606,
									"name": "tag",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 588,
									"end": 606,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 628,
									"end": 638,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 624,
									"end": 626,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 617,
									"end": 639,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 663,
									"end": 665,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 655,
									"end": 661,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 648,
									"end": 666,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 685,
									"end": 689,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 675,
									"end": 689,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 675,
									"end": 689,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 730,
									"end": 733,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 725,
									"end": 727,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 720,
									"end": 722,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 712,
									"end": 718,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 708,
									"end": 723,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 704,
									"end": 728,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 701,
									"end": 734,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 698,
									"end": 751,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 698,
									"end": 751,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 698,
									"end": 751,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 747,
									"end": 748,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 744,
									"end": 745,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 737,
									"end": 749,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 698,
									"end": 751,
									"name": "tag",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 698,
									"end": 751,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 769,
									"end": 770,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 760,
									"end": 770,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 760,
									"end": 770,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 779,
									"end": 912,
									"name": "tag",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 793,
									"end": 795,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 790,
									"end": 791,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 787,
									"end": 796,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 779,
									"end": 912,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 779,
									"end": 912,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 881,
									"end": 895,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 881,
									"end": 895,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 881,
									"end": 895,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 877,
									"end": 900,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 877,
									"end": 900,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 871,
									"end": 901,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 850,
									"end": 864,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 850,
									"end": 864,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 850,
									"end": 864,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 846,
									"end": 869,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 846,
									"end": 869,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 839,
									"end": 902,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 804,
									"end": 814,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 804,
									"end": 814,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 804,
									"end": 814,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 804,
									"end": 814,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 779,
									"end": 912,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 779,
									"end": 912,
									"name": "tag",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 954,
									"end": 955,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 932,
									"end": 947,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 932,
									"end": 947,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 932,
									"end": 947,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 928,
									"end": 952,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 928,
									"end": 952,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 928,
									"end": 952,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 921,
									"end": 956,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 921,
									"end": 956,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 921,
									"end": 956,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 921,
									"end": 956,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 936,
									"end": 942,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 146,
									"end": 986,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 146,
									"end": 986,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 991,
									"end": 1553,
									"name": "tag",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 991,
									"end": 1553,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1090,
									"end": 1096,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1098,
									"end": 1104,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1151,
									"end": 1153,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1139,
									"end": 1148,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1130,
									"end": 1137,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1126,
									"end": 1149,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1122,
									"end": 1154,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 1119,
									"end": 1171,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1119,
									"end": 1171,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 1119,
									"end": 1171,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1167,
									"end": 1168,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1164,
									"end": 1165,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1157,
									"end": 1169,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1119,
									"end": 1171,
									"name": "tag",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 1119,
									"end": 1171,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1194,
									"end": 1210,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1194,
									"end": 1210,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1259,
									"end": 1273,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1259,
									"end": 1273,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1259,
									"end": 1273,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1256,
									"end": 1290,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1256,
									"end": 1290,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 1256,
									"end": 1290,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1286,
									"end": 1287,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1283,
									"end": 1284,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1276,
									"end": 1288,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1256,
									"end": 1290,
									"name": "tag",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 1256,
									"end": 1290,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1309,
									"end": 1370,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 1362,
									"end": 1369,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 1353,
									"end": 1359,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1342,
									"end": 1351,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 1338,
									"end": 1360,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1309,
									"end": 1370,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 1309,
									"end": 1370,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1309,
									"end": 1370,
									"name": "tag",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 1309,
									"end": 1370,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1299,
									"end": 1370,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 1299,
									"end": 1370,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1416,
									"end": 1418,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1405,
									"end": 1414,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1401,
									"end": 1419,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1395,
									"end": 1420,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1379,
									"end": 1420,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1379,
									"end": 1420,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1445,
									"end": 1447,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1435,
									"end": 1443,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1432,
									"end": 1448,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1429,
									"end": 1465,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1429,
									"end": 1465,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "32"
								},
								{
									"begin": 1429,
									"end": 1465,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1461,
									"end": 1462,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1458,
									"end": 1459,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1451,
									"end": 1463,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1429,
									"end": 1465,
									"name": "tag",
									"source": 1,
									"value": "32"
								},
								{
									"begin": 1429,
									"end": 1465,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1429,
									"end": 1465,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1484,
									"end": 1547,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "33"
								},
								{
									"begin": 1539,
									"end": 1546,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1528,
									"end": 1536,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1517,
									"end": 1526,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 1513,
									"end": 1537,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1484,
									"end": 1547,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 1484,
									"end": 1547,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1484,
									"end": 1547,
									"name": "tag",
									"source": 1,
									"value": "33"
								},
								{
									"begin": 1484,
									"end": 1547,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1474,
									"end": 1547,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1474,
									"end": 1547,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1474,
									"end": 1547,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 991,
									"end": 1553,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 991,
									"end": 1553,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 991,
									"end": 1553,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 991,
									"end": 1553,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 991,
									"end": 1553,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 991,
									"end": 1553,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1558,
									"end": 1938,
									"name": "tag",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 1558,
									"end": 1938,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1637,
									"end": 1638,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1633,
									"end": 1645,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1633,
									"end": 1645,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1633,
									"end": 1645,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 1633,
									"end": 1645,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1680,
									"end": 1692,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1680,
									"end": 1692,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1680,
									"end": 1692,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1701,
									"end": 1762,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "35"
								},
								{
									"begin": 1701,
									"end": 1762,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1755,
									"end": 1759,
									"name": "PUSH",
									"source": 1,
									"value": "7F"
								},
								{
									"begin": 1747,
									"end": 1753,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1743,
									"end": 1760,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1733,
									"end": 1760,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1733,
									"end": 1760,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1701,
									"end": 1762,
									"name": "tag",
									"source": 1,
									"value": "35"
								},
								{
									"begin": 1701,
									"end": 1762,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1808,
									"end": 1810,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1800,
									"end": 1806,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1797,
									"end": 1811,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 1777,
									"end": 1795,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1774,
									"end": 1812,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1771,
									"end": 1932,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "36"
								},
								{
									"begin": 1771,
									"end": 1932,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1854,
									"end": 1864,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B71"
								},
								{
									"begin": 1849,
									"end": 1852,
									"name": "PUSH",
									"source": 1,
									"value": "E0"
								},
								{
									"begin": 1845,
									"end": 1865,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 1842,
									"end": 1843,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1835,
									"end": 1866,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1889,
									"end": 1893,
									"name": "PUSH",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 1886,
									"end": 1887,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1879,
									"end": 1894,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1917,
									"end": 1921,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 1914,
									"end": 1915,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1907,
									"end": 1922,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1771,
									"end": 1932,
									"name": "tag",
									"source": 1,
									"value": "36"
								},
								{
									"begin": 1771,
									"end": 1932,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1771,
									"end": 1932,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1558,
									"end": 1938,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1558,
									"end": 1938,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1558,
									"end": 1938,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1558,
									"end": 1938,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2069,
									"end": 2614,
									"name": "tag",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 2069,
									"end": 2614,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2171,
									"end": 2173,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 2166,
									"end": 2169,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2163,
									"end": 2174,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 2160,
									"end": 2608,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2160,
									"end": 2608,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "39"
								},
								{
									"begin": 2160,
									"end": 2608,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2207,
									"end": 2208,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2232,
									"end": 2237,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2228,
									"end": 2230,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2221,
									"end": 2238,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2277,
									"end": 2281,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2273,
									"end": 2275,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2263,
									"end": 2282,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 2347,
									"end": 2349,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 2335,
									"end": 2345,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 2331,
									"end": 2350,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2328,
									"end": 2329,
									"name": "PUSH",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 2324,
									"end": 2351,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 2318,
									"end": 2322,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2314,
									"end": 2352,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2383,
									"end": 2387,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2371,
									"end": 2381,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 2368,
									"end": 2388,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 2365,
									"end": 2412,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2365,
									"end": 2412,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 2365,
									"end": 2412,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2406,
									"end": 2410,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2365,
									"end": 2412,
									"name": "tag",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 2365,
									"end": 2412,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2461,
									"end": 2463,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 2456,
									"end": 2459,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 2452,
									"end": 2464,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2449,
									"end": 2450,
									"name": "PUSH",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 2445,
									"end": 2465,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 2439,
									"end": 2443,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2435,
									"end": 2466,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2425,
									"end": 2466,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2425,
									"end": 2466,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "tag",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2534,
									"end": 2536,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2527,
									"end": 2532,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2524,
									"end": 2537,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "43"
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2579,
									"end": 2596,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2579,
									"end": 2596,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2579,
									"end": 2596,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 2560,
									"end": 2561,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 2549,
									"end": 2562,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "tag",
									"source": 1,
									"value": "43"
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2520,
									"end": 2523,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2520,
									"end": 2523,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2520,
									"end": 2523,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2160,
									"end": 2608,
									"name": "tag",
									"source": 1,
									"value": "39"
								},
								{
									"begin": 2160,
									"end": 2608,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2069,
									"end": 2614,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2069,
									"end": 2614,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2069,
									"end": 2614,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2069,
									"end": 2614,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2790,
									"end": 4142,
									"name": "tag",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 2790,
									"end": 4142,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2910,
									"end": 2920,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2910,
									"end": 2920,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2932,
									"end": 2962,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2932,
									"end": 2962,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 2929,
									"end": 2985,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2929,
									"end": 2985,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "47"
								},
								{
									"begin": 2929,
									"end": 2985,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2965,
									"end": 2983,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "47"
								},
								{
									"begin": 2965,
									"end": 2983,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 2965,
									"end": 2983,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2965,
									"end": 2983,
									"name": "tag",
									"source": 1,
									"value": "47"
								},
								{
									"begin": 2965,
									"end": 2983,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2994,
									"end": 3091,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "48"
								},
								{
									"begin": 3084,
									"end": 3090,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3044,
									"end": 3082,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "49"
								},
								{
									"begin": 3076,
									"end": 3080,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 3070,
									"end": 3081,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 3044,
									"end": 3082,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 3044,
									"end": 3082,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3044,
									"end": 3082,
									"name": "tag",
									"source": 1,
									"value": "49"
								},
								{
									"begin": 3044,
									"end": 3082,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3038,
									"end": 3042,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2994,
									"end": 3091,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 2994,
									"end": 3091,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2994,
									"end": 3091,
									"name": "tag",
									"source": 1,
									"value": "48"
								},
								{
									"begin": 2994,
									"end": 3091,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3146,
									"end": 3150,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 3146,
									"end": 3150,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 3210,
									"end": 3212,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 3199,
									"end": 3213,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 3199,
									"end": 3213,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 3227,
									"end": 3228,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 3222,
									"end": 3885,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3222,
									"end": 3885,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 3222,
									"end": 3885,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "51"
								},
								{
									"begin": 3222,
									"end": 3885,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 3929,
									"end": 3930,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3946,
									"end": 3952,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 3943,
									"end": 4032,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 3943,
									"end": 4032,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "52"
								},
								{
									"begin": 3943,
									"end": 4032,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3998,
									"end": 4017,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 3998,
									"end": 4017,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 3998,
									"end": 4017,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3992,
									"end": 4018,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 3943,
									"end": 4032,
									"name": "tag",
									"source": 1,
									"value": "52"
								},
								{
									"begin": 3943,
									"end": 4032,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2747,
									"end": 2748,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 2743,
									"end": 2754,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 2743,
									"end": 2754,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2743,
									"end": 2754,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 2739,
									"end": 2763,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 2735,
									"end": 2764,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 2725,
									"end": 2765,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2771,
									"end": 2772,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 2767,
									"end": 2778,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 2767,
									"end": 2778,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2767,
									"end": 2778,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 2722,
									"end": 2779,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 4045,
									"end": 4126,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 4045,
									"end": 4126,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 3192,
									"end": 4136,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "43"
								},
								{
									"begin": 3192,
									"end": 4136,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3222,
									"end": 3885,
									"name": "tag",
									"source": 1,
									"value": "51"
								},
								{
									"begin": 3222,
									"end": 3885,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2016,
									"end": 2017,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2009,
									"end": 2023,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 2009,
									"end": 2023,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2009,
									"end": 2023,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2053,
									"end": 2057,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2040,
									"end": 2058,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2040,
									"end": 2058,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3258,
									"end": 3278,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 3258,
									"end": 3278,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3258,
									"end": 3278,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "tag",
									"source": 1,
									"value": "55"
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3390,
									"end": 3397,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3387,
									"end": 3388,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3384,
									"end": 3398,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "57"
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 3479,
									"end": 3498,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 3479,
									"end": 3498,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 3479,
									"end": 3498,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3473,
									"end": 3499,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 3458,
									"end": 3500,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3458,
									"end": 3500,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 3571,
									"end": 3598,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 3571,
									"end": 3598,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 3571,
									"end": 3598,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3571,
									"end": 3598,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 3539,
									"end": 3540,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 3527,
									"end": 3541,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3527,
									"end": 3541,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3527,
									"end": 3541,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3527,
									"end": 3541,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3406,
									"end": 3425,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 3406,
									"end": 3425,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "55"
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "tag",
									"source": 1,
									"value": "57"
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3380,
									"end": 3383,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3640,
									"end": 3646,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 3631,
									"end": 3638,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3628,
									"end": 3647,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 3625,
									"end": 3826,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 3625,
									"end": 3826,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "58"
								},
								{
									"begin": 3625,
									"end": 3826,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 3701,
									"end": 3720,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 3701,
									"end": 3720,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 3701,
									"end": 3720,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3695,
									"end": 3721,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3784,
									"end": 3785,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 3780,
									"end": 3794,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 3780,
									"end": 3794,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3780,
									"end": 3794,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 3796,
									"end": 3799,
									"name": "PUSH",
									"source": 1,
									"value": "F8"
								},
								{
									"begin": 3776,
									"end": 3800,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3772,
									"end": 3809,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 3768,
									"end": 3810,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 3753,
									"end": 3811,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3738,
									"end": 3812,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3738,
									"end": 3812,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 3625,
									"end": 3826,
									"name": "tag",
									"source": 1,
									"value": "58"
								},
								{
									"begin": 3625,
									"end": 3826,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3872,
									"end": 3873,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 3856,
									"end": 3870,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3856,
									"end": 3870,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3856,
									"end": 3870,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 3852,
									"end": 3874,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3839,
									"end": 3875,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3839,
									"end": 3875,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2790,
									"end": 4142,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2790,
									"end": 4142,
									"name": "tag",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 2790,
									"end": 4142,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 38975,
									"end": 55654,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 38975,
									"end": 55654,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 38975,
									"end": 55654,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 38975,
									"end": 55654,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 38975,
									"end": 55654,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 38975,
									"end": 55654,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 38975,
									"end": 55654,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220fb1603bf7a641beea1889a6cc323f5e7183609259eaa976465096a3a18454cec64736f6c63430008120033",
									".code": [
										{
											"begin": 38975,
											"end": 55654,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 38975,
											"end": 55654,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38975,
											"end": 55654,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38975,
											"end": 55654,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 38975,
											"end": 55654,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38975,
											"end": 55654,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 38975,
											"end": 55654,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 38975,
											"end": 55654,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 38975,
											"end": 55654,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38975,
											"end": 55654,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38975,
											"end": 55654,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 38975,
											"end": 55654,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 38975,
											"end": 55654,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38975,
											"end": 55654,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38975,
											"end": 55654,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 38975,
											"end": 55654,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 38975,
											"end": 55654,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 38975,
											"end": 55654,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 38975,
											"end": 55654,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 38975,
											"end": 55654,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38975,
											"end": 55654,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 38975,
											"end": 55654,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 38975,
											"end": 55654,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 38975,
											"end": 55654,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38975,
											"end": 55654,
											"name": "PUSH",
											"source": 0,
											"value": "6352211E"
										},
										{
											"begin": 38975,
											"end": 55654,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 38975,
											"end": 55654,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 38975,
											"end": 55654,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 38975,
											"end": 55654,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38975,
											"end": 55654,
											"name": "PUSH",
											"source": 0,
											"value": "A22CB465"
										},
										{
											"begin": 38975,
											"end": 55654,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 38975,
											"end": 55654,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 38975,
											"end": 55654,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 38975,
											"end": 55654,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38975,
											"end": 55654,
											"name": "PUSH",
											"source": 0,
											"value": "A22CB465"
										},
										{
											"begin": 38975,
											"end": 55654,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 38975,
											"end": 55654,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 38975,
											"end": 55654,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 38975,
											"end": 55654,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38975,
											"end": 55654,
											"name": "PUSH",
											"source": 0,
											"value": "B88D4FDE"
										},
										{
											"begin": 38975,
											"end": 55654,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 38975,
											"end": 55654,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 38975,
											"end": 55654,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 38975,
											"end": 55654,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38975,
											"end": 55654,
											"name": "PUSH",
											"source": 0,
											"value": "C87B56DD"
										},
										{
											"begin": 38975,
											"end": 55654,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 38975,
											"end": 55654,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 38975,
											"end": 55654,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 38975,
											"end": 55654,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38975,
											"end": 55654,
											"name": "PUSH",
											"source": 0,
											"value": "E985E9C5"
										},
										{
											"begin": 38975,
											"end": 55654,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 38975,
											"end": 55654,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 38975,
											"end": 55654,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 38975,
											"end": 55654,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38975,
											"end": 55654,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38975,
											"end": 55654,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 38975,
											"end": 55654,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 38975,
											"end": 55654,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38975,
											"end": 55654,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38975,
											"end": 55654,
											"name": "PUSH",
											"source": 0,
											"value": "6352211E"
										},
										{
											"begin": 38975,
											"end": 55654,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 38975,
											"end": 55654,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 38975,
											"end": 55654,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 38975,
											"end": 55654,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38975,
											"end": 55654,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 38975,
											"end": 55654,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 38975,
											"end": 55654,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 38975,
											"end": 55654,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 38975,
											"end": 55654,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38975,
											"end": 55654,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 38975,
											"end": 55654,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 38975,
											"end": 55654,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 38975,
											"end": 55654,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 38975,
											"end": 55654,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38975,
											"end": 55654,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38975,
											"end": 55654,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 38975,
											"end": 55654,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 38975,
											"end": 55654,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38975,
											"end": 55654,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38975,
											"end": 55654,
											"name": "PUSH",
											"source": 0,
											"value": "1FFC9A7"
										},
										{
											"begin": 38975,
											"end": 55654,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 38975,
											"end": 55654,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 38975,
											"end": 55654,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 38975,
											"end": 55654,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38975,
											"end": 55654,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 38975,
											"end": 55654,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 38975,
											"end": 55654,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 38975,
											"end": 55654,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 38975,
											"end": 55654,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38975,
											"end": 55654,
											"name": "PUSH",
											"source": 0,
											"value": "81812FC"
										},
										{
											"begin": 38975,
											"end": 55654,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 38975,
											"end": 55654,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 38975,
											"end": 55654,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 38975,
											"end": 55654,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38975,
											"end": 55654,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 38975,
											"end": 55654,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 38975,
											"end": 55654,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 38975,
											"end": 55654,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 38975,
											"end": 55654,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38975,
											"end": 55654,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 38975,
											"end": 55654,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 38975,
											"end": 55654,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 38975,
											"end": 55654,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 38975,
											"end": 55654,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38975,
											"end": 55654,
											"name": "PUSH",
											"source": 0,
											"value": "42842E0E"
										},
										{
											"begin": 38975,
											"end": 55654,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 38975,
											"end": 55654,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 38975,
											"end": 55654,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 38975,
											"end": 55654,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 38975,
											"end": 55654,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38975,
											"end": 55654,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38975,
											"end": 55654,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38975,
											"end": 55654,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 39917,
											"end": 40217,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 39917,
											"end": 40217,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39917,
											"end": 40217,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 39917,
											"end": 40217,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 39917,
											"end": 40217,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 39917,
											"end": 40217,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 39917,
											"end": 40217,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 39917,
											"end": 40217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 39917,
											"end": 40217,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 39917,
											"end": 40217,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39917,
											"end": 40217,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 39917,
											"end": 40217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 39917,
											"end": 40217,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 39917,
											"end": 40217,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39917,
											"end": 40217,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 39917,
											"end": 40217,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 565,
											"end": 579,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 565,
											"end": 579,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 558,
											"end": 580,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 540,
											"end": 581,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 540,
											"end": 581,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 528,
											"end": 530,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 513,
											"end": 531,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 39917,
											"end": 40217,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 39917,
											"end": 40217,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39917,
											"end": 40217,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 39917,
											"end": 40217,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 39917,
											"end": 40217,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39917,
											"end": 40217,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 39917,
											"end": 40217,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 39917,
											"end": 40217,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39917,
											"end": 40217,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 40818,
											"end": 40916,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 40818,
											"end": 40916,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40818,
											"end": 40916,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 40818,
											"end": 40916,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 40818,
											"end": 40916,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40818,
											"end": 40916,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 40818,
											"end": 40916,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40818,
											"end": 40916,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 40818,
											"end": 40916,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 40818,
											"end": 40916,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 40818,
											"end": 40916,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40818,
											"end": 40916,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40818,
											"end": 40916,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 40818,
											"end": 40916,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42282,
											"end": 42449,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 42282,
											"end": 42449,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42282,
											"end": 42449,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 42282,
											"end": 42449,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 42282,
											"end": 42449,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 42282,
											"end": 42449,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 42282,
											"end": 42449,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 42282,
											"end": 42449,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42282,
											"end": 42449,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 42282,
											"end": 42449,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42282,
											"end": 42449,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 42282,
											"end": 42449,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42282,
											"end": 42449,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 42282,
											"end": 42449,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42282,
											"end": 42449,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 42282,
											"end": 42449,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1697,
											"end": 1729,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1697,
											"end": 1729,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1697,
											"end": 1729,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1679,
											"end": 1730,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1679,
											"end": 1730,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1667,
											"end": 1669,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1652,
											"end": 1670,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 42282,
											"end": 42449,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1533,
											"end": 1736,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 41815,
											"end": 42221,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 41815,
											"end": 42221,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41815,
											"end": 42221,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 41815,
											"end": 42221,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 41815,
											"end": 42221,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 41815,
											"end": 42221,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 41815,
											"end": 42221,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 41815,
											"end": 42221,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41815,
											"end": 42221,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 41815,
											"end": 42221,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41815,
											"end": 42221,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 41815,
											"end": 42221,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41815,
											"end": 42221,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 41815,
											"end": 42221,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41815,
											"end": 42221,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 42959,
											"end": 43285,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 42959,
											"end": 43285,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42959,
											"end": 43285,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 42959,
											"end": 43285,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 42959,
											"end": 43285,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 42959,
											"end": 43285,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 42959,
											"end": 43285,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 42959,
											"end": 43285,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42959,
											"end": 43285,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 42959,
											"end": 43285,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42959,
											"end": 43285,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 42959,
											"end": 43285,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43351,
											"end": 43530,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 43351,
											"end": 43530,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43351,
											"end": 43530,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 43351,
											"end": 43530,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 43351,
											"end": 43530,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 43351,
											"end": 43530,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 43351,
											"end": 43530,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 43351,
											"end": 43530,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43351,
											"end": 43530,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 43351,
											"end": 43530,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43351,
											"end": 43530,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 43351,
											"end": 43530,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40537,
											"end": 40756,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 40537,
											"end": 40756,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40537,
											"end": 40756,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 40537,
											"end": 40756,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 40537,
											"end": 40756,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 40537,
											"end": 40756,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 40537,
											"end": 40756,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 40537,
											"end": 40756,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40537,
											"end": 40756,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 40537,
											"end": 40756,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40537,
											"end": 40756,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 40537,
											"end": 40756,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40276,
											"end": 40480,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 40276,
											"end": 40480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40276,
											"end": 40480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 40276,
											"end": 40480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 40276,
											"end": 40480,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 40276,
											"end": 40480,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 40276,
											"end": 40480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 40276,
											"end": 40480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40276,
											"end": 40480,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 40276,
											"end": 40480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40276,
											"end": 40480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 40276,
											"end": 40480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40276,
											"end": 40480,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 40276,
											"end": 40480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40276,
											"end": 40480,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 40276,
											"end": 40480,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2848,
											"end": 2873,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2848,
											"end": 2873,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2848,
											"end": 2873,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2836,
											"end": 2838,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2821,
											"end": 2839,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 40276,
											"end": 40480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 2702,
											"end": 2879,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 40980,
											"end": 41082,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 40980,
											"end": 41082,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40980,
											"end": 41082,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 40980,
											"end": 41082,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 40980,
											"end": 41082,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42516,
											"end": 42669,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 42516,
											"end": 42669,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42516,
											"end": 42669,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 42516,
											"end": 42669,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 42516,
											"end": 42669,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 42516,
											"end": 42669,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 42516,
											"end": 42669,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 42516,
											"end": 42669,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42516,
											"end": 42669,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 42516,
											"end": 42669,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42516,
											"end": 42669,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 42516,
											"end": 42669,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43596,
											"end": 43910,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 43596,
											"end": 43910,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43596,
											"end": 43910,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 43596,
											"end": 43910,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 43596,
											"end": 43910,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 43596,
											"end": 43910,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 43596,
											"end": 43910,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 43596,
											"end": 43910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43596,
											"end": 43910,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 43596,
											"end": 43910,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43596,
											"end": 43910,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 43596,
											"end": 43910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41148,
											"end": 41424,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 41148,
											"end": 41424,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41148,
											"end": 41424,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 41148,
											"end": 41424,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 41148,
											"end": 41424,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 41148,
											"end": 41424,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 41148,
											"end": 41424,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 41148,
											"end": 41424,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41148,
											"end": 41424,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 41148,
											"end": 41424,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41148,
											"end": 41424,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 41148,
											"end": 41424,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42735,
											"end": 42897,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 42735,
											"end": 42897,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42735,
											"end": 42897,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 42735,
											"end": 42897,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 42735,
											"end": 42897,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 42735,
											"end": 42897,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 42735,
											"end": 42897,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 42735,
											"end": 42897,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42735,
											"end": 42897,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 42735,
											"end": 42897,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 42855,
											"end": 42880,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 42855,
											"end": 42880,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 42855,
											"end": 42880,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 42832,
											"end": 42836,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 42855,
											"end": 42880,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42855,
											"end": 42880,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42855,
											"end": 42880,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 42855,
											"end": 42873,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 42855,
											"end": 42880,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 42855,
											"end": 42880,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42855,
											"end": 42880,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42855,
											"end": 42880,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 42855,
											"end": 42880,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 42855,
											"end": 42880,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42855,
											"end": 42880,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 42855,
											"end": 42880,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 42855,
											"end": 42890,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 42855,
											"end": 42890,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42855,
											"end": 42890,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 42855,
											"end": 42890,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 42855,
											"end": 42890,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 42855,
											"end": 42890,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 42855,
											"end": 42890,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 42855,
											"end": 42890,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42855,
											"end": 42890,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 42855,
											"end": 42890,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 42855,
											"end": 42890,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 42855,
											"end": 42890,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 42855,
											"end": 42890,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 42855,
											"end": 42890,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 42855,
											"end": 42890,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42735,
											"end": 42897,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 39917,
											"end": 40217,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 39917,
											"end": 40217,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40019,
											"end": 40023,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 40054,
											"end": 40094,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 40054,
											"end": 40094,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80AC58CD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 40054,
											"end": 40094,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 40054,
											"end": 40094,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40054,
											"end": 40158,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 40054,
											"end": 40158,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 40110,
											"end": 40158,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 40110,
											"end": 40158,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5B5E139F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 40110,
											"end": 40158,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 40054,
											"end": 40158,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 40054,
											"end": 40158,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40054,
											"end": 40210,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40054,
											"end": 40210,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 40054,
											"end": 40210,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1FFC9A7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 31721,
											"end": 31761,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 31721,
											"end": 31761,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31721,
											"end": 31761,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 40174,
											"end": 40210,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 40174,
											"end": 40210,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40035,
											"end": 40210,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 39917,
											"end": 40217,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 39917,
											"end": 40217,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40818,
											"end": 40916,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 40818,
											"end": 40916,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40872,
											"end": 40885,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 40904,
											"end": 40909,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40897,
											"end": 40909,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40897,
											"end": 40909,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 40897,
											"end": 40909,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 40897,
											"end": 40909,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40897,
											"end": 40909,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 40897,
											"end": 40909,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40897,
											"end": 40909,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 40897,
											"end": 40909,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40897,
											"end": 40909,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40897,
											"end": 40909,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 40897,
											"end": 40909,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40897,
											"end": 40909,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 40897,
											"end": 40909,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40897,
											"end": 40909,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40897,
											"end": 40909,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 40897,
											"end": 40909,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 40897,
											"end": 40909,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 40897,
											"end": 40909,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40897,
											"end": 40909,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 40897,
											"end": 40909,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 40897,
											"end": 40909,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40897,
											"end": 40909,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40897,
											"end": 40909,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40897,
											"end": 40909,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 40897,
											"end": 40909,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 40897,
											"end": 40909,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40897,
											"end": 40909,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 40897,
											"end": 40909,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40897,
											"end": 40909,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40897,
											"end": 40909,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40897,
											"end": 40909,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40897,
											"end": 40909,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 40897,
											"end": 40909,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 40897,
											"end": 40909,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40897,
											"end": 40909,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 40897,
											"end": 40909,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40897,
											"end": 40909,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 40897,
											"end": 40909,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 40897,
											"end": 40909,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40897,
											"end": 40909,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 40897,
											"end": 40909,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40897,
											"end": 40909,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 40897,
											"end": 40909,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40897,
											"end": 40909,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40897,
											"end": 40909,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 40897,
											"end": 40909,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 40897,
											"end": 40909,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 40897,
											"end": 40909,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40897,
											"end": 40909,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 40897,
											"end": 40909,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 40897,
											"end": 40909,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 40897,
											"end": 40909,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 40897,
											"end": 40909,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 40897,
											"end": 40909,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40897,
											"end": 40909,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 40897,
											"end": 40909,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 40897,
											"end": 40909,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 40897,
											"end": 40909,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 40897,
											"end": 40909,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 40897,
											"end": 40909,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 40897,
											"end": 40909,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40897,
											"end": 40909,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 40897,
											"end": 40909,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40897,
											"end": 40909,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40897,
											"end": 40909,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 40897,
											"end": 40909,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40897,
											"end": 40909,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 40897,
											"end": 40909,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40897,
											"end": 40909,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 40897,
											"end": 40909,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40897,
											"end": 40909,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40897,
											"end": 40909,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40897,
											"end": 40909,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40897,
											"end": 40909,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 40897,
											"end": 40909,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 40897,
											"end": 40909,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40897,
											"end": 40909,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 40897,
											"end": 40909,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40897,
											"end": 40909,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 40897,
											"end": 40909,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40897,
											"end": 40909,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40897,
											"end": 40909,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 40897,
											"end": 40909,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40897,
											"end": 40909,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 40897,
											"end": 40909,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40897,
											"end": 40909,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 40897,
											"end": 40909,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40897,
											"end": 40909,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40897,
											"end": 40909,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 40897,
											"end": 40909,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40897,
											"end": 40909,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40897,
											"end": 40909,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 40897,
											"end": 40909,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 40897,
											"end": 40909,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 40897,
											"end": 40909,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 40897,
											"end": 40909,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 40897,
											"end": 40909,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40897,
											"end": 40909,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 40897,
											"end": 40909,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 40897,
											"end": 40909,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 40897,
											"end": 40909,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 40897,
											"end": 40909,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40897,
											"end": 40909,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40897,
											"end": 40909,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 40897,
											"end": 40909,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40897,
											"end": 40909,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40897,
											"end": 40909,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40897,
											"end": 40909,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40897,
											"end": 40909,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40897,
											"end": 40909,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40897,
											"end": 40909,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40897,
											"end": 40909,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40818,
											"end": 40916,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40818,
											"end": 40916,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42282,
											"end": 42449,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 42282,
											"end": 42449,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42358,
											"end": 42365,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 42377,
											"end": 42400,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 42392,
											"end": 42399,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 42377,
											"end": 42391,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 42377,
											"end": 42400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42377,
											"end": 42400,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 42377,
											"end": 42400,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 42418,
											"end": 42442,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 42418,
											"end": 42442,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42418,
											"end": 42442,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42418,
											"end": 42442,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 42418,
											"end": 42433,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 42418,
											"end": 42442,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 42418,
											"end": 42442,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 42418,
											"end": 42442,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 42418,
											"end": 42442,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42418,
											"end": 42442,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 42418,
											"end": 42442,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 42418,
											"end": 42442,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 42418,
											"end": 42442,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42282,
											"end": 42449,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41815,
											"end": 42221,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 41815,
											"end": 42221,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41895,
											"end": 41908,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 41911,
											"end": 41934,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 41926,
											"end": 41933,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 41911,
											"end": 41925,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 41911,
											"end": 41934,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41911,
											"end": 41934,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 41911,
											"end": 41934,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41895,
											"end": 41934,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41895,
											"end": 41934,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41958,
											"end": 41963,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 41952,
											"end": 41963,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 41952,
											"end": 41954,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 41952,
											"end": 41963,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 41952,
											"end": 41963,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 41944,
											"end": 42001,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 41944,
											"end": 42001,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 41944,
											"end": 42001,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 41944,
											"end": 42001,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 41944,
											"end": 42001,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41944,
											"end": 42001,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5363,
											"end": 5365,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 41944,
											"end": 42001,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 41944,
											"end": 42001,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 41944,
											"end": 42001,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5345,
											"end": 5366,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5402,
											"end": 5404,
											"name": "PUSH",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 5382,
											"end": 5400,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5382,
											"end": 5400,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5382,
											"end": 5400,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5375,
											"end": 5405,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5441,
											"end": 5475,
											"name": "PUSH",
											"source": 1,
											"value": "4552433732313A20617070726F76616C20746F2063757272656E74206F776E65"
										},
										{
											"begin": 5421,
											"end": 5439,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 5421,
											"end": 5439,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5421,
											"end": 5439,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5414,
											"end": 5476,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "39"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5492,
											"end": 5510,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 5492,
											"end": 5510,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5492,
											"end": 5510,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5485,
											"end": 5516,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5533,
											"end": 5552,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 5533,
											"end": 5552,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 41944,
											"end": 42001,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 41944,
											"end": 42001,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41944,
											"end": 42001,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 41944,
											"end": 42001,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 41944,
											"end": 42001,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41944,
											"end": 42001,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41944,
											"end": 42001,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 41944,
											"end": 42001,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41944,
											"end": 42001,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 41944,
											"end": 42001,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 41944,
											"end": 42001,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16939,
											"end": 16949,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 42033,
											"end": 42054,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 42033,
											"end": 42054,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 42033,
											"end": 42054,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 42033,
											"end": 42054,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42033,
											"end": 42095,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 42033,
											"end": 42095,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 42058,
											"end": 42095,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 42075,
											"end": 42080,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16939,
											"end": 16949,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 42735,
											"end": 42897,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 42735,
											"end": 42897,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42058,
											"end": 42095,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 42058,
											"end": 42095,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42012,
											"end": 42182,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 42012,
											"end": 42182,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 42012,
											"end": 42182,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 42012,
											"end": 42182,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 42012,
											"end": 42182,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42012,
											"end": 42182,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5765,
											"end": 5767,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 42012,
											"end": 42182,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 42012,
											"end": 42182,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 42012,
											"end": 42182,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5747,
											"end": 5768,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5804,
											"end": 5806,
											"name": "PUSH",
											"source": 1,
											"value": "3D"
										},
										{
											"begin": 5784,
											"end": 5802,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5784,
											"end": 5802,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5784,
											"end": 5802,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5777,
											"end": 5807,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5843,
											"end": 5877,
											"name": "PUSH",
											"source": 1,
											"value": "4552433732313A20617070726F76652063616C6C6572206973206E6F7420746F"
										},
										{
											"begin": 5823,
											"end": 5841,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 5823,
											"end": 5841,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5823,
											"end": 5841,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5816,
											"end": 5878,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5914,
											"end": 5945,
											"name": "PUSH",
											"source": 1,
											"value": "6B656E206F776E6572206F7220617070726F76656420666F7220616C6C000000"
										},
										{
											"begin": 5894,
											"end": 5912,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 5894,
											"end": 5912,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5894,
											"end": 5912,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5887,
											"end": 5946,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5963,
											"end": 5982,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 5963,
											"end": 5982,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 42012,
											"end": 42182,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 5563,
											"end": 5988,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 42012,
											"end": 42182,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 42012,
											"end": 42182,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42193,
											"end": 42214,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 42202,
											"end": 42204,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 42206,
											"end": 42213,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 42193,
											"end": 42201,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 42193,
											"end": 42214,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42193,
											"end": 42214,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 42193,
											"end": 42214,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41885,
											"end": 42221,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41815,
											"end": 42221,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41815,
											"end": 42221,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41815,
											"end": 42221,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42959,
											"end": 43285,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 42959,
											"end": 43285,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43148,
											"end": 43189,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 16939,
											"end": 16949,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 43181,
											"end": 43188,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 43148,
											"end": 43166,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 43148,
											"end": 43189,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43148,
											"end": 43189,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 43148,
											"end": 43189,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43140,
											"end": 43239,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 43140,
											"end": 43239,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 43140,
											"end": 43239,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 43140,
											"end": 43239,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 43140,
											"end": 43239,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43140,
											"end": 43239,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43140,
											"end": 43239,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 43140,
											"end": 43239,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43140,
											"end": 43239,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 43140,
											"end": 43239,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43140,
											"end": 43239,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 43140,
											"end": 43239,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43140,
											"end": 43239,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 43140,
											"end": 43239,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43250,
											"end": 43278,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 43260,
											"end": 43264,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 43266,
											"end": 43268,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 43270,
											"end": 43277,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 43250,
											"end": 43259,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 43250,
											"end": 43278,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43351,
											"end": 43530,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 43351,
											"end": 43530,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43484,
											"end": 43523,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 43501,
											"end": 43505,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 43507,
											"end": 43509,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 43511,
											"end": 43518,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 43484,
											"end": 43523,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 43484,
											"end": 43523,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 43484,
											"end": 43523,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43484,
											"end": 43523,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 43484,
											"end": 43523,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43484,
											"end": 43523,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 43484,
											"end": 43523,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43484,
											"end": 43523,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43484,
											"end": 43523,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43484,
											"end": 43523,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43484,
											"end": 43523,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43484,
											"end": 43523,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43484,
											"end": 43500,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 43484,
											"end": 43523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40537,
											"end": 40756,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 40537,
											"end": 40756,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40609,
											"end": 40616,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 45277,
											"end": 45293,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 45277,
											"end": 45293,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 45277,
											"end": 45293,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 45277,
											"end": 45284,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 45277,
											"end": 45293,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 45277,
											"end": 45293,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 45277,
											"end": 45293,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 45277,
											"end": 45293,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 45277,
											"end": 45293,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 45277,
											"end": 45293,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 45277,
											"end": 45293,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 45277,
											"end": 45293,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40671,
											"end": 40727,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 40671,
											"end": 40727,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 40671,
											"end": 40727,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 40671,
											"end": 40727,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 40671,
											"end": 40727,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40671,
											"end": 40727,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6609,
											"end": 6611,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 40671,
											"end": 40727,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 40671,
											"end": 40727,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 40671,
											"end": 40727,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6591,
											"end": 6612,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6648,
											"end": 6650,
											"name": "PUSH",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 6628,
											"end": 6646,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 6628,
											"end": 6646,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6628,
											"end": 6646,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6621,
											"end": 6651,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "115490CDCC8C4E881A5B9D985B1A59081D1BDAD95B881251"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "42"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6667,
											"end": 6685,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 6667,
											"end": 6685,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6667,
											"end": 6685,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6660,
											"end": 6714,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6731,
											"end": 6749,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 6731,
											"end": 6749,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 40671,
											"end": 40727,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 6407,
											"end": 6755,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 40276,
											"end": 40480,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 40276,
											"end": 40480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40348,
											"end": 40355,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 40375,
											"end": 40394,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 40375,
											"end": 40394,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 40367,
											"end": 40440,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 40367,
											"end": 40440,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 40367,
											"end": 40440,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 40367,
											"end": 40440,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 40367,
											"end": 40440,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40367,
											"end": 40440,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6962,
											"end": 6964,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 40367,
											"end": 40440,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 40367,
											"end": 40440,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 40367,
											"end": 40440,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6944,
											"end": 6965,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7001,
											"end": 7003,
											"name": "PUSH",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 6981,
											"end": 6999,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 6981,
											"end": 6999,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6981,
											"end": 6999,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6974,
											"end": 7004,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7040,
											"end": 7074,
											"name": "PUSH",
											"source": 1,
											"value": "4552433732313A2061646472657373207A65726F206973206E6F742061207661"
										},
										{
											"begin": 7020,
											"end": 7038,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 7020,
											"end": 7038,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7020,
											"end": 7038,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7013,
											"end": 7075,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3634B21037BBB732B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7091,
											"end": 7109,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 7091,
											"end": 7109,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7091,
											"end": 7109,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7084,
											"end": 7123,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7140,
											"end": 7159,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 7140,
											"end": 7159,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 40367,
											"end": 40440,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 6760,
											"end": 7165,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 40367,
											"end": 40440,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 40367,
											"end": 40440,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 40457,
											"end": 40473,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 40457,
											"end": 40473,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40457,
											"end": 40473,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40457,
											"end": 40473,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40457,
											"end": 40473,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 40457,
											"end": 40466,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 40457,
											"end": 40473,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 40457,
											"end": 40473,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 40457,
											"end": 40473,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 40457,
											"end": 40473,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40457,
											"end": 40473,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 40457,
											"end": 40473,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 40457,
											"end": 40473,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40276,
											"end": 40480,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40980,
											"end": 41082,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 40980,
											"end": 41082,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41036,
											"end": 41049,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 41068,
											"end": 41075,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 41061,
											"end": 41075,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41061,
											"end": 41075,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 41061,
											"end": 41075,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 41061,
											"end": 41075,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41061,
											"end": 41075,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 41061,
											"end": 41075,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42516,
											"end": 42669,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 42516,
											"end": 42669,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42610,
											"end": 42662,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 16939,
											"end": 16949,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 42643,
											"end": 42651,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 42653,
											"end": 42661,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 42610,
											"end": 42628,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 42610,
											"end": 42662,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42610,
											"end": 42662,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 42610,
											"end": 42662,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42516,
											"end": 42669,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42516,
											"end": 42669,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42516,
											"end": 42669,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43596,
											"end": 43910,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 43596,
											"end": 43910,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43764,
											"end": 43805,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 16939,
											"end": 16949,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 43797,
											"end": 43804,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 43764,
											"end": 43782,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 43764,
											"end": 43805,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43764,
											"end": 43805,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 43764,
											"end": 43805,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43756,
											"end": 43855,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 43756,
											"end": 43855,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 43756,
											"end": 43855,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 43756,
											"end": 43855,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 43756,
											"end": 43855,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43756,
											"end": 43855,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43756,
											"end": 43855,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 43756,
											"end": 43855,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43756,
											"end": 43855,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 43756,
											"end": 43855,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43756,
											"end": 43855,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 43756,
											"end": 43855,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43756,
											"end": 43855,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 43756,
											"end": 43855,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43865,
											"end": 43903,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 43879,
											"end": 43883,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 43885,
											"end": 43887,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 43889,
											"end": 43896,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 43898,
											"end": 43902,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 43865,
											"end": 43878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 43865,
											"end": 43903,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43865,
											"end": 43903,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 43865,
											"end": 43903,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43596,
											"end": 43910,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43596,
											"end": 43910,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43596,
											"end": 43910,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43596,
											"end": 43910,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43596,
											"end": 43910,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41148,
											"end": 41424,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 41148,
											"end": 41424,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41221,
											"end": 41234,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 41246,
											"end": 41269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 41261,
											"end": 41268,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 41246,
											"end": 41260,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 41246,
											"end": 41269,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41246,
											"end": 41269,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 41246,
											"end": 41269,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41280,
											"end": 41301,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 41304,
											"end": 41314,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 41742,
											"end": 41751,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 41742,
											"end": 41751,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41742,
											"end": 41751,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 41742,
											"end": 41751,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 41742,
											"end": 41751,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41742,
											"end": 41751,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41742,
											"end": 41751,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41742,
											"end": 41751,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41742,
											"end": 41751,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 41742,
											"end": 41751,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41742,
											"end": 41751,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 41742,
											"end": 41751,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41666,
											"end": 41758,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41304,
											"end": 41314,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 41304,
											"end": 41314,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41280,
											"end": 41314,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41280,
											"end": 41314,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41355,
											"end": 41356,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 41337,
											"end": 41344,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41331,
											"end": 41352,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 41331,
											"end": 41356,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 41331,
											"end": 41417,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 41331,
											"end": 41417,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 41331,
											"end": 41417,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 41331,
											"end": 41417,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 41331,
											"end": 41417,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41331,
											"end": 41417,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 41331,
											"end": 41417,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41331,
											"end": 41417,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 41331,
											"end": 41417,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 41331,
											"end": 41417,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41331,
											"end": 41417,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 41331,
											"end": 41417,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41331,
											"end": 41417,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 41331,
											"end": 41417,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41331,
											"end": 41417,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 41331,
											"end": 41417,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41331,
											"end": 41417,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 41331,
											"end": 41417,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41383,
											"end": 41390,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41392,
											"end": 41410,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 41392,
											"end": 41399,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 41392,
											"end": 41408,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 41392,
											"end": 41410,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41392,
											"end": 41410,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 41392,
											"end": 41410,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41366,
											"end": 41411,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 41366,
											"end": 41411,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 41366,
											"end": 41411,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 41366,
											"end": 41411,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41366,
											"end": 41411,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 41366,
											"end": 41411,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 41366,
											"end": 41411,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41366,
											"end": 41411,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41366,
											"end": 41411,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 41366,
											"end": 41411,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41366,
											"end": 41411,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 41366,
											"end": 41411,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41366,
											"end": 41411,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 41366,
											"end": 41411,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 41366,
											"end": 41411,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 41366,
											"end": 41411,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41366,
											"end": 41411,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 41366,
											"end": 41411,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 41366,
											"end": 41411,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 41366,
											"end": 41411,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41366,
											"end": 41411,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 41366,
											"end": 41411,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41366,
											"end": 41411,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 41366,
											"end": 41411,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 41331,
											"end": 41417,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 41331,
											"end": 41417,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41324,
											"end": 41417,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 41148,
											"end": 41424,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 41148,
											"end": 41424,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 51813,
											"end": 51946,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 51813,
											"end": 51946,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 45668,
											"end": 45672,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 45277,
											"end": 45293,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 45277,
											"end": 45293,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 45277,
											"end": 45293,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 45277,
											"end": 45284,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 45277,
											"end": 45293,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 45277,
											"end": 45293,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 45277,
											"end": 45293,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 45277,
											"end": 45293,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45277,
											"end": 45293,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 45277,
											"end": 45293,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 45277,
											"end": 45293,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 51886,
											"end": 51939,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 51886,
											"end": 51939,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 51886,
											"end": 51939,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 51886,
											"end": 51939,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 51886,
											"end": 51939,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 51886,
											"end": 51939,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6609,
											"end": 6611,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 51886,
											"end": 51939,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 51886,
											"end": 51939,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 51886,
											"end": 51939,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6591,
											"end": 6612,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6648,
											"end": 6650,
											"name": "PUSH",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 6628,
											"end": 6646,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 6628,
											"end": 6646,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6628,
											"end": 6646,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6621,
											"end": 6651,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "115490CDCC8C4E881A5B9D985B1A59081D1BDAD95B881251"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "42"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6667,
											"end": 6685,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 6667,
											"end": 6685,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6667,
											"end": 6685,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6660,
											"end": 6714,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6731,
											"end": 6749,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 6731,
											"end": 6749,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 51886,
											"end": 51939,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 6407,
											"end": 6755,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 51886,
											"end": 51939,
											"name": "tag",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 51886,
											"end": 51939,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51813,
											"end": 51946,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 51813,
											"end": 51946,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 51115,
											"end": 51286,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 51115,
											"end": 51286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51189,
											"end": 51213,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 51189,
											"end": 51213,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 51189,
											"end": 51213,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 51189,
											"end": 51213,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 51189,
											"end": 51204,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 51189,
											"end": 51213,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 51189,
											"end": 51213,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 51189,
											"end": 51213,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 51189,
											"end": 51213,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51189,
											"end": 51213,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 51189,
											"end": 51218,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51189,
											"end": 51218,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 51189,
											"end": 51218,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 51189,
											"end": 51218,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 51189,
											"end": 51218,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 51189,
											"end": 51218,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51189,
											"end": 51218,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 51189,
											"end": 51218,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 51189,
											"end": 51218,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51189,
											"end": 51218,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 51189,
											"end": 51218,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 51189,
											"end": 51213,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 51189,
											"end": 51213,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51242,
											"end": 51265,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 51189,
											"end": 51213,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 51242,
											"end": 51256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 51242,
											"end": 51265,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 51242,
											"end": 51265,
											"name": "tag",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 51242,
											"end": 51265,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 51233,
											"end": 51279,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 51233,
											"end": 51279,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 51233,
											"end": 51279,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 51233,
											"end": 51279,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 51233,
											"end": 51279,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 51233,
											"end": 51279,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 51233,
											"end": 51279,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51233,
											"end": 51279,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 51233,
											"end": 51279,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 51233,
											"end": 51279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51233,
											"end": 51279,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 51115,
											"end": 51286,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 51115,
											"end": 51286,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 51115,
											"end": 51286,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 45887,
											"end": 46148,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 45887,
											"end": 46148,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 45980,
											"end": 45984,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 45996,
											"end": 46009,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 46012,
											"end": 46035,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 46027,
											"end": 46034,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 46012,
											"end": 46026,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 46012,
											"end": 46035,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 46012,
											"end": 46035,
											"name": "tag",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 46012,
											"end": 46035,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 45996,
											"end": 46035,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45996,
											"end": 46035,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 46064,
											"end": 46069,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 46053,
											"end": 46069,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 46053,
											"end": 46060,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 46053,
											"end": 46069,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 46053,
											"end": 46069,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 46053,
											"end": 46105,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 46053,
											"end": 46105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 46053,
											"end": 46105,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 42855,
											"end": 42880,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42855,
											"end": 42880,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 42855,
											"end": 42880,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 42832,
											"end": 42836,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 42855,
											"end": 42880,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42855,
											"end": 42880,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42855,
											"end": 42880,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 42855,
											"end": 42873,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 42855,
											"end": 42880,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 42855,
											"end": 42880,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42855,
											"end": 42880,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42855,
											"end": 42880,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 42855,
											"end": 42880,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 42855,
											"end": 42880,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42855,
											"end": 42880,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 42855,
											"end": 42880,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 42855,
											"end": 42890,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 42855,
											"end": 42890,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 42855,
											"end": 42890,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 42855,
											"end": 42890,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 42855,
											"end": 42890,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 42855,
											"end": 42890,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 42855,
											"end": 42890,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42855,
											"end": 42890,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 42855,
											"end": 42890,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 42855,
											"end": 42890,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 42855,
											"end": 42890,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 42855,
											"end": 42890,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 46073,
											"end": 46105,
											"name": "tag",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 46073,
											"end": 46105,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46053,
											"end": 46140,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 46053,
											"end": 46140,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 46053,
											"end": 46140,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 46053,
											"end": 46140,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 46133,
											"end": 46140,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 46109,
											"end": 46140,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 46109,
											"end": 46129,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 46121,
											"end": 46128,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 46109,
											"end": 46120,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 46109,
											"end": 46129,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 46109,
											"end": 46129,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 46109,
											"end": 46129,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 46109,
											"end": 46140,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 46109,
											"end": 46140,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 46053,
											"end": 46140,
											"name": "tag",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 46053,
											"end": 46140,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46045,
											"end": 46141,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 45887,
											"end": 46148,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 45887,
											"end": 46148,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 49770,
											"end": 51003,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 49770,
											"end": 51003,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49924,
											"end": 49928,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 49897,
											"end": 49928,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 49897,
											"end": 49920,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 49912,
											"end": 49919,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 49897,
											"end": 49911,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 49897,
											"end": 49920,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 49897,
											"end": 49920,
											"name": "tag",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 49897,
											"end": 49920,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 49897,
											"end": 49928,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 49897,
											"end": 49928,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 49889,
											"end": 49970,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 49889,
											"end": 49970,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 49889,
											"end": 49970,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 49889,
											"end": 49970,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 49889,
											"end": 49970,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49889,
											"end": 49970,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 49889,
											"end": 49970,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 49889,
											"end": 49970,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 49889,
											"end": 49970,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 49889,
											"end": 49970,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49889,
											"end": 49970,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 49889,
											"end": 49970,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 49889,
											"end": 49970,
											"name": "tag",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 49889,
											"end": 49970,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 49988,
											"end": 50004,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 49988,
											"end": 50004,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 49980,
											"end": 50045,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 49980,
											"end": 50045,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 49980,
											"end": 50045,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 49980,
											"end": 50045,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 49980,
											"end": 50045,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49980,
											"end": 50045,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8279,
											"end": 8281,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 49980,
											"end": 50045,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 49980,
											"end": 50045,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 49980,
											"end": 50045,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8261,
											"end": 8282,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8318,
											"end": 8320,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 8298,
											"end": 8316,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8298,
											"end": 8316,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8298,
											"end": 8316,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8291,
											"end": 8321,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8357,
											"end": 8391,
											"name": "PUSH",
											"source": 1,
											"value": "4552433732313A207472616E7366657220746F20746865207A65726F20616464"
										},
										{
											"begin": 8337,
											"end": 8355,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 8337,
											"end": 8355,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8337,
											"end": 8355,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8330,
											"end": 8392,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8408,
											"end": 8426,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 8408,
											"end": 8426,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8408,
											"end": 8426,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8401,
											"end": 8435,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8452,
											"end": 8471,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 8452,
											"end": 8471,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 49980,
											"end": 50045,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 8077,
											"end": 8477,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 49980,
											"end": 50045,
											"name": "tag",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 49980,
											"end": 50045,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50225,
											"end": 50229,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 50198,
											"end": 50229,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 50198,
											"end": 50221,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 50213,
											"end": 50220,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 50198,
											"end": 50212,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 50198,
											"end": 50221,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 50198,
											"end": 50221,
											"name": "tag",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 50198,
											"end": 50221,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 50198,
											"end": 50229,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 50198,
											"end": 50229,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 50190,
											"end": 50271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 50190,
											"end": 50271,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50190,
											"end": 50271,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 50190,
											"end": 50271,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 50190,
											"end": 50271,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 50190,
											"end": 50271,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 50190,
											"end": 50271,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 50190,
											"end": 50271,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 50190,
											"end": 50271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 50190,
											"end": 50271,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 50190,
											"end": 50271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 50190,
											"end": 50271,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 50190,
											"end": 50271,
											"name": "tag",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 50190,
											"end": 50271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50340,
											"end": 50364,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 50340,
											"end": 50364,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 50340,
											"end": 50364,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 50340,
											"end": 50364,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 50340,
											"end": 50355,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 50340,
											"end": 50364,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 50340,
											"end": 50364,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 50340,
											"end": 50364,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 50340,
											"end": 50364,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 50340,
											"end": 50364,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 50340,
											"end": 50364,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50340,
											"end": 50364,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 50340,
											"end": 50364,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 50333,
											"end": 50364,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50333,
											"end": 50364,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 50333,
											"end": 50364,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 50333,
											"end": 50364,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 50333,
											"end": 50364,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 50333,
											"end": 50364,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 50333,
											"end": 50364,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 50333,
											"end": 50364,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 50808,
											"end": 50823,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 50808,
											"end": 50823,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 50808,
											"end": 50823,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 50808,
											"end": 50823,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50808,
											"end": 50823,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 50808,
											"end": 50823,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 50808,
											"end": 50817,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 50808,
											"end": 50823,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 50808,
											"end": 50823,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 50808,
											"end": 50823,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 50808,
											"end": 50823,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 50808,
											"end": 50823,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 50808,
											"end": 50828,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50808,
											"end": 50828,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 50808,
											"end": 50828,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 50808,
											"end": 50828,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 50808,
											"end": 50828,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 50842,
											"end": 50855,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 50842,
											"end": 50855,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 50842,
											"end": 50855,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 50842,
											"end": 50855,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50842,
											"end": 50855,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 50842,
											"end": 50855,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 50842,
											"end": 50855,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 50842,
											"end": 50855,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 50842,
											"end": 50855,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 50842,
											"end": 50860,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50842,
											"end": 50860,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 50333,
											"end": 50364,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 50842,
											"end": 50860,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 50842,
											"end": 50860,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 50842,
											"end": 50860,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 50880,
											"end": 50896,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 50880,
											"end": 50896,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 50880,
											"end": 50896,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 50880,
											"end": 50887,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 50880,
											"end": 50896,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 50880,
											"end": 50896,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 50880,
											"end": 50896,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 50880,
											"end": 50896,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 50880,
											"end": 50896,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 50880,
											"end": 50896,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 50880,
											"end": 50901,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50880,
											"end": 50901,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 50880,
											"end": 50901,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 50880,
											"end": 50901,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 50880,
											"end": 50901,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 50880,
											"end": 50901,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 50880,
											"end": 50901,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 50880,
											"end": 50901,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 50880,
											"end": 50901,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 50880,
											"end": 50901,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 50917,
											"end": 50944,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 50917,
											"end": 50944,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 50356,
											"end": 50363,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 50356,
											"end": 50363,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 50917,
											"end": 50944,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 50917,
											"end": 50944,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 50917,
											"end": 50944,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 41885,
											"end": 42221,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41815,
											"end": 42221,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41815,
											"end": 42221,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41815,
											"end": 42221,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 51422,
											"end": 51729,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 51422,
											"end": 51729,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51572,
											"end": 51580,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 51563,
											"end": 51580,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 51563,
											"end": 51568,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 51563,
											"end": 51580,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 51563,
											"end": 51580,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 51555,
											"end": 51610,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 51555,
											"end": 51610,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 51555,
											"end": 51610,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 51555,
											"end": 51610,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 51555,
											"end": 51610,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 51555,
											"end": 51610,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8684,
											"end": 8686,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 51555,
											"end": 51610,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 51555,
											"end": 51610,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 51555,
											"end": 51610,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8666,
											"end": 8687,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8723,
											"end": 8725,
											"name": "PUSH",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 8703,
											"end": 8721,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 8703,
											"end": 8721,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8703,
											"end": 8721,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8696,
											"end": 8726,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8762,
											"end": 8789,
											"name": "PUSH",
											"source": 1,
											"value": "4552433732313A20617070726F766520746F2063616C6C657200000000000000"
										},
										{
											"begin": 8742,
											"end": 8760,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 8742,
											"end": 8760,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8742,
											"end": 8760,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8735,
											"end": 8790,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8807,
											"end": 8825,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 8807,
											"end": 8825,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 51555,
											"end": 51610,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 8482,
											"end": 8831,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 51555,
											"end": 51610,
											"name": "tag",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 51555,
											"end": 51610,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 51620,
											"end": 51645,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 51620,
											"end": 51645,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 51620,
											"end": 51645,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 51620,
											"end": 51645,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 51620,
											"end": 51645,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 51620,
											"end": 51645,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 51620,
											"end": 51645,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 51620,
											"end": 51638,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 51620,
											"end": 51645,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 51620,
											"end": 51645,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51620,
											"end": 51645,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 51620,
											"end": 51645,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 51620,
											"end": 51645,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 51620,
											"end": 51645,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51620,
											"end": 51645,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 51620,
											"end": 51645,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 51620,
											"end": 51655,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 51620,
											"end": 51655,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 51620,
											"end": 51655,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 51620,
											"end": 51655,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51620,
											"end": 51655,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 51620,
											"end": 51655,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 51620,
											"end": 51655,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 51620,
											"end": 51655,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 51620,
											"end": 51655,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 51620,
											"end": 51655,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 51620,
											"end": 51655,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 51620,
											"end": 51655,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51620,
											"end": 51655,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 51620,
											"end": 51666,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51620,
											"end": 51666,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 51620,
											"end": 51666,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 51620,
											"end": 51666,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 51620,
											"end": 51666,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 51620,
											"end": 51666,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 51620,
											"end": 51666,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51620,
											"end": 51666,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 51620,
											"end": 51666,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 51620,
											"end": 51666,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51620,
											"end": 51666,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 51620,
											"end": 51666,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 51681,
											"end": 51722,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 51681,
											"end": 51722,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 540,
											"end": 581,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 540,
											"end": 581,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 540,
											"end": 581,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 51681,
											"end": 51722,
											"name": "PUSH",
											"source": 0,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 51681,
											"end": 51722,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 513,
											"end": 531,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 51681,
											"end": 51722,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 51681,
											"end": 51722,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 51681,
											"end": 51722,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51681,
											"end": 51722,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 51681,
											"end": 51722,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 51681,
											"end": 51722,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51681,
											"end": 51722,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 51422,
											"end": 51729,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 51422,
											"end": 51729,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 51422,
											"end": 51729,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 51422,
											"end": 51729,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 44771,
											"end": 45076,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 44771,
											"end": 45076,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44921,
											"end": 44949,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 44931,
											"end": 44935,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 44937,
											"end": 44939,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 44941,
											"end": 44948,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 44921,
											"end": 44930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 44921,
											"end": 44949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 44921,
											"end": 44949,
											"name": "tag",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 44921,
											"end": 44949,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44967,
											"end": 45014,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 44990,
											"end": 44994,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 44996,
											"end": 44998,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 45000,
											"end": 45007,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 45009,
											"end": 45013,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 44967,
											"end": 44989,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 44967,
											"end": 45014,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 44967,
											"end": 45014,
											"name": "tag",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 44967,
											"end": 45014,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44959,
											"end": 45069,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 44959,
											"end": 45069,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 44959,
											"end": 45069,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 44959,
											"end": 45069,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 44959,
											"end": 45069,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 44959,
											"end": 45069,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 44959,
											"end": 45069,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 44959,
											"end": 45069,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 44959,
											"end": 45069,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 44959,
											"end": 45069,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44959,
											"end": 45069,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 44959,
											"end": 45069,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14359,
											"end": 15055,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 14359,
											"end": 15055,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14415,
											"end": 14428,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 14464,
											"end": 14478,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14481,
											"end": 14498,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 14492,
											"end": 14497,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14481,
											"end": 14491,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 14481,
											"end": 14498,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14481,
											"end": 14498,
											"name": "tag",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 14481,
											"end": 14498,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14501,
											"end": 14502,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 14481,
											"end": 14502,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14464,
											"end": 14502,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14464,
											"end": 14502,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14516,
											"end": 14536,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14550,
											"end": 14556,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14539,
											"end": 14557,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14539,
											"end": 14557,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14539,
											"end": 14557,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 14539,
											"end": 14557,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14539,
											"end": 14557,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 14539,
											"end": 14557,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14539,
											"end": 14557,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 14539,
											"end": 14557,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 14539,
											"end": 14557,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14539,
											"end": 14557,
											"name": "tag",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 14539,
											"end": 14557,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14539,
											"end": 14557,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14539,
											"end": 14557,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14539,
											"end": 14557,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14539,
											"end": 14557,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14539,
											"end": 14557,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14539,
											"end": 14557,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14539,
											"end": 14557,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14539,
											"end": 14557,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 14539,
											"end": 14557,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14539,
											"end": 14557,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 14539,
											"end": 14557,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 14539,
											"end": 14557,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14539,
											"end": 14557,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14539,
											"end": 14557,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14539,
											"end": 14557,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14539,
											"end": 14557,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14539,
											"end": 14557,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14539,
											"end": 14557,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14539,
											"end": 14557,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14539,
											"end": 14557,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14539,
											"end": 14557,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 14539,
											"end": 14557,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14539,
											"end": 14557,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14539,
											"end": 14557,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14539,
											"end": 14557,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14539,
											"end": 14557,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14539,
											"end": 14557,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14539,
											"end": 14557,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 14539,
											"end": 14557,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14539,
											"end": 14557,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 14539,
											"end": 14557,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14539,
											"end": 14557,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14539,
											"end": 14557,
											"name": "tag",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 14539,
											"end": 14557,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14516,
											"end": 14557,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14677,
											"end": 14705,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14677,
											"end": 14705,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14677,
											"end": 14705,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14693,
											"end": 14695,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14677,
											"end": 14705,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14732,
											"end": 15012,
											"name": "tag",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 14732,
											"end": 15012,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 14763,
											"end": 14768,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "181899199A1A9B1B9C1CB0B131B232B3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "81"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14897,
											"end": 14899,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 14886,
											"end": 14900,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 14886,
											"end": 14900,
											"name": "MOD",
											"source": 0
										},
										{
											"begin": 14881,
											"end": 14911,
											"name": "BYTE",
											"source": 0
										},
										{
											"begin": 14763,
											"end": 14768,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14868,
											"end": 14912,
											"name": "MSTORE8",
											"source": 0
										},
										{
											"begin": 14956,
											"end": 14958,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 14947,
											"end": 14958,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 14947,
											"end": 14958,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 14947,
											"end": 14958,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14976,
											"end": 14997,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 14732,
											"end": 15012,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 14976,
											"end": 14997,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15032,
											"end": 15038,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 14359,
											"end": 15055,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14359,
											"end": 15055,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 52498,
											"end": 53329,
											"name": "tag",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 52498,
											"end": 53329,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52647,
											"end": 52651,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 52667,
											"end": 52680,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 52667,
											"end": 52680,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21166,
											"end": 21185,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 21166,
											"end": 21189,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 52663,
											"end": 53323,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 52663,
											"end": 53323,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 52702,
											"end": 52773,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 52702,
											"end": 52773,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A85BD01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 52702,
											"end": 52773,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 52702,
											"end": 52773,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 52702,
											"end": 52738,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 52702,
											"end": 52738,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 52702,
											"end": 52738,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52702,
											"end": 52738,
											"name": "PUSH",
											"source": 0,
											"value": "150B7A02"
										},
										{
											"begin": 52702,
											"end": 52738,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52702,
											"end": 52773,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 52702,
											"end": 52773,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16939,
											"end": 16949,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 16939,
											"end": 16949,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52753,
											"end": 52757,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 52753,
											"end": 52757,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52759,
											"end": 52766,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 52759,
											"end": 52766,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52768,
											"end": 52772,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 52768,
											"end": 52772,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52702,
											"end": 52773,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 52702,
											"end": 52773,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 52702,
											"end": 52773,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 52702,
											"end": 52773,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 52702,
											"end": 52773,
											"name": "tag",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 52702,
											"end": 52773,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52702,
											"end": 52773,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 52702,
											"end": 52773,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 52702,
											"end": 52773,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 52702,
											"end": 52773,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 52702,
											"end": 52773,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 52702,
											"end": 52773,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 52702,
											"end": 52773,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 52702,
											"end": 52773,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 52702,
											"end": 52773,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 52702,
											"end": 52773,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 52702,
											"end": 52773,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 52702,
											"end": 52773,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 52702,
											"end": 52773,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 52702,
											"end": 52773,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 52702,
											"end": 52773,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 52702,
											"end": 52773,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 52702,
											"end": 52773,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 52702,
											"end": 52773,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 52702,
											"end": 52773,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 52702,
											"end": 52773,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 52702,
											"end": 52773,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 52702,
											"end": 52773,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 52702,
											"end": 52773,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 52702,
											"end": 52773,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 52702,
											"end": 52773,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52702,
											"end": 52773,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 52702,
											"end": 52773,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 52702,
											"end": 52773,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 52702,
											"end": 52773,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 52702,
											"end": 52773,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 52702,
											"end": 52773,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52702,
											"end": 52773,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 52702,
											"end": 52773,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 52702,
											"end": 52773,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 52702,
											"end": 52773,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 52702,
											"end": 52773,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 52702,
											"end": 52773,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 52702,
											"end": 52773,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52702,
											"end": 52773,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 52702,
											"end": 52773,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 52702,
											"end": 52773,
											"name": "tag",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 52702,
											"end": 52773,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52702,
											"end": 52773,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 52702,
											"end": 52773,
											"name": "tag",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 52702,
											"end": 52773,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52698,
											"end": 53271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 52698,
											"end": 53271,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 52698,
											"end": 53271,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 52698,
											"end": 53271,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 52698,
											"end": 53271,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 52698,
											"end": 53271,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 52698,
											"end": 53271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 52698,
											"end": 53271,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 52698,
											"end": 53271,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 52698,
											"end": 53271,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 52698,
											"end": 53271,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 52698,
											"end": 53271,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 52698,
											"end": 53271,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 52698,
											"end": 53271,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 52698,
											"end": 53271,
											"name": "PUSH",
											"source": 0,
											"value": "3F"
										},
										{
											"begin": 52698,
											"end": 53271,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 52698,
											"end": 53271,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 52698,
											"end": 53271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 52698,
											"end": 53271,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 52698,
											"end": 53271,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 52698,
											"end": 53271,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 52698,
											"end": 53271,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 52698,
											"end": 53271,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 52698,
											"end": 53271,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 52698,
											"end": 53271,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 52698,
											"end": 53271,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 52698,
											"end": 53271,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 52698,
											"end": 53271,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 52698,
											"end": 53271,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 52698,
											"end": 53271,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 52698,
											"end": 53271,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 52698,
											"end": 53271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 52698,
											"end": 53271,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 52698,
											"end": 53271,
											"name": "tag",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 52698,
											"end": 53271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52698,
											"end": 53271,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 52698,
											"end": 53271,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 52698,
											"end": 53271,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 52698,
											"end": 53271,
											"name": "tag",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 52698,
											"end": 53271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52698,
											"end": 53271,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 52940,
											"end": 52946,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 52940,
											"end": 52953,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 52957,
											"end": 52958,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 52940,
											"end": 52958,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 52936,
											"end": 53257,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 52936,
											"end": 53257,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 52982,
											"end": 53042,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 52982,
											"end": 53042,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 52982,
											"end": 53042,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 52982,
											"end": 53042,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 52982,
											"end": 53042,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 52982,
											"end": 53042,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 52982,
											"end": 53042,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 52982,
											"end": 53042,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52982,
											"end": 53042,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 52982,
											"end": 53042,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 52936,
											"end": 53257,
											"name": "tag",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 52936,
											"end": 53257,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53209,
											"end": 53215,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53203,
											"end": 53216,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 53194,
											"end": 53200,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53190,
											"end": 53192,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 53186,
											"end": 53201,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 53179,
											"end": 53217,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 52698,
											"end": 53271,
											"name": "tag",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 52698,
											"end": 53271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 52823,
											"end": 52874,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A85BD01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 52823,
											"end": 52874,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 52823,
											"end": 52874,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 52816,
											"end": 52874,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 52816,
											"end": 52874,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 52663,
											"end": 53323,
											"name": "tag",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 52663,
											"end": 53323,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 53308,
											"end": 53312,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 52498,
											"end": 53329,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 52498,
											"end": 53329,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 52498,
											"end": 53329,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 52498,
											"end": 53329,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 52498,
											"end": 53329,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 52498,
											"end": 53329,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 52498,
											"end": 53329,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11332,
											"end": 12222,
											"name": "tag",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 11332,
											"end": 12222,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11385,
											"end": 11392,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11385,
											"end": 11392,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "184F03E93FF9F4DAA797ED6E38ED64BF6A1F01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11460,
											"end": 11475,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11460,
											"end": 11475,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 11456,
											"end": 11555,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 11456,
											"end": 11555,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "184F03E93FF9F4DAA797ED6E38ED64BF6A1F01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11495,
											"end": 11510,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11495,
											"end": 11510,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 11495,
											"end": 11510,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11538,
											"end": 11540,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11528,
											"end": 11540,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11456,
											"end": 11555,
											"name": "tag",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 11456,
											"end": 11555,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11581,
											"end": 11587,
											"name": "PUSH",
											"source": 0,
											"value": "4EE2D6D415B85ACEF8100000000"
										},
										{
											"begin": 11572,
											"end": 11577,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11572,
											"end": 11587,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 11568,
											"end": 11667,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 11568,
											"end": 11667,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11616,
											"end": 11622,
											"name": "PUSH",
											"source": 0,
											"value": "4EE2D6D415B85ACEF8100000000"
										},
										{
											"begin": 11607,
											"end": 11622,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11607,
											"end": 11622,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 11607,
											"end": 11622,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11650,
											"end": 11652,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11640,
											"end": 11652,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11568,
											"end": 11667,
											"name": "tag",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 11568,
											"end": 11667,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11693,
											"end": 11699,
											"name": "PUSH",
											"source": 0,
											"value": "2386F26FC10000"
										},
										{
											"begin": 11684,
											"end": 11689,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11684,
											"end": 11699,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 11680,
											"end": 11779,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 11680,
											"end": 11779,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11728,
											"end": 11734,
											"name": "PUSH",
											"source": 0,
											"value": "2386F26FC10000"
										},
										{
											"begin": 11719,
											"end": 11734,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11719,
											"end": 11734,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 11719,
											"end": 11734,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11762,
											"end": 11764,
											"name": "PUSH",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 11752,
											"end": 11764,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11680,
											"end": 11779,
											"name": "tag",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 11680,
											"end": 11779,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11805,
											"end": 11810,
											"name": "PUSH",
											"source": 0,
											"value": "5F5E100"
										},
										{
											"begin": 11796,
											"end": 11801,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11796,
											"end": 11810,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 11792,
											"end": 11888,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 11792,
											"end": 11888,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11839,
											"end": 11844,
											"name": "PUSH",
											"source": 0,
											"value": "5F5E100"
										},
										{
											"begin": 11830,
											"end": 11844,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11830,
											"end": 11844,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 11830,
											"end": 11844,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11872,
											"end": 11873,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 11862,
											"end": 11873,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11792,
											"end": 11888,
											"name": "tag",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 11792,
											"end": 11888,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11914,
											"end": 11919,
											"name": "PUSH",
											"source": 0,
											"value": "2710"
										},
										{
											"begin": 11905,
											"end": 11910,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11905,
											"end": 11919,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 11901,
											"end": 11997,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 11901,
											"end": 11997,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11948,
											"end": 11953,
											"name": "PUSH",
											"source": 0,
											"value": "2710"
										},
										{
											"begin": 11939,
											"end": 11953,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11939,
											"end": 11953,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 11939,
											"end": 11953,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11981,
											"end": 11982,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11971,
											"end": 11982,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11901,
											"end": 11997,
											"name": "tag",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 11901,
											"end": 11997,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12023,
											"end": 12028,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 12014,
											"end": 12019,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12014,
											"end": 12028,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 12010,
											"end": 12106,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 12010,
											"end": 12106,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12057,
											"end": 12062,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 12048,
											"end": 12062,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12048,
											"end": 12062,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 12048,
											"end": 12062,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12090,
											"end": 12091,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 12080,
											"end": 12091,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12010,
											"end": 12106,
											"name": "tag",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 12010,
											"end": 12106,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12132,
											"end": 12137,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 12123,
											"end": 12128,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12123,
											"end": 12137,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 12119,
											"end": 12183,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 12119,
											"end": 12183,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12167,
											"end": 12168,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 12157,
											"end": 12168,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12209,
											"end": 12215,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 11332,
											"end": 12222,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11332,
											"end": 12222,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14,
											"end": 145,
											"name": "tag",
											"source": 1,
											"value": "257"
										},
										{
											"begin": 14,
											"end": 145,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 88,
											"end": 120,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 88,
											"end": 120,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 78,
											"end": 121,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 78,
											"end": 121,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 68,
											"end": 139,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 68,
											"end": 139,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 135,
											"end": 136,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 132,
											"end": 133,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 125,
											"end": 137,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 150,
											"end": 395,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 150,
											"end": 395,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 208,
											"end": 214,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 261,
											"end": 263,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 249,
											"end": 258,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 240,
											"end": 247,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 236,
											"end": 259,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 232,
											"end": 264,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 229,
											"end": 281,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 229,
											"end": 281,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "265"
										},
										{
											"begin": 229,
											"end": 281,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 277,
											"end": 278,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 274,
											"end": 275,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 267,
											"end": 279,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 229,
											"end": 281,
											"name": "tag",
											"source": 1,
											"value": "265"
										},
										{
											"begin": 229,
											"end": 281,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 316,
											"end": 325,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 303,
											"end": 326,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 335,
											"end": 365,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 359,
											"end": 364,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 335,
											"end": 365,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "257"
										},
										{
											"begin": 335,
											"end": 365,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 592,
											"end": 842,
											"name": "tag",
											"source": 1,
											"value": "258"
										},
										{
											"begin": 592,
											"end": 842,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 677,
											"end": 678,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 687,
											"end": 800,
											"name": "tag",
											"source": 1,
											"value": "269"
										},
										{
											"begin": 687,
											"end": 800,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 701,
											"end": 707,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 698,
											"end": 699,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 695,
											"end": 708,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 687,
											"end": 800,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 687,
											"end": 800,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "271"
										},
										{
											"begin": 687,
											"end": 800,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 777,
											"end": 788,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 777,
											"end": 788,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 777,
											"end": 788,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 771,
											"end": 789,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 758,
											"end": 769,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 758,
											"end": 769,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 758,
											"end": 769,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 751,
											"end": 790,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 723,
											"end": 725,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 716,
											"end": 726,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 687,
											"end": 800,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "269"
										},
										{
											"begin": 687,
											"end": 800,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 687,
											"end": 800,
											"name": "tag",
											"source": 1,
											"value": "271"
										},
										{
											"begin": 687,
											"end": 800,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 834,
											"end": 835,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 816,
											"end": 832,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 816,
											"end": 832,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 809,
											"end": 836,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 592,
											"end": 842,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 847,
											"end": 1118,
											"name": "tag",
											"source": 1,
											"value": "259"
										},
										{
											"begin": 847,
											"end": 1118,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 889,
											"end": 892,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 927,
											"end": 932,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 921,
											"end": 933,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 954,
											"end": 960,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 949,
											"end": 952,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 942,
											"end": 961,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 970,
											"end": 1046,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "273"
										},
										{
											"begin": 1039,
											"end": 1045,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1032,
											"end": 1036,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1027,
											"end": 1030,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1023,
											"end": 1037,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1016,
											"end": 1020,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1009,
											"end": 1014,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1005,
											"end": 1021,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 970,
											"end": 1046,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "258"
										},
										{
											"begin": 970,
											"end": 1046,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 970,
											"end": 1046,
											"name": "tag",
											"source": 1,
											"value": "273"
										},
										{
											"begin": 970,
											"end": 1046,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1100,
											"end": 1102,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1079,
											"end": 1094,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1075,
											"end": 1104,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1066,
											"end": 1105,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1066,
											"end": 1105,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1066,
											"end": 1105,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1066,
											"end": 1105,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1107,
											"end": 1111,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1062,
											"end": 1112,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1062,
											"end": 1112,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 847,
											"end": 1118,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 847,
											"end": 1118,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1123,
											"end": 1343,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 1123,
											"end": 1343,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1272,
											"end": 1274,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1261,
											"end": 1270,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1254,
											"end": 1275,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1235,
											"end": 1239,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1292,
											"end": 1337,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 1333,
											"end": 1335,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1322,
											"end": 1331,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1318,
											"end": 1336,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1310,
											"end": 1316,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1292,
											"end": 1337,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "259"
										},
										{
											"begin": 1292,
											"end": 1337,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1348,
											"end": 1528,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 1348,
											"end": 1528,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1407,
											"end": 1413,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1460,
											"end": 1462,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1448,
											"end": 1457,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1439,
											"end": 1446,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1435,
											"end": 1458,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1431,
											"end": 1463,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1428,
											"end": 1480,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1428,
											"end": 1480,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "277"
										},
										{
											"begin": 1428,
											"end": 1480,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1476,
											"end": 1477,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1473,
											"end": 1474,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1466,
											"end": 1478,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1428,
											"end": 1480,
											"name": "tag",
											"source": 1,
											"value": "277"
										},
										{
											"begin": 1428,
											"end": 1480,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1499,
											"end": 1522,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1499,
											"end": 1522,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1348,
											"end": 1528,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1348,
											"end": 1528,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1741,
											"end": 1914,
											"name": "tag",
											"source": 1,
											"value": "260"
										},
										{
											"begin": 1741,
											"end": 1914,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1809,
											"end": 1829,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1809,
											"end": 1829,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1858,
											"end": 1889,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1858,
											"end": 1889,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1848,
											"end": 1890,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1848,
											"end": 1890,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1838,
											"end": 1908,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "280"
										},
										{
											"begin": 1838,
											"end": 1908,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1904,
											"end": 1905,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1901,
											"end": 1902,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1894,
											"end": 1906,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1838,
											"end": 1908,
											"name": "tag",
											"source": 1,
											"value": "280"
										},
										{
											"begin": 1838,
											"end": 1908,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1741,
											"end": 1914,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1741,
											"end": 1914,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1741,
											"end": 1914,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1741,
											"end": 1914,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1919,
											"end": 2173,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 1919,
											"end": 2173,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1987,
											"end": 1993,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1995,
											"end": 2001,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2048,
											"end": 2050,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2036,
											"end": 2045,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2027,
											"end": 2034,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2023,
											"end": 2046,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2019,
											"end": 2051,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2016,
											"end": 2068,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2016,
											"end": 2068,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "282"
										},
										{
											"begin": 2016,
											"end": 2068,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2064,
											"end": 2065,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2061,
											"end": 2062,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2054,
											"end": 2066,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2016,
											"end": 2068,
											"name": "tag",
											"source": 1,
											"value": "282"
										},
										{
											"begin": 2016,
											"end": 2068,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2087,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "283"
										},
										{
											"begin": 2106,
											"end": 2115,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2087,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "260"
										},
										{
											"begin": 2087,
											"end": 2116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2087,
											"end": 2116,
											"name": "tag",
											"source": 1,
											"value": "283"
										},
										{
											"begin": 2087,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2077,
											"end": 2116,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 2163,
											"end": 2165,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2148,
											"end": 2166,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 2148,
											"end": 2166,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2148,
											"end": 2166,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 2148,
											"end": 2166,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2135,
											"end": 2167,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2135,
											"end": 2167,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1919,
											"end": 2173,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2178,
											"end": 2506,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2178,
											"end": 2506,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2255,
											"end": 2261,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2263,
											"end": 2269,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2271,
											"end": 2277,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2324,
											"end": 2326,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2312,
											"end": 2321,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2303,
											"end": 2310,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2299,
											"end": 2322,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2295,
											"end": 2327,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2292,
											"end": 2344,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2292,
											"end": 2344,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "285"
										},
										{
											"begin": 2292,
											"end": 2344,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2340,
											"end": 2341,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2337,
											"end": 2338,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2330,
											"end": 2342,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2292,
											"end": 2344,
											"name": "tag",
											"source": 1,
											"value": "285"
										},
										{
											"begin": 2292,
											"end": 2344,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2363,
											"end": 2392,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "286"
										},
										{
											"begin": 2382,
											"end": 2391,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2363,
											"end": 2392,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "260"
										},
										{
											"begin": 2363,
											"end": 2392,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2363,
											"end": 2392,
											"name": "tag",
											"source": 1,
											"value": "286"
										},
										{
											"begin": 2363,
											"end": 2392,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2353,
											"end": 2392,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2353,
											"end": 2392,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2411,
											"end": 2449,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "287"
										},
										{
											"begin": 2445,
											"end": 2447,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2434,
											"end": 2443,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2430,
											"end": 2448,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2411,
											"end": 2449,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "260"
										},
										{
											"begin": 2411,
											"end": 2449,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2411,
											"end": 2449,
											"name": "tag",
											"source": 1,
											"value": "287"
										},
										{
											"begin": 2411,
											"end": 2449,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2401,
											"end": 2449,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2401,
											"end": 2449,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2496,
											"end": 2498,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2485,
											"end": 2494,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2481,
											"end": 2499,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2468,
											"end": 2500,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2458,
											"end": 2500,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2458,
											"end": 2500,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2178,
											"end": 2506,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2178,
											"end": 2506,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2178,
											"end": 2506,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2178,
											"end": 2506,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2178,
											"end": 2506,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2178,
											"end": 2506,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2511,
											"end": 2697,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 2511,
											"end": 2697,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2570,
											"end": 2576,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2623,
											"end": 2625,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2611,
											"end": 2620,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2602,
											"end": 2609,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2598,
											"end": 2621,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2594,
											"end": 2626,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2591,
											"end": 2643,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2591,
											"end": 2643,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "289"
										},
										{
											"begin": 2591,
											"end": 2643,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2639,
											"end": 2640,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2636,
											"end": 2637,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2629,
											"end": 2641,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2591,
											"end": 2643,
											"name": "tag",
											"source": 1,
											"value": "289"
										},
										{
											"begin": 2591,
											"end": 2643,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2662,
											"end": 2691,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 2681,
											"end": 2690,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2662,
											"end": 2691,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "260"
										},
										{
											"begin": 2662,
											"end": 2691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2884,
											"end": 3231,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2884,
											"end": 3231,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2949,
											"end": 2955,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2957,
											"end": 2963,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3010,
											"end": 3012,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2998,
											"end": 3007,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2989,
											"end": 2996,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3008,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2981,
											"end": 3013,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2978,
											"end": 3030,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2978,
											"end": 3030,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "293"
										},
										{
											"begin": 2978,
											"end": 3030,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3026,
											"end": 3027,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3023,
											"end": 3024,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3016,
											"end": 3028,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2978,
											"end": 3030,
											"name": "tag",
											"source": 1,
											"value": "293"
										},
										{
											"begin": 2978,
											"end": 3030,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3049,
											"end": 3078,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "294"
										},
										{
											"begin": 3068,
											"end": 3077,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3049,
											"end": 3078,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "260"
										},
										{
											"begin": 3049,
											"end": 3078,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3049,
											"end": 3078,
											"name": "tag",
											"source": 1,
											"value": "294"
										},
										{
											"begin": 3049,
											"end": 3078,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3039,
											"end": 3078,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3039,
											"end": 3078,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3128,
											"end": 3130,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3117,
											"end": 3126,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3113,
											"end": 3131,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3100,
											"end": 3132,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 3175,
											"end": 3180,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3168,
											"end": 3181,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3161,
											"end": 3182,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3154,
											"end": 3159,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3151,
											"end": 3183,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 3141,
											"end": 3201,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "295"
										},
										{
											"begin": 3141,
											"end": 3201,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3197,
											"end": 3198,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3194,
											"end": 3195,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3187,
											"end": 3199,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3141,
											"end": 3201,
											"name": "tag",
											"source": 1,
											"value": "295"
										},
										{
											"begin": 3141,
											"end": 3201,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3220,
											"end": 3225,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3210,
											"end": 3225,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3210,
											"end": 3225,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3210,
											"end": 3225,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2884,
											"end": 3231,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2884,
											"end": 3231,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2884,
											"end": 3231,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2884,
											"end": 3231,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2884,
											"end": 3231,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2884,
											"end": 3231,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3236,
											"end": 3363,
											"name": "tag",
											"source": 1,
											"value": "203"
										},
										{
											"begin": 3236,
											"end": 3363,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3297,
											"end": 3307,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 3292,
											"end": 3295,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 3288,
											"end": 3308,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 3285,
											"end": 3286,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3278,
											"end": 3309,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3328,
											"end": 3332,
											"name": "PUSH",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 3325,
											"end": 3326,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3318,
											"end": 3333,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3352,
											"end": 3356,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3349,
											"end": 3350,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3342,
											"end": 3357,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3368,
											"end": 4506,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3368,
											"end": 4506,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3463,
											"end": 3469,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3471,
											"end": 3477,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3479,
											"end": 3485,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3487,
											"end": 3493,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3540,
											"end": 3543,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 3528,
											"end": 3537,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3519,
											"end": 3526,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 3515,
											"end": 3538,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3511,
											"end": 3544,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3561,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3561,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "298"
										},
										{
											"begin": 3508,
											"end": 3561,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3557,
											"end": 3558,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3554,
											"end": 3555,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3547,
											"end": 3559,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3561,
											"name": "tag",
											"source": 1,
											"value": "298"
										},
										{
											"begin": 3508,
											"end": 3561,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3580,
											"end": 3609,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "299"
										},
										{
											"begin": 3599,
											"end": 3608,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3580,
											"end": 3609,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "260"
										},
										{
											"begin": 3580,
											"end": 3609,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3580,
											"end": 3609,
											"name": "tag",
											"source": 1,
											"value": "299"
										},
										{
											"begin": 3580,
											"end": 3609,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3570,
											"end": 3609,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3570,
											"end": 3609,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3628,
											"end": 3666,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "300"
										},
										{
											"begin": 3662,
											"end": 3664,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3651,
											"end": 3660,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3647,
											"end": 3665,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3628,
											"end": 3666,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "260"
										},
										{
											"begin": 3628,
											"end": 3666,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3628,
											"end": 3666,
											"name": "tag",
											"source": 1,
											"value": "300"
										},
										{
											"begin": 3628,
											"end": 3666,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3618,
											"end": 3666,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3618,
											"end": 3666,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3713,
											"end": 3715,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3702,
											"end": 3711,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3698,
											"end": 3716,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3685,
											"end": 3717,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 3675,
											"end": 3717,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3675,
											"end": 3717,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3768,
											"end": 3770,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 3757,
											"end": 3766,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3753,
											"end": 3771,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3740,
											"end": 3772,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 3791,
											"end": 3809,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3832,
											"end": 3834,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3824,
											"end": 3830,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3821,
											"end": 3835,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 3818,
											"end": 3852,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3818,
											"end": 3852,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "301"
										},
										{
											"begin": 3818,
											"end": 3852,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3848,
											"end": 3849,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3845,
											"end": 3846,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3838,
											"end": 3850,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3818,
											"end": 3852,
											"name": "tag",
											"source": 1,
											"value": "301"
										},
										{
											"begin": 3818,
											"end": 3852,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3886,
											"end": 3892,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3875,
											"end": 3884,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 3871,
											"end": 3893,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3861,
											"end": 3893,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3861,
											"end": 3893,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3931,
											"end": 3938,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 3924,
											"end": 3928,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 3920,
											"end": 3922,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3916,
											"end": 3929,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3912,
											"end": 3939,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 3902,
											"end": 3957,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "302"
										},
										{
											"begin": 3902,
											"end": 3957,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3953,
											"end": 3954,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3950,
											"end": 3951,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3943,
											"end": 3955,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3902,
											"end": 3957,
											"name": "tag",
											"source": 1,
											"value": "302"
										},
										{
											"begin": 3902,
											"end": 3957,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3989,
											"end": 3991,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3976,
											"end": 3992,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 4011,
											"end": 4013,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4007,
											"end": 4009,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4004,
											"end": 4014,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 4001,
											"end": 4037,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4001,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "304"
										},
										{
											"begin": 4001,
											"end": 4037,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4017,
											"end": 4035,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "304"
										},
										{
											"begin": 4017,
											"end": 4035,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "203"
										},
										{
											"begin": 4017,
											"end": 4035,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4017,
											"end": 4035,
											"name": "tag",
											"source": 1,
											"value": "304"
										},
										{
											"begin": 4017,
											"end": 4035,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 4094,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4086,
											"end": 4095,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4060,
											"end": 4062,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 4146,
											"end": 4159,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4146,
											"end": 4159,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4142,
											"end": 4164,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4142,
											"end": 4164,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4142,
											"end": 4164,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4166,
											"end": 4168,
											"name": "PUSH",
											"source": 1,
											"value": "3F"
										},
										{
											"begin": 4138,
											"end": 4169,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4134,
											"end": 4174,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4122,
											"end": 4175,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4122,
											"end": 4175,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4122,
											"end": 4175,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4190,
											"end": 4208,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4190,
											"end": 4208,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4190,
											"end": 4208,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 4210,
											"end": 4232,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4210,
											"end": 4232,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4210,
											"end": 4232,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 4187,
											"end": 4233,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 4184,
											"end": 4256,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4184,
											"end": 4256,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "306"
										},
										{
											"begin": 4184,
											"end": 4256,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4236,
											"end": 4254,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "306"
										},
										{
											"begin": 4236,
											"end": 4254,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "203"
										},
										{
											"begin": 4236,
											"end": 4254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4236,
											"end": 4254,
											"name": "tag",
											"source": 1,
											"value": "306"
										},
										{
											"begin": 4236,
											"end": 4254,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4276,
											"end": 4286,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4272,
											"end": 4274,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4265,
											"end": 4287,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4311,
											"end": 4313,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4303,
											"end": 4309,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4296,
											"end": 4314,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4351,
											"end": 4358,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 4346,
											"end": 4348,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4341,
											"end": 4343,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4337,
											"end": 4339,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 4333,
											"end": 4344,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4329,
											"end": 4349,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4326,
											"end": 4359,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 4323,
											"end": 4376,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4323,
											"end": 4376,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "307"
										},
										{
											"begin": 4323,
											"end": 4376,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4372,
											"end": 4373,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4369,
											"end": 4370,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4362,
											"end": 4374,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4323,
											"end": 4376,
											"name": "tag",
											"source": 1,
											"value": "307"
										},
										{
											"begin": 4323,
											"end": 4376,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4428,
											"end": 4430,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4423,
											"end": 4425,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4419,
											"end": 4421,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4415,
											"end": 4426,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4410,
											"end": 4412,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4402,
											"end": 4408,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4398,
											"end": 4413,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4385,
											"end": 4431,
											"name": "CALLDATACOPY",
											"source": 1
										},
										{
											"begin": 4473,
											"end": 4474,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4468,
											"end": 4470,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4463,
											"end": 4465,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4455,
											"end": 4461,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4451,
											"end": 4466,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4447,
											"end": 4471,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4440,
											"end": 4475,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4494,
											"end": 4500,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4484,
											"end": 4500,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 4484,
											"end": 4500,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4484,
											"end": 4500,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4484,
											"end": 4500,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4484,
											"end": 4500,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4484,
											"end": 4500,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4484,
											"end": 4500,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3368,
											"end": 4506,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3368,
											"end": 4506,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 3368,
											"end": 4506,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3368,
											"end": 4506,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 3368,
											"end": 4506,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3368,
											"end": 4506,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3368,
											"end": 4506,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3368,
											"end": 4506,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4511,
											"end": 4771,
											"name": "tag",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 4511,
											"end": 4771,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4579,
											"end": 4585,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4587,
											"end": 4593,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4640,
											"end": 4642,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4628,
											"end": 4637,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4619,
											"end": 4626,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4615,
											"end": 4638,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4611,
											"end": 4643,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 4608,
											"end": 4660,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4608,
											"end": 4660,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "309"
										},
										{
											"begin": 4608,
											"end": 4660,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4656,
											"end": 4657,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4653,
											"end": 4654,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4646,
											"end": 4658,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4608,
											"end": 4660,
											"name": "tag",
											"source": 1,
											"value": "309"
										},
										{
											"begin": 4608,
											"end": 4660,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4679,
											"end": 4708,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "310"
										},
										{
											"begin": 4698,
											"end": 4707,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4679,
											"end": 4708,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "260"
										},
										{
											"begin": 4679,
											"end": 4708,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4679,
											"end": 4708,
											"name": "tag",
											"source": 1,
											"value": "310"
										},
										{
											"begin": 4679,
											"end": 4708,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4669,
											"end": 4708,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4669,
											"end": 4708,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4727,
											"end": 4765,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "311"
										},
										{
											"begin": 4761,
											"end": 4763,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4750,
											"end": 4759,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4746,
											"end": 4764,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4727,
											"end": 4765,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "260"
										},
										{
											"begin": 4727,
											"end": 4765,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4727,
											"end": 4765,
											"name": "tag",
											"source": 1,
											"value": "311"
										},
										{
											"begin": 4727,
											"end": 4765,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4717,
											"end": 4765,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4717,
											"end": 4765,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4511,
											"end": 4771,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4511,
											"end": 4771,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4511,
											"end": 4771,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4511,
											"end": 4771,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4511,
											"end": 4771,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4511,
											"end": 4771,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 5156,
											"name": "tag",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 4776,
											"end": 5156,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4856,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4851,
											"end": 4863,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4851,
											"end": 4863,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4851,
											"end": 4863,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 4851,
											"end": 4863,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4898,
											"end": 4910,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4898,
											"end": 4910,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4898,
											"end": 4910,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4919,
											"end": 4980,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "313"
										},
										{
											"begin": 4919,
											"end": 4980,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4973,
											"end": 4977,
											"name": "PUSH",
											"source": 1,
											"value": "7F"
										},
										{
											"begin": 4965,
											"end": 4971,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4961,
											"end": 4978,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4978,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4978,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4919,
											"end": 4980,
											"name": "tag",
											"source": 1,
											"value": "313"
										},
										{
											"begin": 4919,
											"end": 4980,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5026,
											"end": 5028,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5018,
											"end": 5024,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5015,
											"end": 5029,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 4995,
											"end": 5013,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4992,
											"end": 5030,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4989,
											"end": 5150,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "314"
										},
										{
											"begin": 4989,
											"end": 5150,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5072,
											"end": 5082,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 5067,
											"end": 5070,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 5063,
											"end": 5083,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 5060,
											"end": 5061,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5053,
											"end": 5084,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5107,
											"end": 5111,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 5104,
											"end": 5105,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5097,
											"end": 5112,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5135,
											"end": 5139,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5132,
											"end": 5133,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5125,
											"end": 5140,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4989,
											"end": 5150,
											"name": "tag",
											"source": 1,
											"value": "314"
										},
										{
											"begin": 4989,
											"end": 5150,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4989,
											"end": 5150,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 5156,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 5156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 5156,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 5156,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5993,
											"end": 6402,
											"name": "tag",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 5993,
											"end": 6402,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6195,
											"end": 6197,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6177,
											"end": 6198,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6177,
											"end": 6198,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6177,
											"end": 6198,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6234,
											"end": 6236,
											"name": "PUSH",
											"source": 1,
											"value": "2D"
										},
										{
											"begin": 6214,
											"end": 6232,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6214,
											"end": 6232,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6214,
											"end": 6232,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6207,
											"end": 6237,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6273,
											"end": 6307,
											"name": "PUSH",
											"source": 1,
											"value": "4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65"
										},
										{
											"begin": 6268,
											"end": 6270,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6253,
											"end": 6271,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6253,
											"end": 6271,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6246,
											"end": 6308,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1C881BDC88185C1C1C9BDD9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "9A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6339,
											"end": 6341,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 6324,
											"end": 6342,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6324,
											"end": 6342,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6317,
											"end": 6360,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6392,
											"end": 6395,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 6377,
											"end": 6396,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6377,
											"end": 6396,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5993,
											"end": 6402,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7170,
											"end": 7666,
											"name": "tag",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 7170,
											"end": 7666,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7349,
											"end": 7352,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7387,
											"end": 7393,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7381,
											"end": 7394,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7403,
											"end": 7469,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "321"
										},
										{
											"begin": 7462,
											"end": 7468,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7457,
											"end": 7460,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7450,
											"end": 7454,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7442,
											"end": 7448,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 7438,
											"end": 7455,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7403,
											"end": 7469,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "258"
										},
										{
											"begin": 7403,
											"end": 7469,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7403,
											"end": 7469,
											"name": "tag",
											"source": 1,
											"value": "321"
										},
										{
											"begin": 7403,
											"end": 7469,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7532,
											"end": 7545,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7532,
											"end": 7545,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7491,
											"end": 7507,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7491,
											"end": 7507,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7491,
											"end": 7507,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7491,
											"end": 7507,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7554,
											"end": 7624,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "322"
										},
										{
											"begin": 7532,
											"end": 7545,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7491,
											"end": 7507,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7601,
											"end": 7605,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7589,
											"end": 7606,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 7589,
											"end": 7606,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7554,
											"end": 7624,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "258"
										},
										{
											"begin": 7554,
											"end": 7624,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7554,
											"end": 7624,
											"name": "tag",
											"source": 1,
											"value": "322"
										},
										{
											"begin": 7554,
											"end": 7624,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7640,
											"end": 7660,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7640,
											"end": 7660,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 7170,
											"end": 7666,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7170,
											"end": 7666,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7671,
											"end": 8072,
											"name": "tag",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 7671,
											"end": 8072,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7873,
											"end": 7875,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7855,
											"end": 7876,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7855,
											"end": 7876,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7855,
											"end": 7876,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7912,
											"end": 7914,
											"name": "PUSH",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 7892,
											"end": 7910,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7892,
											"end": 7910,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7892,
											"end": 7910,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7885,
											"end": 7915,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7951,
											"end": 7985,
											"name": "PUSH",
											"source": 1,
											"value": "4552433732313A207472616E736665722066726F6D20696E636F727265637420"
										},
										{
											"begin": 7946,
											"end": 7948,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7931,
											"end": 7949,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7931,
											"end": 7949,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7924,
											"end": 7986,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "37BBB732B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8017,
											"end": 8019,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 8002,
											"end": 8020,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8002,
											"end": 8020,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7995,
											"end": 8030,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8062,
											"end": 8065,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 8047,
											"end": 8066,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8047,
											"end": 8066,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7671,
											"end": 8072,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8836,
											"end": 9250,
											"name": "tag",
											"source": 1,
											"value": "196"
										},
										{
											"begin": 8836,
											"end": 9250,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9038,
											"end": 9040,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9020,
											"end": 9041,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9020,
											"end": 9041,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9020,
											"end": 9041,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9077,
											"end": 9079,
											"name": "PUSH",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 9057,
											"end": 9075,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9057,
											"end": 9075,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9057,
											"end": 9075,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9050,
											"end": 9080,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9116,
											"end": 9150,
											"name": "PUSH",
											"source": 1,
											"value": "4552433732313A207472616E7366657220746F206E6F6E204552433732315265"
										},
										{
											"begin": 9111,
											"end": 9113,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9096,
											"end": 9114,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9096,
											"end": 9114,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9089,
											"end": 9151,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "31B2B4BB32B91034B6B83632B6B2B73A32B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9182,
											"end": 9184,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 9167,
											"end": 9185,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9167,
											"end": 9185,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9160,
											"end": 9208,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9240,
											"end": 9243,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 9225,
											"end": 9244,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9225,
											"end": 9244,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8836,
											"end": 9250,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9387,
											"end": 9876,
											"name": "tag",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 9387,
											"end": 9876,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9656,
											"end": 9671,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 9656,
											"end": 9671,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9656,
											"end": 9671,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9638,
											"end": 9672,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9638,
											"end": 9672,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9708,
											"end": 9723,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9708,
											"end": 9723,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9703,
											"end": 9705,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9688,
											"end": 9706,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9688,
											"end": 9706,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9681,
											"end": 9724,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9755,
											"end": 9757,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9740,
											"end": 9758,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9740,
											"end": 9758,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9733,
											"end": 9767,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9733,
											"end": 9767,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9733,
											"end": 9767,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9803,
											"end": 9806,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 9798,
											"end": 9800,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 9783,
											"end": 9801,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9783,
											"end": 9801,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9776,
											"end": 9807,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9776,
											"end": 9807,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9776,
											"end": 9807,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9581,
											"end": 9585,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9581,
											"end": 9585,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9824,
											"end": 9870,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "329"
										},
										{
											"begin": 9824,
											"end": 9870,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9850,
											"end": 9869,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9850,
											"end": 9869,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9842,
											"end": 9848,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9824,
											"end": 9870,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "259"
										},
										{
											"begin": 9824,
											"end": 9870,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9824,
											"end": 9870,
											"name": "tag",
											"source": 1,
											"value": "329"
										},
										{
											"begin": 9824,
											"end": 9870,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9816,
											"end": 9870,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": 9387,
											"end": 9876,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9387,
											"end": 9876,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9881,
											"end": 10130,
											"name": "tag",
											"source": 1,
											"value": "224"
										},
										{
											"begin": 9881,
											"end": 10130,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9950,
											"end": 9956,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10003,
											"end": 10005,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9991,
											"end": 10000,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9982,
											"end": 9989,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9978,
											"end": 10001,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9974,
											"end": 10006,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 9971,
											"end": 10023,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 9971,
											"end": 10023,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "331"
										},
										{
											"begin": 9971,
											"end": 10023,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10019,
											"end": 10020,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10016,
											"end": 10017,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10009,
											"end": 10021,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 9971,
											"end": 10023,
											"name": "tag",
											"source": 1,
											"value": "331"
										},
										{
											"begin": 9971,
											"end": 10023,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10051,
											"end": 10060,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10045,
											"end": 10061,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10070,
											"end": 10100,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 10094,
											"end": 10099,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10070,
											"end": 10100,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "257"
										},
										{
											"begin": 10070,
											"end": 10100,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"MY MainNFT/Art_Gallary_flattened.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the contract by setting a `name` and a `symbol` to the token collection.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"MY MainNFT/Art_Gallary_flattened.sol\":\"ERC721\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"MY MainNFT/Art_Gallary_flattened.sol\":{\"keccak256\":\"0xaf5042eaa850dd12634ada6c4a80f9eac944cbf1a07306ac12ad88fb4ebdf638\",\"urls\":[\"bzz-raw://92d8b46669fb9a8ae9be91f30bae3e59b90f4f3d79266cb86bcc26fafe432e46\",\"dweb:/ipfs/QmTFBZv39VF38YMNmvi1QeXEe9S3A16qk8Xr8tiBwghQu5\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1807,
								"contract": "MY MainNFT/Art_Gallary_flattened.sol:ERC721",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 1809,
								"contract": "MY MainNFT/Art_Gallary_flattened.sol:ERC721",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 1813,
								"contract": "MY MainNFT/Art_Gallary_flattened.sol:ERC721",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 1817,
								"contract": "MY MainNFT/Art_Gallary_flattened.sol:ERC721",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1821,
								"contract": "MY MainNFT/Art_Gallary_flattened.sol:ERC721",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 1827,
								"contract": "MY MainNFT/Art_Gallary_flattened.sol:ERC721",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC721Enumerable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "tokenByIndex",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "tokenOfOwnerByIndex",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "This implements an optional extension of {ERC721} defined in the EIP that adds enumerability of all the token ids in the contract as well as all token ids owned by each account.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenByIndex(uint256)": {
								"details": "See {IERC721Enumerable-tokenByIndex}."
							},
							"tokenOfOwnerByIndex(address,uint256)": {
								"details": "See {IERC721Enumerable-tokenOfOwnerByIndex}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"totalSupply()": {
								"details": "See {IERC721Enumerable-totalSupply}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenByIndex(uint256)": "4f6ccce7",
							"tokenOfOwnerByIndex(address,uint256)": "2f745c59",
							"tokenURI(uint256)": "c87b56dd",
							"totalSupply()": "18160ddd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This implements an optional extension of {ERC721} defined in the EIP that adds enumerability of all the token ids in the contract as well as all token ids owned by each account.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenByIndex(uint256)\":{\"details\":\"See {IERC721Enumerable-tokenByIndex}.\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"See {IERC721Enumerable-tokenOfOwnerByIndex}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"totalSupply()\":{\"details\":\"See {IERC721Enumerable-totalSupply}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"MY MainNFT/Art_Gallary_flattened.sol\":\"ERC721Enumerable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"MY MainNFT/Art_Gallary_flattened.sol\":{\"keccak256\":\"0xaf5042eaa850dd12634ada6c4a80f9eac944cbf1a07306ac12ad88fb4ebdf638\",\"urls\":[\"bzz-raw://92d8b46669fb9a8ae9be91f30bae3e59b90f4f3d79266cb86bcc26fafe432e46\",\"dweb:/ipfs/QmTFBZv39VF38YMNmvi1QeXEe9S3A16qk8Xr8tiBwghQu5\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1807,
								"contract": "MY MainNFT/Art_Gallary_flattened.sol:ERC721Enumerable",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 1809,
								"contract": "MY MainNFT/Art_Gallary_flattened.sol:ERC721Enumerable",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 1813,
								"contract": "MY MainNFT/Art_Gallary_flattened.sol:ERC721Enumerable",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 1817,
								"contract": "MY MainNFT/Art_Gallary_flattened.sol:ERC721Enumerable",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1821,
								"contract": "MY MainNFT/Art_Gallary_flattened.sol:ERC721Enumerable",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 1827,
								"contract": "MY MainNFT/Art_Gallary_flattened.sol:ERC721Enumerable",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 2720,
								"contract": "MY MainNFT/Art_Gallary_flattened.sol:ERC721Enumerable",
								"label": "_ownedTokens",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))"
							},
							{
								"astId": 2724,
								"contract": "MY MainNFT/Art_Gallary_flattened.sol:ERC721Enumerable",
								"label": "_ownedTokensIndex",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_uint256,t_uint256)"
							},
							{
								"astId": 2727,
								"contract": "MY MainNFT/Art_Gallary_flattened.sol:ERC721Enumerable",
								"label": "_allTokens",
								"offset": 0,
								"slot": "8",
								"type": "t_array(t_uint256)dyn_storage"
							},
							{
								"astId": 2731,
								"contract": "MY MainNFT/Art_Gallary_flattened.sol:ERC721Enumerable",
								"label": "_allTokensIndex",
								"offset": 0,
								"slot": "9",
								"type": "t_mapping(t_uint256,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_uint256)dyn_storage": {
								"base": "t_uint256",
								"encoding": "dynamic_array",
								"label": "uint256[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(uint256 => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_uint256,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_uint256,t_uint256)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"MY MainNFT/Art_Gallary_flattened.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"MY MainNFT/Art_Gallary_flattened.sol\":{\"keccak256\":\"0xaf5042eaa850dd12634ada6c4a80f9eac944cbf1a07306ac12ad88fb4ebdf638\",\"urls\":[\"bzz-raw://92d8b46669fb9a8ae9be91f30bae3e59b90f4f3d79266cb86bcc26fafe432e46\",\"dweb:/ipfs/QmTFBZv39VF38YMNmvi1QeXEe9S3A16qk8Xr8tiBwghQu5\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC721 compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"MY MainNFT/Art_Gallary_flattened.sol\":\"IERC721\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"MY MainNFT/Art_Gallary_flattened.sol\":{\"keccak256\":\"0xaf5042eaa850dd12634ada6c4a80f9eac944cbf1a07306ac12ad88fb4ebdf638\",\"urls\":[\"bzz-raw://92d8b46669fb9a8ae9be91f30bae3e59b90f4f3d79266cb86bcc26fafe432e46\",\"dweb:/ipfs/QmTFBZv39VF38YMNmvi1QeXEe9S3A16qk8Xr8tiBwghQu5\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Enumerable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "tokenByIndex",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "tokenOfOwnerByIndex",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "See https://eips.ethereum.org/EIPS/eip-721",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"tokenByIndex(uint256)": {
								"details": "Returns a token ID at a given `index` of all the tokens stored by the contract. Use along with {totalSupply} to enumerate all tokens."
							},
							"tokenOfOwnerByIndex(address,uint256)": {
								"details": "Returns a token ID owned by `owner` at a given `index` of its token list. Use along with {balanceOf} to enumerate all of ``owner``'s tokens."
							},
							"totalSupply()": {
								"details": "Returns the total amount of tokens stored by the contract."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "ERC-721 Non-Fungible Token Standard, optional enumeration extension",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"tokenByIndex(uint256)": "4f6ccce7",
							"tokenOfOwnerByIndex(address,uint256)": "2f745c59",
							"totalSupply()": "18160ddd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"tokenByIndex(uint256)\":{\"details\":\"Returns a token ID at a given `index` of all the tokens stored by the contract. Use along with {totalSupply} to enumerate all tokens.\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"Returns a token ID owned by `owner` at a given `index` of its token list. Use along with {balanceOf} to enumerate all of ``owner``'s tokens.\"},\"totalSupply()\":{\"details\":\"Returns the total amount of tokens stored by the contract.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional enumeration extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"MY MainNFT/Art_Gallary_flattened.sol\":\"IERC721Enumerable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"MY MainNFT/Art_Gallary_flattened.sol\":{\"keccak256\":\"0xaf5042eaa850dd12634ada6c4a80f9eac944cbf1a07306ac12ad88fb4ebdf638\",\"urls\":[\"bzz-raw://92d8b46669fb9a8ae9be91f30bae3e59b90f4f3d79266cb86bcc26fafe432e46\",\"dweb:/ipfs/QmTFBZv39VF38YMNmvi1QeXEe9S3A16qk8Xr8tiBwghQu5\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "See https://eips.ethereum.org/EIPS/eip-721",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "ERC-721 Non-Fungible Token Standard, optional metadata extension",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"MY MainNFT/Art_Gallary_flattened.sol\":\"IERC721Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"MY MainNFT/Art_Gallary_flattened.sol\":{\"keccak256\":\"0xaf5042eaa850dd12634ada6c4a80f9eac944cbf1a07306ac12ad88fb4ebdf638\",\"urls\":[\"bzz-raw://92d8b46669fb9a8ae9be91f30bae3e59b90f4f3d79266cb86bcc26fafe432e46\",\"dweb:/ipfs/QmTFBZv39VF38YMNmvi1QeXEe9S3A16qk8Xr8tiBwghQu5\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.",
						"kind": "dev",
						"methods": {
							"onERC721Received(address,address,uint256,bytes)": {
								"details": "Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
							}
						},
						"title": "ERC721 token receiver interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC721Received(address,address,uint256,bytes)": "150b7a02"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"MY MainNFT/Art_Gallary_flattened.sol\":\"IERC721Receiver\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"MY MainNFT/Art_Gallary_flattened.sol\":{\"keccak256\":\"0xaf5042eaa850dd12634ada6c4a80f9eac944cbf1a07306ac12ad88fb4ebdf638\",\"urls\":[\"bzz-raw://92d8b46669fb9a8ae9be91f30bae3e59b90f4f3d79266cb86bcc26fafe432e46\",\"dweb:/ipfs/QmTFBZv39VF38YMNmvi1QeXEe9S3A16qk8Xr8tiBwghQu5\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Math": {
					"abi": [],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"MY MainNFT/Art_Gallary_flattened.sol\":1645:13947  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":1645:13947  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220cb3cb7e99860469e8e68a961f77b3b45f8ae83bc26fef80c9f5cb37aca450abd64736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220cb3cb7e99860469e8e68a961f77b3b45f8ae83bc26fef80c9f5cb37aca450abd64736f6c63430008120033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCB EXTCODECOPY 0xB7 0xE9 SWAP9 PUSH1 0x46 SWAP15 DUP15 PUSH9 0xA961F77B3B45F8AE83 0xBC 0x26 INVALID 0xF8 0xC SWAP16 0x5C 0xB3 PUSH27 0xCA450ABD64736F6C63430008120033000000000000000000000000 ",
							"sourceMap": "1645:12302:0:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;1645:12302:0;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220cb3cb7e99860469e8e68a961f77b3b45f8ae83bc26fef80c9f5cb37aca450abd64736f6c63430008120033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCB EXTCODECOPY 0xB7 0xE9 SWAP9 PUSH1 0x46 SWAP15 DUP15 PUSH9 0xA961F77B3B45F8AE83 0xBC 0x26 INVALID 0xF8 0xC SWAP16 0x5C 0xB3 PUSH27 0xCA450ABD64736F6C63430008120033000000000000000000000000 ",
							"sourceMap": "1645:12302:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1645,
									"end": 13947,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1645,
									"end": 13947,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1645,
									"end": 13947,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 1645,
									"end": 13947,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1645,
									"end": 13947,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1645,
									"end": 13947,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1645,
									"end": 13947,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 1645,
									"end": 13947,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1645,
									"end": 13947,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1645,
									"end": 13947,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1645,
									"end": 13947,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 1645,
									"end": 13947,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 1645,
									"end": 13947,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 1645,
									"end": 13947,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1645,
									"end": 13947,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1645,
									"end": 13947,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1645,
									"end": 13947,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1645,
									"end": 13947,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1645,
									"end": 13947,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1645,
									"end": 13947,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1645,
									"end": 13947,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 1645,
									"end": 13947,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1645,
									"end": 13947,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1645,
									"end": 13947,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1645,
									"end": 13947,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1645,
									"end": 13947,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 1645,
									"end": 13947,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1645,
									"end": 13947,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1645,
									"end": 13947,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 1645,
									"end": 13947,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1645,
									"end": 13947,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 1645,
									"end": 13947,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1645,
									"end": 13947,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1645,
									"end": 13947,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220cb3cb7e99860469e8e68a961f77b3b45f8ae83bc26fef80c9f5cb37aca450abd64736f6c63430008120033",
									".code": [
										{
											"begin": 1645,
											"end": 13947,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 1645,
											"end": 13947,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 1645,
											"end": 13947,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1645,
											"end": 13947,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1645,
											"end": 13947,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1645,
											"end": 13947,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1645,
											"end": 13947,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1645,
											"end": 13947,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1645,
											"end": 13947,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"MY MainNFT/Art_Gallary_flattened.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"MY MainNFT/Art_Gallary_flattened.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"MY MainNFT/Art_Gallary_flattened.sol\":{\"keccak256\":\"0xaf5042eaa850dd12634ada6c4a80f9eac944cbf1a07306ac12ad88fb4ebdf638\",\"urls\":[\"bzz-raw://92d8b46669fb9a8ae9be91f30bae3e59b90f4f3d79266cb86bcc26fafe432e46\",\"dweb:/ipfs/QmTFBZv39VF38YMNmvi1QeXEe9S3A16qk8Xr8tiBwghQu5\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"MY MainNFT/Art_Gallary_flattened.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"MY MainNFT/Art_Gallary_flattened.sol\":{\"keccak256\":\"0xaf5042eaa850dd12634ada6c4a80f9eac944cbf1a07306ac12ad88fb4ebdf638\",\"urls\":[\"bzz-raw://92d8b46669fb9a8ae9be91f30bae3e59b90f4f3d79266cb86bcc26fafe432e46\",\"dweb:/ipfs/QmTFBZv39VF38YMNmvi1QeXEe9S3A16qk8Xr8tiBwghQu5\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1137,
								"contract": "MY MainNFT/Art_Gallary_flattened.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Strings": {
					"abi": [],
					"devdoc": {
						"details": "String operations.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"MY MainNFT/Art_Gallary_flattened.sol\":14132:16197  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"MY MainNFT/Art_Gallary_flattened.sol\":14132:16197  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220679f8465449706ac6c2192254361a81de5fb784d31d89060a1d3b4b3c87facb964736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220679f8465449706ac6c2192254361a81de5fb784d31d89060a1d3b4b3c87facb964736f6c63430008120033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH8 0x9F8465449706AC6C 0x21 SWAP3 0x25 NUMBER PUSH2 0xA81D 0xE5 0xFB PUSH25 0x4D31D89060A1D3B4B3C87FACB964736F6C6343000812003300 ",
							"sourceMap": "14132:2065:0:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;14132:2065:0;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220679f8465449706ac6c2192254361a81de5fb784d31d89060a1d3b4b3c87facb964736f6c63430008120033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH8 0x9F8465449706AC6C 0x21 SWAP3 0x25 NUMBER PUSH2 0xA81D 0xE5 0xFB PUSH25 0x4D31D89060A1D3B4B3C87FACB964736F6C6343000812003300 ",
							"sourceMap": "14132:2065:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"toHexString(address)": "infinite",
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 14132,
									"end": 16197,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 14132,
									"end": 16197,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 14132,
									"end": 16197,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 14132,
									"end": 16197,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 14132,
									"end": 16197,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 14132,
									"end": 16197,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 14132,
									"end": 16197,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 14132,
									"end": 16197,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 14132,
									"end": 16197,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 14132,
									"end": 16197,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 14132,
									"end": 16197,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 14132,
									"end": 16197,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 14132,
									"end": 16197,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 14132,
									"end": 16197,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 14132,
									"end": 16197,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 14132,
									"end": 16197,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 14132,
									"end": 16197,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 14132,
									"end": 16197,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 14132,
									"end": 16197,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 14132,
									"end": 16197,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 14132,
									"end": 16197,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 14132,
									"end": 16197,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 14132,
									"end": 16197,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 14132,
									"end": 16197,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 14132,
									"end": 16197,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 14132,
									"end": 16197,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 14132,
									"end": 16197,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 14132,
									"end": 16197,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 14132,
									"end": 16197,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 14132,
									"end": 16197,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 14132,
									"end": 16197,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 14132,
									"end": 16197,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 14132,
									"end": 16197,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 14132,
									"end": 16197,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220679f8465449706ac6c2192254361a81de5fb784d31d89060a1d3b4b3c87facb964736f6c63430008120033",
									".code": [
										{
											"begin": 14132,
											"end": 16197,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 14132,
											"end": 16197,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 14132,
											"end": 16197,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 14132,
											"end": 16197,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 14132,
											"end": 16197,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14132,
											"end": 16197,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14132,
											"end": 16197,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14132,
											"end": 16197,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14132,
											"end": 16197,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"MY MainNFT/Art_Gallary_flattened.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"MY MainNFT/Art_Gallary_flattened.sol\":\"Strings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"MY MainNFT/Art_Gallary_flattened.sol\":{\"keccak256\":\"0xaf5042eaa850dd12634ada6c4a80f9eac944cbf1a07306ac12ad88fb4ebdf638\",\"urls\":[\"bzz-raw://92d8b46669fb9a8ae9be91f30bae3e59b90f4f3d79266cb86bcc26fafe432e46\",\"dweb:/ipfs/QmTFBZv39VF38YMNmvi1QeXEe9S3A16qk8Xr8tiBwghQu5\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> MY MainNFT/Art_Gallary_flattened.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "MY MainNFT/Art_Gallary_flattened.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"MY MainNFT/Art_Gallary_flattened.sol": {
				"ast": {
					"absolutePath": "MY MainNFT/Art_Gallary_flattened.sol",
					"exportedSymbols": {
						"Address": [
							1571
						],
						"Art_Gallary": [
							3155
						],
						"Context": [
							1131
						],
						"Counters": [
							73
						],
						"ERC165": [
							1621
						],
						"ERC721": [
							2708
						],
						"ERC721Enumerable": [
							3059
						],
						"IERC165": [
							1599
						],
						"IERC721": [
							1735
						],
						"IERC721Enumerable": [
							1764
						],
						"IERC721Metadata": [
							1789
						],
						"IERC721Receiver": [
							1588
						],
						"Math": [
							937
						],
						"Ownable": [
							1242
						],
						"Strings": [
							1110
						]
					},
					"id": 3156,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "110:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Counters",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "135:311:0",
								"text": " @title Counters\n @author Matt Condon (@shrugs)\n @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n of elements in a mapping, issuing ERC721 ids, or counting request ids.\n Include with `using Counters for Counters.Counter;`"
							},
							"fullyImplemented": true,
							"id": 73,
							"linearizedBaseContracts": [
								73
							],
							"name": "Counters",
							"nameLocation": "455:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Counters.Counter",
									"id": 5,
									"members": [
										{
											"constant": false,
											"id": 4,
											"mutability": "mutable",
											"name": "_value",
											"nameLocation": "817:6:0",
											"nodeType": "VariableDeclaration",
											"scope": 5,
											"src": "809:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 3,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "809:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Counter",
									"nameLocation": "477:7:0",
									"nodeType": "StructDefinition",
									"scope": 73,
									"src": "470:374:0",
									"visibility": "public"
								},
								{
									"body": {
										"id": 16,
										"nodeType": "Block",
										"src": "924:38:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 13,
														"name": "counter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "941:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Counter_$5_storage_ptr",
															"typeString": "struct Counters.Counter storage pointer"
														}
													},
													"id": 14,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "949:6:0",
													"memberName": "_value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 4,
													"src": "941:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 12,
												"id": 15,
												"nodeType": "Return",
												"src": "934:21:0"
											}
										]
									},
									"id": 17,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "current",
									"nameLocation": "859:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 8,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "883:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 17,
												"src": "867:23:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$5_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 7,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 6,
														"name": "Counter",
														"nameLocations": [
															"867:7:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 5,
														"src": "867:7:0"
													},
													"referencedDeclaration": 5,
													"src": "867:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$5_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "866:25:0"
									},
									"returnParameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 17,
												"src": "915:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 10,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "915:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "914:9:0"
									},
									"scope": 73,
									"src": "850:112:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 30,
										"nodeType": "Block",
										"src": "1021:70:0",
										"statements": [
											{
												"id": 29,
												"nodeType": "UncheckedBlock",
												"src": "1031:54:0",
												"statements": [
													{
														"expression": {
															"id": 27,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"id": 23,
																	"name": "counter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 20,
																	"src": "1055:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Counter_$5_storage_ptr",
																		"typeString": "struct Counters.Counter storage pointer"
																	}
																},
																"id": 25,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "1063:6:0",
																"memberName": "_value",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 4,
																"src": "1055:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"hexValue": "31",
																"id": 26,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1073:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "1055:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 28,
														"nodeType": "ExpressionStatement",
														"src": "1055:19:0"
													}
												]
											}
										]
									},
									"id": 31,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increment",
									"nameLocation": "977:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 21,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "1003:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "987:23:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$5_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 19,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 18,
														"name": "Counter",
														"nameLocations": [
															"987:7:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 5,
														"src": "987:7:0"
													},
													"referencedDeclaration": 5,
													"src": "987:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$5_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "986:25:0"
									},
									"returnParameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1021:0:0"
									},
									"scope": 73,
									"src": "968:123:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 58,
										"nodeType": "Block",
										"src": "1150:176:0",
										"statements": [
											{
												"assignments": [
													38
												],
												"declarations": [
													{
														"constant": false,
														"id": 38,
														"mutability": "mutable",
														"name": "value",
														"nameLocation": "1168:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 58,
														"src": "1160:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 37,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1160:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 41,
												"initialValue": {
													"expression": {
														"id": 39,
														"name": "counter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 34,
														"src": "1176:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Counter_$5_storage_ptr",
															"typeString": "struct Counters.Counter storage pointer"
														}
													},
													"id": 40,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1184:6:0",
													"memberName": "_value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 4,
													"src": "1176:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1160:30:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 45,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 43,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 38,
																"src": "1208:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 44,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1216:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1208:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "436f756e7465723a2064656372656d656e74206f766572666c6f77",
															"id": 46,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1219:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f",
																"typeString": "literal_string \"Counter: decrement overflow\""
															},
															"value": "Counter: decrement overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f",
																"typeString": "literal_string \"Counter: decrement overflow\""
															}
														],
														"id": 42,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1200:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1200:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1200:49:0"
											},
											{
												"id": 57,
												"nodeType": "UncheckedBlock",
												"src": "1259:61:0",
												"statements": [
													{
														"expression": {
															"id": 55,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"id": 49,
																	"name": "counter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 34,
																	"src": "1283:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Counter_$5_storage_ptr",
																		"typeString": "struct Counters.Counter storage pointer"
																	}
																},
																"id": 51,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "1291:6:0",
																"memberName": "_value",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 4,
																"src": "1283:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 54,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 52,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 38,
																	"src": "1300:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 53,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1308:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "1300:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1283:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 56,
														"nodeType": "ExpressionStatement",
														"src": "1283:26:0"
													}
												]
											}
										]
									},
									"id": 59,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decrement",
									"nameLocation": "1106:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 35,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 34,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "1132:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 59,
												"src": "1116:23:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$5_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 33,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 32,
														"name": "Counter",
														"nameLocations": [
															"1116:7:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 5,
														"src": "1116:7:0"
													},
													"referencedDeclaration": 5,
													"src": "1116:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$5_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1115:25:0"
									},
									"returnParameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1150:0:0"
									},
									"scope": 73,
									"src": "1097:229:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 71,
										"nodeType": "Block",
										"src": "1381:35:0",
										"statements": [
											{
												"expression": {
													"id": 69,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 65,
															"name": "counter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 62,
															"src": "1391:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$5_storage_ptr",
																"typeString": "struct Counters.Counter storage pointer"
															}
														},
														"id": 67,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1399:6:0",
														"memberName": "_value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 4,
														"src": "1391:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 68,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1408:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1391:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 70,
												"nodeType": "ExpressionStatement",
												"src": "1391:18:0"
											}
										]
									},
									"id": 72,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "reset",
									"nameLocation": "1341:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "1363:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 72,
												"src": "1347:23:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$5_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 61,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 60,
														"name": "Counter",
														"nameLocations": [
															"1347:7:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 5,
														"src": "1347:7:0"
													},
													"referencedDeclaration": 5,
													"src": "1347:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$5_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1346:25:0"
									},
									"returnParameters": {
										"id": 64,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1381:0:0"
									},
									"scope": 73,
									"src": "1332:84:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3156,
							"src": "447:971:0",
							"usedErrors": []
						},
						{
							"id": 74,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "1546:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 75,
								"nodeType": "StructuredDocumentation",
								"src": "1571:73:0",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 937,
							"linearizedBaseContracts": [
								937
							],
							"name": "Math",
							"nameLocation": "1653:4:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Math.Rounding",
									"id": 79,
									"members": [
										{
											"id": 76,
											"name": "Down",
											"nameLocation": "1688:4:0",
											"nodeType": "EnumValue",
											"src": "1688:4:0"
										},
										{
											"id": 77,
											"name": "Up",
											"nameLocation": "1730:2:0",
											"nodeType": "EnumValue",
											"src": "1730:2:0"
										},
										{
											"id": 78,
											"name": "Zero",
											"nameLocation": "1761:4:0",
											"nodeType": "EnumValue",
											"src": "1761:4:0"
										}
									],
									"name": "Rounding",
									"nameLocation": "1669:8:0",
									"nodeType": "EnumDefinition",
									"src": "1664:122:0"
								},
								{
									"body": {
										"id": 96,
										"nodeType": "Block",
										"src": "1923:37:0",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 91,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 89,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 82,
															"src": "1940:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 90,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 84,
															"src": "1944:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1940:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 93,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1952:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 94,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "1940:13:0",
													"trueExpression": {
														"id": 92,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 82,
														"src": "1948:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 88,
												"id": 95,
												"nodeType": "Return",
												"src": "1933:20:0"
											}
										]
									},
									"documentation": {
										"id": 80,
										"nodeType": "StructuredDocumentation",
										"src": "1792:59:0",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 97,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "1865:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 85,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 82,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1877:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 97,
												"src": "1869:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 81,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1869:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 84,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1888:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 97,
												"src": "1880:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 83,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1880:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1868:22:0"
									},
									"returnParameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 87,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 97,
												"src": "1914:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 86,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1914:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1913:9:0"
									},
									"scope": 937,
									"src": "1856:104:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 114,
										"nodeType": "Block",
										"src": "2098:37:0",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 109,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 107,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 100,
															"src": "2115:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 108,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 102,
															"src": "2119:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2115:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 111,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 102,
														"src": "2127:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 112,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2115:13:0",
													"trueExpression": {
														"id": 110,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 100,
														"src": "2123:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 106,
												"id": 113,
												"nodeType": "Return",
												"src": "2108:20:0"
											}
										]
									},
									"documentation": {
										"id": 98,
										"nodeType": "StructuredDocumentation",
										"src": "1966:60:0",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 115,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "2040:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 103,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 100,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2052:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 115,
												"src": "2044:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 99,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2044:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 102,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2063:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 115,
												"src": "2055:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 101,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2055:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2043:22:0"
									},
									"returnParameters": {
										"id": 106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 105,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 115,
												"src": "2089:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 104,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2089:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2088:9:0"
									},
									"scope": 937,
									"src": "2031:104:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 137,
										"nodeType": "Block",
										"src": "2319:82:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 135,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 127,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 125,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 118,
																	"src": "2374:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 126,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 120,
																	"src": "2378:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2374:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 128,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2373:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 134,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 131,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 129,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 118,
																		"src": "2384:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 130,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 120,
																		"src": "2388:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2384:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 132,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2383:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 133,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2393:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "2383:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2373:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 124,
												"id": 136,
												"nodeType": "Return",
												"src": "2366:28:0"
											}
										]
									},
									"documentation": {
										"id": 116,
										"nodeType": "StructuredDocumentation",
										"src": "2141:102:0",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 138,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "2257:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 118,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2273:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 138,
												"src": "2265:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 117,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2265:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 120,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2284:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 138,
												"src": "2276:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 119,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2276:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2264:22:0"
									},
									"returnParameters": {
										"id": 124,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 123,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 138,
												"src": "2310:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 122,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2310:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2309:9:0"
									},
									"scope": 937,
									"src": "2248:153:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 162,
										"nodeType": "Block",
										"src": "2671:123:0",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 150,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 148,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 141,
															"src": "2759:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 149,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2764:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "2759:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 159,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 157,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 154,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 152,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 141,
																			"src": "2773:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 153,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2777:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "2773:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 155,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2772:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 156,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 143,
																"src": "2782:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2772:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 158,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2786:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "2772:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 160,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2759:28:0",
													"trueExpression": {
														"hexValue": "30",
														"id": 151,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2768:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 147,
												"id": 161,
												"nodeType": "Return",
												"src": "2752:35:0"
											}
										]
									},
									"documentation": {
										"id": 139,
										"nodeType": "StructuredDocumentation",
										"src": "2407:188:0",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds up instead\n of rounding down."
									},
									"id": 163,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "2609:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 144,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 141,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2625:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "2617:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 140,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2617:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 143,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2636:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "2628:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 142,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2628:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2616:22:0"
									},
									"returnParameters": {
										"id": 147,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 146,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "2662:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 145,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2662:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2661:9:0"
									},
									"scope": 937,
									"src": "2600:194:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 284,
										"nodeType": "Block",
										"src": "3238:3797:0",
										"statements": [
											{
												"id": 283,
												"nodeType": "UncheckedBlock",
												"src": "3248:3781:0",
												"statements": [
													{
														"assignments": [
															176
														],
														"declarations": [
															{
																"constant": false,
																"id": 176,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "3577:5:0",
																"nodeType": "VariableDeclaration",
																"scope": 283,
																"src": "3569:13:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 175,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "3569:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 177,
														"nodeType": "VariableDeclarationStatement",
														"src": "3569:13:0"
													},
													{
														"assignments": [
															179
														],
														"declarations": [
															{
																"constant": false,
																"id": 179,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "3649:5:0",
																"nodeType": "VariableDeclaration",
																"scope": 283,
																"src": "3641:13:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 178,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "3641:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 180,
														"nodeType": "VariableDeclarationStatement",
														"src": "3641:13:0"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "3721:157:0",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3739:30:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "3756:1:0"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "3759:1:0"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3766:1:0",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "3762:3:0"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3762:6:0"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nodeType": "YulIdentifier",
																			"src": "3749:6:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3749:20:0"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nodeType": "YulTypedName",
																			"src": "3743:2:0",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3786:18:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "3799:1:0"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "3802:1:0"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "3795:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3795:9:0"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "3786:5:0"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3821:43:0",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nodeType": "YulIdentifier",
																						"src": "3838:2:0"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "3842:5:0"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "3834:3:0"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3834:14:0"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nodeType": "YulIdentifier",
																						"src": "3853:2:0"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "3857:5:0"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "3850:2:0"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3850:13:0"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3830:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3830:34:0"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nodeType": "YulIdentifier",
																			"src": "3821:5:0"
																		}
																	]
																}
															]
														},
														"evmVersion": "paris",
														"externalReferences": [
															{
																"declaration": 176,
																"isOffset": false,
																"isSlot": false,
																"src": "3786:5:0",
																"valueSize": 1
															},
															{
																"declaration": 176,
																"isOffset": false,
																"isSlot": false,
																"src": "3842:5:0",
																"valueSize": 1
															},
															{
																"declaration": 176,
																"isOffset": false,
																"isSlot": false,
																"src": "3857:5:0",
																"valueSize": 1
															},
															{
																"declaration": 179,
																"isOffset": false,
																"isSlot": false,
																"src": "3821:5:0",
																"valueSize": 1
															},
															{
																"declaration": 166,
																"isOffset": false,
																"isSlot": false,
																"src": "3756:1:0",
																"valueSize": 1
															},
															{
																"declaration": 166,
																"isOffset": false,
																"isSlot": false,
																"src": "3799:1:0",
																"valueSize": 1
															},
															{
																"declaration": 168,
																"isOffset": false,
																"isSlot": false,
																"src": "3759:1:0",
																"valueSize": 1
															},
															{
																"declaration": 168,
																"isOffset": false,
																"isSlot": false,
																"src": "3802:1:0",
																"valueSize": 1
															}
														],
														"id": 181,
														"nodeType": "InlineAssembly",
														"src": "3712:166:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 184,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 182,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 179,
																"src": "3959:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 183,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3968:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3959:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 190,
														"nodeType": "IfStatement",
														"src": "3955:75:0",
														"trueBody": {
															"id": 189,
															"nodeType": "Block",
															"src": "3971:59:0",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 187,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 185,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 176,
																			"src": "3996:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 186,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 170,
																			"src": "4004:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "3996:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 174,
																	"id": 188,
																	"nodeType": "Return",
																	"src": "3989:26:0"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 194,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 192,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 170,
																		"src": "4140:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"id": 193,
																		"name": "prod1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 179,
																		"src": "4154:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4140:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																],
																"id": 191,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "4132:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
																	"typeString": "function (bool) pure"
																}
															},
															"id": 195,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4132:28:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 196,
														"nodeType": "ExpressionStatement",
														"src": "4132:28:0"
													},
													{
														"assignments": [
															198
														],
														"declarations": [
															{
																"constant": false,
																"id": 198,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "4424:9:0",
																"nodeType": "VariableDeclaration",
																"scope": 283,
																"src": "4416:17:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 197,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4416:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 199,
														"nodeType": "VariableDeclarationStatement",
														"src": "4416:17:0"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "4456:291:0",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "4525:38:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "4545:1:0"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "4548:1:0"
																			},
																			{
																				"name": "denominator",
																				"nodeType": "YulIdentifier",
																				"src": "4551:11:0"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nodeType": "YulIdentifier",
																			"src": "4538:6:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4538:25:0"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nodeType": "YulIdentifier",
																			"src": "4525:9:0"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4645:41:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nodeType": "YulIdentifier",
																				"src": "4658:5:0"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nodeType": "YulIdentifier",
																						"src": "4668:9:0"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "4679:5:0"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nodeType": "YulIdentifier",
																					"src": "4665:2:0"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4665:20:0"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4654:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4654:32:0"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nodeType": "YulIdentifier",
																			"src": "4645:5:0"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4703:30:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nodeType": "YulIdentifier",
																				"src": "4716:5:0"
																			},
																			{
																				"name": "remainder",
																				"nodeType": "YulIdentifier",
																				"src": "4723:9:0"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4712:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4712:21:0"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "4703:5:0"
																		}
																	]
																}
															]
														},
														"evmVersion": "paris",
														"externalReferences": [
															{
																"declaration": 170,
																"isOffset": false,
																"isSlot": false,
																"src": "4551:11:0",
																"valueSize": 1
															},
															{
																"declaration": 176,
																"isOffset": false,
																"isSlot": false,
																"src": "4679:5:0",
																"valueSize": 1
															},
															{
																"declaration": 176,
																"isOffset": false,
																"isSlot": false,
																"src": "4703:5:0",
																"valueSize": 1
															},
															{
																"declaration": 176,
																"isOffset": false,
																"isSlot": false,
																"src": "4716:5:0",
																"valueSize": 1
															},
															{
																"declaration": 179,
																"isOffset": false,
																"isSlot": false,
																"src": "4645:5:0",
																"valueSize": 1
															},
															{
																"declaration": 179,
																"isOffset": false,
																"isSlot": false,
																"src": "4658:5:0",
																"valueSize": 1
															},
															{
																"declaration": 198,
																"isOffset": false,
																"isSlot": false,
																"src": "4525:9:0",
																"valueSize": 1
															},
															{
																"declaration": 198,
																"isOffset": false,
																"isSlot": false,
																"src": "4668:9:0",
																"valueSize": 1
															},
															{
																"declaration": 198,
																"isOffset": false,
																"isSlot": false,
																"src": "4723:9:0",
																"valueSize": 1
															},
															{
																"declaration": 166,
																"isOffset": false,
																"isSlot": false,
																"src": "4545:1:0",
																"valueSize": 1
															},
															{
																"declaration": 168,
																"isOffset": false,
																"isSlot": false,
																"src": "4548:1:0",
																"valueSize": 1
															}
														],
														"id": 200,
														"nodeType": "InlineAssembly",
														"src": "4447:300:0"
													},
													{
														"assignments": [
															202
														],
														"declarations": [
															{
																"constant": false,
																"id": 202,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "5062:4:0",
																"nodeType": "VariableDeclaration",
																"scope": 283,
																"src": "5054:12:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 201,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5054:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 210,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 209,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 203,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 170,
																"src": "5069:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 207,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 205,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "~",
																			"prefix": true,
																			"src": "5084:12:0",
																			"subExpression": {
																				"id": 204,
																				"name": "denominator",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 170,
																				"src": "5085:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 206,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5099:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "5084:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 208,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "5083:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5069:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "5054:47:0"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "5124:362:0",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "5189:37:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nodeType": "YulIdentifier",
																				"src": "5208:11:0"
																			},
																			{
																				"name": "twos",
																				"nodeType": "YulIdentifier",
																				"src": "5221:4:0"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "5204:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5204:22:0"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nodeType": "YulIdentifier",
																			"src": "5189:11:0"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5293:25:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nodeType": "YulIdentifier",
																				"src": "5306:5:0"
																			},
																			{
																				"name": "twos",
																				"nodeType": "YulIdentifier",
																				"src": "5313:4:0"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "5302:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5302:16:0"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "5293:5:0"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5433:39:0",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "5453:1:0",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nodeType": "YulIdentifier",
																								"src": "5456:4:0"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "5449:3:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5449:12:0"
																					},
																					{
																						"name": "twos",
																						"nodeType": "YulIdentifier",
																						"src": "5463:4:0"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "5445:3:0"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5445:23:0"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5470:1:0",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5441:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5441:31:0"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nodeType": "YulIdentifier",
																			"src": "5433:4:0"
																		}
																	]
																}
															]
														},
														"evmVersion": "paris",
														"externalReferences": [
															{
																"declaration": 170,
																"isOffset": false,
																"isSlot": false,
																"src": "5189:11:0",
																"valueSize": 1
															},
															{
																"declaration": 170,
																"isOffset": false,
																"isSlot": false,
																"src": "5208:11:0",
																"valueSize": 1
															},
															{
																"declaration": 176,
																"isOffset": false,
																"isSlot": false,
																"src": "5293:5:0",
																"valueSize": 1
															},
															{
																"declaration": 176,
																"isOffset": false,
																"isSlot": false,
																"src": "5306:5:0",
																"valueSize": 1
															},
															{
																"declaration": 202,
																"isOffset": false,
																"isSlot": false,
																"src": "5221:4:0",
																"valueSize": 1
															},
															{
																"declaration": 202,
																"isOffset": false,
																"isSlot": false,
																"src": "5313:4:0",
																"valueSize": 1
															},
															{
																"declaration": 202,
																"isOffset": false,
																"isSlot": false,
																"src": "5433:4:0",
																"valueSize": 1
															},
															{
																"declaration": 202,
																"isOffset": false,
																"isSlot": false,
																"src": "5456:4:0",
																"valueSize": 1
															},
															{
																"declaration": 202,
																"isOffset": false,
																"isSlot": false,
																"src": "5463:4:0",
																"valueSize": 1
															}
														],
														"id": 211,
														"nodeType": "InlineAssembly",
														"src": "5115:371:0"
													},
													{
														"expression": {
															"id": 216,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 212,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 176,
																"src": "5552:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 215,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 213,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 179,
																	"src": "5561:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 214,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 202,
																	"src": "5569:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5561:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5552:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 217,
														"nodeType": "ExpressionStatement",
														"src": "5552:21:0"
													},
													{
														"assignments": [
															219
														],
														"declarations": [
															{
																"constant": false,
																"id": 219,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "5899:7:0",
																"nodeType": "VariableDeclaration",
																"scope": 283,
																"src": "5891:15:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 218,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5891:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 226,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 225,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 222,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 220,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5910:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 221,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 170,
																			"src": "5914:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "5910:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 223,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "5909:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 224,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5929:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "5909:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "5891:39:0"
													},
													{
														"expression": {
															"id": 233,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 227,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 219,
																"src": "6147:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 232,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 228,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6158:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 231,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 229,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 170,
																		"src": "6162:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 230,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 219,
																		"src": "6176:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "6162:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6158:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6147:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 234,
														"nodeType": "ExpressionStatement",
														"src": "6147:36:0"
													},
													{
														"expression": {
															"id": 241,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 235,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 219,
																"src": "6216:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 240,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 236,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6227:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 239,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 237,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 170,
																		"src": "6231:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 238,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 219,
																		"src": "6245:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "6231:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6227:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6216:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 242,
														"nodeType": "ExpressionStatement",
														"src": "6216:36:0"
													},
													{
														"expression": {
															"id": 249,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 243,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 219,
																"src": "6286:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 248,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 244,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6297:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 247,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 245,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 170,
																		"src": "6301:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 246,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 219,
																		"src": "6315:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "6301:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6297:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6286:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 250,
														"nodeType": "ExpressionStatement",
														"src": "6286:36:0"
													},
													{
														"expression": {
															"id": 257,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 251,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 219,
																"src": "6356:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 256,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 252,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6367:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 255,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 253,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 170,
																		"src": "6371:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 254,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 219,
																		"src": "6385:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "6371:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6367:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6356:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 258,
														"nodeType": "ExpressionStatement",
														"src": "6356:36:0"
													},
													{
														"expression": {
															"id": 265,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 259,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 219,
																"src": "6426:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 264,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 260,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6437:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 263,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 261,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 170,
																		"src": "6441:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 262,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 219,
																		"src": "6455:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "6441:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6437:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6426:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 266,
														"nodeType": "ExpressionStatement",
														"src": "6426:36:0"
													},
													{
														"expression": {
															"id": 273,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 267,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 219,
																"src": "6497:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 272,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 268,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6508:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 271,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 269,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 170,
																		"src": "6512:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 270,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 219,
																		"src": "6526:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "6512:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6508:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6497:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 274,
														"nodeType": "ExpressionStatement",
														"src": "6497:36:0"
													},
													{
														"expression": {
															"id": 279,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 275,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 173,
																"src": "6967:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 278,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 276,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 176,
																	"src": "6976:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 277,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 219,
																	"src": "6984:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6976:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6967:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 280,
														"nodeType": "ExpressionStatement",
														"src": "6967:24:0"
													},
													{
														"expression": {
															"id": 281,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 173,
															"src": "7012:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 174,
														"id": 282,
														"nodeType": "Return",
														"src": "7005:13:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 164,
										"nodeType": "StructuredDocumentation",
										"src": "2800:305:0",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n with further edits by Uniswap Labs also under MIT license."
									},
									"id": 285,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "3119:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 171,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 166,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "3143:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "3135:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 165,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3135:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 168,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "3162:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "3154:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 167,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3154:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 170,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "3181:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "3173:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 169,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3173:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3125:73:0"
									},
									"returnParameters": {
										"id": 174,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 173,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "3230:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "3222:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 172,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3222:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3221:16:0"
									},
									"scope": 937,
									"src": "3110:3925:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 328,
										"nodeType": "Block",
										"src": "7315:189:0",
										"statements": [
											{
												"assignments": [
													301
												],
												"declarations": [
													{
														"constant": false,
														"id": 301,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "7333:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 328,
														"src": "7325:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 300,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7325:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 307,
												"initialValue": {
													"arguments": [
														{
															"id": 303,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 288,
															"src": "7349:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 304,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 290,
															"src": "7352:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 305,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 292,
															"src": "7355:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 302,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															285,
															329
														],
														"referencedDeclaration": 285,
														"src": "7342:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 306,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7342:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7325:42:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 319,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_enum$_Rounding_$79",
															"typeString": "enum Math.Rounding"
														},
														"id": 311,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 308,
															"name": "rounding",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 295,
															"src": "7381:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Rounding_$79",
																"typeString": "enum Math.Rounding"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"id": 309,
																"name": "Rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 79,
																"src": "7393:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_Rounding_$79_$",
																	"typeString": "type(enum Math.Rounding)"
																}
															},
															"id": 310,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "7402:2:0",
															"memberName": "Up",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 77,
															"src": "7393:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Rounding_$79",
																"typeString": "enum Math.Rounding"
															}
														},
														"src": "7381:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 318,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 313,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 288,
																	"src": "7415:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 314,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 290,
																	"src": "7418:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 315,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 292,
																	"src": "7421:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 312,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "7408:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 316,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7408:25:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 317,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7436:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "7408:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "7381:56:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 325,
												"nodeType": "IfStatement",
												"src": "7377:98:0",
												"trueBody": {
													"id": 324,
													"nodeType": "Block",
													"src": "7439:36:0",
													"statements": [
														{
															"expression": {
																"id": 322,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 320,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 301,
																	"src": "7453:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 321,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7463:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7453:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 323,
															"nodeType": "ExpressionStatement",
															"src": "7453:11:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 326,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 301,
													"src": "7491:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 299,
												"id": 327,
												"nodeType": "Return",
												"src": "7484:13:0"
											}
										]
									},
									"documentation": {
										"id": 286,
										"nodeType": "StructuredDocumentation",
										"src": "7041:121:0",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 329,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "7176:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 288,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "7200:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 329,
												"src": "7192:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 287,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7192:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "7219:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 329,
												"src": "7211:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 289,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7211:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 292,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "7238:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 329,
												"src": "7230:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 291,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7230:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 295,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "7268:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 329,
												"src": "7259:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$79",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 294,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 293,
														"name": "Rounding",
														"nameLocations": [
															"7259:8:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 79,
														"src": "7259:8:0"
													},
													"referencedDeclaration": 79,
													"src": "7259:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$79",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7182:100:0"
									},
									"returnParameters": {
										"id": 299,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 298,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 329,
												"src": "7306:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 297,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7306:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7305:9:0"
									},
									"scope": 937,
									"src": "7167:337:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 440,
										"nodeType": "Block",
										"src": "7780:1585:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 339,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 337,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 332,
														"src": "7794:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 338,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7799:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7794:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 343,
												"nodeType": "IfStatement",
												"src": "7790:45:0",
												"trueBody": {
													"id": 342,
													"nodeType": "Block",
													"src": "7802:33:0",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 340,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7823:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 336,
															"id": 341,
															"nodeType": "Return",
															"src": "7816:8:0"
														}
													]
												}
											},
											{
												"assignments": [
													345
												],
												"declarations": [
													{
														"constant": false,
														"id": 345,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "8522:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 440,
														"src": "8514:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 344,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8514:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 354,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 353,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 346,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8531:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 351,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 348,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 332,
																			"src": "8542:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 347,
																		"name": "log2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			609,
																			645
																		],
																		"referencedDeclaration": 609,
																		"src": "8537:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 349,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8537:7:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 350,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8548:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8537:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 352,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "8536:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8531:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8514:36:0"
											},
											{
												"id": 439,
												"nodeType": "UncheckedBlock",
												"src": "8951:408:0",
												"statements": [
													{
														"expression": {
															"id": 364,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 355,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 345,
																"src": "8975:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 363,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 360,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 356,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 345,
																				"src": "8985:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 359,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 357,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 332,
																					"src": "8994:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 358,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 345,
																					"src": "8998:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8994:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "8985:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 361,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "8984:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 362,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9009:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8984:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8975:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 365,
														"nodeType": "ExpressionStatement",
														"src": "8975:35:0"
													},
													{
														"expression": {
															"id": 375,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 366,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 345,
																"src": "9024:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 374,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 371,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 367,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 345,
																				"src": "9034:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 370,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 368,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 332,
																					"src": "9043:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 369,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 345,
																					"src": "9047:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9043:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9034:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 372,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9033:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 373,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9058:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9033:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9024:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 376,
														"nodeType": "ExpressionStatement",
														"src": "9024:35:0"
													},
													{
														"expression": {
															"id": 386,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 377,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 345,
																"src": "9073:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 385,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 382,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 378,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 345,
																				"src": "9083:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 381,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 379,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 332,
																					"src": "9092:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 380,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 345,
																					"src": "9096:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9092:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9083:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 383,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9082:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 384,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9107:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9082:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9073:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 387,
														"nodeType": "ExpressionStatement",
														"src": "9073:35:0"
													},
													{
														"expression": {
															"id": 397,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 388,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 345,
																"src": "9122:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 396,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 393,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 389,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 345,
																				"src": "9132:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 392,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 390,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 332,
																					"src": "9141:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 391,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 345,
																					"src": "9145:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9141:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9132:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 394,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9131:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 395,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9156:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9131:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9122:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 398,
														"nodeType": "ExpressionStatement",
														"src": "9122:35:0"
													},
													{
														"expression": {
															"id": 408,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 399,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 345,
																"src": "9171:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 407,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 404,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 400,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 345,
																				"src": "9181:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 403,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 401,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 332,
																					"src": "9190:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 402,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 345,
																					"src": "9194:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9190:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9181:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 405,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9180:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 406,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9205:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9180:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9171:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 409,
														"nodeType": "ExpressionStatement",
														"src": "9171:35:0"
													},
													{
														"expression": {
															"id": 419,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 410,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 345,
																"src": "9220:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 418,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 415,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 411,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 345,
																				"src": "9230:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 414,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 412,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 332,
																					"src": "9239:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 413,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 345,
																					"src": "9243:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9239:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9230:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 416,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9229:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 417,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9254:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9229:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9220:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 420,
														"nodeType": "ExpressionStatement",
														"src": "9220:35:0"
													},
													{
														"expression": {
															"id": 430,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 421,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 345,
																"src": "9269:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 429,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 426,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 422,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 345,
																				"src": "9279:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 425,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 423,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 332,
																					"src": "9288:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 424,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 345,
																					"src": "9292:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9288:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9279:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 427,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9278:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 428,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9303:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9278:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9269:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 431,
														"nodeType": "ExpressionStatement",
														"src": "9269:35:0"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 433,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 345,
																	"src": "9329:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 436,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 434,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 332,
																		"src": "9337:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 435,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 345,
																		"src": "9341:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "9337:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 432,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 115,
																"src": "9325:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 437,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9325:23:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 336,
														"id": 438,
														"nodeType": "Return",
														"src": "9318:30:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 330,
										"nodeType": "StructuredDocumentation",
										"src": "7510:208:0",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 441,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "7732:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 333,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 332,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "7745:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 441,
												"src": "7737:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 331,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7737:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7736:11:0"
									},
									"returnParameters": {
										"id": 336,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 335,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 441,
												"src": "7771:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 334,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7771:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7770:9:0"
									},
									"scope": 937,
									"src": "7723:1642:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 476,
										"nodeType": "Block",
										"src": "9541:161:0",
										"statements": [
											{
												"id": 475,
												"nodeType": "UncheckedBlock",
												"src": "9551:145:0",
												"statements": [
													{
														"assignments": [
															453
														],
														"declarations": [
															{
																"constant": false,
																"id": 453,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "9583:6:0",
																"nodeType": "VariableDeclaration",
																"scope": 475,
																"src": "9575:14:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 452,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "9575:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 457,
														"initialValue": {
															"arguments": [
																{
																	"id": 455,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 444,
																	"src": "9597:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 454,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	441,
																	477
																],
																"referencedDeclaration": 441,
																"src": "9592:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 456,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9592:7:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "9575:24:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 473,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 458,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 453,
																"src": "9620:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 468,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$79",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 462,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 459,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 447,
																					"src": "9630:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$79",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 460,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 79,
																						"src": "9642:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$79_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 461,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "9651:2:0",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 77,
																					"src": "9642:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$79",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "9630:23:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 467,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 465,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 463,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 453,
																						"src": "9657:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 464,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 453,
																						"src": "9666:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "9657:15:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 466,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 444,
																					"src": "9675:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9657:19:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "9630:46:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 470,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9683:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 471,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "9630:54:0",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 469,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9679:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 472,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "9629:56:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "9620:65:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 451,
														"id": 474,
														"nodeType": "Return",
														"src": "9613:72:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 442,
										"nodeType": "StructuredDocumentation",
										"src": "9371:89:0",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 477,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "9474:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 448,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 444,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "9487:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 477,
												"src": "9479:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 443,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9479:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 447,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "9499:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 477,
												"src": "9490:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$79",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 446,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 445,
														"name": "Rounding",
														"nameLocations": [
															"9490:8:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 79,
														"src": "9490:8:0"
													},
													"referencedDeclaration": 79,
													"src": "9490:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$79",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9478:30:0"
									},
									"returnParameters": {
										"id": 451,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 450,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 477,
												"src": "9532:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 449,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9532:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9531:9:0"
									},
									"scope": 937,
									"src": "9465:237:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 608,
										"nodeType": "Block",
										"src": "9887:922:0",
										"statements": [
											{
												"assignments": [
													486
												],
												"declarations": [
													{
														"constant": false,
														"id": 486,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "9905:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 608,
														"src": "9897:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 485,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9897:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 488,
												"initialValue": {
													"hexValue": "30",
													"id": 487,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "9914:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9897:18:0"
											},
											{
												"id": 605,
												"nodeType": "UncheckedBlock",
												"src": "9925:855:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 493,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 491,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 489,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 480,
																	"src": "9953:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 490,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9962:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "9953:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 492,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9968:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9953:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 503,
														"nodeType": "IfStatement",
														"src": "9949:99:0",
														"trueBody": {
															"id": 502,
															"nodeType": "Block",
															"src": "9971:77:0",
															"statements": [
																{
																	"expression": {
																		"id": 496,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 494,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 480,
																			"src": "9989:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 495,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9999:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "9989:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 497,
																	"nodeType": "ExpressionStatement",
																	"src": "9989:13:0"
																},
																{
																	"expression": {
																		"id": 500,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 498,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 486,
																			"src": "10020:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 499,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10030:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10020:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 501,
																	"nodeType": "ExpressionStatement",
																	"src": "10020:13:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 508,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 506,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 504,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 480,
																	"src": "10065:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 505,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10074:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "10065:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 507,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10079:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10065:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 518,
														"nodeType": "IfStatement",
														"src": "10061:96:0",
														"trueBody": {
															"id": 517,
															"nodeType": "Block",
															"src": "10082:75:0",
															"statements": [
																{
																	"expression": {
																		"id": 511,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 509,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 480,
																			"src": "10100:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 510,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10110:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "10100:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 512,
																	"nodeType": "ExpressionStatement",
																	"src": "10100:12:0"
																},
																{
																	"expression": {
																		"id": 515,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 513,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 486,
																			"src": "10130:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 514,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10140:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "10130:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 516,
																	"nodeType": "ExpressionStatement",
																	"src": "10130:12:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 523,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 521,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 519,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 480,
																	"src": "10174:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 520,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10183:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "10174:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 522,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10188:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10174:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 533,
														"nodeType": "IfStatement",
														"src": "10170:96:0",
														"trueBody": {
															"id": 532,
															"nodeType": "Block",
															"src": "10191:75:0",
															"statements": [
																{
																	"expression": {
																		"id": 526,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 524,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 480,
																			"src": "10209:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 525,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10219:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "10209:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 527,
																	"nodeType": "ExpressionStatement",
																	"src": "10209:12:0"
																},
																{
																	"expression": {
																		"id": 530,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 528,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 486,
																			"src": "10239:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 529,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10249:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "10239:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 531,
																	"nodeType": "ExpressionStatement",
																	"src": "10239:12:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 538,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 536,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 534,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 480,
																	"src": "10283:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 535,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10292:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "10283:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 537,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10283:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 548,
														"nodeType": "IfStatement",
														"src": "10279:96:0",
														"trueBody": {
															"id": 547,
															"nodeType": "Block",
															"src": "10300:75:0",
															"statements": [
																{
																	"expression": {
																		"id": 541,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 539,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 480,
																			"src": "10318:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 540,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10328:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "10318:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 542,
																	"nodeType": "ExpressionStatement",
																	"src": "10318:12:0"
																},
																{
																	"expression": {
																		"id": 545,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 543,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 486,
																			"src": "10348:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 544,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10358:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "10348:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 546,
																	"nodeType": "ExpressionStatement",
																	"src": "10348:12:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 553,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 551,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 549,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 480,
																	"src": "10392:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 550,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10401:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "10392:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 552,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10405:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10392:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 563,
														"nodeType": "IfStatement",
														"src": "10388:93:0",
														"trueBody": {
															"id": 562,
															"nodeType": "Block",
															"src": "10408:73:0",
															"statements": [
																{
																	"expression": {
																		"id": 556,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 554,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 480,
																			"src": "10426:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 555,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10436:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "10426:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 557,
																	"nodeType": "ExpressionStatement",
																	"src": "10426:11:0"
																},
																{
																	"expression": {
																		"id": 560,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 558,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 486,
																			"src": "10455:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 559,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10465:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "10455:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 561,
																	"nodeType": "ExpressionStatement",
																	"src": "10455:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 568,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 566,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 564,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 480,
																	"src": "10498:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 565,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10507:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "10498:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 567,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10511:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10498:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 578,
														"nodeType": "IfStatement",
														"src": "10494:93:0",
														"trueBody": {
															"id": 577,
															"nodeType": "Block",
															"src": "10514:73:0",
															"statements": [
																{
																	"expression": {
																		"id": 571,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 569,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 480,
																			"src": "10532:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 570,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10542:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "10532:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 572,
																	"nodeType": "ExpressionStatement",
																	"src": "10532:11:0"
																},
																{
																	"expression": {
																		"id": 575,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 573,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 486,
																			"src": "10561:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 574,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10571:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "10561:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 576,
																	"nodeType": "ExpressionStatement",
																	"src": "10561:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 583,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 581,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 579,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 480,
																	"src": "10604:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 580,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10613:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "10604:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 582,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10617:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10604:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 593,
														"nodeType": "IfStatement",
														"src": "10600:93:0",
														"trueBody": {
															"id": 592,
															"nodeType": "Block",
															"src": "10620:73:0",
															"statements": [
																{
																	"expression": {
																		"id": 586,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 584,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 480,
																			"src": "10638:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 585,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10648:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "10638:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 587,
																	"nodeType": "ExpressionStatement",
																	"src": "10638:11:0"
																},
																{
																	"expression": {
																		"id": 590,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 588,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 486,
																			"src": "10667:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 589,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10677:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "10667:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 591,
																	"nodeType": "ExpressionStatement",
																	"src": "10667:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 598,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 596,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 594,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 480,
																	"src": "10710:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 595,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10719:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10710:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 597,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10723:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10710:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 604,
														"nodeType": "IfStatement",
														"src": "10706:64:0",
														"trueBody": {
															"id": 603,
															"nodeType": "Block",
															"src": "10726:44:0",
															"statements": [
																{
																	"expression": {
																		"id": 601,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 599,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 486,
																			"src": "10744:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 600,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10754:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "10744:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 602,
																	"nodeType": "ExpressionStatement",
																	"src": "10744:11:0"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 606,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 486,
													"src": "10796:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 484,
												"id": 607,
												"nodeType": "Return",
												"src": "10789:13:0"
											}
										]
									},
									"documentation": {
										"id": 478,
										"nodeType": "StructuredDocumentation",
										"src": "9708:113:0",
										"text": " @dev Return the log in base 2, rounded down, of a positive value.\n Returns 0 if given 0."
									},
									"id": 609,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "9835:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 481,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 480,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9848:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 609,
												"src": "9840:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 479,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9840:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9839:15:0"
									},
									"returnParameters": {
										"id": 484,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 483,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 609,
												"src": "9878:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 482,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9878:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9877:9:0"
									},
									"scope": 937,
									"src": "9826:983:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 644,
										"nodeType": "Block",
										"src": "11042:165:0",
										"statements": [
											{
												"id": 643,
												"nodeType": "UncheckedBlock",
												"src": "11052:149:0",
												"statements": [
													{
														"assignments": [
															621
														],
														"declarations": [
															{
																"constant": false,
																"id": 621,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "11084:6:0",
																"nodeType": "VariableDeclaration",
																"scope": 643,
																"src": "11076:14:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 620,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "11076:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 625,
														"initialValue": {
															"arguments": [
																{
																	"id": 623,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 612,
																	"src": "11098:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 622,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	609,
																	645
																],
																"referencedDeclaration": 609,
																"src": "11093:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 624,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11093:11:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "11076:28:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 641,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 626,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 621,
																"src": "11125:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 636,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$79",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 630,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 627,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 615,
																					"src": "11135:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$79",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 628,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 79,
																						"src": "11147:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$79_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 629,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "11156:2:0",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 77,
																					"src": "11147:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$79",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "11135:23:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 635,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 633,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 631,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "11162:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"id": 632,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 621,
																						"src": "11167:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "11162:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 634,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 612,
																					"src": "11176:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11162:19:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "11135:46:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 638,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11188:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 639,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "11135:54:0",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 637,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11184:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 640,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "11134:56:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "11125:65:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 619,
														"id": 642,
														"nodeType": "Return",
														"src": "11118:72:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 610,
										"nodeType": "StructuredDocumentation",
										"src": "10815:142:0",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 645,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "10971:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 616,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 612,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10984:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 645,
												"src": "10976:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 611,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10976:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 615,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "11000:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 645,
												"src": "10991:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$79",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 614,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 613,
														"name": "Rounding",
														"nameLocations": [
															"10991:8:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 79,
														"src": "10991:8:0"
													},
													"referencedDeclaration": 79,
													"src": "10991:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$79",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10975:34:0"
									},
									"returnParameters": {
										"id": 619,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 618,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 645,
												"src": "11033:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 617,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11033:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11032:9:0"
									},
									"scope": 937,
									"src": "10962:245:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 773,
										"nodeType": "Block",
										"src": "11394:828:0",
										"statements": [
											{
												"assignments": [
													654
												],
												"declarations": [
													{
														"constant": false,
														"id": 654,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "11412:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 773,
														"src": "11404:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 653,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11404:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 656,
												"initialValue": {
													"hexValue": "30",
													"id": 655,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "11421:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11404:18:0"
											},
											{
												"id": 770,
												"nodeType": "UncheckedBlock",
												"src": "11432:761:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 661,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 657,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 648,
																"src": "11460:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 660,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 658,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11469:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 659,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11473:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "11469:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "11460:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 673,
														"nodeType": "IfStatement",
														"src": "11456:99:0",
														"trueBody": {
															"id": 672,
															"nodeType": "Block",
															"src": "11477:78:0",
															"statements": [
																{
																	"expression": {
																		"id": 666,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 662,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 648,
																			"src": "11495:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 665,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 663,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11504:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 664,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11508:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "11504:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "11495:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 667,
																	"nodeType": "ExpressionStatement",
																	"src": "11495:15:0"
																},
																{
																	"expression": {
																		"id": 670,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 668,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 654,
																			"src": "11528:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 669,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11538:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "11528:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 671,
																	"nodeType": "ExpressionStatement",
																	"src": "11528:12:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 678,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 674,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 648,
																"src": "11572:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 677,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 675,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11581:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 676,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11585:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "11581:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "11572:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 690,
														"nodeType": "IfStatement",
														"src": "11568:99:0",
														"trueBody": {
															"id": 689,
															"nodeType": "Block",
															"src": "11589:78:0",
															"statements": [
																{
																	"expression": {
																		"id": 683,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 679,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 648,
																			"src": "11607:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 682,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 680,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11616:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 681,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11620:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "11616:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "11607:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 684,
																	"nodeType": "ExpressionStatement",
																	"src": "11607:15:0"
																},
																{
																	"expression": {
																		"id": 687,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 685,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 654,
																			"src": "11640:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 686,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11650:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11640:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 688,
																	"nodeType": "ExpressionStatement",
																	"src": "11640:12:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 695,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 691,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 648,
																"src": "11684:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 694,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 692,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11693:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 693,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11697:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "11693:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "11684:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 707,
														"nodeType": "IfStatement",
														"src": "11680:99:0",
														"trueBody": {
															"id": 706,
															"nodeType": "Block",
															"src": "11701:78:0",
															"statements": [
																{
																	"expression": {
																		"id": 700,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 696,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 648,
																			"src": "11719:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 699,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 697,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11728:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 698,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11732:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "11728:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "11719:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 701,
																	"nodeType": "ExpressionStatement",
																	"src": "11719:15:0"
																},
																{
																	"expression": {
																		"id": 704,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 702,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 654,
																			"src": "11752:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 703,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11762:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11752:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 705,
																	"nodeType": "ExpressionStatement",
																	"src": "11752:12:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 712,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 708,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 648,
																"src": "11796:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 711,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 709,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11805:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 710,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11809:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "11805:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "11796:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 724,
														"nodeType": "IfStatement",
														"src": "11792:96:0",
														"trueBody": {
															"id": 723,
															"nodeType": "Block",
															"src": "11812:76:0",
															"statements": [
																{
																	"expression": {
																		"id": 717,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 713,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 648,
																			"src": "11830:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 716,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 714,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11839:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 715,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11843:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "11839:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "11830:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 718,
																	"nodeType": "ExpressionStatement",
																	"src": "11830:14:0"
																},
																{
																	"expression": {
																		"id": 721,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 719,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 654,
																			"src": "11862:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 720,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11872:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11862:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 722,
																	"nodeType": "ExpressionStatement",
																	"src": "11862:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 729,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 725,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 648,
																"src": "11905:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 728,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 726,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11914:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 727,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11918:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "11914:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "11905:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 741,
														"nodeType": "IfStatement",
														"src": "11901:96:0",
														"trueBody": {
															"id": 740,
															"nodeType": "Block",
															"src": "11921:76:0",
															"statements": [
																{
																	"expression": {
																		"id": 734,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 730,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 648,
																			"src": "11939:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 733,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 731,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11948:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 732,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11952:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "11948:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "11939:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 735,
																	"nodeType": "ExpressionStatement",
																	"src": "11939:14:0"
																},
																{
																	"expression": {
																		"id": 738,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 736,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 654,
																			"src": "11971:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 737,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11981:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11971:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 739,
																	"nodeType": "ExpressionStatement",
																	"src": "11971:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 746,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 742,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 648,
																"src": "12014:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 745,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 743,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12023:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 744,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12027:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "12023:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "12014:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 758,
														"nodeType": "IfStatement",
														"src": "12010:96:0",
														"trueBody": {
															"id": 757,
															"nodeType": "Block",
															"src": "12030:76:0",
															"statements": [
																{
																	"expression": {
																		"id": 751,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 747,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 648,
																			"src": "12048:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 750,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 748,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12057:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 749,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12061:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "12057:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "12048:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 752,
																	"nodeType": "ExpressionStatement",
																	"src": "12048:14:0"
																},
																{
																	"expression": {
																		"id": 755,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 753,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 654,
																			"src": "12080:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 754,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12090:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "12080:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 756,
																	"nodeType": "ExpressionStatement",
																	"src": "12080:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 763,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 759,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 648,
																"src": "12123:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 762,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 760,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12132:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 761,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12136:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "12132:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "12123:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 769,
														"nodeType": "IfStatement",
														"src": "12119:64:0",
														"trueBody": {
															"id": 768,
															"nodeType": "Block",
															"src": "12139:44:0",
															"statements": [
																{
																	"expression": {
																		"id": 766,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 764,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 654,
																			"src": "12157:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 765,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12167:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "12157:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 767,
																	"nodeType": "ExpressionStatement",
																	"src": "12157:11:0"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 771,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 654,
													"src": "12209:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 652,
												"id": 772,
												"nodeType": "Return",
												"src": "12202:13:0"
											}
										]
									},
									"documentation": {
										"id": 646,
										"nodeType": "StructuredDocumentation",
										"src": "11213:114:0",
										"text": " @dev Return the log in base 10, rounded down, of a positive value.\n Returns 0 if given 0."
									},
									"id": 774,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "11341:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 649,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 648,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11355:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 774,
												"src": "11347:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 647,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11347:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11346:15:0"
									},
									"returnParameters": {
										"id": 652,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 651,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 774,
												"src": "11385:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 650,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11385:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11384:9:0"
									},
									"scope": 937,
									"src": "11332:890:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 809,
										"nodeType": "Block",
										"src": "12457:165:0",
										"statements": [
											{
												"id": 808,
												"nodeType": "UncheckedBlock",
												"src": "12467:149:0",
												"statements": [
													{
														"assignments": [
															786
														],
														"declarations": [
															{
																"constant": false,
																"id": 786,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "12499:6:0",
																"nodeType": "VariableDeclaration",
																"scope": 808,
																"src": "12491:14:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 785,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "12491:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 790,
														"initialValue": {
															"arguments": [
																{
																	"id": 788,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 777,
																	"src": "12514:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 787,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	774,
																	810
																],
																"referencedDeclaration": 774,
																"src": "12508:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 789,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12508:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "12491:29:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 806,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 791,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 786,
																"src": "12541:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 801,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$79",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 795,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 792,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 780,
																					"src": "12551:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$79",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 793,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 79,
																						"src": "12563:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$79_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 794,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "12572:2:0",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 77,
																					"src": "12563:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$79",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "12551:23:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 800,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 798,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 796,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "12578:2:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"id": 797,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 786,
																						"src": "12582:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "12578:10:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 799,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 777,
																					"src": "12591:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12578:18:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "12551:45:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 803,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12603:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 804,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "12551:53:0",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 802,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12599:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 805,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "12550:55:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "12541:64:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 784,
														"id": 807,
														"nodeType": "Return",
														"src": "12534:71:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 775,
										"nodeType": "StructuredDocumentation",
										"src": "12228:143:0",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 810,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "12385:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 781,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 777,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12399:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 810,
												"src": "12391:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 776,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12391:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 780,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "12415:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 810,
												"src": "12406:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$79",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 779,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 778,
														"name": "Rounding",
														"nameLocations": [
															"12406:8:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 79,
														"src": "12406:8:0"
													},
													"referencedDeclaration": 79,
													"src": "12406:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$79",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12390:34:0"
									},
									"returnParameters": {
										"id": 784,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 783,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 810,
												"src": "12448:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 782,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12448:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12447:9:0"
									},
									"scope": 937,
									"src": "12376:246:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 896,
										"nodeType": "Block",
										"src": "12936:600:0",
										"statements": [
											{
												"assignments": [
													819
												],
												"declarations": [
													{
														"constant": false,
														"id": 819,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "12954:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 896,
														"src": "12946:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 818,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12946:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 821,
												"initialValue": {
													"hexValue": "30",
													"id": 820,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "12963:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12946:18:0"
											},
											{
												"id": 893,
												"nodeType": "UncheckedBlock",
												"src": "12974:533:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 826,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 824,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 822,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 813,
																	"src": "13002:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 823,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13011:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "13002:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 825,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13017:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "13002:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 836,
														"nodeType": "IfStatement",
														"src": "12998:98:0",
														"trueBody": {
															"id": 835,
															"nodeType": "Block",
															"src": "13020:76:0",
															"statements": [
																{
																	"expression": {
																		"id": 829,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 827,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 813,
																			"src": "13038:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 828,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13048:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "13038:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 830,
																	"nodeType": "ExpressionStatement",
																	"src": "13038:13:0"
																},
																{
																	"expression": {
																		"id": 833,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 831,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 819,
																			"src": "13069:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 832,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13079:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "13069:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 834,
																	"nodeType": "ExpressionStatement",
																	"src": "13069:12:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 841,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 839,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 837,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 813,
																	"src": "13113:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 838,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13122:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "13113:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 840,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13127:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "13113:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 851,
														"nodeType": "IfStatement",
														"src": "13109:95:0",
														"trueBody": {
															"id": 850,
															"nodeType": "Block",
															"src": "13130:74:0",
															"statements": [
																{
																	"expression": {
																		"id": 844,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 842,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 813,
																			"src": "13148:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 843,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13158:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "13148:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 845,
																	"nodeType": "ExpressionStatement",
																	"src": "13148:12:0"
																},
																{
																	"expression": {
																		"id": 848,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 846,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 819,
																			"src": "13178:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 847,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13188:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "13178:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 849,
																	"nodeType": "ExpressionStatement",
																	"src": "13178:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 856,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 854,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 852,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 813,
																	"src": "13221:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 853,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13230:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "13221:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 855,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13235:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "13221:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 866,
														"nodeType": "IfStatement",
														"src": "13217:95:0",
														"trueBody": {
															"id": 865,
															"nodeType": "Block",
															"src": "13238:74:0",
															"statements": [
																{
																	"expression": {
																		"id": 859,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 857,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 813,
																			"src": "13256:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 858,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13266:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "13256:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 860,
																	"nodeType": "ExpressionStatement",
																	"src": "13256:12:0"
																},
																{
																	"expression": {
																		"id": 863,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 861,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 819,
																			"src": "13286:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 862,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13296:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "13286:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 864,
																	"nodeType": "ExpressionStatement",
																	"src": "13286:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 871,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 869,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 867,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 813,
																	"src": "13329:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 868,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13338:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "13329:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 870,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13343:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "13329:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 881,
														"nodeType": "IfStatement",
														"src": "13325:95:0",
														"trueBody": {
															"id": 880,
															"nodeType": "Block",
															"src": "13346:74:0",
															"statements": [
																{
																	"expression": {
																		"id": 874,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 872,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 813,
																			"src": "13364:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 873,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13374:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "13364:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 875,
																	"nodeType": "ExpressionStatement",
																	"src": "13364:12:0"
																},
																{
																	"expression": {
																		"id": 878,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 876,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 819,
																			"src": "13394:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 877,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13404:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "13394:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 879,
																	"nodeType": "ExpressionStatement",
																	"src": "13394:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 886,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 884,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 882,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 813,
																	"src": "13437:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 883,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13446:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "13437:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 885,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13450:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "13437:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 892,
														"nodeType": "IfStatement",
														"src": "13433:64:0",
														"trueBody": {
															"id": 891,
															"nodeType": "Block",
															"src": "13453:44:0",
															"statements": [
																{
																	"expression": {
																		"id": 889,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 887,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 819,
																			"src": "13471:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 888,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13481:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "13471:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 890,
																	"nodeType": "ExpressionStatement",
																	"src": "13471:11:0"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 894,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 819,
													"src": "13523:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 817,
												"id": 895,
												"nodeType": "Return",
												"src": "13516:13:0"
											}
										]
									},
									"documentation": {
										"id": 811,
										"nodeType": "StructuredDocumentation",
										"src": "12628:240:0",
										"text": " @dev Return the log in base 256, rounded down, of a positive value.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 897,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "12882:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 814,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 813,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12897:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 897,
												"src": "12889:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 812,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12889:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12888:15:0"
									},
									"returnParameters": {
										"id": 817,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 816,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 897,
												"src": "12927:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 815,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12927:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12926:9:0"
									},
									"scope": 937,
									"src": "12873:663:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 935,
										"nodeType": "Block",
										"src": "13772:173:0",
										"statements": [
											{
												"id": 934,
												"nodeType": "UncheckedBlock",
												"src": "13782:157:0",
												"statements": [
													{
														"assignments": [
															909
														],
														"declarations": [
															{
																"constant": false,
																"id": 909,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "13814:6:0",
																"nodeType": "VariableDeclaration",
																"scope": 934,
																"src": "13806:14:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 908,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "13806:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 913,
														"initialValue": {
															"arguments": [
																{
																	"id": 911,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 900,
																	"src": "13830:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 910,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	897,
																	936
																],
																"referencedDeclaration": 897,
																"src": "13823:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 912,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13823:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "13806:30:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 932,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 914,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 909,
																"src": "13857:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 927,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$79",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 918,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 915,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 903,
																					"src": "13867:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$79",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 916,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 79,
																						"src": "13879:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$79_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 917,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "13888:2:0",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 77,
																					"src": "13879:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$79",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "13867:23:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 926,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 924,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 919,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "13894:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 922,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 920,
																									"name": "result",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 909,
																									"src": "13900:6:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "*",
																								"rightExpression": {
																									"hexValue": "38",
																									"id": 921,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "13909:1:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_8_by_1",
																										"typeString": "int_const 8"
																									},
																									"value": "8"
																								},
																								"src": "13900:10:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 923,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "13899:12:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "13894:17:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 925,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 900,
																					"src": "13914:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "13894:25:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "13867:52:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 929,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13926:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 930,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "13867:60:0",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 928,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13922:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 931,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "13866:62:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "13857:71:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 907,
														"id": 933,
														"nodeType": "Return",
														"src": "13850:78:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 898,
										"nodeType": "StructuredDocumentation",
										"src": "13542:143:0",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 936,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "13699:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 904,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 900,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13714:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 936,
												"src": "13706:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 899,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13706:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 903,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "13730:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 936,
												"src": "13721:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$79",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 902,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 901,
														"name": "Rounding",
														"nameLocations": [
															"13721:8:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 79,
														"src": "13721:8:0"
													},
													"referencedDeclaration": 79,
													"src": "13721:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$79",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13705:34:0"
									},
									"returnParameters": {
										"id": 907,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 906,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 936,
												"src": "13763:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 905,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13763:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13762:9:0"
									},
									"scope": 937,
									"src": "13690:255:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3156,
							"src": "1645:12302:0",
							"usedErrors": []
						},
						{
							"id": 938,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "14071:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Strings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 939,
								"nodeType": "StructuredDocumentation",
								"src": "14097:34:0",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 1110,
							"linearizedBaseContracts": [
								1110
							],
							"name": "Strings",
							"nameLocation": "14140:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 942,
									"mutability": "constant",
									"name": "_SYMBOLS",
									"nameLocation": "14179:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 1110,
									"src": "14154:54:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 940,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "14154:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 941,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "14190:18:0",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 945,
									"mutability": "constant",
									"name": "_ADDRESS_LENGTH",
									"nameLocation": "14237:15:0",
									"nodeType": "VariableDeclaration",
									"scope": 1110,
									"src": "14214:43:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 943,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "14214:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 944,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "14255:2:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 992,
										"nodeType": "Block",
										"src": "14430:625:0",
										"statements": [
											{
												"id": 991,
												"nodeType": "UncheckedBlock",
												"src": "14440:609:0",
												"statements": [
													{
														"assignments": [
															954
														],
														"declarations": [
															{
																"constant": false,
																"id": 954,
																"mutability": "mutable",
																"name": "length",
																"nameLocation": "14472:6:0",
																"nodeType": "VariableDeclaration",
																"scope": 991,
																"src": "14464:14:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 953,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "14464:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 961,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 960,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 957,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 948,
																		"src": "14492:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 955,
																		"name": "Math",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 937,
																		"src": "14481:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Math_$937_$",
																			"typeString": "type(library Math)"
																		}
																	},
																	"id": 956,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "14486:5:0",
																	"memberName": "log10",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 774,
																	"src": "14481:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (uint256)"
																	}
																},
																"id": 958,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14481:17:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 959,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14501:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "14481:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "14464:38:0"
													},
													{
														"assignments": [
															963
														],
														"declarations": [
															{
																"constant": false,
																"id": 963,
																"mutability": "mutable",
																"name": "buffer",
																"nameLocation": "14530:6:0",
																"nodeType": "VariableDeclaration",
																"scope": 991,
																"src": "14516:20:0",
																"stateVariable": false,
																"storageLocation": "memory",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string"
																},
																"typeName": {
																	"id": 962,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "14516:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 968,
														"initialValue": {
															"arguments": [
																{
																	"id": 966,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 954,
																	"src": "14550:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 965,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "14539:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																},
																"typeName": {
																	"id": 964,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "14543:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																}
															},
															"id": 967,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14539:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "14516:41:0"
													},
													{
														"assignments": [
															970
														],
														"declarations": [
															{
																"constant": false,
																"id": 970,
																"mutability": "mutable",
																"name": "ptr",
																"nameLocation": "14579:3:0",
																"nodeType": "VariableDeclaration",
																"scope": 991,
																"src": "14571:11:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 969,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "14571:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 971,
														"nodeType": "VariableDeclarationStatement",
														"src": "14571:11:0"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "14652:67:0",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "14670:35:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "buffer",
																				"nodeType": "YulIdentifier",
																				"src": "14681:6:0"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "14693:2:0",
																						"type": "",
																						"value": "32"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "14697:6:0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "14689:3:0"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14689:15:0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14677:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14677:28:0"
																	},
																	"variableNames": [
																		{
																			"name": "ptr",
																			"nodeType": "YulIdentifier",
																			"src": "14670:3:0"
																		}
																	]
																}
															]
														},
														"documentation": "@solidity memory-safe-assembly",
														"evmVersion": "paris",
														"externalReferences": [
															{
																"declaration": 963,
																"isOffset": false,
																"isSlot": false,
																"src": "14681:6:0",
																"valueSize": 1
															},
															{
																"declaration": 954,
																"isOffset": false,
																"isSlot": false,
																"src": "14697:6:0",
																"valueSize": 1
															},
															{
																"declaration": 970,
																"isOffset": false,
																"isSlot": false,
																"src": "14670:3:0",
																"valueSize": 1
															}
														],
														"id": 972,
														"nodeType": "InlineAssembly",
														"src": "14643:76:0"
													},
													{
														"body": {
															"id": 987,
															"nodeType": "Block",
															"src": "14745:267:0",
															"statements": [
																{
																	"expression": {
																		"id": 975,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "--",
																		"prefix": false,
																		"src": "14763:5:0",
																		"subExpression": {
																			"id": 974,
																			"name": "ptr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 970,
																			"src": "14763:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 976,
																	"nodeType": "ExpressionStatement",
																	"src": "14763:5:0"
																},
																{
																	"AST": {
																		"nodeType": "YulBlock",
																		"src": "14846:84:0",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "ptr",
																							"nodeType": "YulIdentifier",
																							"src": "14876:3:0"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nodeType": "YulIdentifier",
																											"src": "14890:5:0"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "14897:2:0",
																											"type": "",
																											"value": "10"
																										}
																									],
																									"functionName": {
																										"name": "mod",
																										"nodeType": "YulIdentifier",
																										"src": "14886:3:0"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "14886:14:0"
																								},
																								{
																									"name": "_SYMBOLS",
																									"nodeType": "YulIdentifier",
																									"src": "14902:8:0"
																								}
																							],
																							"functionName": {
																								"name": "byte",
																								"nodeType": "YulIdentifier",
																								"src": "14881:4:0"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "14881:30:0"
																						}
																					],
																					"functionName": {
																						"name": "mstore8",
																						"nodeType": "YulIdentifier",
																						"src": "14868:7:0"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "14868:44:0"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "14868:44:0"
																			}
																		]
																	},
																	"documentation": "@solidity memory-safe-assembly",
																	"evmVersion": "paris",
																	"externalReferences": [
																		{
																			"declaration": 942,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "14902:8:0",
																			"valueSize": 1
																		},
																		{
																			"declaration": 970,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "14876:3:0",
																			"valueSize": 1
																		},
																		{
																			"declaration": 948,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "14890:5:0",
																			"valueSize": 1
																		}
																	],
																	"id": 977,
																	"nodeType": "InlineAssembly",
																	"src": "14837:93:0"
																},
																{
																	"expression": {
																		"id": 980,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 978,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 948,
																			"src": "14947:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"hexValue": "3130",
																			"id": 979,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14956:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"src": "14947:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 981,
																	"nodeType": "ExpressionStatement",
																	"src": "14947:11:0"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 984,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 982,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 948,
																			"src": "14980:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 983,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14989:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "14980:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 986,
																	"nodeType": "IfStatement",
																	"src": "14976:21:0",
																	"trueBody": {
																		"id": 985,
																		"nodeType": "Break",
																		"src": "14992:5:0"
																	}
																}
															]
														},
														"condition": {
															"hexValue": "74727565",
															"id": 973,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14739:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														"id": 988,
														"nodeType": "WhileStatement",
														"src": "14732:280:0"
													},
													{
														"expression": {
															"id": 989,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 963,
															"src": "15032:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 952,
														"id": 990,
														"nodeType": "Return",
														"src": "15025:13:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 946,
										"nodeType": "StructuredDocumentation",
										"src": "14264:90:0",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 993,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "14368:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 949,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 948,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14385:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 993,
												"src": "14377:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 947,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14377:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14376:15:0"
									},
									"returnParameters": {
										"id": 952,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 951,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 993,
												"src": "14415:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 950,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "14415:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14414:15:0"
									},
									"scope": 1110,
									"src": "14359:696:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1012,
										"nodeType": "Block",
										"src": "15234:100:0",
										"statements": [
											{
												"id": 1011,
												"nodeType": "UncheckedBlock",
												"src": "15244:84:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 1002,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 996,
																	"src": "15287:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1008,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 1005,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 996,
																				"src": "15306:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 1003,
																				"name": "Math",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 937,
																				"src": "15294:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_Math_$937_$",
																					"typeString": "type(library Math)"
																				}
																			},
																			"id": 1004,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "15299:6:0",
																			"memberName": "log256",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 897,
																			"src": "15294:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1006,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "15294:18:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1007,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "15315:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "15294:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1001,
																"name": "toHexString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1013,
																	1089,
																	1109
																],
																"referencedDeclaration": 1089,
																"src": "15275:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256,uint256) pure returns (string memory)"
																}
															},
															"id": 1009,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15275:42:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 1000,
														"id": 1010,
														"nodeType": "Return",
														"src": "15268:49:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 994,
										"nodeType": "StructuredDocumentation",
										"src": "15061:94:0",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 1013,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "15169:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 997,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 996,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "15189:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1013,
												"src": "15181:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 995,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15181:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15180:15:0"
									},
									"returnParameters": {
										"id": 1000,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 999,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1013,
												"src": "15219:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 998,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "15219:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15218:15:0"
									},
									"scope": 1110,
									"src": "15160:174:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1088,
										"nodeType": "Block",
										"src": "15547:347:0",
										"statements": [
											{
												"assignments": [
													1024
												],
												"declarations": [
													{
														"constant": false,
														"id": 1024,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "15570:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 1088,
														"src": "15557:19:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1023,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "15557:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1033,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1031,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1029,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1027,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "15589:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1028,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1018,
																	"src": "15593:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "15589:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 1030,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "15602:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "15589:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1026,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "15579:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 1025,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "15583:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 1032,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15579:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "15557:47:0"
											},
											{
												"expression": {
													"id": 1038,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1034,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1024,
															"src": "15614:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1036,
														"indexExpression": {
															"hexValue": "30",
															"id": 1035,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15621:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "15614:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1037,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15626:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "15614:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1039,
												"nodeType": "ExpressionStatement",
												"src": "15614:15:0"
											},
											{
												"expression": {
													"id": 1044,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1040,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1024,
															"src": "15639:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1042,
														"indexExpression": {
															"hexValue": "31",
															"id": 1041,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15646:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "15639:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 1043,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15651:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "15639:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1045,
												"nodeType": "ExpressionStatement",
												"src": "15639:15:0"
											},
											{
												"body": {
													"id": 1074,
													"nodeType": "Block",
													"src": "15709:83:0",
													"statements": [
														{
															"expression": {
																"id": 1068,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1060,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1024,
																		"src": "15723:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1062,
																	"indexExpression": {
																		"id": 1061,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1047,
																		"src": "15730:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "15723:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 1063,
																		"name": "_SYMBOLS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 942,
																		"src": "15735:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 1067,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1066,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1064,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1016,
																			"src": "15744:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 1065,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "15752:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "15744:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "15735:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "15723:33:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 1069,
															"nodeType": "ExpressionStatement",
															"src": "15723:33:0"
														},
														{
															"expression": {
																"id": 1072,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1070,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1016,
																	"src": "15770:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 1071,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "15780:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "15770:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1073,
															"nodeType": "ExpressionStatement",
															"src": "15770:11:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1056,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1054,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1047,
														"src": "15697:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 1055,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15701:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "15697:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1075,
												"initializationExpression": {
													"assignments": [
														1047
													],
													"declarations": [
														{
															"constant": false,
															"id": 1047,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "15677:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 1075,
															"src": "15669:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1046,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "15669:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1053,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1052,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1050,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 1048,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "15681:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1049,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1018,
																"src": "15685:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "15681:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 1051,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15694:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "15681:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "15669:26:0"
												},
												"loopExpression": {
													"expression": {
														"id": 1058,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "15704:3:0",
														"subExpression": {
															"id": 1057,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1047,
															"src": "15706:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1059,
													"nodeType": "ExpressionStatement",
													"src": "15704:3:0"
												},
												"nodeType": "ForStatement",
												"src": "15664:128:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1079,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1077,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1016,
																"src": "15809:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1078,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "15818:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "15809:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "537472696e67733a20686578206c656e67746820696e73756666696369656e74",
															"id": 1080,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15821:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															},
															"value": "Strings: hex length insufficient"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															}
														],
														"id": 1076,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "15801:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1081,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15801:55:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1082,
												"nodeType": "ExpressionStatement",
												"src": "15801:55:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1085,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1024,
															"src": "15880:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1084,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "15873:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 1083,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "15873:6:0",
															"typeDescriptions": {}
														}
													},
													"id": 1086,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15873:14:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1022,
												"id": 1087,
												"nodeType": "Return",
												"src": "15866:21:0"
											}
										]
									},
									"documentation": {
										"id": 1014,
										"nodeType": "StructuredDocumentation",
										"src": "15340:112:0",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 1089,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "15466:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1019,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1016,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "15486:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1089,
												"src": "15478:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1015,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15478:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1018,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "15501:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1089,
												"src": "15493:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1017,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15493:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15477:31:0"
									},
									"returnParameters": {
										"id": 1022,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1021,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1089,
												"src": "15532:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1020,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "15532:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15531:15:0"
									},
									"scope": 1110,
									"src": "15457:437:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1108,
										"nodeType": "Block",
										"src": "16119:76:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1102,
																			"name": "addr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1092,
																			"src": "16164:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1101,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "16156:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 1100,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "16156:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1103,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "16156:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 1099,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "16148:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 1098,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "16148:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1104,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16148:22:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1105,
															"name": "_ADDRESS_LENGTH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 945,
															"src": "16172:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 1097,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1013,
															1089,
															1109
														],
														"referencedDeclaration": 1089,
														"src": "16136:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 1106,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16136:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1096,
												"id": 1107,
												"nodeType": "Return",
												"src": "16129:59:0"
											}
										]
									},
									"documentation": {
										"id": 1090,
										"nodeType": "StructuredDocumentation",
										"src": "15900:141:0",
										"text": " @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation."
									},
									"id": 1109,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "16055:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1093,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1092,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "16075:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1109,
												"src": "16067:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1091,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16067:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16066:14:0"
									},
									"returnParameters": {
										"id": 1096,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1095,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1109,
												"src": "16104:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1094,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "16104:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16103:15:0"
									},
									"scope": 1110,
									"src": "16046:149:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3156,
							"src": "14132:2065:0",
							"usedErrors": []
						},
						{
							"id": 1111,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "16306:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1112,
								"nodeType": "StructuredDocumentation",
								"src": "16331:496:0",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1131,
							"linearizedBaseContracts": [
								1131
							],
							"name": "Context",
							"nameLocation": "16846:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1120,
										"nodeType": "Block",
										"src": "16922:34:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1117,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "16939:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1118,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "16943:6:0",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "16939:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1116,
												"id": 1119,
												"nodeType": "Return",
												"src": "16932:17:0"
											}
										]
									},
									"id": 1121,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "16869:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1113,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16879:2:0"
									},
									"returnParameters": {
										"id": 1116,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1115,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1121,
												"src": "16913:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1114,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16913:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16912:9:0"
									},
									"scope": 1131,
									"src": "16860:96:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1129,
										"nodeType": "Block",
										"src": "17029:32:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1126,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "17046:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1127,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "17050:4:0",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "17046:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1125,
												"id": 1128,
												"nodeType": "Return",
												"src": "17039:15:0"
											}
										]
									},
									"id": 1130,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "16971:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1122,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16979:2:0"
									},
									"returnParameters": {
										"id": 1125,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1124,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1130,
												"src": "17013:14:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1123,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "17013:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17012:16:0"
									},
									"scope": 1131,
									"src": "16962:99:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 3156,
							"src": "16828:235:0",
							"usedErrors": []
						},
						{
							"id": 1132,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "17189:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1134,
										"name": "Context",
										"nameLocations": [
											"17739:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1131,
										"src": "17739:7:0"
									},
									"id": 1135,
									"nodeType": "InheritanceSpecifier",
									"src": "17739:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1133,
								"nodeType": "StructuredDocumentation",
								"src": "17215:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 1242,
							"linearizedBaseContracts": [
								1242,
								1131
							],
							"name": "Ownable",
							"nameLocation": "17728:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 1137,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "17769:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 1242,
									"src": "17753:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1136,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "17753:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 1143,
									"name": "OwnershipTransferred",
									"nameLocation": "17788:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1142,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1139,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "17825:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 1143,
												"src": "17809:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1138,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17809:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1141,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "17856:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1143,
												"src": "17840:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1140,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17840:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17808:57:0"
									},
									"src": "17782:84:0"
								},
								{
									"body": {
										"id": 1152,
										"nodeType": "Block",
										"src": "17982:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1148,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1121,
																"src": "18011:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1149,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "18011:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1147,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1241,
														"src": "17992:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1150,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17992:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1151,
												"nodeType": "ExpressionStatement",
												"src": "17992:32:0"
											}
										]
									},
									"documentation": {
										"id": 1144,
										"nodeType": "StructuredDocumentation",
										"src": "17872:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 1153,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1145,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17979:2:0"
									},
									"returnParameters": {
										"id": 1146,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17982:0:0"
									},
									"scope": 1242,
									"src": "17968:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1160,
										"nodeType": "Block",
										"src": "18140:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1156,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1184,
														"src": "18150:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 1157,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18150:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1158,
												"nodeType": "ExpressionStatement",
												"src": "18150:13:0"
											},
											{
												"id": 1159,
												"nodeType": "PlaceholderStatement",
												"src": "18173:1:0"
											}
										]
									},
									"documentation": {
										"id": 1154,
										"nodeType": "StructuredDocumentation",
										"src": "18037:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 1161,
									"name": "onlyOwner",
									"nameLocation": "18128:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1155,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18137:2:0"
									},
									"src": "18119:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1169,
										"nodeType": "Block",
										"src": "18312:30:0",
										"statements": [
											{
												"expression": {
													"id": 1167,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1137,
													"src": "18329:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1166,
												"id": 1168,
												"nodeType": "Return",
												"src": "18322:13:0"
											}
										]
									},
									"documentation": {
										"id": 1162,
										"nodeType": "StructuredDocumentation",
										"src": "18187:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 1170,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "18266:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1163,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18271:2:0"
									},
									"returnParameters": {
										"id": 1166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1165,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1170,
												"src": "18303:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1164,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18303:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18302:9:0"
									},
									"scope": 1242,
									"src": "18257:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1183,
										"nodeType": "Block",
										"src": "18460:85:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1179,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1175,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1170,
																	"src": "18478:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 1176,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18478:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1177,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1121,
																	"src": "18489:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 1178,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18489:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "18478:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 1180,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "18503:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 1174,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "18470:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18470:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1182,
												"nodeType": "ExpressionStatement",
												"src": "18470:68:0"
											}
										]
									},
									"documentation": {
										"id": 1171,
										"nodeType": "StructuredDocumentation",
										"src": "18348:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 1184,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "18424:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1172,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18435:2:0"
									},
									"returnParameters": {
										"id": 1173,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18460:0:0"
									},
									"scope": 1242,
									"src": "18415:130:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1197,
										"nodeType": "Block",
										"src": "18941:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1193,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "18978:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1192,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "18970:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1191,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "18970:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1194,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "18970:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1190,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1241,
														"src": "18951:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1195,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18951:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1196,
												"nodeType": "ExpressionStatement",
												"src": "18951:30:0"
											}
										]
									},
									"documentation": {
										"id": 1185,
										"nodeType": "StructuredDocumentation",
										"src": "18551:331:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 1198,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1188,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1187,
												"name": "onlyOwner",
												"nameLocations": [
													"18931:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1161,
												"src": "18931:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "18931:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "18896:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1186,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18913:2:0"
									},
									"returnParameters": {
										"id": 1189,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18941:0:0"
									},
									"scope": 1242,
									"src": "18887:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1220,
										"nodeType": "Block",
										"src": "19207:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1212,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1207,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1201,
																"src": "19225:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1210,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "19245:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1209,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "19237:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1208,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "19237:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1211,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "19237:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "19225:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 1213,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "19249:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 1206,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "19217:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1214,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19217:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1215,
												"nodeType": "ExpressionStatement",
												"src": "19217:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1217,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1201,
															"src": "19319:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1216,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1241,
														"src": "19300:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1218,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19300:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1219,
												"nodeType": "ExpressionStatement",
												"src": "19300:28:0"
											}
										]
									},
									"documentation": {
										"id": 1199,
										"nodeType": "StructuredDocumentation",
										"src": "18994:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 1221,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1204,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1203,
												"name": "onlyOwner",
												"nameLocations": [
													"19197:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1161,
												"src": "19197:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "19197:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "19146:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1201,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "19172:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1221,
												"src": "19164:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1200,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19164:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19163:18:0"
									},
									"returnParameters": {
										"id": 1205,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19207:0:0"
									},
									"scope": 1242,
									"src": "19137:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1240,
										"nodeType": "Block",
										"src": "19552:124:0",
										"statements": [
											{
												"assignments": [
													1228
												],
												"declarations": [
													{
														"constant": false,
														"id": 1228,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "19570:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 1240,
														"src": "19562:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1227,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "19562:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1230,
												"initialValue": {
													"id": 1229,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1137,
													"src": "19581:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "19562:25:0"
											},
											{
												"expression": {
													"id": 1233,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1231,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1137,
														"src": "19597:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1232,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1224,
														"src": "19606:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "19597:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1234,
												"nodeType": "ExpressionStatement",
												"src": "19597:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1236,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1228,
															"src": "19650:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1237,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1224,
															"src": "19660:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1235,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1143,
														"src": "19629:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 1238,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19629:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1239,
												"nodeType": "EmitStatement",
												"src": "19624:45:0"
											}
										]
									},
									"documentation": {
										"id": 1222,
										"nodeType": "StructuredDocumentation",
										"src": "19341:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 1241,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "19498:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1224,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "19525:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1241,
												"src": "19517:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1223,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19517:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19516:18:0"
									},
									"returnParameters": {
										"id": 1226,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19552:0:0"
									},
									"scope": 1242,
									"src": "19489:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 3156,
							"src": "17710:1968:0",
							"usedErrors": []
						},
						{
							"id": 1243,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "19802:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1244,
								"nodeType": "StructuredDocumentation",
								"src": "19827:67:0",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 1571,
							"linearizedBaseContracts": [
								1571
							],
							"name": "Address",
							"nameLocation": "19903:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1258,
										"nodeType": "Block",
										"src": "20942:254:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1252,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1247,
																"src": "21166:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1253,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "21174:4:0",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "21166:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1254,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "21179:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "21166:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1255,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "21188:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "21166:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1251,
												"id": 1257,
												"nodeType": "Return",
												"src": "21159:30:0"
											}
										]
									},
									"documentation": {
										"id": 1245,
										"nodeType": "StructuredDocumentation",
										"src": "19917:954:0",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 1259,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "20885:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1247,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "20904:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1259,
												"src": "20896:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1246,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20896:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20895:17:0"
									},
									"returnParameters": {
										"id": 1251,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1250,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1259,
												"src": "20936:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1249,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "20936:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20935:6:0"
									},
									"scope": 1571,
									"src": "20876:320:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1292,
										"nodeType": "Block",
										"src": "22184:241:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1274,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1270,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "22210:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$1571",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$1571",
																				"typeString": "library Address"
																			}
																		],
																		"id": 1269,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "22202:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1268,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "22202:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1271,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "22202:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1272,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "22216:7:0",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "22202:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1273,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1264,
																"src": "22227:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "22202:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 1275,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "22235:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 1267,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "22194:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1276,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22194:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1277,
												"nodeType": "ExpressionStatement",
												"src": "22194:73:0"
											},
											{
												"assignments": [
													1279,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1279,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "22284:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 1292,
														"src": "22279:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1278,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "22279:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1286,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 1284,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "22327:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 1280,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1262,
																"src": "22297:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 1281,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "22307:4:0",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "22297:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1283,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1282,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1264,
																"src": "22319:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "22297:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1285,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22297:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "22278:52:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1288,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1279,
															"src": "22348:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 1289,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "22357:60:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 1287,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "22340:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1290,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22340:78:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1291,
												"nodeType": "ExpressionStatement",
												"src": "22340:78:0"
											}
										]
									},
									"documentation": {
										"id": 1260,
										"nodeType": "StructuredDocumentation",
										"src": "21202:906:0",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 1293,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "22122:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1262,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "22148:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1293,
												"src": "22132:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22132:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1264,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "22167:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1293,
												"src": "22159:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1263,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22159:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22131:43:0"
									},
									"returnParameters": {
										"id": 1266,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22184:0:0"
									},
									"scope": 1571,
									"src": "22113:312:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1310,
										"nodeType": "Block",
										"src": "23256:96:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1304,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1296,
															"src": "23295:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1305,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1298,
															"src": "23303:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1306,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "23309:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 1307,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "23312:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 1303,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1351,
															1395
														],
														"referencedDeclaration": 1395,
														"src": "23273:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1308,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23273:72:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1302,
												"id": 1309,
												"nodeType": "Return",
												"src": "23266:79:0"
											}
										]
									},
									"documentation": {
										"id": 1294,
										"nodeType": "StructuredDocumentation",
										"src": "22431:731:0",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 1311,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "23176:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1299,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1296,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "23197:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1311,
												"src": "23189:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1295,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23189:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1298,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "23218:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1311,
												"src": "23205:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1297,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "23205:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23188:35:0"
									},
									"returnParameters": {
										"id": 1302,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1301,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1311,
												"src": "23242:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1300,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "23242:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23241:14:0"
									},
									"scope": 1571,
									"src": "23167:185:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1330,
										"nodeType": "Block",
										"src": "23721:76:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1324,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1314,
															"src": "23760:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1325,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1316,
															"src": "23768:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1326,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "23774:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 1327,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1318,
															"src": "23777:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1323,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1351,
															1395
														],
														"referencedDeclaration": 1395,
														"src": "23738:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1328,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23738:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1322,
												"id": 1329,
												"nodeType": "Return",
												"src": "23731:59:0"
											}
										]
									},
									"documentation": {
										"id": 1312,
										"nodeType": "StructuredDocumentation",
										"src": "23358:211:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 1331,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "23583:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1319,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1314,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "23613:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1331,
												"src": "23605:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1313,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23605:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1316,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "23642:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1331,
												"src": "23629:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1315,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "23629:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1318,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "23670:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 1331,
												"src": "23656:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1317,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "23656:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23595:93:0"
									},
									"returnParameters": {
										"id": 1322,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1321,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1331,
												"src": "23707:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1320,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "23707:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23706:14:0"
									},
									"scope": 1571,
									"src": "23574:223:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1350,
										"nodeType": "Block",
										"src": "24302:111:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1344,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1334,
															"src": "24341:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1345,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1336,
															"src": "24349:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1346,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1338,
															"src": "24355:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 1347,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "24362:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 1343,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1351,
															1395
														],
														"referencedDeclaration": 1395,
														"src": "24319:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1348,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24319:87:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1342,
												"id": 1349,
												"nodeType": "Return",
												"src": "24312:94:0"
											}
										]
									},
									"documentation": {
										"id": 1332,
										"nodeType": "StructuredDocumentation",
										"src": "23803:351:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 1351,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "24168:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1339,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1334,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "24207:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1351,
												"src": "24199:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1333,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24199:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1336,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "24236:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1351,
												"src": "24223:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1335,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "24223:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1338,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "24258:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1351,
												"src": "24250:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1337,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24250:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24189:80:0"
									},
									"returnParameters": {
										"id": 1342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1341,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1351,
												"src": "24288:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1340,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "24288:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24287:14:0"
									},
									"scope": 1571,
									"src": "24159:254:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1394,
										"nodeType": "Block",
										"src": "24840:267:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1372,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1368,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "24866:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$1571",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$1571",
																				"typeString": "library Address"
																			}
																		],
																		"id": 1367,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "24858:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1366,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "24858:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1369,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "24858:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1370,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "24872:7:0",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "24858:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1371,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1358,
																"src": "24883:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24858:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 1373,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "24890:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 1365,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "24850:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1374,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24850:81:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1375,
												"nodeType": "ExpressionStatement",
												"src": "24850:81:0"
											},
											{
												"assignments": [
													1377,
													1379
												],
												"declarations": [
													{
														"constant": false,
														"id": 1377,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "24947:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 1394,
														"src": "24942:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1376,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "24942:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1379,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "24969:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 1394,
														"src": "24956:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1378,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "24956:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1386,
												"initialValue": {
													"arguments": [
														{
															"id": 1384,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1356,
															"src": "25009:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 1380,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1354,
																"src": "24983:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1381,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "24990:4:0",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "24983:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1383,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1382,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1358,
																"src": "25002:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "24983:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1385,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24983:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "24941:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1388,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1354,
															"src": "25058:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1389,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1377,
															"src": "25066:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1390,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1379,
															"src": "25075:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1391,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1360,
															"src": "25087:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1387,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1526,
														"src": "25031:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1392,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25031:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1364,
												"id": 1393,
												"nodeType": "Return",
												"src": "25024:76:0"
											}
										]
									},
									"documentation": {
										"id": 1352,
										"nodeType": "StructuredDocumentation",
										"src": "24419:237:0",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 1395,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "24670:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1361,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1354,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "24709:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1395,
												"src": "24701:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1353,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24701:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1356,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "24738:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1395,
												"src": "24725:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1355,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "24725:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1358,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "24760:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1395,
												"src": "24752:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1357,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24752:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1360,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "24789:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 1395,
												"src": "24775:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1359,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "24775:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24691:116:0"
									},
									"returnParameters": {
										"id": 1364,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1363,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1395,
												"src": "24826:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1362,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "24826:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24825:14:0"
									},
									"scope": 1571,
									"src": "24661:446:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1411,
										"nodeType": "Block",
										"src": "25384:97:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1406,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1398,
															"src": "25420:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1407,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1400,
															"src": "25428:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 1408,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "25434:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 1405,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1412,
															1441
														],
														"referencedDeclaration": 1441,
														"src": "25401:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1409,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25401:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1404,
												"id": 1410,
												"nodeType": "Return",
												"src": "25394:80:0"
											}
										]
									},
									"documentation": {
										"id": 1396,
										"nodeType": "StructuredDocumentation",
										"src": "25113:166:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 1412,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "25293:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1401,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1398,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "25320:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1412,
												"src": "25312:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1397,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25312:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1400,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "25341:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1412,
												"src": "25328:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1399,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "25328:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25311:35:0"
									},
									"returnParameters": {
										"id": 1404,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1403,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1412,
												"src": "25370:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1402,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "25370:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25369:14:0"
									},
									"scope": 1571,
									"src": "25284:197:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1440,
										"nodeType": "Block",
										"src": "25823:168:0",
										"statements": [
											{
												"assignments": [
													1425,
													1427
												],
												"declarations": [
													{
														"constant": false,
														"id": 1425,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "25839:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 1440,
														"src": "25834:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1424,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "25834:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1427,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "25861:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 1440,
														"src": "25848:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1426,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "25848:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1432,
												"initialValue": {
													"arguments": [
														{
															"id": 1430,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1417,
															"src": "25893:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1428,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1415,
															"src": "25875:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1429,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "25882:10:0",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "25875:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 1431,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25875:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "25833:65:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1434,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1415,
															"src": "25942:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1435,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1425,
															"src": "25950:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1436,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1427,
															"src": "25959:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1437,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1419,
															"src": "25971:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1433,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1526,
														"src": "25915:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1438,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25915:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1423,
												"id": 1439,
												"nodeType": "Return",
												"src": "25908:76:0"
											}
										]
									},
									"documentation": {
										"id": 1413,
										"nodeType": "StructuredDocumentation",
										"src": "25487:173:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 1441,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "25674:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1420,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1415,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "25710:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1441,
												"src": "25702:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1414,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25702:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1417,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "25739:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1441,
												"src": "25726:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1416,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "25726:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1419,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "25767:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 1441,
												"src": "25753:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1418,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "25753:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25692:93:0"
									},
									"returnParameters": {
										"id": 1423,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1422,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1441,
												"src": "25809:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1421,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "25809:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25808:14:0"
									},
									"scope": 1571,
									"src": "25665:326:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1457,
										"nodeType": "Block",
										"src": "26267:101:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1452,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1444,
															"src": "26305:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1453,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1446,
															"src": "26313:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 1454,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "26319:41:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 1451,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1458,
															1487
														],
														"referencedDeclaration": 1487,
														"src": "26284:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 1455,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26284:77:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1450,
												"id": 1456,
												"nodeType": "Return",
												"src": "26277:84:0"
											}
										]
									},
									"documentation": {
										"id": 1442,
										"nodeType": "StructuredDocumentation",
										"src": "25997:168:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 1458,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "26179:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1447,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1444,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "26208:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1458,
												"src": "26200:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1443,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26200:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1446,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "26229:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1458,
												"src": "26216:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1445,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "26216:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26199:35:0"
									},
									"returnParameters": {
										"id": 1450,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1449,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1458,
												"src": "26253:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1448,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "26253:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26252:14:0"
									},
									"scope": 1571,
									"src": "26170:198:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1486,
										"nodeType": "Block",
										"src": "26709:170:0",
										"statements": [
											{
												"assignments": [
													1471,
													1473
												],
												"declarations": [
													{
														"constant": false,
														"id": 1471,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "26725:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 1486,
														"src": "26720:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1470,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "26720:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1473,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "26747:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 1486,
														"src": "26734:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1472,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "26734:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1478,
												"initialValue": {
													"arguments": [
														{
															"id": 1476,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1463,
															"src": "26781:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1474,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1461,
															"src": "26761:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1475,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "26768:12:0",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "26761:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 1477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26761:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "26719:67:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1480,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1461,
															"src": "26830:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1481,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1471,
															"src": "26838:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1482,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1473,
															"src": "26847:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1483,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1465,
															"src": "26859:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1479,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1526,
														"src": "26803:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1484,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26803:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1469,
												"id": 1485,
												"nodeType": "Return",
												"src": "26796:76:0"
											}
										]
									},
									"documentation": {
										"id": 1459,
										"nodeType": "StructuredDocumentation",
										"src": "26374:175:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 1487,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "26563:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1466,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1461,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "26601:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1487,
												"src": "26593:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1460,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26593:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1463,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "26630:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1487,
												"src": "26617:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1462,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "26617:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1465,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "26658:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 1487,
												"src": "26644:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1464,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "26644:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26583:93:0"
									},
									"returnParameters": {
										"id": 1469,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1468,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1487,
												"src": "26695:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1467,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "26695:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26694:14:0"
									},
									"scope": 1571,
									"src": "26554:325:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1525,
										"nodeType": "Block",
										"src": "27361:434:0",
										"statements": [
											{
												"condition": {
													"id": 1501,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1492,
													"src": "27375:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1523,
													"nodeType": "Block",
													"src": "27731:58:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1519,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1494,
																		"src": "27753:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 1520,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1496,
																		"src": "27765:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1518,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1570,
																	"src": "27745:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 1521,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "27745:33:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1522,
															"nodeType": "ExpressionStatement",
															"src": "27745:33:0"
														}
													]
												},
												"id": 1524,
												"nodeType": "IfStatement",
												"src": "27371:418:0",
												"trueBody": {
													"id": 1517,
													"nodeType": "Block",
													"src": "27384:341:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1505,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1502,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1494,
																		"src": "27402:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1503,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "27413:6:0",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "27402:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1504,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "27423:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "27402:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1514,
															"nodeType": "IfStatement",
															"src": "27398:286:0",
															"trueBody": {
																"id": 1513,
																"nodeType": "Block",
																"src": "27426:258:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 1508,
																							"name": "target",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1490,
																							"src": "27628:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 1507,
																						"name": "isContract",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1259,
																						"src": "27617:10:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																							"typeString": "function (address) view returns (bool)"
																						}
																					},
																					"id": 1509,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "27617:18:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																					"id": 1510,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "27637:31:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					},
																					"value": "Address: call to non-contract"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					}
																				],
																				"id": 1506,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "27609:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 1511,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "27609:60:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1512,
																		"nodeType": "ExpressionStatement",
																		"src": "27609:60:0"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 1515,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1494,
																"src": "27704:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1500,
															"id": 1516,
															"nodeType": "Return",
															"src": "27697:17:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1488,
										"nodeType": "StructuredDocumentation",
										"src": "26885:277:0",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"
									},
									"id": 1526,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "27176:26:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1490,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "27220:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1526,
												"src": "27212:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1489,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27212:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1492,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "27241:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1526,
												"src": "27236:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1491,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "27236:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1494,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "27271:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 1526,
												"src": "27258:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1493,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "27258:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1496,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "27305:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 1526,
												"src": "27291:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1495,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "27291:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27202:121:0"
									},
									"returnParameters": {
										"id": 1500,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1499,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1526,
												"src": "27347:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1498,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "27347:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27346:14:0"
									},
									"scope": 1571,
									"src": "27167:628:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1549,
										"nodeType": "Block",
										"src": "28176:135:0",
										"statements": [
											{
												"condition": {
													"id": 1538,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1529,
													"src": "28190:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1547,
													"nodeType": "Block",
													"src": "28247:58:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1543,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1531,
																		"src": "28269:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 1544,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1533,
																		"src": "28281:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1542,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1570,
																	"src": "28261:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 1545,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "28261:33:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1546,
															"nodeType": "ExpressionStatement",
															"src": "28261:33:0"
														}
													]
												},
												"id": 1548,
												"nodeType": "IfStatement",
												"src": "28186:119:0",
												"trueBody": {
													"id": 1541,
													"nodeType": "Block",
													"src": "28199:42:0",
													"statements": [
														{
															"expression": {
																"id": 1539,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1531,
																"src": "28220:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1537,
															"id": 1540,
															"nodeType": "Return",
															"src": "28213:17:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1527,
										"nodeType": "StructuredDocumentation",
										"src": "27801:210:0",
										"text": " @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"
									},
									"id": 1550,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "28025:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1534,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1529,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "28056:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1550,
												"src": "28051:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1528,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "28051:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1531,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "28086:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 1550,
												"src": "28073:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1530,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "28073:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1533,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "28120:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 1550,
												"src": "28106:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1532,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "28106:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28041:97:0"
									},
									"returnParameters": {
										"id": 1537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1536,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1550,
												"src": "28162:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1535,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "28162:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28161:14:0"
									},
									"scope": 1571,
									"src": "28016:295:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1569,
										"nodeType": "Block",
										"src": "28400:457:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1560,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1557,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1552,
															"src": "28476:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1558,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "28487:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "28476:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1559,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "28496:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "28476:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1567,
													"nodeType": "Block",
													"src": "28806:45:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1564,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1554,
																		"src": "28827:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1563,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "28820:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 1565,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "28820:20:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1566,
															"nodeType": "ExpressionStatement",
															"src": "28820:20:0"
														}
													]
												},
												"id": 1568,
												"nodeType": "IfStatement",
												"src": "28472:379:0",
												"trueBody": {
													"id": 1562,
													"nodeType": "Block",
													"src": "28499:301:0",
													"statements": [
														{
															"AST": {
																"nodeType": "YulBlock",
																"src": "28657:133:0",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "28675:40:0",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nodeType": "YulIdentifier",
																					"src": "28704:10:0"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "28698:5:0"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "28698:17:0"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nodeType": "YulTypedName",
																				"src": "28679:15:0",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "28743:2:0",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nodeType": "YulIdentifier",
																							"src": "28747:10:0"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "28739:3:0"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "28739:19:0"
																				},
																				{
																					"name": "returndata_size",
																					"nodeType": "YulIdentifier",
																					"src": "28760:15:0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "28732:6:0"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "28732:44:0"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "28732:44:0"
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "paris",
															"externalReferences": [
																{
																	"declaration": 1552,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "28704:10:0",
																	"valueSize": 1
																},
																{
																	"declaration": 1552,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "28747:10:0",
																	"valueSize": 1
																}
															],
															"id": 1561,
															"nodeType": "InlineAssembly",
															"src": "28648:142:0"
														}
													]
												}
											}
										]
									},
									"id": 1570,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "28326:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1555,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1552,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "28347:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 1570,
												"src": "28334:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1551,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "28334:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1554,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "28373:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 1570,
												"src": "28359:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1553,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "28359:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28333:53:0"
									},
									"returnParameters": {
										"id": 1556,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28400:0:0"
									},
									"scope": 1571,
									"src": "28317:540:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 3156,
							"src": "19895:8964:0",
							"usedErrors": []
						},
						{
							"id": 1572,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "29013:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Receiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1573,
								"nodeType": "StructuredDocumentation",
								"src": "29038:152:0",
								"text": " @title ERC721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC721 asset contracts."
							},
							"fullyImplemented": false,
							"id": 1588,
							"linearizedBaseContracts": [
								1588
							],
							"name": "IERC721Receiver",
							"nameLocation": "29201:15:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1574,
										"nodeType": "StructuredDocumentation",
										"src": "29223:493:0",
										"text": " @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
									},
									"functionSelector": "150b7a02",
									"id": 1587,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "29730:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1583,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1576,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "29764:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1587,
												"src": "29756:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1575,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "29756:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1578,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "29790:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1587,
												"src": "29782:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1577,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "29782:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1580,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "29812:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1587,
												"src": "29804:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1579,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29804:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1582,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "29844:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1587,
												"src": "29829:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1581,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "29829:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29746:108:0"
									},
									"returnParameters": {
										"id": 1586,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1585,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1587,
												"src": "29873:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1584,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "29873:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29872:8:0"
									},
									"scope": 1588,
									"src": "29721:160:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 3156,
							"src": "29191:692:0",
							"usedErrors": []
						},
						{
							"id": 1589,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "30020:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1590,
								"nodeType": "StructuredDocumentation",
								"src": "30045:279:0",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1599,
							"linearizedBaseContracts": [
								1599
							],
							"name": "IERC165",
							"nameLocation": "30335:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1591,
										"nodeType": "StructuredDocumentation",
										"src": "30349:340:0",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1598,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "30703:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1594,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1593,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "30728:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 1598,
												"src": "30721:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1592,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "30721:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30720:20:0"
									},
									"returnParameters": {
										"id": 1597,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1596,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1598,
												"src": "30764:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1595,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "30764:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30763:6:0"
									},
									"scope": 1599,
									"src": "30694:76:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 3156,
							"src": "30325:447:0",
							"usedErrors": []
						},
						{
							"id": 1600,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "30907:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1602,
										"name": "IERC165",
										"nameLocations": [
											"31538:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1599,
										"src": "31538:7:0"
									},
									"id": 1603,
									"nodeType": "InheritanceSpecifier",
									"src": "31538:7:0"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1601,
								"nodeType": "StructuredDocumentation",
								"src": "30933:576:0",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."
							},
							"fullyImplemented": true,
							"id": 1621,
							"linearizedBaseContracts": [
								1621,
								1599
							],
							"name": "ERC165",
							"nameLocation": "31528:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										1598
									],
									"body": {
										"id": 1619,
										"nodeType": "Block",
										"src": "31704:64:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 1617,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1612,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1606,
														"src": "31721:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1614,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1599,
																	"src": "31741:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1599_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1599_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 1613,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "31736:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1615,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "31736:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$1599",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 1616,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "31750:11:0",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "31736:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "31721:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1611,
												"id": 1618,
												"nodeType": "Return",
												"src": "31714:47:0"
											}
										]
									},
									"documentation": {
										"id": 1604,
										"nodeType": "StructuredDocumentation",
										"src": "31552:56:0",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 1620,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "31622:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1608,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "31680:8:0"
									},
									"parameters": {
										"id": 1607,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1606,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "31647:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 1620,
												"src": "31640:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1605,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "31640:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31639:20:0"
									},
									"returnParameters": {
										"id": 1611,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1610,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1620,
												"src": "31698:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1609,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "31698:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31697:6:0"
									},
									"scope": 1621,
									"src": "31613:155:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 3156,
							"src": "31510:260:0",
							"usedErrors": []
						},
						{
							"id": 1622,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "31908:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1624,
										"name": "IERC165",
										"nameLocations": [
											"32023:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1599,
										"src": "32023:7:0"
									},
									"id": 1625,
									"nodeType": "InheritanceSpecifier",
									"src": "32023:7:0"
								}
							],
							"canonicalName": "IERC721",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1623,
								"nodeType": "StructuredDocumentation",
								"src": "31934:67:0",
								"text": " @dev Required interface of an ERC721 compliant contract."
							},
							"fullyImplemented": false,
							"id": 1735,
							"linearizedBaseContracts": [
								1735,
								1599
							],
							"name": "IERC721",
							"nameLocation": "32012:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1626,
										"nodeType": "StructuredDocumentation",
										"src": "32037:88:0",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1634,
									"name": "Transfer",
									"nameLocation": "32136:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1633,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1628,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "32161:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1634,
												"src": "32145:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1627,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "32145:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1630,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "32183:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1634,
												"src": "32167:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1629,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "32167:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1632,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "32203:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1634,
												"src": "32187:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1631,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32187:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32144:67:0"
									},
									"src": "32130:82:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1635,
										"nodeType": "StructuredDocumentation",
										"src": "32218:94:0",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1643,
									"name": "Approval",
									"nameLocation": "32323:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1642,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1637,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "32348:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1643,
												"src": "32332:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1636,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "32332:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1639,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "32371:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1643,
												"src": "32355:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1638,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "32355:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1641,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "32397:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1643,
												"src": "32381:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1640,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32381:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32331:74:0"
									},
									"src": "32317:89:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1644,
										"nodeType": "StructuredDocumentation",
										"src": "32412:117:0",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 1652,
									"name": "ApprovalForAll",
									"nameLocation": "32540:14:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1651,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1646,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "32571:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1652,
												"src": "32555:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1645,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "32555:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1648,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "32594:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1652,
												"src": "32578:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1647,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "32578:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1650,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "32609:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1652,
												"src": "32604:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1649,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "32604:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32554:64:0"
									},
									"src": "32534:85:0"
								},
								{
									"documentation": {
										"id": 1653,
										"nodeType": "StructuredDocumentation",
										"src": "32625:76:0",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 1660,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "32715:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1656,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1655,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "32733:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1660,
												"src": "32725:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1654,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "32725:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32724:15:0"
									},
									"returnParameters": {
										"id": 1659,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1658,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "32771:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1660,
												"src": "32763:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1657,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32763:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32762:17:0"
									},
									"scope": 1735,
									"src": "32706:74:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1661,
										"nodeType": "StructuredDocumentation",
										"src": "32786:131:0",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 1668,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "32931:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1664,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1663,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "32947:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1668,
												"src": "32939:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1662,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32939:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32938:17:0"
									},
									"returnParameters": {
										"id": 1667,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1666,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "32987:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1668,
												"src": "32979:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1665,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "32979:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32978:15:0"
									},
									"scope": 1735,
									"src": "32922:72:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1669,
										"nodeType": "StructuredDocumentation",
										"src": "33000:556:0",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 1680,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "33570:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1678,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1671,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "33604:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1680,
												"src": "33596:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1670,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "33596:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1673,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "33626:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1680,
												"src": "33618:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1672,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "33618:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1675,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "33646:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1680,
												"src": "33638:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1674,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "33638:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1677,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "33678:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1680,
												"src": "33663:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1676,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "33663:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33586:102:0"
									},
									"returnParameters": {
										"id": 1679,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "33697:0:0"
									},
									"scope": 1735,
									"src": "33561:137:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1681,
										"nodeType": "StructuredDocumentation",
										"src": "33704:687:0",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 1690,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "34405:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1688,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1683,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "34439:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1690,
												"src": "34431:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1682,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "34431:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1685,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "34461:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1690,
												"src": "34453:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1684,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "34453:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1687,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "34481:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1690,
												"src": "34473:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1686,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "34473:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34421:73:0"
									},
									"returnParameters": {
										"id": 1689,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "34503:0:0"
									},
									"scope": 1735,
									"src": "34396:108:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1691,
										"nodeType": "StructuredDocumentation",
										"src": "34510:732:0",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1700,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "35256:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1698,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1693,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "35286:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1700,
												"src": "35278:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1692,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "35278:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1695,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "35308:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1700,
												"src": "35300:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1694,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "35300:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1697,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "35328:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1700,
												"src": "35320:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1696,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "35320:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "35268:73:0"
									},
									"returnParameters": {
										"id": 1699,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "35350:0:0"
									},
									"scope": 1735,
									"src": "35247:104:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1701,
										"nodeType": "StructuredDocumentation",
										"src": "35357:452:0",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1708,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "35823:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1706,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1703,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "35839:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1708,
												"src": "35831:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1702,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "35831:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1705,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "35851:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1708,
												"src": "35843:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1704,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "35843:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "35830:29:0"
									},
									"returnParameters": {
										"id": 1707,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "35868:0:0"
									},
									"scope": 1735,
									"src": "35814:55:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1709,
										"nodeType": "StructuredDocumentation",
										"src": "35875:309:0",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 1716,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "36198:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1714,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1711,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "36224:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1716,
												"src": "36216:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1710,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "36216:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1713,
												"mutability": "mutable",
												"name": "_approved",
												"nameLocation": "36239:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1716,
												"src": "36234:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1712,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "36234:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "36215:34:0"
									},
									"returnParameters": {
										"id": 1715,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "36258:0:0"
									},
									"scope": 1735,
									"src": "36189:70:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1717,
										"nodeType": "StructuredDocumentation",
										"src": "36265:139:0",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 1724,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "36418:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1720,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1719,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "36438:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1724,
												"src": "36430:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1718,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "36430:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "36429:17:0"
									},
									"returnParameters": {
										"id": 1723,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1722,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "36478:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1724,
												"src": "36470:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1721,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "36470:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "36469:18:0"
									},
									"scope": 1735,
									"src": "36409:79:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1725,
										"nodeType": "StructuredDocumentation",
										"src": "36494:138:0",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 1734,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "36646:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1730,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1727,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "36671:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1734,
												"src": "36663:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1726,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "36663:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1729,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "36686:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1734,
												"src": "36678:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1728,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "36678:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "36662:33:0"
									},
									"returnParameters": {
										"id": 1733,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1732,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1734,
												"src": "36719:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1731,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "36719:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "36718:6:0"
									},
									"scope": 1735,
									"src": "36637:88:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 3156,
							"src": "32002:4725:0",
							"usedErrors": []
						},
						{
							"id": 1736,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "36907:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1738,
										"name": "IERC721",
										"nameLocations": [
											"37101:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1735,
										"src": "37101:7:0"
									},
									"id": 1739,
									"nodeType": "InheritanceSpecifier",
									"src": "37101:7:0"
								}
							],
							"canonicalName": "IERC721Enumerable",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1737,
								"nodeType": "StructuredDocumentation",
								"src": "36933:136:0",
								"text": " @title ERC-721 Non-Fungible Token Standard, optional enumeration extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"
							},
							"fullyImplemented": false,
							"id": 1764,
							"linearizedBaseContracts": [
								1764,
								1735,
								1599
							],
							"name": "IERC721Enumerable",
							"nameLocation": "37080:17:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1740,
										"nodeType": "StructuredDocumentation",
										"src": "37115:82:0",
										"text": " @dev Returns the total amount of tokens stored by the contract."
									},
									"functionSelector": "18160ddd",
									"id": 1745,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "37211:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1741,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "37222:2:0"
									},
									"returnParameters": {
										"id": 1744,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1743,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1745,
												"src": "37248:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1742,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "37248:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "37247:9:0"
									},
									"scope": 1764,
									"src": "37202:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1746,
										"nodeType": "StructuredDocumentation",
										"src": "37263:171:0",
										"text": " @dev Returns a token ID owned by `owner` at a given `index` of its token list.\n Use along with {balanceOf} to enumerate all of ``owner``'s tokens."
									},
									"functionSelector": "2f745c59",
									"id": 1755,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenOfOwnerByIndex",
									"nameLocation": "37448:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1751,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1748,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "37476:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1755,
												"src": "37468:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1747,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "37468:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1750,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "37491:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1755,
												"src": "37483:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1749,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "37483:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "37467:30:0"
									},
									"returnParameters": {
										"id": 1754,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1753,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1755,
												"src": "37521:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1752,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "37521:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "37520:9:0"
									},
									"scope": 1764,
									"src": "37439:91:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1756,
										"nodeType": "StructuredDocumentation",
										"src": "37536:164:0",
										"text": " @dev Returns a token ID at a given `index` of all the tokens stored by the contract.\n Use along with {totalSupply} to enumerate all tokens."
									},
									"functionSelector": "4f6ccce7",
									"id": 1763,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenByIndex",
									"nameLocation": "37714:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1759,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1758,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "37735:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1763,
												"src": "37727:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1757,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "37727:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "37726:15:0"
									},
									"returnParameters": {
										"id": 1762,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1761,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1763,
												"src": "37765:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1760,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "37765:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "37764:9:0"
									},
									"scope": 1764,
									"src": "37705:69:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 3156,
							"src": "37070:706:0",
							"usedErrors": []
						},
						{
							"id": 1765,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "37937:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1767,
										"name": "IERC721",
										"nameLocations": [
											"38126:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1735,
										"src": "38126:7:0"
									},
									"id": 1768,
									"nodeType": "InheritanceSpecifier",
									"src": "38126:7:0"
								}
							],
							"canonicalName": "IERC721Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1766,
								"nodeType": "StructuredDocumentation",
								"src": "37963:133:0",
								"text": " @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"
							},
							"fullyImplemented": false,
							"id": 1789,
							"linearizedBaseContracts": [
								1789,
								1735,
								1599
							],
							"name": "IERC721Metadata",
							"nameLocation": "38107:15:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1769,
										"nodeType": "StructuredDocumentation",
										"src": "38140:58:0",
										"text": " @dev Returns the token collection name."
									},
									"functionSelector": "06fdde03",
									"id": 1774,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "38212:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1770,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "38216:2:0"
									},
									"returnParameters": {
										"id": 1773,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1772,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1774,
												"src": "38242:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1771,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "38242:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "38241:15:0"
									},
									"scope": 1789,
									"src": "38203:54:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1775,
										"nodeType": "StructuredDocumentation",
										"src": "38263:60:0",
										"text": " @dev Returns the token collection symbol."
									},
									"functionSelector": "95d89b41",
									"id": 1780,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "38337:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1776,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "38343:2:0"
									},
									"returnParameters": {
										"id": 1779,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1778,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1780,
												"src": "38369:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1777,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "38369:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "38368:15:0"
									},
									"scope": 1789,
									"src": "38328:56:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1781,
										"nodeType": "StructuredDocumentation",
										"src": "38390:90:0",
										"text": " @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."
									},
									"functionSelector": "c87b56dd",
									"id": 1788,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "38494:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1784,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1783,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "38511:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1788,
												"src": "38503:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1782,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "38503:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "38502:17:0"
									},
									"returnParameters": {
										"id": 1787,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1786,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1788,
												"src": "38543:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1785,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "38543:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "38542:15:0"
									},
									"scope": 1789,
									"src": "38485:73:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 3156,
							"src": "38097:463:0",
							"usedErrors": []
						},
						{
							"id": 1790,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "38696:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1792,
										"name": "Context",
										"nameLocations": [
											"38994:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1131,
										"src": "38994:7:0"
									},
									"id": 1793,
									"nodeType": "InheritanceSpecifier",
									"src": "38994:7:0"
								},
								{
									"baseName": {
										"id": 1794,
										"name": "ERC165",
										"nameLocations": [
											"39003:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1621,
										"src": "39003:6:0"
									},
									"id": 1795,
									"nodeType": "InheritanceSpecifier",
									"src": "39003:6:0"
								},
								{
									"baseName": {
										"id": 1796,
										"name": "IERC721",
										"nameLocations": [
											"39011:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1735,
										"src": "39011:7:0"
									},
									"id": 1797,
									"nodeType": "InheritanceSpecifier",
									"src": "39011:7:0"
								},
								{
									"baseName": {
										"id": 1798,
										"name": "IERC721Metadata",
										"nameLocations": [
											"39020:15:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1789,
										"src": "39020:15:0"
									},
									"id": 1799,
									"nodeType": "InheritanceSpecifier",
									"src": "39020:15:0"
								}
							],
							"canonicalName": "ERC721",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1791,
								"nodeType": "StructuredDocumentation",
								"src": "38728:246:0",
								"text": " @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n the Metadata extension, but not including the Enumerable extension, which is available separately as\n {ERC721Enumerable}."
							},
							"fullyImplemented": true,
							"id": 2708,
							"linearizedBaseContracts": [
								2708,
								1789,
								1735,
								1621,
								1599,
								1131
							],
							"name": "ERC721",
							"nameLocation": "38984:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1802,
									"libraryName": {
										"id": 1800,
										"name": "Address",
										"nameLocations": [
											"39048:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1571,
										"src": "39048:7:0"
									},
									"nodeType": "UsingForDirective",
									"src": "39042:26:0",
									"typeName": {
										"id": 1801,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "39060:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"global": false,
									"id": 1805,
									"libraryName": {
										"id": 1803,
										"name": "Strings",
										"nameLocations": [
											"39079:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1110,
										"src": "39079:7:0"
									},
									"nodeType": "UsingForDirective",
									"src": "39073:26:0",
									"typeName": {
										"id": 1804,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "39091:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 1807,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "39138:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 2708,
									"src": "39123:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 1806,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "39123:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1809,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "39185:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 2708,
									"src": "39170:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 1808,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "39170:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1813,
									"mutability": "mutable",
									"name": "_owners",
									"nameLocation": "39281:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 2708,
									"src": "39245:43:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 1812,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1810,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "39253:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "39245:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1811,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "39264:7:0",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1817,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "39375:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 2708,
									"src": "39339:45:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1816,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1814,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "39347:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "39339:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1815,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "39358:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1821,
									"mutability": "mutable",
									"name": "_tokenApprovals",
									"nameLocation": "39476:15:0",
									"nodeType": "VariableDeclaration",
									"scope": 2708,
									"src": "39440:51:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 1820,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1818,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "39448:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "39440:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1819,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "39459:7:0",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1827,
									"mutability": "mutable",
									"name": "_operatorApprovals",
									"nameLocation": "39599:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 2708,
									"src": "39546:71:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 1826,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1822,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "39554:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "39546:44:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1825,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 1823,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "39573:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "39565:24:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 1824,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "39584:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 1843,
										"nodeType": "Block",
										"src": "39793:57:0",
										"statements": [
											{
												"expression": {
													"id": 1837,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1835,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1807,
														"src": "39803:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1836,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1830,
														"src": "39811:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "39803:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 1838,
												"nodeType": "ExpressionStatement",
												"src": "39803:13:0"
											},
											{
												"expression": {
													"id": 1841,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1839,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1809,
														"src": "39826:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1840,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1832,
														"src": "39836:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "39826:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 1842,
												"nodeType": "ExpressionStatement",
												"src": "39826:17:0"
											}
										]
									},
									"documentation": {
										"id": 1828,
										"nodeType": "StructuredDocumentation",
										"src": "39624:108:0",
										"text": " @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."
									},
									"id": 1844,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1833,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1830,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "39763:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1844,
												"src": "39749:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1829,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "39749:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1832,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "39784:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1844,
												"src": "39770:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1831,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "39770:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "39748:44:0"
									},
									"returnParameters": {
										"id": 1834,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "39793:0:0"
									},
									"scope": 2708,
									"src": "39737:113:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1598,
										1620
									],
									"body": {
										"id": 1874,
										"nodeType": "Block",
										"src": "40025:192:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1872,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 1867,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 1860,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1855,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1847,
																"src": "40054:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1857,
																			"name": "IERC721",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1735,
																			"src": "40074:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$1735_$",
																				"typeString": "type(contract IERC721)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$1735_$",
																				"typeString": "type(contract IERC721)"
																			}
																		],
																		"id": 1856,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "40069:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 1858,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "40069:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721_$1735",
																		"typeString": "type(contract IERC721)"
																	}
																},
																"id": 1859,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "40083:11:0",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "40069:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "40054:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 1866,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1861,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1847,
																"src": "40110:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1863,
																			"name": "IERC721Metadata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1789,
																			"src": "40130:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$1789_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$1789_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		],
																		"id": 1862,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "40125:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 1864,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "40125:21:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721Metadata_$1789",
																		"typeString": "type(contract IERC721Metadata)"
																	}
																},
																"id": 1865,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "40147:11:0",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "40125:33:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "40110:48:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "40054:104:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 1870,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1847,
																"src": "40198:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 1868,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "40174:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC721_$2708_$",
																	"typeString": "type(contract super ERC721)"
																}
															},
															"id": 1869,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "40180:17:0",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1620,
															"src": "40174:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 1871,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "40174:36:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "40054:156:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1854,
												"id": 1873,
												"nodeType": "Return",
												"src": "40035:175:0"
											}
										]
									},
									"documentation": {
										"id": 1845,
										"nodeType": "StructuredDocumentation",
										"src": "39856:56:0",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 1875,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "39926:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1851,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 1849,
												"name": "ERC165",
												"nameLocations": [
													"39993:6:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1621,
												"src": "39993:6:0"
											},
											{
												"id": 1850,
												"name": "IERC165",
												"nameLocations": [
													"40001:7:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1599,
												"src": "40001:7:0"
											}
										],
										"src": "39984:25:0"
									},
									"parameters": {
										"id": 1848,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1847,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "39951:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 1875,
												"src": "39944:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1846,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "39944:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "39943:20:0"
									},
									"returnParameters": {
										"id": 1854,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1853,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1875,
												"src": "40019:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1852,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "40019:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "40018:6:0"
									},
									"scope": 2708,
									"src": "39917:300:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1660
									],
									"body": {
										"id": 1898,
										"nodeType": "Block",
										"src": "40357:123:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1890,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1885,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1878,
																"src": "40375:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1888,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "40392:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1887,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "40384:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1886,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "40384:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1889,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "40384:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "40375:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a2061646472657373207a65726f206973206e6f7420612076616c6964206f776e6572",
															"id": 1891,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "40396:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159",
																"typeString": "literal_string \"ERC721: address zero is not a valid owner\""
															},
															"value": "ERC721: address zero is not a valid owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159",
																"typeString": "literal_string \"ERC721: address zero is not a valid owner\""
															}
														],
														"id": 1884,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "40367:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1892,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "40367:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1893,
												"nodeType": "ExpressionStatement",
												"src": "40367:73:0"
											},
											{
												"expression": {
													"baseExpression": {
														"id": 1894,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1817,
														"src": "40457:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1896,
													"indexExpression": {
														"id": 1895,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1878,
														"src": "40467:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "40457:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1883,
												"id": 1897,
												"nodeType": "Return",
												"src": "40450:23:0"
											}
										]
									},
									"documentation": {
										"id": 1876,
										"nodeType": "StructuredDocumentation",
										"src": "40223:48:0",
										"text": " @dev See {IERC721-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 1899,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "40285:9:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1880,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "40330:8:0"
									},
									"parameters": {
										"id": 1879,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1878,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "40303:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1899,
												"src": "40295:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1877,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "40295:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "40294:15:0"
									},
									"returnParameters": {
										"id": 1883,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1882,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1899,
												"src": "40348:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1881,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "40348:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "40347:9:0"
									},
									"scope": 2708,
									"src": "40276:204:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1668
									],
									"body": {
										"id": 1926,
										"nodeType": "Block",
										"src": "40618:138:0",
										"statements": [
											{
												"assignments": [
													1909
												],
												"declarations": [
													{
														"constant": false,
														"id": 1909,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "40636:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 1926,
														"src": "40628:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1908,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "40628:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1913,
												"initialValue": {
													"arguments": [
														{
															"id": 1911,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1902,
															"src": "40653:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1910,
														"name": "_ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2209,
														"src": "40644:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 1912,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "40644:17:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "40628:33:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1920,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1915,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1909,
																"src": "40679:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1918,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "40696:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1917,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "40688:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1916,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "40688:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1919,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "40688:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "40679:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a20696e76616c696420746f6b656e204944",
															"id": 1921,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "40700:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f",
																"typeString": "literal_string \"ERC721: invalid token ID\""
															},
															"value": "ERC721: invalid token ID"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f",
																"typeString": "literal_string \"ERC721: invalid token ID\""
															}
														],
														"id": 1914,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "40671:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1922,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "40671:56:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1923,
												"nodeType": "ExpressionStatement",
												"src": "40671:56:0"
											},
											{
												"expression": {
													"id": 1924,
													"name": "owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1909,
													"src": "40744:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1907,
												"id": 1925,
												"nodeType": "Return",
												"src": "40737:12:0"
											}
										]
									},
									"documentation": {
										"id": 1900,
										"nodeType": "StructuredDocumentation",
										"src": "40486:46:0",
										"text": " @dev See {IERC721-ownerOf}."
									},
									"functionSelector": "6352211e",
									"id": 1927,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "40546:7:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1904,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "40591:8:0"
									},
									"parameters": {
										"id": 1903,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1902,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "40562:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1927,
												"src": "40554:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1901,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "40554:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "40553:17:0"
									},
									"returnParameters": {
										"id": 1907,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1906,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1927,
												"src": "40609:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1905,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "40609:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "40608:9:0"
									},
									"scope": 2708,
									"src": "40537:219:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1774
									],
									"body": {
										"id": 1936,
										"nodeType": "Block",
										"src": "40887:29:0",
										"statements": [
											{
												"expression": {
													"id": 1934,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1807,
													"src": "40904:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 1933,
												"id": 1935,
												"nodeType": "Return",
												"src": "40897:12:0"
											}
										]
									},
									"documentation": {
										"id": 1928,
										"nodeType": "StructuredDocumentation",
										"src": "40762:51:0",
										"text": " @dev See {IERC721Metadata-name}."
									},
									"functionSelector": "06fdde03",
									"id": 1937,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "40827:4:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1930,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "40854:8:0"
									},
									"parameters": {
										"id": 1929,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "40831:2:0"
									},
									"returnParameters": {
										"id": 1933,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1932,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1937,
												"src": "40872:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1931,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "40872:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "40871:15:0"
									},
									"scope": 2708,
									"src": "40818:98:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1780
									],
									"body": {
										"id": 1946,
										"nodeType": "Block",
										"src": "41051:31:0",
										"statements": [
											{
												"expression": {
													"id": 1944,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1809,
													"src": "41068:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 1943,
												"id": 1945,
												"nodeType": "Return",
												"src": "41061:14:0"
											}
										]
									},
									"documentation": {
										"id": 1938,
										"nodeType": "StructuredDocumentation",
										"src": "40922:53:0",
										"text": " @dev See {IERC721Metadata-symbol}."
									},
									"functionSelector": "95d89b41",
									"id": 1947,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "40989:6:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1940,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "41018:8:0"
									},
									"parameters": {
										"id": 1939,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "40995:2:0"
									},
									"returnParameters": {
										"id": 1943,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1942,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1947,
												"src": "41036:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1941,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "41036:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "41035:15:0"
									},
									"scope": 2708,
									"src": "40980:102:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1788
									],
									"body": {
										"id": 1985,
										"nodeType": "Block",
										"src": "41236:188:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1957,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1950,
															"src": "41261:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1956,
														"name": "_requireMinted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2604,
														"src": "41246:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$__$",
															"typeString": "function (uint256) view"
														}
													},
													"id": 1958,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "41246:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1959,
												"nodeType": "ExpressionStatement",
												"src": "41246:23:0"
											},
											{
												"assignments": [
													1961
												],
												"declarations": [
													{
														"constant": false,
														"id": 1961,
														"mutability": "mutable",
														"name": "baseURI",
														"nameLocation": "41294:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 1985,
														"src": "41280:21:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 1960,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "41280:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1964,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1962,
														"name": "_baseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1995,
														"src": "41304:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () view returns (string memory)"
														}
													},
													"id": 1963,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "41304:10:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "41280:34:0"
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1971,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1967,
																		"name": "baseURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1961,
																		"src": "41337:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1966,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "41331:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1965,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "41331:5:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1968,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "41331:14:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1969,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "41346:6:0",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "41331:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 1970,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "41355:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "41331:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "",
														"id": 1982,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "41415:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
															"typeString": "literal_string \"\""
														},
														"value": ""
													},
													"id": 1983,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "41331:86:0",
													"trueExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1976,
																		"name": "baseURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1961,
																		"src": "41383:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"expression": {
																				"id": 1977,
																				"name": "tokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1950,
																				"src": "41392:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1978,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "41400:8:0",
																			"memberName": "toString",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 993,
																			"src": "41392:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (string memory)"
																			}
																		},
																		"id": 1979,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "41392:18:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"expression": {
																		"id": 1974,
																		"name": "abi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967295,
																		"src": "41366:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_abi",
																			"typeString": "abi"
																		}
																	},
																	"id": 1975,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "41370:12:0",
																	"memberName": "encodePacked",
																	"nodeType": "MemberAccess",
																	"src": "41366:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function () pure returns (bytes memory)"
																	}
																},
																"id": 1980,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "41366:45:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 1973,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "41359:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															},
															"typeName": {
																"id": 1972,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "41359:6:0",
																"typeDescriptions": {}
															}
														},
														"id": 1981,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "41359:53:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1955,
												"id": 1984,
												"nodeType": "Return",
												"src": "41324:93:0"
											}
										]
									},
									"documentation": {
										"id": 1948,
										"nodeType": "StructuredDocumentation",
										"src": "41088:55:0",
										"text": " @dev See {IERC721Metadata-tokenURI}."
									},
									"functionSelector": "c87b56dd",
									"id": 1986,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "41157:8:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1952,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "41203:8:0"
									},
									"parameters": {
										"id": 1951,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1950,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "41174:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1986,
												"src": "41166:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1949,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "41166:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "41165:17:0"
									},
									"returnParameters": {
										"id": 1955,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1954,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1986,
												"src": "41221:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1953,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "41221:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "41220:15:0"
									},
									"scope": 2708,
									"src": "41148:276:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1994,
										"nodeType": "Block",
										"src": "41732:26:0",
										"statements": [
											{
												"expression": {
													"hexValue": "",
													"id": 1992,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "41749:2:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
														"typeString": "literal_string \"\""
													},
													"value": ""
												},
												"functionReturnParameters": 1991,
												"id": 1993,
												"nodeType": "Return",
												"src": "41742:9:0"
											}
										]
									},
									"documentation": {
										"id": 1987,
										"nodeType": "StructuredDocumentation",
										"src": "41430:231:0",
										"text": " @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overridden in child contracts."
									},
									"id": 1995,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_baseURI",
									"nameLocation": "41675:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1988,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "41683:2:0"
									},
									"returnParameters": {
										"id": 1991,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1990,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1995,
												"src": "41717:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1989,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "41717:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "41716:15:0"
									},
									"scope": 2708,
									"src": "41666:92:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1708
									],
									"body": {
										"id": 2037,
										"nodeType": "Block",
										"src": "41885:336:0",
										"statements": [
											{
												"assignments": [
													2005
												],
												"declarations": [
													{
														"constant": false,
														"id": 2005,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "41903:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 2037,
														"src": "41895:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2004,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "41895:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2010,
												"initialValue": {
													"arguments": [
														{
															"id": 2008,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2000,
															"src": "41926:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2006,
															"name": "ERC721",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2708,
															"src": "41911:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ERC721_$2708_$",
																"typeString": "type(contract ERC721)"
															}
														},
														"id": 2007,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "41918:7:0",
														"memberName": "ownerOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1927,
														"src": "41911:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 2009,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "41911:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "41895:39:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2014,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2012,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1998,
																"src": "41952:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 2013,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2005,
																"src": "41958:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "41952:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a20617070726f76616c20746f2063757272656e74206f776e6572",
															"id": 2015,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "41965:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942",
																"typeString": "literal_string \"ERC721: approval to current owner\""
															},
															"value": "ERC721: approval to current owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942",
																"typeString": "literal_string \"ERC721: approval to current owner\""
															}
														],
														"id": 2011,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "41944:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2016,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "41944:57:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2017,
												"nodeType": "ExpressionStatement",
												"src": "41944:57:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 2028,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 2022,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 2019,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1121,
																		"src": "42033:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 2020,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "42033:12:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 2021,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2005,
																	"src": "42049:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "42033:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 2024,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2005,
																		"src": "42075:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 2025,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1121,
																			"src": "42082:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 2026,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "42082:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2023,
																	"name": "isApprovedForAll",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2091,
																	"src": "42058:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																		"typeString": "function (address,address) view returns (bool)"
																	}
																},
																"id": 2027,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "42058:37:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "42033:62:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c",
															"id": 2029,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "42109:63:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83",
																"typeString": "literal_string \"ERC721: approve caller is not token owner or approved for all\""
															},
															"value": "ERC721: approve caller is not token owner or approved for all"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83",
																"typeString": "literal_string \"ERC721: approve caller is not token owner or approved for all\""
															}
														],
														"id": 2018,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "42012:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2030,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "42012:170:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2031,
												"nodeType": "ExpressionStatement",
												"src": "42012:170:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2033,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1998,
															"src": "42202:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2034,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2000,
															"src": "42206:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2032,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2558,
														"src": "42193:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2035,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "42193:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2036,
												"nodeType": "ExpressionStatement",
												"src": "42193:21:0"
											}
										]
									},
									"documentation": {
										"id": 1996,
										"nodeType": "StructuredDocumentation",
										"src": "41764:46:0",
										"text": " @dev See {IERC721-approve}."
									},
									"functionSelector": "095ea7b3",
									"id": 2038,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "41824:7:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2002,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "41876:8:0"
									},
									"parameters": {
										"id": 2001,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1998,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "41840:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2038,
												"src": "41832:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1997,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "41832:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2000,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "41852:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2038,
												"src": "41844:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1999,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "41844:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "41831:29:0"
									},
									"returnParameters": {
										"id": 2003,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "41885:0:0"
									},
									"scope": 2708,
									"src": "41815:406:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1724
									],
									"body": {
										"id": 2055,
										"nodeType": "Block",
										"src": "42367:82:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2048,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2041,
															"src": "42392:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2047,
														"name": "_requireMinted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2604,
														"src": "42377:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$__$",
															"typeString": "function (uint256) view"
														}
													},
													"id": 2049,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "42377:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2050,
												"nodeType": "ExpressionStatement",
												"src": "42377:23:0"
											},
											{
												"expression": {
													"baseExpression": {
														"id": 2051,
														"name": "_tokenApprovals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1821,
														"src": "42418:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 2053,
													"indexExpression": {
														"id": 2052,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2041,
														"src": "42434:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "42418:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2046,
												"id": 2054,
												"nodeType": "Return",
												"src": "42411:31:0"
											}
										]
									},
									"documentation": {
										"id": 2039,
										"nodeType": "StructuredDocumentation",
										"src": "42227:50:0",
										"text": " @dev See {IERC721-getApproved}."
									},
									"functionSelector": "081812fc",
									"id": 2056,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "42291:11:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2043,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "42340:8:0"
									},
									"parameters": {
										"id": 2042,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2041,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "42311:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2056,
												"src": "42303:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2040,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "42303:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "42302:17:0"
									},
									"returnParameters": {
										"id": 2046,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2045,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2056,
												"src": "42358:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2044,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "42358:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "42357:9:0"
									},
									"scope": 2708,
									"src": "42282:167:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1716
									],
									"body": {
										"id": 2072,
										"nodeType": "Block",
										"src": "42600:69:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2066,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1121,
																"src": "42629:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 2067,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "42629:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2068,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2059,
															"src": "42643:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2069,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2061,
															"src": "42653:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 2065,
														"name": "_setApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2590,
														"src": "42610:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 2070,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "42610:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2071,
												"nodeType": "ExpressionStatement",
												"src": "42610:52:0"
											}
										]
									},
									"documentation": {
										"id": 2057,
										"nodeType": "StructuredDocumentation",
										"src": "42455:56:0",
										"text": " @dev See {IERC721-setApprovalForAll}."
									},
									"functionSelector": "a22cb465",
									"id": 2073,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "42525:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2063,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "42591:8:0"
									},
									"parameters": {
										"id": 2062,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2059,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "42551:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 2073,
												"src": "42543:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2058,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "42543:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2061,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "42566:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 2073,
												"src": "42561:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2060,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "42561:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "42542:33:0"
									},
									"returnParameters": {
										"id": 2064,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "42600:0:0"
									},
									"scope": 2708,
									"src": "42516:153:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1734
									],
									"body": {
										"id": 2090,
										"nodeType": "Block",
										"src": "42838:59:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 2084,
															"name": "_operatorApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1827,
															"src": "42855:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(address => bool))"
															}
														},
														"id": 2086,
														"indexExpression": {
															"id": 2085,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2076,
															"src": "42874:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "42855:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 2088,
													"indexExpression": {
														"id": 2087,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2078,
														"src": "42881:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "42855:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2083,
												"id": 2089,
												"nodeType": "Return",
												"src": "42848:42:0"
											}
										]
									},
									"documentation": {
										"id": 2074,
										"nodeType": "StructuredDocumentation",
										"src": "42675:55:0",
										"text": " @dev See {IERC721-isApprovedForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 2091,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "42744:16:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2080,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "42814:8:0"
									},
									"parameters": {
										"id": 2079,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2076,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "42769:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2091,
												"src": "42761:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2075,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "42761:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2078,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "42784:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 2091,
												"src": "42776:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2077,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "42776:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "42760:33:0"
									},
									"returnParameters": {
										"id": 2083,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2082,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2091,
												"src": "42832:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2081,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "42832:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "42831:6:0"
									},
									"scope": 2708,
									"src": "42735:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1700
									],
									"body": {
										"id": 2117,
										"nodeType": "Block",
										"src": "43078:207:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 2104,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1121,
																		"src": "43167:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 2105,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "43167:12:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2106,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2098,
																	"src": "43181:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2103,
																"name": "_isApprovedOrOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2261,
																"src": "43148:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,uint256) view returns (bool)"
																}
															},
															"id": 2107,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "43148:41:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6572206f7220617070726f766564",
															"id": 2108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "43191:47:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af",
																"typeString": "literal_string \"ERC721: caller is not token owner or approved\""
															},
															"value": "ERC721: caller is not token owner or approved"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af",
																"typeString": "literal_string \"ERC721: caller is not token owner or approved\""
															}
														],
														"id": 2102,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "43140:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2109,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "43140:99:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2110,
												"nodeType": "ExpressionStatement",
												"src": "43140:99:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2112,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2094,
															"src": "43260:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2113,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2096,
															"src": "43266:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2114,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2098,
															"src": "43270:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2111,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2534,
														"src": "43250:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2115,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "43250:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2116,
												"nodeType": "ExpressionStatement",
												"src": "43250:28:0"
											}
										]
									},
									"documentation": {
										"id": 2092,
										"nodeType": "StructuredDocumentation",
										"src": "42903:51:0",
										"text": " @dev See {IERC721-transferFrom}."
									},
									"functionSelector": "23b872dd",
									"id": 2118,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "42968:12:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2100,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "43069:8:0"
									},
									"parameters": {
										"id": 2099,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2094,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "42998:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2118,
												"src": "42990:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2093,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "42990:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2096,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "43020:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2118,
												"src": "43012:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2095,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "43012:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2098,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "43040:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2118,
												"src": "43032:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2097,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "43032:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "42980:73:0"
									},
									"returnParameters": {
										"id": 2101,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "43078:0:0"
									},
									"scope": 2708,
									"src": "42959:326:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1690
									],
									"body": {
										"id": 2136,
										"nodeType": "Block",
										"src": "43474:56:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2130,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2121,
															"src": "43501:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2131,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2123,
															"src": "43507:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2132,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2125,
															"src": "43511:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 2133,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "43520:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 2129,
														"name": "safeTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2137,
															2167
														],
														"referencedDeclaration": 2167,
														"src": "43484:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 2134,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "43484:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2135,
												"nodeType": "ExpressionStatement",
												"src": "43484:39:0"
											}
										]
									},
									"documentation": {
										"id": 2119,
										"nodeType": "StructuredDocumentation",
										"src": "43291:55:0",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "42842e0e",
									"id": 2137,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "43360:16:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2127,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "43465:8:0"
									},
									"parameters": {
										"id": 2126,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2121,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "43394:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2137,
												"src": "43386:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2120,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "43386:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2123,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "43416:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2137,
												"src": "43408:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2122,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "43408:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2125,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "43436:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2137,
												"src": "43428:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2124,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "43428:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "43376:73:0"
									},
									"returnParameters": {
										"id": 2128,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "43474:0:0"
									},
									"scope": 2708,
									"src": "43351:179:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1680
									],
									"body": {
										"id": 2166,
										"nodeType": "Block",
										"src": "43746:164:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 2152,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1121,
																		"src": "43783:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 2153,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "43783:12:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2154,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2144,
																	"src": "43797:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2151,
																"name": "_isApprovedOrOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2261,
																"src": "43764:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,uint256) view returns (bool)"
																}
															},
															"id": 2155,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "43764:41:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6572206f7220617070726f766564",
															"id": 2156,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "43807:47:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af",
																"typeString": "literal_string \"ERC721: caller is not token owner or approved\""
															},
															"value": "ERC721: caller is not token owner or approved"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af",
																"typeString": "literal_string \"ERC721: caller is not token owner or approved\""
															}
														],
														"id": 2150,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "43756:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2157,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "43756:99:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2158,
												"nodeType": "ExpressionStatement",
												"src": "43756:99:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2160,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2140,
															"src": "43879:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2161,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2142,
															"src": "43885:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2162,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2144,
															"src": "43889:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2163,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2146,
															"src": "43898:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2159,
														"name": "_safeTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2196,
														"src": "43865:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 2164,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "43865:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2165,
												"nodeType": "ExpressionStatement",
												"src": "43865:38:0"
											}
										]
									},
									"documentation": {
										"id": 2138,
										"nodeType": "StructuredDocumentation",
										"src": "43536:55:0",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "b88d4fde",
									"id": 2167,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "43605:16:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2148,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "43737:8:0"
									},
									"parameters": {
										"id": 2147,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2140,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "43639:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2167,
												"src": "43631:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2139,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "43631:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2142,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "43661:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2167,
												"src": "43653:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2141,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "43653:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2144,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "43681:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2167,
												"src": "43673:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2143,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "43673:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2146,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "43711:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2167,
												"src": "43698:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2145,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "43698:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "43621:100:0"
									},
									"returnParameters": {
										"id": 2149,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "43746:0:0"
									},
									"scope": 2708,
									"src": "43596:314:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2195,
										"nodeType": "Block",
										"src": "44911:165:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2180,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2170,
															"src": "44931:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2181,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2172,
															"src": "44937:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2182,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2174,
															"src": "44941:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2179,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2534,
														"src": "44921:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2183,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "44921:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2184,
												"nodeType": "ExpressionStatement",
												"src": "44921:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2187,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2170,
																	"src": "44990:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2188,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2172,
																	"src": "44996:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2189,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2174,
																	"src": "45000:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2190,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2176,
																	"src": "45009:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 2186,
																"name": "_checkOnERC721Received",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2666,
																"src": "44967:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256,bytes memory) returns (bool)"
																}
															},
															"id": 2191,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "44967:47:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572",
															"id": 2192,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "45016:52:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
																"typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
															},
															"value": "ERC721: transfer to non ERC721Receiver implementer"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
																"typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
															}
														],
														"id": 2185,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "44959:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2193,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "44959:110:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2194,
												"nodeType": "ExpressionStatement",
												"src": "44959:110:0"
											}
										]
									},
									"documentation": {
										"id": 2168,
										"nodeType": "StructuredDocumentation",
										"src": "43916:850:0",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n `data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"id": 2196,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransfer",
									"nameLocation": "44780:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2170,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "44811:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2196,
												"src": "44803:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2169,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "44803:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2172,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "44833:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2196,
												"src": "44825:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "44825:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2174,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "44853:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2196,
												"src": "44845:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "44845:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2176,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "44883:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2196,
												"src": "44870:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2175,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "44870:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "44793:100:0"
									},
									"returnParameters": {
										"id": 2178,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "44911:0:0"
									},
									"scope": 2708,
									"src": "44771:305:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2208,
										"nodeType": "Block",
										"src": "45260:40:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 2204,
														"name": "_owners",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1813,
														"src": "45277:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 2206,
													"indexExpression": {
														"id": 2205,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2199,
														"src": "45285:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "45277:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2203,
												"id": 2207,
												"nodeType": "Return",
												"src": "45270:23:0"
											}
										]
									},
									"documentation": {
										"id": 2197,
										"nodeType": "StructuredDocumentation",
										"src": "45082:98:0",
										"text": " @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist"
									},
									"id": 2209,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_ownerOf",
									"nameLocation": "45194:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2200,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2199,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "45211:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2209,
												"src": "45203:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2198,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "45203:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "45202:17:0"
									},
									"returnParameters": {
										"id": 2203,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2202,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2209,
												"src": "45251:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2201,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "45251:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "45250:9:0"
									},
									"scope": 2708,
									"src": "45185:115:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2226,
										"nodeType": "Block",
										"src": "45674:55:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2224,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 2218,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2212,
																"src": "45700:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 2217,
															"name": "_ownerOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2209,
															"src": "45691:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																"typeString": "function (uint256) view returns (address)"
															}
														},
														"id": 2219,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "45691:17:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2222,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "45720:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2221,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "45712:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2220,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "45712:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 2223,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "45712:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "45691:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2216,
												"id": 2225,
												"nodeType": "Return",
												"src": "45684:38:0"
											}
										]
									},
									"documentation": {
										"id": 2210,
										"nodeType": "StructuredDocumentation",
										"src": "45306:292:0",
										"text": " @dev Returns whether `tokenId` exists.\n Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n Tokens start existing when they are minted (`_mint`),\n and stop existing when they are burned (`_burn`)."
									},
									"id": 2227,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_exists",
									"nameLocation": "45612:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2212,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "45628:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2227,
												"src": "45620:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2211,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "45620:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "45619:17:0"
									},
									"returnParameters": {
										"id": 2216,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2215,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2227,
												"src": "45668:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2214,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "45668:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "45667:6:0"
									},
									"scope": 2708,
									"src": "45603:126:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2260,
										"nodeType": "Block",
										"src": "45986:162:0",
										"statements": [
											{
												"assignments": [
													2238
												],
												"declarations": [
													{
														"constant": false,
														"id": 2238,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "46004:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 2260,
														"src": "45996:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2237,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "45996:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2243,
												"initialValue": {
													"arguments": [
														{
															"id": 2241,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2232,
															"src": "46027:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2239,
															"name": "ERC721",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2708,
															"src": "46012:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ERC721_$2708_$",
																"typeString": "type(contract ERC721)"
															}
														},
														"id": 2240,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "46019:7:0",
														"memberName": "ownerOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1927,
														"src": "46012:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 2242,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "46012:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "45996:39:0"
											},
											{
												"expression": {
													"components": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 2257,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 2251,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 2246,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2244,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2230,
																		"src": "46053:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"id": 2245,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2238,
																		"src": "46064:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "46053:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "||",
																"rightExpression": {
																	"arguments": [
																		{
																			"id": 2248,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2238,
																			"src": "46090:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 2249,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2230,
																			"src": "46097:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 2247,
																		"name": "isApprovedForAll",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2091,
																		"src": "46073:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																			"typeString": "function (address,address) view returns (bool)"
																		}
																	},
																	"id": 2250,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "46073:32:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "46053:52:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 2256,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 2253,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2232,
																			"src": "46121:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2252,
																		"name": "getApproved",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2056,
																		"src": "46109:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																			"typeString": "function (uint256) view returns (address)"
																		}
																	},
																	"id": 2254,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "46109:20:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 2255,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2230,
																	"src": "46133:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "46109:31:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "46053:87:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"id": 2258,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "46052:89:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2236,
												"id": 2259,
												"nodeType": "Return",
												"src": "46045:96:0"
											}
										]
									},
									"documentation": {
										"id": 2228,
										"nodeType": "StructuredDocumentation",
										"src": "45735:147:0",
										"text": " @dev Returns whether `spender` is allowed to manage `tokenId`.\n Requirements:\n - `tokenId` must exist."
									},
									"id": 2261,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isApprovedOrOwner",
									"nameLocation": "45896:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2233,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2230,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "45923:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2261,
												"src": "45915:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2229,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "45915:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2232,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "45940:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2261,
												"src": "45932:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2231,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "45932:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "45914:34:0"
									},
									"returnParameters": {
										"id": 2236,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2235,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2261,
												"src": "45980:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2234,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "45980:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "45979:6:0"
									},
									"scope": 2708,
									"src": "45887:261:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2275,
										"nodeType": "Block",
										"src": "46543:43:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2270,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2264,
															"src": "46563:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2271,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2266,
															"src": "46567:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 2272,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "46576:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 2269,
														"name": "_safeMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2276,
															2305
														],
														"referencedDeclaration": 2305,
														"src": "46553:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,bytes memory)"
														}
													},
													"id": 2273,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "46553:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2274,
												"nodeType": "ExpressionStatement",
												"src": "46553:26:0"
											}
										]
									},
									"documentation": {
										"id": 2262,
										"nodeType": "StructuredDocumentation",
										"src": "46154:319:0",
										"text": " @dev Safely mints `tokenId` and transfers it to `to`.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"id": 2276,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "46487:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2264,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "46505:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2276,
												"src": "46497:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "46497:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2266,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "46517:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2276,
												"src": "46509:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2265,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "46509:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "46496:29:0"
									},
									"returnParameters": {
										"id": 2268,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "46543:0:0"
									},
									"scope": 2708,
									"src": "46478:108:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2304,
										"nodeType": "Block",
										"src": "46921:195:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2287,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2279,
															"src": "46937:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2288,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2281,
															"src": "46941:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2286,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2382,
														"src": "46931:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2289,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "46931:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2290,
												"nodeType": "ExpressionStatement",
												"src": "46931:18:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 2295,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "47011:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 2294,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "47003:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 2293,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "47003:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2296,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "47003:10:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2297,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2279,
																	"src": "47015:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2298,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2281,
																	"src": "47019:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2299,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2283,
																	"src": "47028:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 2292,
																"name": "_checkOnERC721Received",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2666,
																"src": "46980:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256,bytes memory) returns (bool)"
																}
															},
															"id": 2300,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "46980:53:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572",
															"id": 2301,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "47047:52:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
																"typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
															},
															"value": "ERC721: transfer to non ERC721Receiver implementer"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
																"typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
															}
														],
														"id": 2291,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "46959:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2302,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "46959:150:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2303,
												"nodeType": "ExpressionStatement",
												"src": "46959:150:0"
											}
										]
									},
									"documentation": {
										"id": 2277,
										"nodeType": "StructuredDocumentation",
										"src": "46592:210:0",
										"text": " @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."
									},
									"id": 2305,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "46816:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2279,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "46843:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2305,
												"src": "46835:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2278,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "46835:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2281,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "46863:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2305,
												"src": "46855:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "46855:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2283,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "46893:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2305,
												"src": "46880:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2282,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "46880:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "46825:78:0"
									},
									"returnParameters": {
										"id": 2285,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "46921:0:0"
									},
									"scope": 2708,
									"src": "46807:309:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2381,
										"nodeType": "Block",
										"src": "47499:859:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2319,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2314,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2308,
																"src": "47517:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2317,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "47531:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2316,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "47523:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2315,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "47523:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 2318,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "47523:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "47517:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 2320,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "47535:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6",
																"typeString": "literal_string \"ERC721: mint to the zero address\""
															},
															"value": "ERC721: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6",
																"typeString": "literal_string \"ERC721: mint to the zero address\""
															}
														],
														"id": 2313,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "47509:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2321,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "47509:61:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2322,
												"nodeType": "ExpressionStatement",
												"src": "47509:61:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2327,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "47588:17:0",
															"subExpression": {
																"arguments": [
																	{
																		"id": 2325,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2310,
																		"src": "47597:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2324,
																	"name": "_exists",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2227,
																	"src": "47589:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (uint256) view returns (bool)"
																	}
																},
																"id": 2326,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "47589:16:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a20746f6b656e20616c7265616479206d696e746564",
															"id": 2328,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "47607:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57",
																"typeString": "literal_string \"ERC721: token already minted\""
															},
															"value": "ERC721: token already minted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57",
																"typeString": "literal_string \"ERC721: token already minted\""
															}
														],
														"id": 2323,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "47580:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "47580:58:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2330,
												"nodeType": "ExpressionStatement",
												"src": "47580:58:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2334,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "47678:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2333,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "47670:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2332,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "47670:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 2335,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "47670:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2336,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2308,
															"src": "47682:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2337,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2310,
															"src": "47686:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 2338,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "47695:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 2331,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2679,
														"src": "47649:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 2339,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "47649:48:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2340,
												"nodeType": "ExpressionStatement",
												"src": "47649:48:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2345,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "47792:17:0",
															"subExpression": {
																"arguments": [
																	{
																		"id": 2343,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2310,
																		"src": "47801:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2342,
																	"name": "_exists",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2227,
																	"src": "47793:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (uint256) view returns (bool)"
																	}
																},
																"id": 2344,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "47793:16:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a20746f6b656e20616c7265616479206d696e746564",
															"id": 2346,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "47811:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57",
																"typeString": "literal_string \"ERC721: token already minted\""
															},
															"value": "ERC721: token already minted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57",
																"typeString": "literal_string \"ERC721: token already minted\""
															}
														],
														"id": 2341,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "47784:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2347,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "47784:58:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2348,
												"nodeType": "ExpressionStatement",
												"src": "47784:58:0"
											},
											{
												"id": 2355,
												"nodeType": "UncheckedBlock",
												"src": "47853:360:0",
												"statements": [
													{
														"expression": {
															"id": 2353,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 2349,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1817,
																	"src": "48184:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 2351,
																"indexExpression": {
																	"id": 2350,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2308,
																	"src": "48194:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "48184:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"hexValue": "31",
																"id": 2352,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "48201:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "48184:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2354,
														"nodeType": "ExpressionStatement",
														"src": "48184:18:0"
													}
												]
											},
											{
												"expression": {
													"id": 2360,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2356,
															"name": "_owners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1813,
															"src": "48223:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 2358,
														"indexExpression": {
															"id": 2357,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2310,
															"src": "48231:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "48223:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2359,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2308,
														"src": "48242:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "48223:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2361,
												"nodeType": "ExpressionStatement",
												"src": "48223:21:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2365,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "48277:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2364,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "48269:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2363,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "48269:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 2366,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "48269:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2367,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2308,
															"src": "48281:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2368,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2310,
															"src": "48285:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2362,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1634,
														"src": "48260:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2369,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "48260:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2370,
												"nodeType": "EmitStatement",
												"src": "48255:38:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2374,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "48332:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2373,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "48324:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2372,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "48324:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 2375,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "48324:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2376,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2308,
															"src": "48336:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2377,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2310,
															"src": "48340:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 2378,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "48349:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 2371,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2692,
														"src": "48304:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 2379,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "48304:47:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2380,
												"nodeType": "ExpressionStatement",
												"src": "48304:47:0"
											}
										]
									},
									"documentation": {
										"id": 2306,
										"nodeType": "StructuredDocumentation",
										"src": "47122:311:0",
										"text": " @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."
									},
									"id": 2382,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "47447:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2311,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2308,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "47461:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2382,
												"src": "47453:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2307,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "47453:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2310,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "47473:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2382,
												"src": "47465:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2309,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "47465:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "47452:29:0"
									},
									"returnParameters": {
										"id": 2312,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "47499:0:0"
									},
									"scope": 2708,
									"src": "47438:920:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2448,
										"nodeType": "Block",
										"src": "48733:713:0",
										"statements": [
											{
												"assignments": [
													2389
												],
												"declarations": [
													{
														"constant": false,
														"id": 2389,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "48751:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 2448,
														"src": "48743:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2388,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "48743:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2394,
												"initialValue": {
													"arguments": [
														{
															"id": 2392,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2385,
															"src": "48774:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2390,
															"name": "ERC721",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2708,
															"src": "48759:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ERC721_$2708_$",
																"typeString": "type(contract ERC721)"
															}
														},
														"id": 2391,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "48766:7:0",
														"memberName": "ownerOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1927,
														"src": "48759:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 2393,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "48759:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "48743:39:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2396,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2389,
															"src": "48814:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2399,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "48829:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2398,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "48821:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2397,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "48821:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 2400,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "48821:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2401,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2385,
															"src": "48833:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 2402,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "48842:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 2395,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2679,
														"src": "48793:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 2403,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "48793:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2404,
												"nodeType": "ExpressionStatement",
												"src": "48793:51:0"
											},
											{
												"expression": {
													"id": 2410,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2405,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2389,
														"src": "48946:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2408,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2385,
																"src": "48969:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 2406,
																"name": "ERC721",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2708,
																"src": "48954:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ERC721_$2708_$",
																	"typeString": "type(contract ERC721)"
																}
															},
															"id": 2407,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "48961:7:0",
															"memberName": "ownerOf",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1927,
															"src": "48954:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																"typeString": "function (uint256) view returns (address)"
															}
														},
														"id": 2409,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "48954:23:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "48946:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2411,
												"nodeType": "ExpressionStatement",
												"src": "48946:31:0"
											},
											{
												"expression": {
													"id": 2415,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "49015:31:0",
													"subExpression": {
														"baseExpression": {
															"id": 2412,
															"name": "_tokenApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1821,
															"src": "49022:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 2414,
														"indexExpression": {
															"id": 2413,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2385,
															"src": "49038:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "49022:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2416,
												"nodeType": "ExpressionStatement",
												"src": "49015:31:0"
											},
											{
												"id": 2423,
												"nodeType": "UncheckedBlock",
												"src": "49057:237:0",
												"statements": [
													{
														"expression": {
															"id": 2421,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 2417,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1817,
																	"src": "49262:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 2419,
																"indexExpression": {
																	"id": 2418,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2389,
																	"src": "49272:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "49262:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "-=",
															"rightHandSide": {
																"hexValue": "31",
																"id": 2420,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "49282:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "49262:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2422,
														"nodeType": "ExpressionStatement",
														"src": "49262:21:0"
													}
												]
											},
											{
												"expression": {
													"id": 2427,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "49303:23:0",
													"subExpression": {
														"baseExpression": {
															"id": 2424,
															"name": "_owners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1813,
															"src": "49310:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 2426,
														"indexExpression": {
															"id": 2425,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2385,
															"src": "49318:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "49310:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2428,
												"nodeType": "ExpressionStatement",
												"src": "49303:23:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2430,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2389,
															"src": "49351:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2433,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "49366:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2432,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "49358:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2431,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "49358:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 2434,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "49358:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2435,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2385,
															"src": "49370:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2429,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1634,
														"src": "49342:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2436,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "49342:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2437,
												"nodeType": "EmitStatement",
												"src": "49337:41:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2439,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2389,
															"src": "49409:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2442,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "49424:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2441,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "49416:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2440,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "49416:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 2443,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "49416:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2444,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2385,
															"src": "49428:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 2445,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "49437:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 2438,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2692,
														"src": "49389:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 2446,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "49389:50:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2447,
												"nodeType": "ExpressionStatement",
												"src": "49389:50:0"
											}
										]
									},
									"documentation": {
										"id": 2383,
										"nodeType": "StructuredDocumentation",
										"src": "48364:315:0",
										"text": " @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n This is an internal function that does not check if the sender is authorized to operate on the token.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."
									},
									"id": 2449,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "48693:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2386,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2385,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "48707:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2449,
												"src": "48699:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2384,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "48699:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "48698:17:0"
									},
									"returnParameters": {
										"id": 2387,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "48733:0:0"
									},
									"scope": 2708,
									"src": "48684:762:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2533,
										"nodeType": "Block",
										"src": "49879:1124:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2465,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 2462,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2456,
																		"src": "49912:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 2460,
																		"name": "ERC721",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2708,
																		"src": "49897:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_ERC721_$2708_$",
																			"typeString": "type(contract ERC721)"
																		}
																	},
																	"id": 2461,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "49904:7:0",
																	"memberName": "ownerOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1927,
																	"src": "49897:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																		"typeString": "function (uint256) view returns (address)"
																	}
																},
																"id": 2463,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "49897:23:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 2464,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2452,
																"src": "49924:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "49897:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a207472616e736665722066726f6d20696e636f7272656374206f776e6572",
															"id": 2466,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "49930:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48",
																"typeString": "literal_string \"ERC721: transfer from incorrect owner\""
															},
															"value": "ERC721: transfer from incorrect owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48",
																"typeString": "literal_string \"ERC721: transfer from incorrect owner\""
															}
														],
														"id": 2459,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "49889:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2467,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "49889:81:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2468,
												"nodeType": "ExpressionStatement",
												"src": "49889:81:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2475,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2470,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2454,
																"src": "49988:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2473,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "50002:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2472,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "49994:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2471,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "49994:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 2474,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "49994:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "49988:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 2476,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "50006:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4",
																"typeString": "literal_string \"ERC721: transfer to the zero address\""
															},
															"value": "ERC721: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4",
																"typeString": "literal_string \"ERC721: transfer to the zero address\""
															}
														],
														"id": 2469,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "49980:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "49980:65:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2478,
												"nodeType": "ExpressionStatement",
												"src": "49980:65:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2480,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2452,
															"src": "50077:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2481,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2454,
															"src": "50083:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2482,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2456,
															"src": "50087:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 2483,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "50096:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 2479,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2679,
														"src": "50056:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 2484,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "50056:42:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2485,
												"nodeType": "ExpressionStatement",
												"src": "50056:42:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2492,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 2489,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2456,
																		"src": "50213:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 2487,
																		"name": "ERC721",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2708,
																		"src": "50198:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_ERC721_$2708_$",
																			"typeString": "type(contract ERC721)"
																		}
																	},
																	"id": 2488,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "50205:7:0",
																	"memberName": "ownerOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1927,
																	"src": "50198:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																		"typeString": "function (uint256) view returns (address)"
																	}
																},
																"id": 2490,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "50198:23:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 2491,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2452,
																"src": "50225:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "50198:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a207472616e736665722066726f6d20696e636f7272656374206f776e6572",
															"id": 2493,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "50231:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48",
																"typeString": "literal_string \"ERC721: transfer from incorrect owner\""
															},
															"value": "ERC721: transfer from incorrect owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48",
																"typeString": "literal_string \"ERC721: transfer from incorrect owner\""
															}
														],
														"id": 2486,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "50190:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2494,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "50190:81:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2495,
												"nodeType": "ExpressionStatement",
												"src": "50190:81:0"
											},
											{
												"expression": {
													"id": 2499,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "50333:31:0",
													"subExpression": {
														"baseExpression": {
															"id": 2496,
															"name": "_tokenApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1821,
															"src": "50340:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 2498,
														"indexExpression": {
															"id": 2497,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2456,
															"src": "50356:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "50340:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2500,
												"nodeType": "ExpressionStatement",
												"src": "50333:31:0"
											},
											{
												"id": 2513,
												"nodeType": "UncheckedBlock",
												"src": "50375:496:0",
												"statements": [
													{
														"expression": {
															"id": 2505,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 2501,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1817,
																	"src": "50808:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 2503,
																"indexExpression": {
																	"id": 2502,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2452,
																	"src": "50818:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "50808:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "-=",
															"rightHandSide": {
																"hexValue": "31",
																"id": 2504,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "50827:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "50808:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2506,
														"nodeType": "ExpressionStatement",
														"src": "50808:20:0"
													},
													{
														"expression": {
															"id": 2511,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 2507,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1817,
																	"src": "50842:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 2509,
																"indexExpression": {
																	"id": 2508,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2454,
																	"src": "50852:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "50842:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"hexValue": "31",
																"id": 2510,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "50859:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "50842:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2512,
														"nodeType": "ExpressionStatement",
														"src": "50842:18:0"
													}
												]
											},
											{
												"expression": {
													"id": 2518,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2514,
															"name": "_owners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1813,
															"src": "50880:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 2516,
														"indexExpression": {
															"id": 2515,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2456,
															"src": "50888:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "50880:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2517,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2454,
														"src": "50899:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "50880:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2519,
												"nodeType": "ExpressionStatement",
												"src": "50880:21:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2521,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2452,
															"src": "50926:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2522,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2454,
															"src": "50932:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2523,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2456,
															"src": "50936:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2520,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1634,
														"src": "50917:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2524,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "50917:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2525,
												"nodeType": "EmitStatement",
												"src": "50912:32:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2527,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2452,
															"src": "50975:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2528,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2454,
															"src": "50981:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2529,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2456,
															"src": "50985:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 2530,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "50994:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 2526,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2692,
														"src": "50955:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 2531,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "50955:41:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2532,
												"nodeType": "ExpressionStatement",
												"src": "50955:41:0"
											}
										]
									},
									"documentation": {
										"id": 2450,
										"nodeType": "StructuredDocumentation",
										"src": "49452:313:0",
										"text": " @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."
									},
									"id": 2534,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "49779:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2457,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2452,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "49806:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2534,
												"src": "49798:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2451,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "49798:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2454,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "49828:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2534,
												"src": "49820:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2453,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "49820:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2456,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "49848:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2534,
												"src": "49840:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2455,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "49840:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "49788:73:0"
									},
									"returnParameters": {
										"id": 2458,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "49879:0:0"
									},
									"scope": 2708,
									"src": "49770:1233:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2557,
										"nodeType": "Block",
										"src": "51179:107:0",
										"statements": [
											{
												"expression": {
													"id": 2546,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2542,
															"name": "_tokenApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1821,
															"src": "51189:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 2544,
														"indexExpression": {
															"id": 2543,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2539,
															"src": "51205:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "51189:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2545,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2537,
														"src": "51216:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "51189:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2547,
												"nodeType": "ExpressionStatement",
												"src": "51189:29:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2551,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2539,
																	"src": "51257:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 2549,
																	"name": "ERC721",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2708,
																	"src": "51242:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_ERC721_$2708_$",
																		"typeString": "type(contract ERC721)"
																	}
																},
																"id": 2550,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "51249:7:0",
																"memberName": "ownerOf",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1927,
																"src": "51242:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																	"typeString": "function (uint256) view returns (address)"
																}
															},
															"id": 2552,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "51242:23:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2553,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2537,
															"src": "51267:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2554,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2539,
															"src": "51271:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2548,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1643,
														"src": "51233:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2555,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "51233:46:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2556,
												"nodeType": "EmitStatement",
												"src": "51228:51:0"
											}
										]
									},
									"documentation": {
										"id": 2535,
										"nodeType": "StructuredDocumentation",
										"src": "51009:101:0",
										"text": " @dev Approve `to` to operate on `tokenId`\n Emits an {Approval} event."
									},
									"id": 2558,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "51124:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2540,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2537,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "51141:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2558,
												"src": "51133:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2536,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "51133:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2539,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "51153:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2558,
												"src": "51145:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2538,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "51145:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "51132:29:0"
									},
									"returnParameters": {
										"id": 2541,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "51179:0:0"
									},
									"scope": 2708,
									"src": "51115:171:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2589,
										"nodeType": "Block",
										"src": "51545:184:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2571,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2569,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2561,
																"src": "51563:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 2570,
																"name": "operator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2563,
																"src": "51572:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "51563:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a20617070726f766520746f2063616c6c6572",
															"id": 2572,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "51582:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05",
																"typeString": "literal_string \"ERC721: approve to caller\""
															},
															"value": "ERC721: approve to caller"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05",
																"typeString": "literal_string \"ERC721: approve to caller\""
															}
														],
														"id": 2568,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "51555:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2573,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "51555:55:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2574,
												"nodeType": "ExpressionStatement",
												"src": "51555:55:0"
											},
											{
												"expression": {
													"id": 2581,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 2575,
																"name": "_operatorApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1827,
																"src": "51620:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 2578,
															"indexExpression": {
																"id": 2576,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2561,
																"src": "51639:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "51620:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 2579,
														"indexExpression": {
															"id": 2577,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2563,
															"src": "51646:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "51620:35:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2580,
														"name": "approved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2565,
														"src": "51658:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "51620:46:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2582,
												"nodeType": "ExpressionStatement",
												"src": "51620:46:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2584,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2561,
															"src": "51696:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2585,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2563,
															"src": "51703:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2586,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2565,
															"src": "51713:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 2583,
														"name": "ApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1652,
														"src": "51681:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 2587,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "51681:41:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2588,
												"nodeType": "EmitStatement",
												"src": "51676:46:0"
											}
										]
									},
									"documentation": {
										"id": 2559,
										"nodeType": "StructuredDocumentation",
										"src": "51292:125:0",
										"text": " @dev Approve `operator` to operate on all of `owner` tokens\n Emits an {ApprovalForAll} event."
									},
									"id": 2590,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setApprovalForAll",
									"nameLocation": "51431:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2566,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2561,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "51467:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2590,
												"src": "51459:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2560,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "51459:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2563,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "51490:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 2590,
												"src": "51482:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2562,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "51482:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2565,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "51513:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 2590,
												"src": "51508:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2564,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "51508:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "51449:78:0"
									},
									"returnParameters": {
										"id": 2567,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "51545:0:0"
									},
									"scope": 2708,
									"src": "51422:307:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2603,
										"nodeType": "Block",
										"src": "51876:70:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2598,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2593,
																	"src": "51902:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2597,
																"name": "_exists",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2227,
																"src": "51894:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (uint256) view returns (bool)"
																}
															},
															"id": 2599,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "51894:16:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a20696e76616c696420746f6b656e204944",
															"id": 2600,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "51912:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f",
																"typeString": "literal_string \"ERC721: invalid token ID\""
															},
															"value": "ERC721: invalid token ID"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f",
																"typeString": "literal_string \"ERC721: invalid token ID\""
															}
														],
														"id": 2596,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "51886:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2601,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "51886:53:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2602,
												"nodeType": "ExpressionStatement",
												"src": "51886:53:0"
											}
										]
									},
									"documentation": {
										"id": 2591,
										"nodeType": "StructuredDocumentation",
										"src": "51735:73:0",
										"text": " @dev Reverts if the `tokenId` has not been minted yet."
									},
									"id": 2604,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireMinted",
									"nameLocation": "51822:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2594,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2593,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "51845:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2604,
												"src": "51837:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2592,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "51837:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "51836:17:0"
									},
									"returnParameters": {
										"id": 2595,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "51876:0:0"
									},
									"scope": 2708,
									"src": "51813:133:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2665,
										"nodeType": "Block",
										"src": "52653:676:0",
										"statements": [
											{
												"condition": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 2618,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2609,
															"src": "52667:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 2619,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "52670:10:0",
														"memberName": "isContract",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1259,
														"src": "52667:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$attached_to$_t_address_$",
															"typeString": "function (address) view returns (bool)"
														}
													},
													"id": 2620,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "52667:15:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2663,
													"nodeType": "Block",
													"src": "53287:36:0",
													"statements": [
														{
															"expression": {
																"hexValue": "74727565",
																"id": 2661,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "53308:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 2617,
															"id": 2662,
															"nodeType": "Return",
															"src": "53301:11:0"
														}
													]
												},
												"id": 2664,
												"nodeType": "IfStatement",
												"src": "52663:660:0",
												"trueBody": {
													"id": 2660,
													"nodeType": "Block",
													"src": "52684:597:0",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 2640,
																		"nodeType": "Block",
																		"src": "52798:91:0",
																		"statements": [
																			{
																				"expression": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 2638,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 2634,
																						"name": "retval",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2632,
																						"src": "52823:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 2635,
																								"name": "IERC721Receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1588,
																								"src": "52833:15:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$1588_$",
																									"typeString": "type(contract IERC721Receiver)"
																								}
																							},
																							"id": 2636,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberLocation": "52849:16:0",
																							"memberName": "onERC721Received",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1587,
																							"src": "52833:32:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"
																							}
																						},
																						"id": 2637,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberLocation": "52866:8:0",
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "52833:41:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "52823:51:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"functionReturnParameters": 2617,
																				"id": 2639,
																				"nodeType": "Return",
																				"src": "52816:58:0"
																			}
																		]
																	},
																	"errorName": "",
																	"id": 2641,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 2633,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 2632,
																				"mutability": "mutable",
																				"name": "retval",
																				"nameLocation": "52790:6:0",
																				"nodeType": "VariableDeclaration",
																				"scope": 2641,
																				"src": "52783:13:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 2631,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "52783:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "52782:15:0"
																	},
																	"src": "52774:115:0"
																},
																{
																	"block": {
																		"id": 2657,
																		"nodeType": "Block",
																		"src": "52918:353:0",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2648,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 2645,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2643,
																							"src": "52940:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes_memory_ptr",
																								"typeString": "bytes memory"
																							}
																						},
																						"id": 2646,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "52947:6:0",
																						"memberName": "length",
																						"nodeType": "MemberAccess",
																						"src": "52940:13:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"hexValue": "30",
																						"id": 2647,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "52957:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					"src": "52940:18:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"falseBody": {
																					"id": 2655,
																					"nodeType": "Block",
																					"src": "53067:190:0",
																					"statements": [
																						{
																							"AST": {
																								"nodeType": "YulBlock",
																								"src": "53153:86:0",
																								"statements": [
																									{
																										"expression": {
																											"arguments": [
																												{
																													"arguments": [
																														{
																															"kind": "number",
																															"nodeType": "YulLiteral",
																															"src": "53190:2:0",
																															"type": "",
																															"value": "32"
																														},
																														{
																															"name": "reason",
																															"nodeType": "YulIdentifier",
																															"src": "53194:6:0"
																														}
																													],
																													"functionName": {
																														"name": "add",
																														"nodeType": "YulIdentifier",
																														"src": "53186:3:0"
																													},
																													"nodeType": "YulFunctionCall",
																													"src": "53186:15:0"
																												},
																												{
																													"arguments": [
																														{
																															"name": "reason",
																															"nodeType": "YulIdentifier",
																															"src": "53209:6:0"
																														}
																													],
																													"functionName": {
																														"name": "mload",
																														"nodeType": "YulIdentifier",
																														"src": "53203:5:0"
																													},
																													"nodeType": "YulFunctionCall",
																													"src": "53203:13:0"
																												}
																											],
																											"functionName": {
																												"name": "revert",
																												"nodeType": "YulIdentifier",
																												"src": "53179:6:0"
																											},
																											"nodeType": "YulFunctionCall",
																											"src": "53179:38:0"
																										},
																										"nodeType": "YulExpressionStatement",
																										"src": "53179:38:0"
																									}
																								]
																							},
																							"documentation": "@solidity memory-safe-assembly",
																							"evmVersion": "paris",
																							"externalReferences": [
																								{
																									"declaration": 2643,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "53194:6:0",
																									"valueSize": 1
																								},
																								{
																									"declaration": 2643,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "53209:6:0",
																									"valueSize": 1
																								}
																							],
																							"id": 2654,
																							"nodeType": "InlineAssembly",
																							"src": "53144:95:0"
																						}
																					]
																				},
																				"id": 2656,
																				"nodeType": "IfStatement",
																				"src": "52936:321:0",
																				"trueBody": {
																					"id": 2653,
																					"nodeType": "Block",
																					"src": "52960:101:0",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"hexValue": "4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572",
																										"id": 2650,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "string",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "52989:52:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
																											"typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
																										},
																										"value": "ERC721: transfer to non ERC721Receiver implementer"
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
																											"typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
																										}
																									],
																									"id": 2649,
																									"name": "revert",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [
																										4294967277,
																										4294967277
																									],
																									"referencedDeclaration": 4294967277,
																									"src": "52982:6:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																										"typeString": "function (string memory) pure"
																									}
																								},
																								"id": 2651,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "52982:60:0",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 2652,
																							"nodeType": "ExpressionStatement",
																							"src": "52982:60:0"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 2658,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 2644,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 2643,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "52910:6:0",
																				"nodeType": "VariableDeclaration",
																				"scope": 2658,
																				"src": "52897:19:0",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes"
																				},
																				"typeName": {
																					"id": 2642,
																					"name": "bytes",
																					"nodeType": "ElementaryTypeName",
																					"src": "52897:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_storage_ptr",
																						"typeString": "bytes"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "52896:21:0"
																	},
																	"src": "52890:381:0"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 2625,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1121,
																			"src": "52739:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 2626,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "52739:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2627,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2607,
																		"src": "52753:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2628,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2611,
																		"src": "52759:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 2629,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2613,
																		"src": "52768:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 2622,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2609,
																				"src": "52718:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 2621,
																			"name": "IERC721Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1588,
																			"src": "52702:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$1588_$",
																				"typeString": "type(contract IERC721Receiver)"
																			}
																		},
																		"id": 2623,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "52702:19:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC721Receiver_$1588",
																			"typeString": "contract IERC721Receiver"
																		}
																	},
																	"id": 2624,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "52722:16:0",
																	"memberName": "onERC721Received",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1587,
																	"src": "52702:36:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 2630,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "52702:71:0",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 2659,
															"nodeType": "TryStatement",
															"src": "52698:573:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2605,
										"nodeType": "StructuredDocumentation",
										"src": "51952:541:0",
										"text": " @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\n The call is not executed if the target address is not a contract.\n @param from address representing the previous owner of the given token ID\n @param to target address that will receive the tokens\n @param tokenId uint256 ID of the token to be transferred\n @param data bytes optional data to send along with the call\n @return bool whether the call correctly returned the expected magic value"
									},
									"id": 2666,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOnERC721Received",
									"nameLocation": "52507:22:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2614,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2607,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "52547:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2666,
												"src": "52539:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2606,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "52539:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2609,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "52569:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2666,
												"src": "52561:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2608,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "52561:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2611,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "52589:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2666,
												"src": "52581:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2610,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "52581:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2613,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "52619:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2666,
												"src": "52606:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2612,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "52606:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "52529:100:0"
									},
									"returnParameters": {
										"id": 2617,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2616,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2666,
												"src": "52647:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2615,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "52647:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "52646:6:0"
									},
									"scope": 2708,
									"src": "52498:831:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2678,
										"nodeType": "Block",
										"src": "54197:2:0",
										"statements": []
									},
									"documentation": {
										"id": 2667,
										"nodeType": "StructuredDocumentation",
										"src": "53335:705:0",
										"text": " @dev Hook that is called before any token transfer. This includes minting and burning. If {ERC721Consecutive} is\n used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\n Calling conditions:\n - When `from` and `to` are both non-zero, ``from``'s tokens will be transferred to `to`.\n - When `from` is zero, the tokens will be minted for `to`.\n - When `to` is zero, ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n - `batchSize` is non-zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 2679,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nameLocation": "54054:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2676,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2669,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "54092:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2679,
												"src": "54084:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2668,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "54084:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2671,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "54114:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2679,
												"src": "54106:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2670,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "54106:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2673,
												"mutability": "mutable",
												"name": "firstTokenId",
												"nameLocation": "54134:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 2679,
												"src": "54126:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2672,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "54126:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2675,
												"mutability": "mutable",
												"name": "batchSize",
												"nameLocation": "54164:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 2679,
												"src": "54156:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2674,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "54156:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "54074:105:0"
									},
									"returnParameters": {
										"id": 2677,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "54197:0:0"
									},
									"scope": 2708,
									"src": "54045:154:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2691,
										"nodeType": "Block",
										"src": "55056:2:0",
										"statements": []
									},
									"documentation": {
										"id": 2680,
										"nodeType": "StructuredDocumentation",
										"src": "54205:695:0",
										"text": " @dev Hook that is called after any token transfer. This includes minting and burning. If {ERC721Consecutive} is\n used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\n Calling conditions:\n - When `from` and `to` are both non-zero, ``from``'s tokens were transferred to `to`.\n - When `from` is zero, the tokens were minted for `to`.\n - When `to` is zero, ``from``'s tokens were burned.\n - `from` and `to` are never both zero.\n - `batchSize` is non-zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 2692,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_afterTokenTransfer",
									"nameLocation": "54914:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2689,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2682,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "54951:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2692,
												"src": "54943:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2681,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "54943:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2684,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "54973:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2692,
												"src": "54965:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2683,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "54965:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2686,
												"mutability": "mutable",
												"name": "firstTokenId",
												"nameLocation": "54993:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 2692,
												"src": "54985:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2685,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "54985:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2688,
												"mutability": "mutable",
												"name": "batchSize",
												"nameLocation": "55023:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 2692,
												"src": "55015:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2687,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "55015:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "54933:105:0"
									},
									"returnParameters": {
										"id": 2690,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "55056:0:0"
									},
									"scope": 2708,
									"src": "54905:153:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2706,
										"nodeType": "Block",
										"src": "55607:45:0",
										"statements": [
											{
												"expression": {
													"id": 2704,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2700,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1817,
															"src": "55617:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 2702,
														"indexExpression": {
															"id": 2701,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2695,
															"src": "55627:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "55617:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 2703,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2697,
														"src": "55639:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "55617:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2705,
												"nodeType": "ExpressionStatement",
												"src": "55617:28:0"
											}
										]
									},
									"documentation": {
										"id": 2693,
										"nodeType": "StructuredDocumentation",
										"src": "55064:409:0",
										"text": " @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n WARNING: Anyone calling this MUST ensure that the balances remain consistent with the ownership. The invariant\n being that for any address `a` the value returned by `balanceOf(a)` must be equal to the number of tokens such\n that `ownerOf(tokenId)` is `a`."
									},
									"id": 2707,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "__unsafe_increaseBalance",
									"nameLocation": "55540:24:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2698,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2695,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "55573:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2707,
												"src": "55565:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2694,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "55565:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2697,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "55590:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 2707,
												"src": "55582:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2696,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "55582:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "55564:33:0"
									},
									"returnParameters": {
										"id": 2699,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "55607:0:0"
									},
									"scope": 2708,
									"src": "55531:121:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3156,
							"src": "38975:16679:0",
							"usedErrors": []
						},
						{
							"id": 2709,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "55832:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 2711,
										"name": "ERC721",
										"nameLocations": [
											"56097:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2708,
										"src": "56097:6:0"
									},
									"id": 2712,
									"nodeType": "InheritanceSpecifier",
									"src": "56097:6:0"
								},
								{
									"baseName": {
										"id": 2713,
										"name": "IERC721Enumerable",
										"nameLocations": [
											"56105:17:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1764,
										"src": "56105:17:0"
									},
									"id": 2714,
									"nodeType": "InheritanceSpecifier",
									"src": "56105:17:0"
								}
							],
							"canonicalName": "ERC721Enumerable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2710,
								"nodeType": "StructuredDocumentation",
								"src": "55859:199:0",
								"text": " @dev This implements an optional extension of {ERC721} defined in the EIP that adds\n enumerability of all the token ids in the contract as well as all token ids owned by each\n account."
							},
							"fullyImplemented": false,
							"id": 3059,
							"linearizedBaseContracts": [
								3059,
								1764,
								2708,
								1789,
								1735,
								1621,
								1599,
								1131
							],
							"name": "ERC721Enumerable",
							"nameLocation": "56077:16:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 2720,
									"mutability": "mutable",
									"name": "_ownedTokens",
									"nameLocation": "56238:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 3059,
									"src": "56182:68:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(uint256 => uint256))"
									},
									"typeName": {
										"id": 2719,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 2715,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "56190:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "56182:47:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(uint256 => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 2718,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 2716,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "56209:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"nodeType": "Mapping",
											"src": "56201:27:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
												"typeString": "mapping(uint256 => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 2717,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "56220:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 2724,
									"mutability": "mutable",
									"name": "_ownedTokensIndex",
									"nameLocation": "56356:17:0",
									"nodeType": "VariableDeclaration",
									"scope": 3059,
									"src": "56320:53:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
										"typeString": "mapping(uint256 => uint256)"
									},
									"typeName": {
										"id": 2723,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 2721,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "56328:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "56320:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
											"typeString": "mapping(uint256 => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 2722,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "56339:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 2727,
									"mutability": "mutable",
									"name": "_allTokens",
									"nameLocation": "56452:10:0",
									"nodeType": "VariableDeclaration",
									"scope": 3059,
									"src": "56434:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
										"typeString": "uint256[]"
									},
									"typeName": {
										"baseType": {
											"id": 2725,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "56434:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 2726,
										"nodeType": "ArrayTypeName",
										"src": "56434:9:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
											"typeString": "uint256[]"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 2731,
									"mutability": "mutable",
									"name": "_allTokensIndex",
									"nameLocation": "56569:15:0",
									"nodeType": "VariableDeclaration",
									"scope": 3059,
									"src": "56533:51:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
										"typeString": "mapping(uint256 => uint256)"
									},
									"typeName": {
										"id": 2730,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 2728,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "56541:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "56533:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
											"typeString": "mapping(uint256 => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 2729,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "56552:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"baseFunctions": [
										1598,
										1875
									],
									"body": {
										"id": 2754,
										"nodeType": "Block",
										"src": "56760:114:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2752,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 2747,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2742,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2734,
															"src": "56777:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 2744,
																		"name": "IERC721Enumerable",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1764,
																		"src": "56797:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IERC721Enumerable_$1764_$",
																			"typeString": "type(contract IERC721Enumerable)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_contract$_IERC721Enumerable_$1764_$",
																			"typeString": "type(contract IERC721Enumerable)"
																		}
																	],
																	"id": 2743,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "56792:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 2745,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "56792:23:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721Enumerable_$1764",
																	"typeString": "type(contract IERC721Enumerable)"
																}
															},
															"id": 2746,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "56816:11:0",
															"memberName": "interfaceId",
															"nodeType": "MemberAccess",
															"src": "56792:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "56777:50:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 2750,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2734,
																"src": "56855:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 2748,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "56831:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC721Enumerable_$3059_$",
																	"typeString": "type(contract super ERC721Enumerable)"
																}
															},
															"id": 2749,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "56837:17:0",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1875,
															"src": "56831:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 2751,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "56831:36:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "56777:90:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2741,
												"id": 2753,
												"nodeType": "Return",
												"src": "56770:97:0"
											}
										]
									},
									"documentation": {
										"id": 2732,
										"nodeType": "StructuredDocumentation",
										"src": "56591:56:0",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 2755,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "56661:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2738,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 2736,
												"name": "IERC165",
												"nameLocations": [
													"56728:7:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1599,
												"src": "56728:7:0"
											},
											{
												"id": 2737,
												"name": "ERC721",
												"nameLocations": [
													"56737:6:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2708,
												"src": "56737:6:0"
											}
										],
										"src": "56719:25:0"
									},
									"parameters": {
										"id": 2735,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2734,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "56686:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 2755,
												"src": "56679:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 2733,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "56679:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "56678:20:0"
									},
									"returnParameters": {
										"id": 2741,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2740,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2755,
												"src": "56754:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2739,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "56754:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "56753:6:0"
									},
									"scope": 3059,
									"src": "56652:222:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1755
									],
									"body": {
										"id": 2782,
										"nodeType": "Block",
										"src": "57059:147:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2772,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2767,
																"name": "index",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2760,
																"src": "57077:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 2770,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2758,
																		"src": "57102:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 2768,
																		"name": "ERC721",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2708,
																		"src": "57085:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_ERC721_$2708_$",
																			"typeString": "type(contract ERC721)"
																		}
																	},
																	"id": 2769,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "57092:9:0",
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1899,
																	"src": "57085:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view returns (uint256)"
																	}
																},
																"id": 2771,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "57085:23:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "57077:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243373231456e756d657261626c653a206f776e657220696e646578206f7574206f6620626f756e6473",
															"id": 2773,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "57110:45:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1d7f5dcf03a65f41ee49b0ab593e3851cfbe3fd7da53b6cf4eddd83c7df5734c",
																"typeString": "literal_string \"ERC721Enumerable: owner index out of bounds\""
															},
															"value": "ERC721Enumerable: owner index out of bounds"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1d7f5dcf03a65f41ee49b0ab593e3851cfbe3fd7da53b6cf4eddd83c7df5734c",
																"typeString": "literal_string \"ERC721Enumerable: owner index out of bounds\""
															}
														],
														"id": 2766,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "57069:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2774,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "57069:87:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2775,
												"nodeType": "ExpressionStatement",
												"src": "57069:87:0"
											},
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 2776,
															"name": "_ownedTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2720,
															"src": "57173:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(uint256 => uint256))"
															}
														},
														"id": 2778,
														"indexExpression": {
															"id": 2777,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2758,
															"src": "57186:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "57173:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
															"typeString": "mapping(uint256 => uint256)"
														}
													},
													"id": 2780,
													"indexExpression": {
														"id": 2779,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2760,
														"src": "57193:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "57173:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2765,
												"id": 2781,
												"nodeType": "Return",
												"src": "57166:33:0"
											}
										]
									},
									"documentation": {
										"id": 2756,
										"nodeType": "StructuredDocumentation",
										"src": "56880:68:0",
										"text": " @dev See {IERC721Enumerable-tokenOfOwnerByIndex}."
									},
									"functionSelector": "2f745c59",
									"id": 2783,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenOfOwnerByIndex",
									"nameLocation": "56962:19:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2762,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "57032:8:0"
									},
									"parameters": {
										"id": 2761,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2758,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "56990:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2783,
												"src": "56982:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2757,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "56982:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2760,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "57005:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2783,
												"src": "56997:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2759,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "56997:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "56981:30:0"
									},
									"returnParameters": {
										"id": 2765,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2764,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2783,
												"src": "57050:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2763,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "57050:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "57049:9:0"
									},
									"scope": 3059,
									"src": "56953:253:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1745
									],
									"body": {
										"id": 2793,
										"nodeType": "Block",
										"src": "57347:41:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 2790,
														"name": "_allTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2727,
														"src": "57364:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
															"typeString": "uint256[] storage ref"
														}
													},
													"id": 2791,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "57375:6:0",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "57364:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2789,
												"id": 2792,
												"nodeType": "Return",
												"src": "57357:24:0"
											}
										]
									},
									"documentation": {
										"id": 2784,
										"nodeType": "StructuredDocumentation",
										"src": "57212:60:0",
										"text": " @dev See {IERC721Enumerable-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 2794,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "57286:11:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2786,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "57320:8:0"
									},
									"parameters": {
										"id": 2785,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "57297:2:0"
									},
									"returnParameters": {
										"id": 2789,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2788,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2794,
												"src": "57338:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2787,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "57338:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "57337:9:0"
									},
									"scope": 3059,
									"src": "57277:111:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1763
									],
									"body": {
										"id": 2816,
										"nodeType": "Block",
										"src": "57544:146:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2808,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2804,
																"name": "index",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2797,
																"src": "57562:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 2805,
																		"name": "ERC721Enumerable",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3059,
																		"src": "57570:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_ERC721Enumerable_$3059_$",
																			"typeString": "type(contract ERC721Enumerable)"
																		}
																	},
																	"id": 2806,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "57587:11:0",
																	"memberName": "totalSupply",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2794,
																	"src": "57570:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 2807,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "57570:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "57562:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243373231456e756d657261626c653a20676c6f62616c20696e646578206f7574206f6620626f756e6473",
															"id": 2809,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "57602:46:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d269a4e9f5820dcdb69ea21f528512eb9b927c8d846d48aa51c9219f461d4dcc",
																"typeString": "literal_string \"ERC721Enumerable: global index out of bounds\""
															},
															"value": "ERC721Enumerable: global index out of bounds"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d269a4e9f5820dcdb69ea21f528512eb9b927c8d846d48aa51c9219f461d4dcc",
																"typeString": "literal_string \"ERC721Enumerable: global index out of bounds\""
															}
														],
														"id": 2803,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "57554:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2810,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "57554:95:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2811,
												"nodeType": "ExpressionStatement",
												"src": "57554:95:0"
											},
											{
												"expression": {
													"baseExpression": {
														"id": 2812,
														"name": "_allTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2727,
														"src": "57666:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
															"typeString": "uint256[] storage ref"
														}
													},
													"id": 2814,
													"indexExpression": {
														"id": 2813,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2797,
														"src": "57677:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "57666:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2802,
												"id": 2815,
												"nodeType": "Return",
												"src": "57659:24:0"
											}
										]
									},
									"documentation": {
										"id": 2795,
										"nodeType": "StructuredDocumentation",
										"src": "57394:61:0",
										"text": " @dev See {IERC721Enumerable-tokenByIndex}."
									},
									"functionSelector": "4f6ccce7",
									"id": 2817,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenByIndex",
									"nameLocation": "57469:12:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2799,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "57517:8:0"
									},
									"parameters": {
										"id": 2798,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2797,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "57490:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2817,
												"src": "57482:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2796,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "57482:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "57481:15:0"
									},
									"returnParameters": {
										"id": 2802,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2801,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2817,
												"src": "57535:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2800,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "57535:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "57534:9:0"
									},
									"scope": 3059,
									"src": "57460:230:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2679
									],
									"body": {
										"id": 2896,
										"nodeType": "Block",
										"src": "57920:729:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2833,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2820,
															"src": "57957:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2834,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2822,
															"src": "57963:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2835,
															"name": "firstTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2824,
															"src": "57967:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2836,
															"name": "batchSize",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2826,
															"src": "57981:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2830,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "57930:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_ERC721Enumerable_$3059_$",
																"typeString": "type(contract super ERC721Enumerable)"
															}
														},
														"id": 2832,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "57936:20:0",
														"memberName": "_beforeTokenTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2679,
														"src": "57930:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 2837,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "57930:61:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2838,
												"nodeType": "ExpressionStatement",
												"src": "57930:61:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2841,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2839,
														"name": "batchSize",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2826,
														"src": "58006:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 2840,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "58018:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "58006:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2847,
												"nodeType": "IfStatement",
												"src": "58002:219:0",
												"trueBody": {
													"id": 2846,
													"nodeType": "Block",
													"src": "58021:200:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"hexValue": "455243373231456e756d657261626c653a20636f6e7365637574697665207472616e7366657273206e6f7420737570706f72746564",
																		"id": 2843,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "58154:55:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_da49291af84b6a1e37ed9eacd9a67360593e4a0e561cb261a6a738f621783314",
																			"typeString": "literal_string \"ERC721Enumerable: consecutive transfers not supported\""
																		},
																		"value": "ERC721Enumerable: consecutive transfers not supported"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_stringliteral_da49291af84b6a1e37ed9eacd9a67360593e4a0e561cb261a6a738f621783314",
																			"typeString": "literal_string \"ERC721Enumerable: consecutive transfers not supported\""
																		}
																	],
																	"id": 2842,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "58147:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 2844,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "58147:63:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2845,
															"nodeType": "ExpressionStatement",
															"src": "58147:63:0"
														}
													]
												}
											},
											{
												"assignments": [
													2849
												],
												"declarations": [
													{
														"constant": false,
														"id": 2849,
														"mutability": "mutable",
														"name": "tokenId",
														"nameLocation": "58239:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 2896,
														"src": "58231:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2848,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "58231:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2851,
												"initialValue": {
													"id": 2850,
													"name": "firstTokenId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2824,
													"src": "58249:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "58231:30:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2857,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2852,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2820,
														"src": "58276:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2855,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "58292:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2854,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "58284:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2853,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "58284:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 2856,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "58284:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "58276:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 2865,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2863,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2820,
															"src": "58371:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 2864,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2822,
															"src": "58379:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "58371:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 2872,
													"nodeType": "IfStatement",
													"src": "58367:88:0",
													"trueBody": {
														"id": 2871,
														"nodeType": "Block",
														"src": "58383:72:0",
														"statements": [
															{
																"expression": {
																	"arguments": [
																		{
																			"id": 2867,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2820,
																			"src": "58430:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 2868,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2849,
																			"src": "58436:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2866,
																		"name": "_removeTokenFromOwnerEnumeration",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3010,
																		"src": "58397:32:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																			"typeString": "function (address,uint256)"
																		}
																	},
																	"id": 2869,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "58397:47:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 2870,
																"nodeType": "ExpressionStatement",
																"src": "58397:47:0"
															}
														]
													}
												},
												"id": 2873,
												"nodeType": "IfStatement",
												"src": "58272:183:0",
												"trueBody": {
													"id": 2862,
													"nodeType": "Block",
													"src": "58296:65:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2859,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2849,
																		"src": "58342:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2858,
																	"name": "_addTokenToAllTokensEnumeration",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2947,
																	"src": "58310:31:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 2860,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "58310:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2861,
															"nodeType": "ExpressionStatement",
															"src": "58310:40:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2879,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2874,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2822,
														"src": "58468:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2877,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "58482:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2876,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "58474:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2875,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "58474:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 2878,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "58474:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "58468:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 2887,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2885,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2822,
															"src": "58566:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 2886,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2820,
															"src": "58572:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "58566:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 2894,
													"nodeType": "IfStatement",
													"src": "58562:81:0",
													"trueBody": {
														"id": 2893,
														"nodeType": "Block",
														"src": "58578:65:0",
														"statements": [
															{
																"expression": {
																	"arguments": [
																		{
																			"id": 2889,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2822,
																			"src": "58620:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 2890,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2849,
																			"src": "58624:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2888,
																		"name": "_addTokenToOwnerEnumeration",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2927,
																		"src": "58592:27:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																			"typeString": "function (address,uint256)"
																		}
																	},
																	"id": 2891,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "58592:40:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 2892,
																"nodeType": "ExpressionStatement",
																"src": "58592:40:0"
															}
														]
													}
												},
												"id": 2895,
												"nodeType": "IfStatement",
												"src": "58464:179:0",
												"trueBody": {
													"id": 2884,
													"nodeType": "Block",
													"src": "58486:70:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2881,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2849,
																		"src": "58537:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2880,
																	"name": "_removeTokenFromAllTokensEnumeration",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3058,
																	"src": "58500:36:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 2882,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "58500:45:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2883,
															"nodeType": "ExpressionStatement",
															"src": "58500:45:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2818,
										"nodeType": "StructuredDocumentation",
										"src": "57696:58:0",
										"text": " @dev See {ERC721-_beforeTokenTransfer}."
									},
									"id": 2897,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nameLocation": "57768:20:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2828,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "57911:8:0"
									},
									"parameters": {
										"id": 2827,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2820,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "57806:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2897,
												"src": "57798:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2819,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "57798:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2822,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "57828:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2897,
												"src": "57820:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2821,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "57820:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2824,
												"mutability": "mutable",
												"name": "firstTokenId",
												"nameLocation": "57848:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 2897,
												"src": "57840:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2823,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "57840:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2826,
												"mutability": "mutable",
												"name": "batchSize",
												"nameLocation": "57878:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 2897,
												"src": "57870:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2825,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "57870:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "57788:105:0"
									},
									"returnParameters": {
										"id": 2829,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "57920:0:0"
									},
									"scope": 3059,
									"src": "57759:890:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2926,
										"nodeType": "Block",
										"src": "59017:143:0",
										"statements": [
											{
												"assignments": [
													2906
												],
												"declarations": [
													{
														"constant": false,
														"id": 2906,
														"mutability": "mutable",
														"name": "length",
														"nameLocation": "59035:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 2926,
														"src": "59027:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2905,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "59027:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2911,
												"initialValue": {
													"arguments": [
														{
															"id": 2909,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2900,
															"src": "59061:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 2907,
															"name": "ERC721",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2708,
															"src": "59044:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ERC721_$2708_$",
																"typeString": "type(contract ERC721)"
															}
														},
														"id": 2908,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "59051:9:0",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1899,
														"src": "59044:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 2910,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "59044:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "59027:37:0"
											},
											{
												"expression": {
													"id": 2918,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 2912,
																"name": "_ownedTokens",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2720,
																"src": "59074:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(uint256 => uint256))"
																}
															},
															"id": 2915,
															"indexExpression": {
																"id": 2913,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2900,
																"src": "59087:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "59074:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 2916,
														"indexExpression": {
															"id": 2914,
															"name": "length",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2906,
															"src": "59091:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "59074:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2917,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2902,
														"src": "59101:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "59074:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2919,
												"nodeType": "ExpressionStatement",
												"src": "59074:34:0"
											},
											{
												"expression": {
													"id": 2924,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2920,
															"name": "_ownedTokensIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2724,
															"src": "59118:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 2922,
														"indexExpression": {
															"id": 2921,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2902,
															"src": "59136:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "59118:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2923,
														"name": "length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2906,
														"src": "59147:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "59118:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2925,
												"nodeType": "ExpressionStatement",
												"src": "59118:35:0"
											}
										]
									},
									"documentation": {
										"id": 2898,
										"nodeType": "StructuredDocumentation",
										"src": "58655:283:0",
										"text": " @dev Private function to add a token to this extension's ownership-tracking data structures.\n @param to address representing the new owner of the given token ID\n @param tokenId uint256 ID of the token to be added to the tokens list of the given address"
									},
									"id": 2927,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_addTokenToOwnerEnumeration",
									"nameLocation": "58952:27:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2903,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2900,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "58988:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2927,
												"src": "58980:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2899,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "58980:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2902,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "59000:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2927,
												"src": "58992:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2901,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "58992:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "58979:29:0"
									},
									"returnParameters": {
										"id": 2904,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "59017:0:0"
									},
									"scope": 3059,
									"src": "58943:217:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2946,
										"nodeType": "Block",
										"src": "59421:95:0",
										"statements": [
											{
												"expression": {
													"id": 2938,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2933,
															"name": "_allTokensIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2731,
															"src": "59431:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 2935,
														"indexExpression": {
															"id": 2934,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2930,
															"src": "59447:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "59431:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 2936,
															"name": "_allTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2727,
															"src": "59458:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														"id": 2937,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "59469:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "59458:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "59431:44:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2939,
												"nodeType": "ExpressionStatement",
												"src": "59431:44:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2943,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2930,
															"src": "59501:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2940,
															"name": "_allTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2727,
															"src": "59485:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														"id": 2942,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "59496:4:0",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "59485:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$attached_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
															"typeString": "function (uint256[] storage pointer,uint256)"
														}
													},
													"id": 2944,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "59485:24:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2945,
												"nodeType": "ExpressionStatement",
												"src": "59485:24:0"
											}
										]
									},
									"documentation": {
										"id": 2928,
										"nodeType": "StructuredDocumentation",
										"src": "59166:184:0",
										"text": " @dev Private function to add a token to this extension's token tracking data structures.\n @param tokenId uint256 ID of the token to be added to the tokens list"
									},
									"id": 2947,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_addTokenToAllTokensEnumeration",
									"nameLocation": "59364:31:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2931,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2930,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "59404:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2947,
												"src": "59396:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2929,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "59396:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "59395:17:0"
									},
									"returnParameters": {
										"id": 2932,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "59421:0:0"
									},
									"scope": 3059,
									"src": "59355:161:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 3009,
										"nodeType": "Block",
										"src": "60214:889:0",
										"statements": [
											{
												"assignments": [
													2956
												],
												"declarations": [
													{
														"constant": false,
														"id": 2956,
														"mutability": "mutable",
														"name": "lastTokenIndex",
														"nameLocation": "60403:14:0",
														"nodeType": "VariableDeclaration",
														"scope": 3009,
														"src": "60395:22:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2955,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "60395:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2963,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2962,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 2959,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2950,
																"src": "60437:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 2957,
																"name": "ERC721",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2708,
																"src": "60420:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ERC721_$2708_$",
																	"typeString": "type(contract ERC721)"
																}
															},
															"id": 2958,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "60427:9:0",
															"memberName": "balanceOf",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1899,
															"src": "60420:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view returns (uint256)"
															}
														},
														"id": 2960,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "60420:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"hexValue": "31",
														"id": 2961,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "60445:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "60420:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "60395:51:0"
											},
											{
												"assignments": [
													2965
												],
												"declarations": [
													{
														"constant": false,
														"id": 2965,
														"mutability": "mutable",
														"name": "tokenIndex",
														"nameLocation": "60464:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 3009,
														"src": "60456:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2964,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "60456:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2969,
												"initialValue": {
													"baseExpression": {
														"id": 2966,
														"name": "_ownedTokensIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2724,
														"src": "60477:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
															"typeString": "mapping(uint256 => uint256)"
														}
													},
													"id": 2968,
													"indexExpression": {
														"id": 2967,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2952,
														"src": "60495:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "60477:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "60456:47:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2972,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2970,
														"name": "tokenIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2965,
														"src": "60607:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 2971,
														"name": "lastTokenIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2956,
														"src": "60621:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "60607:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2996,
												"nodeType": "IfStatement",
												"src": "60603:323:0",
												"trueBody": {
													"id": 2995,
													"nodeType": "Block",
													"src": "60637:289:0",
													"statements": [
														{
															"assignments": [
																2974
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2974,
																	"mutability": "mutable",
																	"name": "lastTokenId",
																	"nameLocation": "60659:11:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 2995,
																	"src": "60651:19:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2973,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "60651:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2980,
															"initialValue": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 2975,
																		"name": "_ownedTokens",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2720,
																		"src": "60673:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																			"typeString": "mapping(address => mapping(uint256 => uint256))"
																		}
																	},
																	"id": 2977,
																	"indexExpression": {
																		"id": 2976,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2950,
																		"src": "60686:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "60673:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																		"typeString": "mapping(uint256 => uint256)"
																	}
																},
																"id": 2979,
																"indexExpression": {
																	"id": 2978,
																	"name": "lastTokenIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2956,
																	"src": "60692:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "60673:34:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "60651:56:0"
														},
														{
															"expression": {
																"id": 2987,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 2981,
																			"name": "_ownedTokens",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2720,
																			"src": "60722:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(uint256 => uint256))"
																			}
																		},
																		"id": 2984,
																		"indexExpression": {
																			"id": 2982,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2950,
																			"src": "60735:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "60722:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																			"typeString": "mapping(uint256 => uint256)"
																		}
																	},
																	"id": 2985,
																	"indexExpression": {
																		"id": 2983,
																		"name": "tokenIndex",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2965,
																		"src": "60741:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "60722:30:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 2986,
																	"name": "lastTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2974,
																	"src": "60755:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "60722:44:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2988,
															"nodeType": "ExpressionStatement",
															"src": "60722:44:0"
														},
														{
															"expression": {
																"id": 2993,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 2989,
																		"name": "_ownedTokensIndex",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2724,
																		"src": "60838:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																			"typeString": "mapping(uint256 => uint256)"
																		}
																	},
																	"id": 2991,
																	"indexExpression": {
																		"id": 2990,
																		"name": "lastTokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2974,
																		"src": "60856:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "60838:30:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 2992,
																	"name": "tokenIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2965,
																	"src": "60871:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "60838:43:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2994,
															"nodeType": "ExpressionStatement",
															"src": "60838:43:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 3000,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "61012:33:0",
													"subExpression": {
														"baseExpression": {
															"id": 2997,
															"name": "_ownedTokensIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2724,
															"src": "61019:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 2999,
														"indexExpression": {
															"id": 2998,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2952,
															"src": "61037:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "61019:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3001,
												"nodeType": "ExpressionStatement",
												"src": "61012:33:0"
											},
											{
												"expression": {
													"id": 3007,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "61055:41:0",
													"subExpression": {
														"baseExpression": {
															"baseExpression": {
																"id": 3002,
																"name": "_ownedTokens",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2720,
																"src": "61062:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(uint256 => uint256))"
																}
															},
															"id": 3004,
															"indexExpression": {
																"id": 3003,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2950,
																"src": "61075:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "61062:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 3006,
														"indexExpression": {
															"id": 3005,
															"name": "lastTokenIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2956,
															"src": "61081:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "61062:34:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3008,
												"nodeType": "ExpressionStatement",
												"src": "61055:41:0"
											}
										]
									},
									"documentation": {
										"id": 2948,
										"nodeType": "StructuredDocumentation",
										"src": "59522:606:0",
										"text": " @dev Private function to remove a token from this extension's ownership-tracking data structures. Note that\n while the token is not assigned a new owner, the `_ownedTokensIndex` mapping is _not_ updated: this allows for\n gas optimizations e.g. when performing a transfer operation (avoiding double writes).\n This has O(1) time complexity, but alters the order of the _ownedTokens array.\n @param from address representing the previous owner of the given token ID\n @param tokenId uint256 ID of the token to be removed from the tokens list of the given address"
									},
									"id": 3010,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_removeTokenFromOwnerEnumeration",
									"nameLocation": "60142:32:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2953,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2950,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "60183:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 3010,
												"src": "60175:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2949,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "60175:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2952,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "60197:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 3010,
												"src": "60189:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2951,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "60189:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "60174:31:0"
									},
									"returnParameters": {
										"id": 2954,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "60214:0:0"
									},
									"scope": 3059,
									"src": "60133:970:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 3057,
										"nodeType": "Block",
										"src": "61462:990:0",
										"statements": [
											{
												"assignments": [
													3017
												],
												"declarations": [
													{
														"constant": false,
														"id": 3017,
														"mutability": "mutable",
														"name": "lastTokenIndex",
														"nameLocation": "61648:14:0",
														"nodeType": "VariableDeclaration",
														"scope": 3057,
														"src": "61640:22:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3016,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "61640:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3022,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3021,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 3018,
															"name": "_allTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2727,
															"src": "61665:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														"id": 3019,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "61676:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "61665:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"hexValue": "31",
														"id": 3020,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "61685:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "61665:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "61640:46:0"
											},
											{
												"assignments": [
													3024
												],
												"declarations": [
													{
														"constant": false,
														"id": 3024,
														"mutability": "mutable",
														"name": "tokenIndex",
														"nameLocation": "61704:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 3057,
														"src": "61696:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3023,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "61696:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3028,
												"initialValue": {
													"baseExpression": {
														"id": 3025,
														"name": "_allTokensIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2731,
														"src": "61717:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
															"typeString": "mapping(uint256 => uint256)"
														}
													},
													"id": 3027,
													"indexExpression": {
														"id": 3026,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3013,
														"src": "61733:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "61717:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "61696:45:0"
											},
											{
												"assignments": [
													3030
												],
												"declarations": [
													{
														"constant": false,
														"id": 3030,
														"mutability": "mutable",
														"name": "lastTokenId",
														"nameLocation": "62071:11:0",
														"nodeType": "VariableDeclaration",
														"scope": 3057,
														"src": "62063:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3029,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "62063:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3034,
												"initialValue": {
													"baseExpression": {
														"id": 3031,
														"name": "_allTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2727,
														"src": "62085:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
															"typeString": "uint256[] storage ref"
														}
													},
													"id": 3033,
													"indexExpression": {
														"id": 3032,
														"name": "lastTokenIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3017,
														"src": "62096:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "62085:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "62063:48:0"
											},
											{
												"expression": {
													"id": 3039,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 3035,
															"name": "_allTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2727,
															"src": "62122:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														"id": 3037,
														"indexExpression": {
															"id": 3036,
															"name": "tokenIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3024,
															"src": "62133:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "62122:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3038,
														"name": "lastTokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3030,
														"src": "62147:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "62122:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3040,
												"nodeType": "ExpressionStatement",
												"src": "62122:36:0"
											},
											{
												"expression": {
													"id": 3045,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 3041,
															"name": "_allTokensIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2731,
															"src": "62226:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 3043,
														"indexExpression": {
															"id": 3042,
															"name": "lastTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3030,
															"src": "62242:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "62226:28:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3044,
														"name": "tokenIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3024,
														"src": "62257:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "62226:41:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3046,
												"nodeType": "ExpressionStatement",
												"src": "62226:41:0"
											},
											{
												"expression": {
													"id": 3050,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "62388:31:0",
													"subExpression": {
														"baseExpression": {
															"id": 3047,
															"name": "_allTokensIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2731,
															"src": "62395:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 3049,
														"indexExpression": {
															"id": 3048,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3013,
															"src": "62411:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "62395:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3051,
												"nodeType": "ExpressionStatement",
												"src": "62388:31:0"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 3052,
															"name": "_allTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2727,
															"src": "62429:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														"id": 3054,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "62440:3:0",
														"memberName": "pop",
														"nodeType": "MemberAccess",
														"src": "62429:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypop_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$returns$__$attached_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
															"typeString": "function (uint256[] storage pointer)"
														}
													},
													"id": 3055,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "62429:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3056,
												"nodeType": "ExpressionStatement",
												"src": "62429:16:0"
											}
										]
									},
									"documentation": {
										"id": 3011,
										"nodeType": "StructuredDocumentation",
										"src": "61109:277:0",
										"text": " @dev Private function to remove a token from this extension's token tracking data structures.\n This has O(1) time complexity, but alters the order of the _allTokens array.\n @param tokenId uint256 ID of the token to be removed from the tokens list"
									},
									"id": 3058,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_removeTokenFromAllTokensEnumeration",
									"nameLocation": "61400:36:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3014,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3013,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "61445:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 3058,
												"src": "61437:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3012,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "61437:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "61436:17:0"
									},
									"returnParameters": {
										"id": 3015,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "61462:0:0"
									},
									"scope": 3059,
									"src": "61391:1061:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 3156,
							"src": "56059:6395:0",
							"usedErrors": []
						},
						{
							"id": 3060,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".9"
							],
							"nodeType": "PragmaDirective",
							"src": "62494:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 3061,
										"name": "ERC721",
										"nameLocations": [
											"62547:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2708,
										"src": "62547:6:0"
									},
									"id": 3062,
									"nodeType": "InheritanceSpecifier",
									"src": "62547:6:0"
								},
								{
									"baseName": {
										"id": 3063,
										"name": "ERC721Enumerable",
										"nameLocations": [
											"62555:16:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 3059,
										"src": "62555:16:0"
									},
									"id": 3064,
									"nodeType": "InheritanceSpecifier",
									"src": "62555:16:0"
								},
								{
									"baseName": {
										"id": 3065,
										"name": "Ownable",
										"nameLocations": [
											"62573:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1242,
										"src": "62573:7:0"
									},
									"id": 3066,
									"nodeType": "InheritanceSpecifier",
									"src": "62573:7:0"
								}
							],
							"canonicalName": "Art_Gallary",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 3155,
							"linearizedBaseContracts": [
								3155,
								1242,
								3059,
								1764,
								2708,
								1789,
								1735,
								1621,
								1599,
								1131
							],
							"name": "Art_Gallary",
							"nameLocation": "62532:11:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 3070,
									"libraryName": {
										"id": 3067,
										"name": "Counters",
										"nameLocations": [
											"62593:8:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 73,
										"src": "62593:8:0"
									},
									"nodeType": "UsingForDirective",
									"src": "62587:36:0",
									"typeName": {
										"id": 3069,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 3068,
											"name": "Counters.Counter",
											"nameLocations": [
												"62606:8:0",
												"62615:7:0"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 5,
											"src": "62606:16:0"
										},
										"referencedDeclaration": 5,
										"src": "62606:16:0",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Counter_$5_storage_ptr",
											"typeString": "struct Counters.Counter"
										}
									}
								},
								{
									"constant": false,
									"id": 3073,
									"mutability": "mutable",
									"name": "_tokenIdCounter",
									"nameLocation": "62654:15:0",
									"nodeType": "VariableDeclaration",
									"scope": 3155,
									"src": "62629:40:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_Counter_$5_storage",
										"typeString": "struct Counters.Counter"
									},
									"typeName": {
										"id": 3072,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 3071,
											"name": "Counters.Counter",
											"nameLocations": [
												"62629:8:0",
												"62638:7:0"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 5,
											"src": "62629:16:0"
										},
										"referencedDeclaration": 5,
										"src": "62629:16:0",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Counter_$5_storage_ptr",
											"typeString": "struct Counters.Counter"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 3080,
										"nodeType": "Block",
										"src": "62720:2:0",
										"statements": []
									},
									"id": 3081,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "4172745f47616c6c617279",
													"id": 3076,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "62697:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_978b7cd4e11abd3d355d39150aef3081688b86484a187fcfb9a33b28597ec932",
														"typeString": "literal_string \"Art_Gallary\""
													},
													"value": "Art_Gallary"
												},
												{
													"hexValue": "41525447",
													"id": 3077,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "62712:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_82d805e7f345c14b87f2f570d00aa4510b8bd6e534f1ce4cd5db76d0667c4e0c",
														"typeString": "literal_string \"ARTG\""
													},
													"value": "ARTG"
												}
											],
											"id": 3078,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 3075,
												"name": "ERC721",
												"nameLocations": [
													"62690:6:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2708,
												"src": "62690:6:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "62690:29:0"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3074,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "62687:2:0"
									},
									"returnParameters": {
										"id": 3079,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "62720:0:0"
									},
									"scope": 3155,
									"src": "62676:46:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1995
									],
									"body": {
										"id": 3089,
										"nodeType": "Block",
										"src": "62795:68:0",
										"statements": [
											{
												"expression": {
													"hexValue": "68747470733a2f2f6170692e6e706f696e742e696f2f3237356438326562303736303634636437316530",
													"id": 3087,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "62812:44:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_04ff9d37b4d45db38e4be6a16cda3c01dfc5c1cafe39c931d51d438268fc8fb1",
														"typeString": "literal_string \"https://api.npoint.io/275d82eb076064cd71e0\""
													},
													"value": "https://api.npoint.io/275d82eb076064cd71e0"
												},
												"functionReturnParameters": 3086,
												"id": 3088,
												"nodeType": "Return",
												"src": "62805:51:0"
											}
										]
									},
									"id": 3090,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_baseURI",
									"nameLocation": "62737:8:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 3083,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "62762:8:0"
									},
									"parameters": {
										"id": 3082,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "62745:2:0"
									},
									"returnParameters": {
										"id": 3086,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3085,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3090,
												"src": "62780:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3084,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "62780:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "62779:15:0"
									},
									"scope": 3155,
									"src": "62728:135:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3113,
										"nodeType": "Block",
										"src": "62916:129:0",
										"statements": [
											{
												"assignments": [
													3098
												],
												"declarations": [
													{
														"constant": false,
														"id": 3098,
														"mutability": "mutable",
														"name": "tokenId",
														"nameLocation": "62934:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 3113,
														"src": "62926:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3097,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "62926:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3102,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 3099,
															"name": "_tokenIdCounter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3073,
															"src": "62944:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$5_storage",
																"typeString": "struct Counters.Counter storage ref"
															}
														},
														"id": 3100,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "62960:7:0",
														"memberName": "current",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 17,
														"src": "62944:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$5_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Counter_$5_storage_ptr_$",
															"typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
														}
													},
													"id": 3101,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "62944:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "62926:43:0"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 3103,
															"name": "_tokenIdCounter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3073,
															"src": "62979:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$5_storage",
																"typeString": "struct Counters.Counter storage ref"
															}
														},
														"id": 3105,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "62995:9:0",
														"memberName": "increment",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 31,
														"src": "62979:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$5_storage_ptr_$returns$__$attached_to$_t_struct$_Counter_$5_storage_ptr_$",
															"typeString": "function (struct Counters.Counter storage pointer)"
														}
													},
													"id": 3106,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "62979:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3107,
												"nodeType": "ExpressionStatement",
												"src": "62979:27:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3109,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3092,
															"src": "63026:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3110,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3098,
															"src": "63030:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3108,
														"name": "_safeMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2276,
															2305
														],
														"referencedDeclaration": 2276,
														"src": "63016:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 3111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "63016:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3112,
												"nodeType": "ExpressionStatement",
												"src": "63016:22:0"
											}
										]
									},
									"functionSelector": "40d097c3",
									"id": 3114,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3095,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3094,
												"name": "onlyOwner",
												"nameLocations": [
													"62906:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1161,
												"src": "62906:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "62906:9:0"
										}
									],
									"name": "safeMint",
									"nameLocation": "62878:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3093,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3092,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "62895:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 3114,
												"src": "62887:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3091,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "62887:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "62886:12:0"
									},
									"returnParameters": {
										"id": 3096,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "62916:0:0"
									},
									"scope": 3155,
									"src": "62869:176:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2679,
										2897
									],
									"body": {
										"id": 3137,
										"nodeType": "Block",
										"src": "63275:73:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 3131,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3116,
															"src": "63312:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3132,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3118,
															"src": "63318:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3133,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3120,
															"src": "63322:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 3134,
															"name": "batchSize",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3122,
															"src": "63331:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 3128,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "63285:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_Art_Gallary_$3155_$",
																"typeString": "type(contract super Art_Gallary)"
															}
														},
														"id": 3130,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "63291:20:0",
														"memberName": "_beforeTokenTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2897,
														"src": "63285:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 3135,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "63285:56:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3136,
												"nodeType": "ExpressionStatement",
												"src": "63285:56:0"
											}
										]
									},
									"id": 3138,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nameLocation": "63128:20:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 3126,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 3124,
												"name": "ERC721",
												"nameLocations": [
													"63245:6:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2708,
												"src": "63245:6:0"
											},
											{
												"id": 3125,
												"name": "ERC721Enumerable",
												"nameLocations": [
													"63253:16:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 3059,
												"src": "63253:16:0"
											}
										],
										"src": "63236:34:0"
									},
									"parameters": {
										"id": 3123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3116,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "63157:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 3138,
												"src": "63149:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3115,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "63149:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3118,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "63171:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 3138,
												"src": "63163:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3117,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "63163:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3120,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "63183:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 3138,
												"src": "63175:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3119,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "63175:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3122,
												"mutability": "mutable",
												"name": "batchSize",
												"nameLocation": "63200:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 3138,
												"src": "63192:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3121,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "63192:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "63148:62:0"
									},
									"returnParameters": {
										"id": 3127,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "63275:0:0"
									},
									"scope": 3155,
									"src": "63119:229:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1875,
										2755
									],
									"body": {
										"id": 3153,
										"nodeType": "Block",
										"src": "63499:60:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 3150,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3140,
															"src": "63540:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														],
														"expression": {
															"id": 3148,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "63516:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_Art_Gallary_$3155_$",
																"typeString": "type(contract super Art_Gallary)"
															}
														},
														"id": 3149,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "63522:17:0",
														"memberName": "supportsInterface",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2755,
														"src": "63516:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
															"typeString": "function (bytes4) view returns (bool)"
														}
													},
													"id": 3151,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "63516:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 3147,
												"id": 3152,
												"nodeType": "Return",
												"src": "63509:43:0"
											}
										]
									},
									"functionSelector": "01ffc9a7",
									"id": 3154,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "63363:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 3144,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 3142,
												"name": "ERC721",
												"nameLocations": [
													"63446:6:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2708,
												"src": "63446:6:0"
											},
											{
												"id": 3143,
												"name": "ERC721Enumerable",
												"nameLocations": [
													"63454:16:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 3059,
												"src": "63454:16:0"
											}
										],
										"src": "63437:34:0"
									},
									"parameters": {
										"id": 3141,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3140,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "63388:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 3154,
												"src": "63381:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 3139,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "63381:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "63380:20:0"
									},
									"returnParameters": {
										"id": 3147,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3146,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3154,
												"src": "63489:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3145,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "63489:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "63488:6:0"
									},
									"scope": 3155,
									"src": "63354:205:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 3156,
							"src": "62523:1038:0",
							"usedErrors": []
						}
					],
					"src": "110:63451:0"
				},
				"id": 0
			}
		}
	}
}