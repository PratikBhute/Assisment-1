{
	"id": "00ad8cc7f4413df80760b93daf1fe433",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.18",
	"solcLongVersion": "0.8.18+commit.87f61d96",
	"input": {
		"language": "Solidity",
		"sources": {
			"MY MainNFT/My_NFT.sol": {
				"content": "/**\r\n *Submitted for verification at polygonscan.com on 2021-06-09\r\n*/\r\n\r\n// Sources flattened with hardhat v2.3.0 https://hardhat.org\r\n\r\n// File @openzeppelin/contracts/utils/introspection/IERC165.sol@v4.1.0\r\n\r\n// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev Interface of the ERC165 standard, as defined in the\r\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\r\n *\r\n * Implementers can declare support of contract interfaces, which can then be\r\n * queried by others ({ERC165Checker}).\r\n *\r\n * For an implementation, see {ERC165}.\r\n */\r\ninterface IERC165 {\r\n    /**\r\n     * @dev Returns true if this contract implements the interface defined by\r\n     * `interfaceId`. See the corresponding\r\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\r\n     * to learn more about how these ids are created.\r\n     *\r\n     * This function call must use less than 30 000 gas.\r\n     */\r\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\r\n}\r\n\r\n\r\n// File @openzeppelin/contracts/token/ERC721/IERC721.sol@v4.1.0\r\n\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev Required interface of an ERC721 compliant contract.\r\n */\r\ninterface IERC721 is IERC165 {\r\n    /**\r\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\r\n     */\r\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\r\n\r\n    /**\r\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\r\n     */\r\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\r\n\r\n    /**\r\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\r\n     */\r\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\r\n\r\n    /**\r\n     * @dev Returns the number of tokens in ``owner``'s account.\r\n     */\r\n    function balanceOf(address owner) external view returns (uint256 balance);\r\n\r\n    /**\r\n     * @dev Returns the owner of the `tokenId` token.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `tokenId` must exist.\r\n     */\r\n    function ownerOf(uint256 tokenId) external view returns (address owner);\r\n\r\n    /**\r\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\r\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `from` cannot be the zero address.\r\n     * - `to` cannot be the zero address.\r\n     * - `tokenId` token must exist and be owned by `from`.\r\n     * - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.\r\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\r\n\r\n    /**\r\n     * @dev Transfers `tokenId` token from `from` to `to`.\r\n     *\r\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `from` cannot be the zero address.\r\n     * - `to` cannot be the zero address.\r\n     * - `tokenId` token must be owned by `from`.\r\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transferFrom(address from, address to, uint256 tokenId) external;\r\n\r\n    /**\r\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\r\n     * The approval is cleared when the token is transferred.\r\n     *\r\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The caller must own the token or be an approved operator.\r\n     * - `tokenId` must exist.\r\n     *\r\n     * Emits an {Approval} event.\r\n     */\r\n    function approve(address to, uint256 tokenId) external;\r\n\r\n    /**\r\n     * @dev Returns the account approved for `tokenId` token.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `tokenId` must exist.\r\n     */\r\n    function getApproved(uint256 tokenId) external view returns (address operator);\r\n\r\n    /**\r\n     * @dev Approve or remove `operator` as an operator for the caller.\r\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The `operator` cannot be the caller.\r\n     *\r\n     * Emits an {ApprovalForAll} event.\r\n     */\r\n    function setApprovalForAll(address operator, bool _approved) external;\r\n\r\n    /**\r\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\r\n     *\r\n     * See {setApprovalForAll}\r\n     */\r\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\r\n\r\n    /**\r\n      * @dev Safely transfers `tokenId` token from `from` to `to`.\r\n      *\r\n      * Requirements:\r\n      *\r\n      * - `from` cannot be the zero address.\r\n      * - `to` cannot be the zero address.\r\n      * - `tokenId` token must exist and be owned by `from`.\r\n      * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\r\n      * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\r\n      *\r\n      * Emits a {Transfer} event.\r\n      */\r\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\r\n}\r\n\r\n\r\n// File @openzeppelin/contracts/token/ERC721/IERC721Receiver.sol@v4.1.0\r\n\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @title ERC721 token receiver interface\r\n * @dev Interface for any contract that wants to support safeTransfers\r\n * from ERC721 asset contracts.\r\n */\r\ninterface IERC721Receiver {\r\n    /**\r\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\r\n     * by `operator` from `from`, this function is called.\r\n     *\r\n     * It must return its Solidity selector to confirm the token transfer.\r\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\r\n     *\r\n     * The selector can be obtained in Solidity with `IERC721.onERC721Received.selector`.\r\n     */\r\n    function onERC721Received(address operator, address from, uint256 tokenId, bytes calldata data) external returns (bytes4);\r\n}\r\n\r\n\r\n// File @openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol@v4.1.0\r\n\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\r\n * @dev See https://eips.ethereum.org/EIPS/eip-721\r\n */\r\ninterface IERC721Metadata is IERC721 {\r\n\r\n    /**\r\n     * @dev Returns the token collection name.\r\n     */\r\n    function name() external view returns (string memory);\r\n\r\n    /**\r\n     * @dev Returns the token collection symbol.\r\n     */\r\n    function symbol() external view returns (string memory);\r\n\r\n    /**\r\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\r\n     */\r\n    function tokenURI(uint256 tokenId) external view returns (string memory);\r\n}\r\n\r\n\r\n// File @openzeppelin/contracts/utils/Address.sol@v4.1.0\r\n\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev Collection of functions related to the address type\r\n */\r\nlibrary Address {\r\n    /**\r\n     * @dev Returns true if `account` is a contract.\r\n     *\r\n     * [IMPORTANT]\r\n     * ====\r\n     * It is unsafe to assume that an address for which this function returns\r\n     * false is an externally-owned account (EOA) and not a contract.\r\n     *\r\n     * Among others, `isContract` will return false for the following\r\n     * types of addresses:\r\n     *\r\n     *  - an externally-owned account\r\n     *  - a contract in construction\r\n     *  - an address where a contract will be created\r\n     *  - an address where a contract lived, but was destroyed\r\n     * ====\r\n     */\r\n    function isContract(address account) internal view returns (bool) {\r\n        // This method relies on extcodesize, which returns 0 for contracts in\r\n        // construction, since the code is only stored at the end of the\r\n        // constructor execution.\r\n\r\n        uint256 size;\r\n        // solhint-disable-next-line no-inline-assembly\r\n        assembly { size := extcodesize(account) }\r\n        return size > 0;\r\n    }\r\n\r\n    /**\r\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\r\n     * `recipient`, forwarding all available gas and reverting on errors.\r\n     *\r\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\r\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\r\n     * imposed by `transfer`, making them unable to receive funds via\r\n     * `transfer`. {sendValue} removes this limitation.\r\n     *\r\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\r\n     *\r\n     * IMPORTANT: because control is transferred to `recipient`, care must be\r\n     * taken to not create reentrancy vulnerabilities. Consider using\r\n     * {ReentrancyGuard} or the\r\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\r\n     */\r\n    function sendValue(address payable recipient, uint256 amount) internal {\r\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\r\n\r\n        // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\r\n        (bool success, ) = recipient.call{ value: amount }(\"\");\r\n        require(success, \"Address: unable to send value, recipient may have reverted\");\r\n    }\r\n\r\n    /**\r\n     * @dev Performs a Solidity function call using a low level `call`. A\r\n     * plain`call` is an unsafe replacement for a function call: use this\r\n     * function instead.\r\n     *\r\n     * If `target` reverts with a revert reason, it is bubbled up by this\r\n     * function (like regular Solidity function calls).\r\n     *\r\n     * Returns the raw returned data. To convert to the expected return value,\r\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `target` must be a contract.\r\n     * - calling `target` with `data` must not revert.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\r\n      return functionCall(target, data, \"Address: low-level call failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\r\n     * `errorMessage` as a fallback revert reason when `target` reverts.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\r\n        return functionCallWithValue(target, data, 0, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but also transferring `value` wei to `target`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - the calling contract must have an ETH balance of at least `value`.\r\n     * - the called Solidity function must be `payable`.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\r\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\r\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {\r\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\r\n        require(isContract(target), \"Address: call to non-contract\");\r\n\r\n        // solhint-disable-next-line avoid-low-level-calls\r\n        (bool success, bytes memory returndata) = target.call{ value: value }(data);\r\n        return _verifyCallResult(success, returndata, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but performing a static call.\r\n     *\r\n     * _Available since v3.3._\r\n     */\r\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\r\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\r\n     * but performing a static call.\r\n     *\r\n     * _Available since v3.3._\r\n     */\r\n    function functionStaticCall(address target, bytes memory data, string memory errorMessage) internal view returns (bytes memory) {\r\n        require(isContract(target), \"Address: static call to non-contract\");\r\n\r\n        // solhint-disable-next-line avoid-low-level-calls\r\n        (bool success, bytes memory returndata) = target.staticcall(data);\r\n        return _verifyCallResult(success, returndata, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but performing a delegate call.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\r\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\r\n     * but performing a delegate call.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function functionDelegateCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\r\n        require(isContract(target), \"Address: delegate call to non-contract\");\r\n\r\n        // solhint-disable-next-line avoid-low-level-calls\r\n        (bool success, bytes memory returndata) = target.delegatecall(data);\r\n        return _verifyCallResult(success, returndata, errorMessage);\r\n    }\r\n\r\n    function _verifyCallResult(bool success, bytes memory returndata, string memory errorMessage) private pure returns(bytes memory) {\r\n        if (success) {\r\n            return returndata;\r\n        } else {\r\n            // Look for revert reason and bubble it up if present\r\n            if (returndata.length > 0) {\r\n                // The easiest way to bubble the revert reason is using memory via assembly\r\n\r\n                // solhint-disable-next-line no-inline-assembly\r\n                assembly {\r\n                    let returndata_size := mload(returndata)\r\n                    revert(add(32, returndata), returndata_size)\r\n                }\r\n            } else {\r\n                revert(errorMessage);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\n// File @openzeppelin/contracts/utils/Context.sol@v4.1.0\r\n\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/*\r\n * @dev Provides information about the current execution context, including the\r\n * sender of the transaction and its data. While these are generally available\r\n * via msg.sender and msg.data, they should not be accessed in such a direct\r\n * manner, since when dealing with meta-transactions the account sending and\r\n * paying for execution may not be the actual sender (as far as an application\r\n * is concerned).\r\n *\r\n * This contract is only required for intermediate, library-like contracts.\r\n */\r\nabstract contract Context {\r\n    function _msgSender() internal view virtual returns (address) {\r\n        return msg.sender;\r\n    }\r\n\r\n    function _msgData() internal view virtual returns (bytes calldata) {\r\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\r\n        return msg.data;\r\n    }\r\n}\r\n\r\n\r\n// File @openzeppelin/contracts/utils/Strings.sol@v4.1.0\r\n\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev String operations.\r\n */\r\nlibrary Strings {\r\n    bytes16 private constant alphabet = \"0123456789abcdef\";\r\n\r\n    /**\r\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\r\n     */\r\n    function toString(uint256 value) internal pure returns (string memory) {\r\n        // Inspired by OraclizeAPI's implementation - MIT licence\r\n        // https://github.com/oraclize/ethereum-api/blob/b42146b063c7d6ee1358846c198246239e9360e8/oraclizeAPI_0.4.25.sol\r\n\r\n        if (value == 0) {\r\n            return \"0\";\r\n        }\r\n        uint256 temp = value;\r\n        uint256 digits;\r\n        while (temp != 0) {\r\n            digits++;\r\n            temp /= 10;\r\n        }\r\n        bytes memory buffer = new bytes(digits);\r\n        while (value != 0) {\r\n            digits -= 1;\r\n            buffer[digits] = bytes1(uint8(48 + uint256(value % 10)));\r\n            value /= 10;\r\n        }\r\n        return string(buffer);\r\n    }\r\n\r\n    /**\r\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\r\n     */\r\n    function toHexString(uint256 value) internal pure returns (string memory) {\r\n        if (value == 0) {\r\n            return \"0x00\";\r\n        }\r\n        uint256 temp = value;\r\n        uint256 length = 0;\r\n        while (temp != 0) {\r\n            length++;\r\n            temp >>= 8;\r\n        }\r\n        return toHexString(value, length);\r\n    }\r\n\r\n    /**\r\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\r\n     */\r\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\r\n        bytes memory buffer = new bytes(2 * length + 2);\r\n        buffer[0] = \"0\";\r\n        buffer[1] = \"x\";\r\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\r\n            buffer[i] = alphabet[value & 0xf];\r\n            value >>= 4;\r\n        }\r\n        require(value == 0, \"Strings: hex length insufficient\");\r\n        return string(buffer);\r\n    }\r\n\r\n}\r\n\r\n\r\n// File @openzeppelin/contracts/utils/introspection/ERC165.sol@v4.1.0\r\n\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev Implementation of the {IERC165} interface.\r\n *\r\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\r\n * for the additional interface id that will be supported. For example:\r\n *\r\n * ```solidity\r\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\r\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\r\n * }\r\n * ```\r\n *\r\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\r\n */\r\nabstract contract ERC165 is IERC165 {\r\n    /**\r\n     * @dev See {IERC165-supportsInterface}.\r\n     */\r\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\r\n        return interfaceId == type(IERC165).interfaceId;\r\n    }\r\n}\r\n\r\n\r\n// File @openzeppelin/contracts/token/ERC721/ERC721.sol@v4.1.0\r\n\r\n\r\npragma solidity ^0.8.0;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\r\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\r\n * {ERC721Enumerable}.\r\n */\r\ncontract ERC721 is Context, ERC165, IERC721, IERC721Metadata {\r\n    using Address for address;\r\n    using Strings for uint256;\r\n\r\n    // Token name\r\n    string private _name;\r\n\r\n    // Token symbol\r\n    string private _symbol;\r\n\r\n    // Mapping from token ID to owner address\r\n    mapping (uint256 => address) private _owners;\r\n\r\n    // Mapping owner address to token count\r\n    mapping (address => uint256) private _balances;\r\n\r\n    // Mapping from token ID to approved address\r\n    mapping (uint256 => address) private _tokenApprovals;\r\n\r\n    // Mapping from owner to operator approvals\r\n    mapping (address => mapping (address => bool)) private _operatorApprovals;\r\n\r\n    /**\r\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\r\n     */\r\n    constructor (string memory name_, string memory symbol_) {\r\n        _name = name_;\r\n        _symbol = symbol_;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC165-supportsInterface}.\r\n     */\r\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\r\n        return interfaceId == type(IERC721).interfaceId\r\n            || interfaceId == type(IERC721Metadata).interfaceId\r\n            || super.supportsInterface(interfaceId);\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721-balanceOf}.\r\n     */\r\n    function balanceOf(address owner) public view virtual override returns (uint256) {\r\n        require(owner != address(0), \"ERC721: balance query for the zero address\");\r\n        return _balances[owner];\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721-ownerOf}.\r\n     */\r\n    function ownerOf(uint256 tokenId) public view virtual override returns (address) {\r\n        address owner = _owners[tokenId];\r\n        require(owner != address(0), \"ERC721: owner query for nonexistent token\");\r\n        return owner;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721Metadata-name}.\r\n     */\r\n    function name() public view virtual override returns (string memory) {\r\n        return _name;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721Metadata-symbol}.\r\n     */\r\n    function symbol() public view virtual override returns (string memory) {\r\n        return _symbol;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721Metadata-tokenURI}.\r\n     */\r\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\r\n        require(_exists(tokenId), \"ERC721Metadata: URI query for nonexistent token\");\r\n\r\n        string memory baseURI = _baseURI();\r\n        return bytes(baseURI).length > 0\r\n            ? string(abi.encodePacked(baseURI, tokenId.toString()))\r\n            : '';\r\n    }\r\n\r\n    /**\r\n     * @dev Base URI for computing {tokenURI}. Empty by default, can be overriden\r\n     * in child contracts.\r\n     */\r\n    function _baseURI() internal view virtual returns (string memory) {\r\n        return \"\";\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721-approve}.\r\n     */\r\n    function approve(address to, uint256 tokenId) public virtual override {\r\n        address owner = ERC721.ownerOf(tokenId);\r\n        require(to != owner, \"ERC721: approval to current owner\");\r\n\r\n        require(_msgSender() == owner || isApprovedForAll(owner, _msgSender()),\r\n            \"ERC721: approve caller is not owner nor approved for all\"\r\n        );\r\n\r\n        _approve(to, tokenId);\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721-getApproved}.\r\n     */\r\n    function getApproved(uint256 tokenId) public view virtual override returns (address) {\r\n        require(_exists(tokenId), \"ERC721: approved query for nonexistent token\");\r\n\r\n        return _tokenApprovals[tokenId];\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721-setApprovalForAll}.\r\n     */\r\n    function setApprovalForAll(address operator, bool approved) public virtual override {\r\n        require(operator != _msgSender(), \"ERC721: approve to caller\");\r\n\r\n        _operatorApprovals[_msgSender()][operator] = approved;\r\n        emit ApprovalForAll(_msgSender(), operator, approved);\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721-isApprovedForAll}.\r\n     */\r\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\r\n        return _operatorApprovals[owner][operator];\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721-transferFrom}.\r\n     */\r\n    function transferFrom(address from, address to, uint256 tokenId) public virtual override {\r\n        //solhint-disable-next-line max-line-length\r\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: transfer caller is not owner nor approved\");\r\n\r\n        _transfer(from, to, tokenId);\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721-safeTransferFrom}.\r\n     */\r\n    function safeTransferFrom(address from, address to, uint256 tokenId) public virtual override {\r\n        safeTransferFrom(from, to, tokenId, \"\");\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721-safeTransferFrom}.\r\n     */\r\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory _data) public virtual override {\r\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: transfer caller is not owner nor approved\");\r\n        _safeTransfer(from, to, tokenId, _data);\r\n    }\r\n\r\n    /**\r\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\r\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\r\n     *\r\n     * `_data` is additional data, it has no specified format and it is sent in call to `to`.\r\n     *\r\n     * This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\r\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `from` cannot be the zero address.\r\n     * - `to` cannot be the zero address.\r\n     * - `tokenId` token must exist and be owned by `from`.\r\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function _safeTransfer(address from, address to, uint256 tokenId, bytes memory _data) internal virtual {\r\n        _transfer(from, to, tokenId);\r\n        require(_checkOnERC721Received(from, to, tokenId, _data), \"ERC721: transfer to non ERC721Receiver implementer\");\r\n    }\r\n\r\n    /**\r\n     * @dev Returns whether `tokenId` exists.\r\n     *\r\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\r\n     *\r\n     * Tokens start existing when they are minted (`_mint`),\r\n     * and stop existing when they are burned (`_burn`).\r\n     */\r\n    function _exists(uint256 tokenId) internal view virtual returns (bool) {\r\n        return _owners[tokenId] != address(0);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns whether `spender` is allowed to manage `tokenId`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `tokenId` must exist.\r\n     */\r\n    function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {\r\n        require(_exists(tokenId), \"ERC721: operator query for nonexistent token\");\r\n        address owner = ERC721.ownerOf(tokenId);\r\n        return (spender == owner || getApproved(tokenId) == spender || isApprovedForAll(owner, spender));\r\n    }\r\n\r\n    /**\r\n     * @dev Safely mints `tokenId` and transfers it to `to`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `tokenId` must not exist.\r\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function _safeMint(address to, uint256 tokenId) internal virtual {\r\n        _safeMint(to, tokenId, \"\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\r\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\r\n     */\r\n    function _safeMint(address to, uint256 tokenId, bytes memory _data) internal virtual {\r\n        _mint(to, tokenId);\r\n        require(_checkOnERC721Received(address(0), to, tokenId, _data), \"ERC721: transfer to non ERC721Receiver implementer\");\r\n    }\r\n\r\n    /**\r\n     * @dev Mints `tokenId` and transfers it to `to`.\r\n     *\r\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `tokenId` must not exist.\r\n     * - `to` cannot be the zero address.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function _mint(address to, uint256 tokenId) internal virtual {\r\n        require(to != address(0), \"ERC721: mint to the zero address\");\r\n        require(!_exists(tokenId), \"ERC721: token already minted\");\r\n\r\n        _beforeTokenTransfer(address(0), to, tokenId);\r\n\r\n        _balances[to] += 1;\r\n        _owners[tokenId] = to;\r\n\r\n        emit Transfer(address(0), to, tokenId);\r\n    }\r\n\r\n    /**\r\n     * @dev Destroys `tokenId`.\r\n     * The approval is cleared when the token is burned.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `tokenId` must exist.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function _burn(uint256 tokenId) internal virtual {\r\n        address owner = ERC721.ownerOf(tokenId);\r\n\r\n        _beforeTokenTransfer(owner, address(0), tokenId);\r\n\r\n        // Clear approvals\r\n        _approve(address(0), tokenId);\r\n\r\n        _balances[owner] -= 1;\r\n        delete _owners[tokenId];\r\n\r\n        emit Transfer(owner, address(0), tokenId);\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers `tokenId` from `from` to `to`.\r\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `to` cannot be the zero address.\r\n     * - `tokenId` token must be owned by `from`.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function _transfer(address from, address to, uint256 tokenId) internal virtual {\r\n        require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer of token that is not own\");\r\n        require(to != address(0), \"ERC721: transfer to the zero address\");\r\n\r\n        _beforeTokenTransfer(from, to, tokenId);\r\n\r\n        // Clear approvals from the previous owner\r\n        _approve(address(0), tokenId);\r\n\r\n        _balances[from] -= 1;\r\n        _balances[to] += 1;\r\n        _owners[tokenId] = to;\r\n\r\n        emit Transfer(from, to, tokenId);\r\n    }\r\n\r\n    /**\r\n     * @dev Approve `to` to operate on `tokenId`\r\n     *\r\n     * Emits a {Approval} event.\r\n     */\r\n    function _approve(address to, uint256 tokenId) internal virtual {\r\n        _tokenApprovals[tokenId] = to;\r\n        emit Approval(ERC721.ownerOf(tokenId), to, tokenId);\r\n    }\r\n\r\n    /**\r\n     * @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\r\n     * The call is not executed if the target address is not a contract.\r\n     *\r\n     * @param from address representing the previous owner of the given token ID\r\n     * @param to target address that will receive the tokens\r\n     * @param tokenId uint256 ID of the token to be transferred\r\n     * @param _data bytes optional data to send along with the call\r\n     * @return bool whether the call correctly returned the expected magic value\r\n     */\r\n    function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory _data)\r\n        private returns (bool)\r\n    {\r\n        if (to.isContract()) {\r\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, _data) returns (bytes4 retval) {\r\n                return retval == IERC721Receiver(to).onERC721Received.selector;\r\n            } catch (bytes memory reason) {\r\n                if (reason.length == 0) {\r\n                    revert(\"ERC721: transfer to non ERC721Receiver implementer\");\r\n                } else {\r\n                    // solhint-disable-next-line no-inline-assembly\r\n                    assembly {\r\n                        revert(add(32, reason), mload(reason))\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Hook that is called before any token transfer. This includes minting\r\n     * and burning.\r\n     *\r\n     * Calling conditions:\r\n     *\r\n     * - When `from` and `to` are both non-zero, ``from``'s `tokenId` will be\r\n     * transferred to `to`.\r\n     * - When `from` is zero, `tokenId` will be minted for `to`.\r\n     * - When `to` is zero, ``from``'s `tokenId` will be burned.\r\n     * - `from` cannot be the zero address.\r\n     * - `to` cannot be the zero address.\r\n     *\r\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\r\n     */\r\n    function _beforeTokenTransfer(address from, address to, uint256 tokenId) internal virtual { }\r\n}\r\n\r\n\r\n// File @openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol@v4.1.0\r\n\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @title ERC-721 Non-Fungible Token Standard, optional enumeration extension\r\n * @dev See https://eips.ethereum.org/EIPS/eip-721\r\n */\r\ninterface IERC721Enumerable is IERC721 {\r\n\r\n    /**\r\n     * @dev Returns the total amount of tokens stored by the contract.\r\n     */\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Returns a token ID owned by `owner` at a given `index` of its token list.\r\n     * Use along with {balanceOf} to enumerate all of ``owner``'s tokens.\r\n     */\r\n    function tokenOfOwnerByIndex(address owner, uint256 index) external view returns (uint256 tokenId);\r\n\r\n    /**\r\n     * @dev Returns a token ID at a given `index` of all the tokens stored by the contract.\r\n     * Use along with {totalSupply} to enumerate all tokens.\r\n     */\r\n    function tokenByIndex(uint256 index) external view returns (uint256);\r\n}\r\n\r\n\r\n// File @openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol@v4.1.0\r\n\r\n\r\npragma solidity ^0.8.0;\r\n\r\n\r\n/**\r\n * @dev This implements an optional extension of {ERC721} defined in the EIP that adds\r\n * enumerability of all the token ids in the contract as well as all token ids owned by each\r\n * account.\r\n */\r\nabstract contract ERC721Enumerable is ERC721, IERC721Enumerable {\r\n    // Mapping from owner to list of owned token IDs\r\n    mapping(address => mapping(uint256 => uint256)) private _ownedTokens;\r\n\r\n    // Mapping from token ID to index of the owner tokens list\r\n    mapping(uint256 => uint256) private _ownedTokensIndex;\r\n\r\n    // Array with all token ids, used for enumeration\r\n    uint256[] private _allTokens;\r\n\r\n    // Mapping from token id to position in the allTokens array\r\n    mapping(uint256 => uint256) private _allTokensIndex;\r\n\r\n    /**\r\n     * @dev See {IERC165-supportsInterface}.\r\n     */\r\n    function supportsInterface(bytes4 interfaceId) public view virtual override(IERC165, ERC721) returns (bool) {\r\n        return interfaceId == type(IERC721Enumerable).interfaceId\r\n            || super.supportsInterface(interfaceId);\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721Enumerable-tokenOfOwnerByIndex}.\r\n     */\r\n    function tokenOfOwnerByIndex(address owner, uint256 index) public view virtual override returns (uint256) {\r\n        require(index < ERC721.balanceOf(owner), \"ERC721Enumerable: owner index out of bounds\");\r\n        return _ownedTokens[owner][index];\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721Enumerable-totalSupply}.\r\n     */\r\n    function totalSupply() public view virtual override returns (uint256) {\r\n        return _allTokens.length;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721Enumerable-tokenByIndex}.\r\n     */\r\n    function tokenByIndex(uint256 index) public view virtual override returns (uint256) {\r\n        require(index < ERC721Enumerable.totalSupply(), \"ERC721Enumerable: global index out of bounds\");\r\n        return _allTokens[index];\r\n    }\r\n\r\n    /**\r\n     * @dev Hook that is called before any token transfer. This includes minting\r\n     * and burning.\r\n     *\r\n     * Calling conditions:\r\n     *\r\n     * - When `from` and `to` are both non-zero, ``from``'s `tokenId` will be\r\n     * transferred to `to`.\r\n     * - When `from` is zero, `tokenId` will be minted for `to`.\r\n     * - When `to` is zero, ``from``'s `tokenId` will be burned.\r\n     * - `from` cannot be the zero address.\r\n     * - `to` cannot be the zero address.\r\n     *\r\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\r\n     */\r\n    function _beforeTokenTransfer(address from, address to, uint256 tokenId) internal virtual override {\r\n        super._beforeTokenTransfer(from, to, tokenId);\r\n\r\n        if (from == address(0)) {\r\n            _addTokenToAllTokensEnumeration(tokenId);\r\n        } else if (from != to) {\r\n            _removeTokenFromOwnerEnumeration(from, tokenId);\r\n        }\r\n        if (to == address(0)) {\r\n            _removeTokenFromAllTokensEnumeration(tokenId);\r\n        } else if (to != from) {\r\n            _addTokenToOwnerEnumeration(to, tokenId);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Private function to add a token to this extension's ownership-tracking data structures.\r\n     * @param to address representing the new owner of the given token ID\r\n     * @param tokenId uint256 ID of the token to be added to the tokens list of the given address\r\n     */\r\n    function _addTokenToOwnerEnumeration(address to, uint256 tokenId) private {\r\n        uint256 length = ERC721.balanceOf(to);\r\n        _ownedTokens[to][length] = tokenId;\r\n        _ownedTokensIndex[tokenId] = length;\r\n    }\r\n\r\n    /**\r\n     * @dev Private function to add a token to this extension's token tracking data structures.\r\n     * @param tokenId uint256 ID of the token to be added to the tokens list\r\n     */\r\n    function _addTokenToAllTokensEnumeration(uint256 tokenId) private {\r\n        _allTokensIndex[tokenId] = _allTokens.length;\r\n        _allTokens.push(tokenId);\r\n    }\r\n\r\n    /**\r\n     * @dev Private function to remove a token from this extension's ownership-tracking data structures. Note that\r\n     * while the token is not assigned a new owner, the `_ownedTokensIndex` mapping is _not_ updated: this allows for\r\n     * gas optimizations e.g. when performing a transfer operation (avoiding double writes).\r\n     * This has O(1) time complexity, but alters the order of the _ownedTokens array.\r\n     * @param from address representing the previous owner of the given token ID\r\n     * @param tokenId uint256 ID of the token to be removed from the tokens list of the given address\r\n     */\r\n    function _removeTokenFromOwnerEnumeration(address from, uint256 tokenId) private {\r\n        // To prevent a gap in from's tokens array, we store the last token in the index of the token to delete, and\r\n        // then delete the last slot (swap and pop).\r\n\r\n        uint256 lastTokenIndex = ERC721.balanceOf(from) - 1;\r\n        uint256 tokenIndex = _ownedTokensIndex[tokenId];\r\n\r\n        // When the token to delete is the last token, the swap operation is unnecessary\r\n        if (tokenIndex != lastTokenIndex) {\r\n            uint256 lastTokenId = _ownedTokens[from][lastTokenIndex];\r\n\r\n            _ownedTokens[from][tokenIndex] = lastTokenId; // Move the last token to the slot of the to-delete token\r\n            _ownedTokensIndex[lastTokenId] = tokenIndex; // Update the moved token's index\r\n        }\r\n\r\n        // This also deletes the contents at the last position of the array\r\n        delete _ownedTokensIndex[tokenId];\r\n        delete _ownedTokens[from][lastTokenIndex];\r\n    }\r\n\r\n    /**\r\n     * @dev Private function to remove a token from this extension's token tracking data structures.\r\n     * This has O(1) time complexity, but alters the order of the _allTokens array.\r\n     * @param tokenId uint256 ID of the token to be removed from the tokens list\r\n     */\r\n    function _removeTokenFromAllTokensEnumeration(uint256 tokenId) private {\r\n        // To prevent a gap in the tokens array, we store the last token in the index of the token to delete, and\r\n        // then delete the last slot (swap and pop).\r\n\r\n        uint256 lastTokenIndex = _allTokens.length - 1;\r\n        uint256 tokenIndex = _allTokensIndex[tokenId];\r\n\r\n        // When the token to delete is the last token, the swap operation is unnecessary. However, since this occurs so\r\n        // rarely (when the last minted token is burnt) that we still do the swap here to avoid the gas cost of adding\r\n        // an 'if' statement (like in _removeTokenFromOwnerEnumeration)\r\n        uint256 lastTokenId = _allTokens[lastTokenIndex];\r\n\r\n        _allTokens[tokenIndex] = lastTokenId; // Move the last token to the slot of the to-delete token\r\n        _allTokensIndex[lastTokenId] = tokenIndex; // Update the moved token's index\r\n\r\n        // This also deletes the contents at the last position of the array\r\n        delete _allTokensIndex[tokenId];\r\n        _allTokens.pop();\r\n    }\r\n}\r\n\r\n\r\n// File @openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol@v4.1.0\r\n\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev ERC721 token with storage based token URI management.\r\n */\r\nabstract contract ERC721URIStorage is ERC721 {\r\n    using Strings for uint256;\r\n\r\n    // Optional mapping for token URIs\r\n    mapping (uint256 => string) private _tokenURIs;\r\n\r\n    /**\r\n     * @dev See {IERC721Metadata-tokenURI}.\r\n     */\r\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\r\n        require(_exists(tokenId), \"ERC721URIStorage: URI query for nonexistent token\");\r\n\r\n        string memory _tokenURI = _tokenURIs[tokenId];\r\n        string memory base = _baseURI();\r\n\r\n        // If there is no base URI, return the token URI.\r\n        if (bytes(base).length == 0) {\r\n            return _tokenURI;\r\n        }\r\n        // If both are set, concatenate the baseURI and tokenURI (via abi.encodePacked).\r\n        if (bytes(_tokenURI).length > 0) {\r\n            return string(abi.encodePacked(base, _tokenURI));\r\n        }\r\n\r\n        return super.tokenURI(tokenId);\r\n    }\r\n\r\n    /**\r\n     * @dev Sets `_tokenURI` as the tokenURI of `tokenId`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `tokenId` must exist.\r\n     */\r\n    function _setTokenURI(uint256 tokenId, string memory _tokenURI) internal virtual {\r\n        require(_exists(tokenId), \"ERC721URIStorage: URI set of nonexistent token\");\r\n        _tokenURIs[tokenId] = _tokenURI;\r\n    }\r\n\r\n    /**\r\n     * @dev Destroys `tokenId`.\r\n     * The approval is cleared when the token is burned.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `tokenId` must exist.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function _burn(uint256 tokenId) internal virtual override {\r\n        super._burn(tokenId);\r\n\r\n        if (bytes(_tokenURIs[tokenId]).length != 0) {\r\n            delete _tokenURIs[tokenId];\r\n        }\r\n    }\r\n}\r\n\r\n\r\n// File @openzeppelin/contracts/access/Ownable.sol@v4.1.0\r\n\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev Contract module which provides a basic access control mechanism, where\r\n * there is an account (an owner) that can be granted exclusive access to\r\n * specific functions.\r\n *\r\n * By default, the owner account will be the one that deploys the contract. This\r\n * can later be changed with {transferOwnership}.\r\n *\r\n * This module is used through inheritance. It will make available the modifier\r\n * `onlyOwner`, which can be applied to your functions to restrict their use to\r\n * the owner.\r\n */\r\nabstract contract Ownable is Context {\r\n    address private _owner;\r\n\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n    /**\r\n     * @dev Initializes the contract setting the deployer as the initial owner.\r\n     */\r\n    constructor () {\r\n        address msgSender = _msgSender();\r\n        _owner = msgSender;\r\n        emit OwnershipTransferred(address(0), msgSender);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the address of the current owner.\r\n     */\r\n    function owner() public view virtual returns (address) {\r\n        return _owner;\r\n    }\r\n\r\n    /**\r\n     * @dev Throws if called by any account other than the owner.\r\n     */\r\n    modifier onlyOwner() {\r\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @dev Leaves the contract without owner. It will not be possible to call\r\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\r\n     *\r\n     * NOTE: Renouncing ownership will leave the contract without an owner,\r\n     * thereby removing any functionality that is only available to the owner.\r\n     */\r\n    function renounceOwnership() public virtual onlyOwner {\r\n        emit OwnershipTransferred(_owner, address(0));\r\n        _owner = address(0);\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\r\n     * Can only be called by the current owner.\r\n     */\r\n    function transferOwnership(address newOwner) public virtual onlyOwner {\r\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\r\n        emit OwnershipTransferred(_owner, newOwner);\r\n        _owner = newOwner;\r\n    }\r\n}\r\n\r\n\r\n// File @openzeppelin/contracts/utils/Counters.sol@v4.1.0\r\n\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @title Counters\r\n * @author Matt Condon (@shrugs)\r\n * @dev Provides counters that can only be incremented or decremented by one. This can be used e.g. to track the number\r\n * of elements in a mapping, issuing ERC721 ids, or counting request ids.\r\n *\r\n * Include with `using Counters for Counters.Counter;`\r\n */\r\nlibrary Counters {\r\n    struct Counter {\r\n        // This variable should never be directly accessed by users of the library: interactions must be restricted to\r\n        // the library's function. As of Solidity v0.5.2, this cannot be enforced, though there is a proposal to add\r\n        // this feature: see https://github.com/ethereum/solidity/issues/4637\r\n        uint256 _value; // default: 0\r\n    }\r\n\r\n    function current(Counter storage counter) internal view returns (uint256) {\r\n        return counter._value;\r\n    }\r\n\r\n    function increment(Counter storage counter) internal {\r\n        unchecked {\r\n            counter._value += 1;\r\n        }\r\n    }\r\n\r\n    function decrement(Counter storage counter) internal {\r\n        uint256 value = counter._value;\r\n        require(value > 0, \"Counter: decrement overflow\");\r\n        unchecked {\r\n            counter._value = value - 1;\r\n        }\r\n    }\r\n}\r\n\r\n\r\n// File contracts/MyERC721.sol\r\n\r\n\r\npragma solidity ^0.8.0;\r\n\r\n\r\n\r\n\r\n\r\ncontract MinteriumUser is ERC721, ERC721Enumerable, ERC721URIStorage, Ownable {\r\n    using Counters for Counters.Counter;\r\n\r\n    Counters.Counter private _tokenIdCounter;\r\n\r\n    constructor(string memory _name, string memory _symbol) ERC721(_name, _symbol) {}\r\n\r\n    function safeMint(address to, string memory tokenURI) public onlyOwner returns(uint256 tokenId) {\r\n        _tokenIdCounter.increment();\r\n        uint256 _current = _tokenIdCounter.current();\r\n        _safeMint(to, _current);\r\n        _setTokenURI(_current, tokenURI);\r\n        return _current;\r\n    }\r\n\r\n    function _beforeTokenTransfer(address from, address to, uint256 tokenId) internal override(ERC721, ERC721Enumerable) {\r\n        super._beforeTokenTransfer(from, to, tokenId);\r\n    }\r\n\r\n    function _burn(uint256 tokenId) internal override(ERC721, ERC721URIStorage) {\r\n        super._burn(tokenId);\r\n    }\r\n\r\n    function tokenURI(uint256 tokenId) public view override(ERC721, ERC721URIStorage) returns (string memory) {\r\n        return super.tokenURI(tokenId);\r\n    }\r\n\r\n    function supportsInterface(bytes4 interfaceId) public view override(ERC721, ERC721Enumerable) returns (bool) {\r\n        return super.supportsInterface(interfaceId);\r\n    }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"MY MainNFT/My_NFT.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"MY MainNFT/My_NFT.sol\":7556:15421  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"MY MainNFT/My_NFT.sol\":7556:15421  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212205a802ac94795cadb1beb5285f19b4cdbb8ffb2a8b1f0438b46a09f4fa12b3bd964736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205a802ac94795cadb1beb5285f19b4cdbb8ffb2a8b1f0438b46a09f4fa12b3bd964736f6c63430008120033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GAS DUP1 0x2A 0xC9 SELFBALANCE SWAP6 0xCA 0xDB SHL 0xEB MSTORE DUP6 CALL SWAP12 0x4C 0xDB 0xB8 SELFDESTRUCT 0xB2 0xA8 0xB1 CREATE NUMBER DUP12 CHAINID LOG0 SWAP16 0x4F LOG1 0x2B EXTCODESIZE 0xD9 PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "7556:7865:0:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;7556:7865:0;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205a802ac94795cadb1beb5285f19b4cdbb8ffb2a8b1f0438b46a09f4fa12b3bd964736f6c63430008120033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GAS DUP1 0x2A 0xC9 SELFBALANCE SWAP6 0xCA 0xDB SHL 0xEB MSTORE DUP6 CALL SWAP12 0x4C 0xDB 0xB8 SELFDESTRUCT 0xB2 0xA8 0xB1 CREATE NUMBER DUP12 CHAINID LOG0 SWAP16 0x4F LOG1 0x2B EXTCODESIZE 0xD9 PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "7556:7865:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"_verifyCallResult(bool,bytes memory,string memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 7556,
									"end": 15421,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7556,
									"end": 15421,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7556,
									"end": 15421,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 7556,
									"end": 15421,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 7556,
									"end": 15421,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 7556,
									"end": 15421,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 7556,
									"end": 15421,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 7556,
									"end": 15421,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 7556,
									"end": 15421,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 7556,
									"end": 15421,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7556,
									"end": 15421,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 7556,
									"end": 15421,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 7556,
									"end": 15421,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 7556,
									"end": 15421,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 7556,
									"end": 15421,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 7556,
									"end": 15421,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7556,
									"end": 15421,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 7556,
									"end": 15421,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7556,
									"end": 15421,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 7556,
									"end": 15421,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 7556,
									"end": 15421,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 7556,
									"end": 15421,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7556,
									"end": 15421,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 7556,
									"end": 15421,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 7556,
									"end": 15421,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 7556,
									"end": 15421,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 7556,
									"end": 15421,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7556,
									"end": 15421,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 7556,
									"end": 15421,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 7556,
									"end": 15421,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7556,
									"end": 15421,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 7556,
									"end": 15421,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 7556,
									"end": 15421,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7556,
									"end": 15421,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212205a802ac94795cadb1beb5285f19b4cdbb8ffb2a8b1f0438b46a09f4fa12b3bd964736f6c63430008120033",
									".code": [
										{
											"begin": 7556,
											"end": 15421,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 7556,
											"end": 15421,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 7556,
											"end": 15421,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 7556,
											"end": 15421,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 7556,
											"end": 15421,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7556,
											"end": 15421,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7556,
											"end": 15421,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7556,
											"end": 15421,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7556,
											"end": 15421,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"MY MainNFT/My_NFT.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"MY MainNFT/My_NFT.sol\":\"Address\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"MY MainNFT/My_NFT.sol\":{\"keccak256\":\"0xd2db7b35f9f50e024810e13a2b06b9eb1507bea0a4b0749d169e842935029116\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://61d56da57f47a64427d04ea653ccf597b6976ede901fab03ecfb040a3c9ed7ac\",\"dweb:/ipfs/Qmeo8NV2khn8iZRHNUFfnvRoNbjEsvZg3W2C89RmoaAUL5\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Context": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"MY MainNFT/My_NFT.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"MY MainNFT/My_NFT.sol\":{\"keccak256\":\"0xd2db7b35f9f50e024810e13a2b06b9eb1507bea0a4b0749d169e842935029116\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://61d56da57f47a64427d04ea653ccf597b6976ede901fab03ecfb040a3c9ed7ac\",\"dweb:/ipfs/Qmeo8NV2khn8iZRHNUFfnvRoNbjEsvZg3W2C89RmoaAUL5\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Counters": {
					"abi": [],
					"devdoc": {
						"author": "Matt Condon (@shrugs)",
						"details": "Provides counters that can only be incremented or decremented by one. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids. Include with `using Counters for Counters.Counter;`",
						"kind": "dev",
						"methods": {},
						"title": "Counters",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"MY MainNFT/My_NFT.sol\":45289:46195  library Counters {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"MY MainNFT/My_NFT.sol\":45289:46195  library Counters {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212200f3c4b8970ba744bbba426c9210619ec7c1e3b4826e3fafee11fe258e54e47f964736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212200f3c4b8970ba744bbba426c9210619ec7c1e3b4826e3fafee11fe258e54e47f964736f6c63430008120033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF EXTCODECOPY 0x4B DUP10 PUSH17 0xBA744BBBA426C9210619EC7C1E3B4826E3 STATICCALL INVALID 0xE1 0x1F 0xE2 PC 0xE5 0x4E SELFBALANCE 0xF9 PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "45289:906:0:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;45289:906:0;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212200f3c4b8970ba744bbba426c9210619ec7c1e3b4826e3fafee11fe258e54e47f964736f6c63430008120033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF EXTCODECOPY 0x4B DUP10 PUSH17 0xBA744BBBA426C9210619EC7C1E3B4826E3 STATICCALL INVALID 0xE1 0x1F 0xE2 PC 0xE5 0x4E SELFBALANCE 0xF9 PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "45289:906:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"current(struct Counters.Counter storage pointer)": "infinite",
								"decrement(struct Counters.Counter storage pointer)": "infinite",
								"increment(struct Counters.Counter storage pointer)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 45289,
									"end": 46195,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 45289,
									"end": 46195,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 45289,
									"end": 46195,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 45289,
									"end": 46195,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 45289,
									"end": 46195,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 45289,
									"end": 46195,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 45289,
									"end": 46195,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 45289,
									"end": 46195,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 45289,
									"end": 46195,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 45289,
									"end": 46195,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 45289,
									"end": 46195,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 45289,
									"end": 46195,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 45289,
									"end": 46195,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 45289,
									"end": 46195,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 45289,
									"end": 46195,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 45289,
									"end": 46195,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 45289,
									"end": 46195,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 45289,
									"end": 46195,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 45289,
									"end": 46195,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 45289,
									"end": 46195,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 45289,
									"end": 46195,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 45289,
									"end": 46195,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 45289,
									"end": 46195,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 45289,
									"end": 46195,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 45289,
									"end": 46195,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 45289,
									"end": 46195,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 45289,
									"end": 46195,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 45289,
									"end": 46195,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 45289,
									"end": 46195,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 45289,
									"end": 46195,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 45289,
									"end": 46195,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 45289,
									"end": 46195,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 45289,
									"end": 46195,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 45289,
									"end": 46195,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212200f3c4b8970ba744bbba426c9210619ec7c1e3b4826e3fafee11fe258e54e47f964736f6c63430008120033",
									".code": [
										{
											"begin": 45289,
											"end": 46195,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 45289,
											"end": 46195,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 45289,
											"end": 46195,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 45289,
											"end": 46195,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 45289,
											"end": 46195,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 45289,
											"end": 46195,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 45289,
											"end": 46195,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 45289,
											"end": 46195,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 45289,
											"end": 46195,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"MY MainNFT/My_NFT.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Matt Condon (@shrugs)\",\"details\":\"Provides counters that can only be incremented or decremented by one. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids. Include with `using Counters for Counters.Counter;`\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Counters\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"MY MainNFT/My_NFT.sol\":\"Counters\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"MY MainNFT/My_NFT.sol\":{\"keccak256\":\"0xd2db7b35f9f50e024810e13a2b06b9eb1507bea0a4b0749d169e842935029116\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://61d56da57f47a64427d04ea653ccf597b6976ede901fab03ecfb040a3c9ed7ac\",\"dweb:/ipfs/Qmeo8NV2khn8iZRHNUFfnvRoNbjEsvZg3W2C89RmoaAUL5\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"MY MainNFT/My_NFT.sol\":\"ERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"MY MainNFT/My_NFT.sol\":{\"keccak256\":\"0xd2db7b35f9f50e024810e13a2b06b9eb1507bea0a4b0749d169e842935029116\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://61d56da57f47a64427d04ea653ccf597b6976ede901fab03ecfb040a3c9ed7ac\",\"dweb:/ipfs/Qmeo8NV2khn8iZRHNUFfnvRoNbjEsvZg3W2C89RmoaAUL5\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC721": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"constructor": {
								"details": "Initializes the contract by setting a `name` and a `symbol` to the token collection."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"MY MainNFT/My_NFT.sol\":19800:32581  contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {... */\n  mstore(0x40, 0x80)\n    /* \"MY MainNFT/My_NFT.sol\":20592:20709  constructor (string memory name_, string memory symbol_) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"MY MainNFT/My_NFT.sol\":20660:20665  _name */\n  0x00\n    /* \"MY MainNFT/My_NFT.sol\":20660:20673  _name = name_ */\n  tag_6\n    /* \"MY MainNFT/My_NFT.sol\":20668:20673  name_ */\n  dup4\n    /* \"MY MainNFT/My_NFT.sol\":20660:20665  _name */\n  dup3\n    /* \"MY MainNFT/My_NFT.sol\":20660:20673  _name = name_ */\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \"MY MainNFT/My_NFT.sol\":20684:20691  _symbol */\n  0x01\n    /* \"MY MainNFT/My_NFT.sol\":20684:20701  _symbol = symbol_ */\n  tag_8\n    /* \"MY MainNFT/My_NFT.sol\":20694:20701  symbol_ */\n  dup3\n    /* \"MY MainNFT/My_NFT.sol\":20684:20691  _symbol */\n  dup3\n    /* \"MY MainNFT/My_NFT.sol\":20684:20701  _symbol = symbol_ */\n  tag_7\n  jump\t// in\ntag_8:\n  pop\n    /* \"MY MainNFT/My_NFT.sol\":20592:20709  constructor (string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"MY MainNFT/My_NFT.sol\":19800:32581  contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {... */\n  jump(tag_16)\n    /* \"#utility.yul\":14:141   */\ntag_10:\n    /* \"#utility.yul\":75:85   */\n  0x4e487b71\n    /* \"#utility.yul\":70:73   */\n  0xe0\n    /* \"#utility.yul\":66:86   */\n  shl\n    /* \"#utility.yul\":63:64   */\n  0x00\n    /* \"#utility.yul\":56:87   */\n  mstore\n    /* \"#utility.yul\":106:110   */\n  0x41\n    /* \"#utility.yul\":103:104   */\n  0x04\n    /* \"#utility.yul\":96:111   */\n  mstore\n    /* \"#utility.yul\":130:134   */\n  0x24\n    /* \"#utility.yul\":127:128   */\n  0x00\n    /* \"#utility.yul\":120:135   */\n  revert\n    /* \"#utility.yul\":146:986   */\ntag_11:\n    /* \"#utility.yul\":200:205   */\n  0x00\n    /* \"#utility.yul\":253:256   */\n  dup3\n    /* \"#utility.yul\":246:250   */\n  0x1f\n    /* \"#utility.yul\":238:244   */\n  dup4\n    /* \"#utility.yul\":234:251   */\n  add\n    /* \"#utility.yul\":230:257   */\n  slt\n    /* \"#utility.yul\":220:275   */\n  tag_19\n  jumpi\n    /* \"#utility.yul\":271:272   */\n  0x00\n    /* \"#utility.yul\":268:269   */\n  dup1\n    /* \"#utility.yul\":261:273   */\n  revert\n    /* \"#utility.yul\":220:275   */\ntag_19:\n    /* \"#utility.yul\":294:307   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":356:366   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":353:389   */\n  iszero\n  tag_21\n  jumpi\n    /* \"#utility.yul\":369:387   */\n  tag_21\n  tag_10\n  jump\t// in\ntag_21:\n    /* \"#utility.yul\":444:446   */\n  0x40\n    /* \"#utility.yul\":438:447   */\n  mload\n    /* \"#utility.yul\":412:414   */\n  0x1f\n    /* \"#utility.yul\":498:511   */\n  dup4\n  add\n  not(0x1f)\n    /* \"#utility.yul\":494:516   */\n  swap1\n  dup2\n  and\n    /* \"#utility.yul\":518:520   */\n  0x3f\n    /* \"#utility.yul\":490:521   */\n  add\n    /* \"#utility.yul\":486:526   */\n  and\n    /* \"#utility.yul\":474:527   */\n  dup2\n  add\n  swap1\n    /* \"#utility.yul\":542:560   */\n  dup3\n  dup3\n  gt\n    /* \"#utility.yul\":562:584   */\n  dup2\n  dup4\n  lt\n    /* \"#utility.yul\":539:585   */\n  or\n    /* \"#utility.yul\":536:608   */\n  iszero\n  tag_23\n  jumpi\n    /* \"#utility.yul\":588:606   */\n  tag_23\n  tag_10\n  jump\t// in\ntag_23:\n    /* \"#utility.yul\":628:638   */\n  dup2\n    /* \"#utility.yul\":624:626   */\n  0x40\n    /* \"#utility.yul\":617:639   */\n  mstore\n    /* \"#utility.yul\":663:665   */\n  dup4\n    /* \"#utility.yul\":655:661   */\n  dup2\n    /* \"#utility.yul\":648:666   */\n  mstore\n    /* \"#utility.yul\":685:689   */\n  0x20\n    /* \"#utility.yul\":675:689   */\n  swap3\n  pop\n    /* \"#utility.yul\":730:733   */\n  dup7\n    /* \"#utility.yul\":725:727   */\n  dup4\n    /* \"#utility.yul\":720:722   */\n  dup6\n    /* \"#utility.yul\":712:718   */\n  dup9\n    /* \"#utility.yul\":708:723   */\n  add\n    /* \"#utility.yul\":704:728   */\n  add\n    /* \"#utility.yul\":701:734   */\n  gt\n    /* \"#utility.yul\":698:751   */\n  iszero\n  tag_24\n  jumpi\n    /* \"#utility.yul\":747:748   */\n  0x00\n    /* \"#utility.yul\":744:745   */\n  dup1\n    /* \"#utility.yul\":737:749   */\n  revert\n    /* \"#utility.yul\":698:751   */\ntag_24:\n    /* \"#utility.yul\":769:770   */\n  0x00\n    /* \"#utility.yul\":760:770   */\n  swap2\n  pop\n    /* \"#utility.yul\":779:912   */\ntag_25:\n    /* \"#utility.yul\":793:795   */\n  dup4\n    /* \"#utility.yul\":790:791   */\n  dup3\n    /* \"#utility.yul\":787:796   */\n  lt\n    /* \"#utility.yul\":779:912   */\n  iszero\n  tag_27\n  jumpi\n    /* \"#utility.yul\":881:895   */\n  dup6\n  dup3\n  add\n    /* \"#utility.yul\":877:900   */\n  dup4\n  add\n    /* \"#utility.yul\":871:901   */\n  mload\n    /* \"#utility.yul\":850:864   */\n  dup2\n  dup4\n  add\n    /* \"#utility.yul\":846:869   */\n  dup5\n  add\n    /* \"#utility.yul\":839:902   */\n  mstore\n    /* \"#utility.yul\":804:814   */\n  swap1\n  dup3\n  add\n  swap1\n    /* \"#utility.yul\":779:912   */\n  jump(tag_25)\ntag_27:\n    /* \"#utility.yul\":954:955   */\n  0x00\n    /* \"#utility.yul\":932:947   */\n  swap4\n  dup2\n  add\n    /* \"#utility.yul\":928:952   */\n  swap1\n  swap3\n  add\n    /* \"#utility.yul\":921:956   */\n  swap3\n  swap1\n  swap3\n  mstore\n    /* \"#utility.yul\":936:942   */\n  swap5\n    /* \"#utility.yul\":146:986   */\n  swap4\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":991:1553   */\ntag_3:\n    /* \"#utility.yul\":1090:1096   */\n  0x00\n    /* \"#utility.yul\":1098:1104   */\n  dup1\n    /* \"#utility.yul\":1151:1153   */\n  0x40\n    /* \"#utility.yul\":1139:1148   */\n  dup4\n    /* \"#utility.yul\":1130:1137   */\n  dup6\n    /* \"#utility.yul\":1126:1149   */\n  sub\n    /* \"#utility.yul\":1122:1154   */\n  slt\n    /* \"#utility.yul\":1119:1171   */\n  iszero\n  tag_29\n  jumpi\n    /* \"#utility.yul\":1167:1168   */\n  0x00\n    /* \"#utility.yul\":1164:1165   */\n  dup1\n    /* \"#utility.yul\":1157:1169   */\n  revert\n    /* \"#utility.yul\":1119:1171   */\ntag_29:\n    /* \"#utility.yul\":1194:1210   */\n  dup3\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1259:1273   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":1256:1290   */\n  iszero\n  tag_30\n  jumpi\n    /* \"#utility.yul\":1286:1287   */\n  0x00\n    /* \"#utility.yul\":1283:1284   */\n  dup1\n    /* \"#utility.yul\":1276:1288   */\n  revert\n    /* \"#utility.yul\":1256:1290   */\ntag_30:\n    /* \"#utility.yul\":1309:1370   */\n  tag_31\n    /* \"#utility.yul\":1362:1369   */\n  dup7\n    /* \"#utility.yul\":1353:1359   */\n  dup4\n    /* \"#utility.yul\":1342:1351   */\n  dup8\n    /* \"#utility.yul\":1338:1360   */\n  add\n    /* \"#utility.yul\":1309:1370   */\n  tag_11\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":1299:1370   */\n  swap4\n  pop\n    /* \"#utility.yul\":1416:1418   */\n  0x20\n    /* \"#utility.yul\":1405:1414   */\n  dup6\n    /* \"#utility.yul\":1401:1419   */\n  add\n    /* \"#utility.yul\":1395:1420   */\n  mload\n    /* \"#utility.yul\":1379:1420   */\n  swap2\n  pop\n    /* \"#utility.yul\":1445:1447   */\n  dup1\n    /* \"#utility.yul\":1435:1443   */\n  dup3\n    /* \"#utility.yul\":1432:1448   */\n  gt\n    /* \"#utility.yul\":1429:1465   */\n  iszero\n  tag_32\n  jumpi\n    /* \"#utility.yul\":1461:1462   */\n  0x00\n    /* \"#utility.yul\":1458:1459   */\n  dup1\n    /* \"#utility.yul\":1451:1463   */\n  revert\n    /* \"#utility.yul\":1429:1465   */\ntag_32:\n  pop\n    /* \"#utility.yul\":1484:1547   */\n  tag_33\n    /* \"#utility.yul\":1539:1546   */\n  dup6\n    /* \"#utility.yul\":1528:1536   */\n  dup3\n    /* \"#utility.yul\":1517:1526   */\n  dup7\n    /* \"#utility.yul\":1513:1537   */\n  add\n    /* \"#utility.yul\":1484:1547   */\n  tag_11\n  jump\t// in\ntag_33:\n    /* \"#utility.yul\":1474:1547   */\n  swap2\n  pop\n  pop\n    /* \"#utility.yul\":991:1553   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1558:1938   */\ntag_12:\n    /* \"#utility.yul\":1637:1638   */\n  0x01\n    /* \"#utility.yul\":1633:1645   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":1680:1692   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":1701:1762   */\n  tag_35\n  jumpi\n    /* \"#utility.yul\":1755:1759   */\n  0x7f\n    /* \"#utility.yul\":1747:1753   */\n  dup3\n    /* \"#utility.yul\":1743:1760   */\n  and\n    /* \"#utility.yul\":1733:1760   */\n  swap2\n  pop\n    /* \"#utility.yul\":1701:1762   */\ntag_35:\n    /* \"#utility.yul\":1808:1810   */\n  0x20\n    /* \"#utility.yul\":1800:1806   */\n  dup3\n    /* \"#utility.yul\":1797:1811   */\n  lt\n    /* \"#utility.yul\":1777:1795   */\n  dup2\n    /* \"#utility.yul\":1774:1812   */\n  sub\n    /* \"#utility.yul\":1771:1932   */\n  tag_36\n  jumpi\n    /* \"#utility.yul\":1854:1864   */\n  0x4e487b71\n    /* \"#utility.yul\":1849:1852   */\n  0xe0\n    /* \"#utility.yul\":1845:1865   */\n  shl\n    /* \"#utility.yul\":1842:1843   */\n  0x00\n    /* \"#utility.yul\":1835:1866   */\n  mstore\n    /* \"#utility.yul\":1889:1893   */\n  0x22\n    /* \"#utility.yul\":1886:1887   */\n  0x04\n    /* \"#utility.yul\":1879:1894   */\n  mstore\n    /* \"#utility.yul\":1917:1921   */\n  0x24\n    /* \"#utility.yul\":1914:1915   */\n  0x00\n    /* \"#utility.yul\":1907:1922   */\n  revert\n    /* \"#utility.yul\":1771:1932   */\ntag_36:\n  pop\n    /* \"#utility.yul\":1558:1938   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2069:2614   */\ntag_14:\n    /* \"#utility.yul\":2171:2173   */\n  0x1f\n    /* \"#utility.yul\":2166:2169   */\n  dup3\n    /* \"#utility.yul\":2163:2174   */\n  gt\n    /* \"#utility.yul\":2160:2608   */\n  iszero\n  tag_39\n  jumpi\n    /* \"#utility.yul\":2207:2208   */\n  0x00\n    /* \"#utility.yul\":2232:2237   */\n  dup2\n    /* \"#utility.yul\":2228:2230   */\n  dup2\n    /* \"#utility.yul\":2221:2238   */\n  mstore\n    /* \"#utility.yul\":2277:2281   */\n  0x20\n    /* \"#utility.yul\":2273:2275   */\n  dup2\n    /* \"#utility.yul\":2263:2282   */\n  keccak256\n    /* \"#utility.yul\":2347:2349   */\n  0x1f\n    /* \"#utility.yul\":2335:2345   */\n  dup6\n    /* \"#utility.yul\":2331:2350   */\n  add\n    /* \"#utility.yul\":2328:2329   */\n  0x05\n    /* \"#utility.yul\":2324:2351   */\n  shr\n    /* \"#utility.yul\":2318:2322   */\n  dup2\n    /* \"#utility.yul\":2314:2352   */\n  add\n    /* \"#utility.yul\":2383:2387   */\n  0x20\n    /* \"#utility.yul\":2371:2381   */\n  dup7\n    /* \"#utility.yul\":2368:2388   */\n  lt\n    /* \"#utility.yul\":2365:2412   */\n  iszero\n  tag_40\n  jumpi\n  pop\n    /* \"#utility.yul\":2406:2410   */\n  dup1\n    /* \"#utility.yul\":2365:2412   */\ntag_40:\n    /* \"#utility.yul\":2461:2463   */\n  0x1f\n    /* \"#utility.yul\":2456:2459   */\n  dup6\n    /* \"#utility.yul\":2452:2464   */\n  add\n    /* \"#utility.yul\":2449:2450   */\n  0x05\n    /* \"#utility.yul\":2445:2465   */\n  shr\n    /* \"#utility.yul\":2439:2443   */\n  dup3\n    /* \"#utility.yul\":2435:2466   */\n  add\n    /* \"#utility.yul\":2425:2466   */\n  swap2\n  pop\n    /* \"#utility.yul\":2516:2598   */\ntag_41:\n    /* \"#utility.yul\":2534:2536   */\n  dup2\n    /* \"#utility.yul\":2527:2532   */\n  dup2\n    /* \"#utility.yul\":2524:2537   */\n  lt\n    /* \"#utility.yul\":2516:2598   */\n  iszero\n  tag_43\n  jumpi\n    /* \"#utility.yul\":2579:2596   */\n  dup3\n  dup2\n  sstore\n    /* \"#utility.yul\":2560:2561   */\n  0x01\n    /* \"#utility.yul\":2549:2562   */\n  add\n    /* \"#utility.yul\":2516:2598   */\n  jump(tag_41)\ntag_43:\n    /* \"#utility.yul\":2520:2523   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":2160:2608   */\ntag_39:\n    /* \"#utility.yul\":2069:2614   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2790:4142   */\ntag_7:\n    /* \"#utility.yul\":2910:2920   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":2932:2962   */\n  dup2\n  gt\n    /* \"#utility.yul\":2929:2985   */\n  iszero\n  tag_47\n  jumpi\n    /* \"#utility.yul\":2965:2983   */\n  tag_47\n  tag_10\n  jump\t// in\ntag_47:\n    /* \"#utility.yul\":2994:3091   */\n  tag_48\n    /* \"#utility.yul\":3084:3090   */\n  dup2\n    /* \"#utility.yul\":3044:3082   */\n  tag_49\n    /* \"#utility.yul\":3076:3080   */\n  dup5\n    /* \"#utility.yul\":3070:3081   */\n  sload\n    /* \"#utility.yul\":3044:3082   */\n  tag_12\n  jump\t// in\ntag_49:\n    /* \"#utility.yul\":3038:3042   */\n  dup5\n    /* \"#utility.yul\":2994:3091   */\n  tag_14\n  jump\t// in\ntag_48:\n    /* \"#utility.yul\":3146:3150   */\n  0x20\n  dup1\n    /* \"#utility.yul\":3210:3212   */\n  0x1f\n    /* \"#utility.yul\":3199:3213   */\n  dup4\n  gt\n    /* \"#utility.yul\":3227:3228   */\n  0x01\n    /* \"#utility.yul\":3222:3885   */\n  dup2\n  eq\n  tag_51\n  jumpi\n    /* \"#utility.yul\":3929:3930   */\n  0x00\n    /* \"#utility.yul\":3946:3952   */\n  dup5\n    /* \"#utility.yul\":3943:4032   */\n  iszero\n  tag_52\n  jumpi\n  pop\n    /* \"#utility.yul\":3998:4017   */\n  dup6\n  dup4\n  add\n    /* \"#utility.yul\":3992:4018   */\n  mload\n    /* \"#utility.yul\":3943:4032   */\ntag_52:\n  not(0x00)\n    /* \"#utility.yul\":2747:2748   */\n  0x03\n    /* \"#utility.yul\":2743:2754   */\n  dup7\n  swap1\n  shl\n    /* \"#utility.yul\":2739:2763   */\n  shr\n    /* \"#utility.yul\":2735:2764   */\n  not\n    /* \"#utility.yul\":2725:2765   */\n  and\n    /* \"#utility.yul\":2771:2772   */\n  0x01\n    /* \"#utility.yul\":2767:2778   */\n  dup6\n  swap1\n  shl\n    /* \"#utility.yul\":2722:2779   */\n  or\n    /* \"#utility.yul\":4045:4126   */\n  dup6\n  sstore\n    /* \"#utility.yul\":3192:4136   */\n  jump(tag_43)\n    /* \"#utility.yul\":3222:3885   */\ntag_51:\n    /* \"#utility.yul\":2016:2017   */\n  0x00\n    /* \"#utility.yul\":2009:2023   */\n  dup6\n  dup2\n  mstore\n    /* \"#utility.yul\":2053:2057   */\n  0x20\n    /* \"#utility.yul\":2040:2058   */\n  dup2\n  keccak256\n  not(0x1f)\n    /* \"#utility.yul\":3258:3278   */\n  dup7\n  and\n  swap2\n    /* \"#utility.yul\":3376:3612   */\ntag_55:\n    /* \"#utility.yul\":3390:3397   */\n  dup3\n    /* \"#utility.yul\":3387:3388   */\n  dup2\n    /* \"#utility.yul\":3384:3398   */\n  lt\n    /* \"#utility.yul\":3376:3612   */\n  iszero\n  tag_57\n  jumpi\n    /* \"#utility.yul\":3479:3498   */\n  dup9\n  dup7\n  add\n    /* \"#utility.yul\":3473:3499   */\n  mload\n    /* \"#utility.yul\":3458:3500   */\n  dup3\n  sstore\n    /* \"#utility.yul\":3571:3598   */\n  swap5\n  dup5\n  add\n  swap5\n    /* \"#utility.yul\":3539:3540   */\n  0x01\n    /* \"#utility.yul\":3527:3541   */\n  swap1\n  swap2\n  add\n  swap1\n    /* \"#utility.yul\":3406:3425   */\n  dup5\n  add\n    /* \"#utility.yul\":3376:3612   */\n  jump(tag_55)\ntag_57:\n    /* \"#utility.yul\":3380:3383   */\n  pop\n    /* \"#utility.yul\":3640:3646   */\n  dup6\n    /* \"#utility.yul\":3631:3638   */\n  dup3\n    /* \"#utility.yul\":3628:3647   */\n  lt\n    /* \"#utility.yul\":3625:3826   */\n  iszero\n  tag_58\n  jumpi\n    /* \"#utility.yul\":3701:3720   */\n  dup8\n  dup6\n  add\n    /* \"#utility.yul\":3695:3721   */\n  mload\n  not(0x00)\n    /* \"#utility.yul\":3784:3785   */\n  0x03\n    /* \"#utility.yul\":3780:3794   */\n  dup9\n  swap1\n  shl\n    /* \"#utility.yul\":3796:3799   */\n  0xf8\n    /* \"#utility.yul\":3776:3800   */\n  and\n    /* \"#utility.yul\":3772:3809   */\n  shr\n    /* \"#utility.yul\":3768:3810   */\n  not\n    /* \"#utility.yul\":3753:3811   */\n  and\n    /* \"#utility.yul\":3738:3812   */\n  dup2\n  sstore\n    /* \"#utility.yul\":3625:3826   */\ntag_58:\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":3872:3873   */\n  0x01\n    /* \"#utility.yul\":3856:3870   */\n  swap1\n  dup2\n  shl\n    /* \"#utility.yul\":3852:3874   */\n  add\n    /* \"#utility.yul\":3839:3875   */\n  swap1\n  sstore\n  pop\n    /* \"#utility.yul\":2790:4142   */\n  jump\t// out\ntag_16:\n    /* \"MY MainNFT/My_NFT.sol\":19800:32581  contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"MY MainNFT/My_NFT.sol\":19800:32581  contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x6352211e\n      gt\n      tag_16\n      jumpi\n      dup1\n      0xa22cb465\n      gt\n      tag_17\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xb88d4fde\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xc87b56dd\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_15\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_17:\n      dup1\n      0x6352211e\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_11\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_16:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x081812fc\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x42842e0e\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"MY MainNFT/My_NFT.sol\":20781:21073  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_3:\n      tag_18\n      tag_19\n      calldatasize\n      0x04\n      tag_20\n      jump\t// in\n    tag_19:\n      tag_21\n      jump\t// in\n    tag_18:\n      mload(0x40)\n        /* \"#utility.yul\":565:579   */\n      swap1\n      iszero\n        /* \"#utility.yul\":558:580   */\n      iszero\n        /* \"#utility.yul\":540:581   */\n      dup2\n      mstore\n        /* \"#utility.yul\":528:530   */\n      0x20\n        /* \"#utility.yul\":513:531   */\n      add\n        /* \"MY MainNFT/My_NFT.sol\":20781:21073  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_22:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"MY MainNFT/My_NFT.sol\":21713:21813  function name() public view virtual override returns (string memory) {... */\n    tag_4:\n      tag_24\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      tag_22\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n        /* \"MY MainNFT/My_NFT.sol\":23173:23394  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_5:\n      tag_28\n      tag_29\n      calldatasize\n      0x04\n      tag_30\n      jump\t// in\n    tag_29:\n      tag_31\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1697:1729   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1679:1730   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1667:1669   */\n      0x20\n        /* \"#utility.yul\":1652:1670   */\n      add\n        /* \"MY MainNFT/My_NFT.sol\":23173:23394  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n      tag_22\n        /* \"#utility.yul\":1533:1736   */\n      jump\n        /* \"MY MainNFT/My_NFT.sol\":22710:23107  function approve(address to, uint256 tokenId) public virtual override {... */\n    tag_6:\n      tag_34\n      tag_35\n      calldatasize\n      0x04\n      tag_36\n      jump\t// in\n    tag_35:\n      tag_37\n      jump\t// in\n    tag_34:\n      stop\n        /* \"MY MainNFT/My_NFT.sol\":24063:24368  function transferFrom(address from, address to, uint256 tokenId) public virtual override {... */\n    tag_7:\n      tag_34\n      tag_39\n      calldatasize\n      0x04\n      tag_40\n      jump\t// in\n    tag_39:\n      tag_41\n      jump\t// in\n        /* \"MY MainNFT/My_NFT.sol\":24439:24590  function safeTransferFrom(address from, address to, uint256 tokenId) public virtual override {... */\n    tag_8:\n      tag_34\n      tag_43\n      calldatasize\n      0x04\n      tag_40\n      jump\t// in\n    tag_43:\n      tag_44\n      jump\t// in\n        /* \"MY MainNFT/My_NFT.sol\":21407:21646  function ownerOf(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_9:\n      tag_28\n      tag_46\n      calldatasize\n      0x04\n      tag_30\n      jump\t// in\n    tag_46:\n      tag_47\n      jump\t// in\n        /* \"MY MainNFT/My_NFT.sol\":21137:21345  function balanceOf(address owner) public view virtual override returns (uint256) {... */\n    tag_10:\n      tag_49\n      tag_50\n      calldatasize\n      0x04\n      tag_51\n      jump\t// in\n    tag_50:\n      tag_52\n      jump\t// in\n    tag_49:\n      mload(0x40)\n        /* \"#utility.yul\":2848:2873   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":2836:2838   */\n      0x20\n        /* \"#utility.yul\":2821:2839   */\n      add\n        /* \"MY MainNFT/My_NFT.sol\":21137:21345  function balanceOf(address owner) public view virtual override returns (uint256) {... */\n      tag_22\n        /* \"#utility.yul\":2702:2879   */\n      jump\n        /* \"MY MainNFT/My_NFT.sol\":21882:21986  function symbol() public view virtual override returns (string memory) {... */\n    tag_11:\n      tag_24\n      tag_56\n      jump\t// in\n        /* \"MY MainNFT/My_NFT.sol\":23466:23761  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_12:\n      tag_34\n      tag_59\n      calldatasize\n      0x04\n      tag_60\n      jump\t// in\n    tag_59:\n      tag_61\n      jump\t// in\n        /* \"MY MainNFT/My_NFT.sol\":24661:24946  function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory _data) public virtual override {... */\n    tag_13:\n      tag_34\n      tag_63\n      calldatasize\n      0x04\n      tag_64\n      jump\t// in\n    tag_63:\n      tag_65\n      jump\t// in\n        /* \"MY MainNFT/My_NFT.sol\":22057:22417  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_14:\n      tag_24\n      tag_67\n      calldatasize\n      0x04\n      tag_30\n      jump\t// in\n    tag_67:\n      tag_68\n      jump\t// in\n        /* \"MY MainNFT/My_NFT.sol\":23832:23996  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n    tag_15:\n      tag_18\n      tag_71\n      calldatasize\n      0x04\n      tag_72\n      jump\t// in\n    tag_71:\n      tag_73\n      jump\t// in\n        /* \"MY MainNFT/My_NFT.sol\":20781:21073  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_21:\n        /* \"MY MainNFT/My_NFT.sol\":20883:20887  bool */\n      0x00\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"MY MainNFT/My_NFT.sol\":20907:20947  interfaceId == type(IERC721).interfaceId */\n      dup3\n      and\n      shl(0xe0, 0x80ac58cd)\n      eq\n      dup1\n        /* \"MY MainNFT/My_NFT.sol\":20907:21012  interfaceId == type(IERC721).interfaceId... */\n      tag_76\n      jumpi\n      pop\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"MY MainNFT/My_NFT.sol\":20964:21012  interfaceId == type(IERC721Metadata).interfaceId */\n      dup3\n      and\n      shl(0xe0, 0x5b5e139f)\n      eq\n        /* \"MY MainNFT/My_NFT.sol\":20907:21012  interfaceId == type(IERC721).interfaceId... */\n    tag_76:\n        /* \"MY MainNFT/My_NFT.sol\":20907:21065  interfaceId == type(IERC721).interfaceId... */\n      dup1\n      tag_78\n      jumpi\n      pop\n      shl(0xe0, 0x01ffc9a7)\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"MY MainNFT/My_NFT.sol\":19384:19424  interfaceId == type(IERC165).interfaceId */\n      dup4\n      and\n      eq\n        /* \"MY MainNFT/My_NFT.sol\":21029:21065  super.supportsInterface(interfaceId) */\n    tag_78:\n        /* \"MY MainNFT/My_NFT.sol\":20900:21065  return interfaceId == type(IERC721).interfaceId... */\n      swap3\n        /* \"MY MainNFT/My_NFT.sol\":20781:21073  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"MY MainNFT/My_NFT.sol\":21713:21813  function name() public view virtual override returns (string memory) {... */\n    tag_25:\n        /* \"MY MainNFT/My_NFT.sol\":21767:21780  string memory */\n      0x60\n        /* \"MY MainNFT/My_NFT.sol\":21800:21805  _name */\n      0x00\n        /* \"MY MainNFT/My_NFT.sol\":21793:21805  return _name */\n      dup1\n      sload\n      tag_81\n      swap1\n      tag_82\n      jump\t// in\n    tag_81:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_83\n      swap1\n      tag_82\n      jump\t// in\n    tag_83:\n      dup1\n      iszero\n      tag_84\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_85\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_84)\n    tag_85:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_86:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_86\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_84:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"MY MainNFT/My_NFT.sol\":21713:21813  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"MY MainNFT/My_NFT.sol\":23173:23394  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_31:\n        /* \"MY MainNFT/My_NFT.sol\":23249:23256  address */\n      0x00\n        /* \"MY MainNFT/My_NFT.sol\":26502:26518  _owners[tokenId] */\n      dup2\n      dup2\n      mstore\n        /* \"MY MainNFT/My_NFT.sol\":26502:26509  _owners */\n      0x02\n        /* \"MY MainNFT/My_NFT.sol\":26502:26518  _owners[tokenId] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"MY MainNFT/My_NFT.sol\":23269:23342  require(_exists(tokenId), \"ERC721: approved query for nonexistent token\") */\n      tag_90\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5363:5365   */\n      0x20\n        /* \"MY MainNFT/My_NFT.sol\":23269:23342  require(_exists(tokenId), \"ERC721: approved query for nonexistent token\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5345:5366   */\n      mstore\n        /* \"#utility.yul\":5402:5404   */\n      0x2c\n        /* \"#utility.yul\":5382:5400   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5375:5405   */\n      mstore\n        /* \"#utility.yul\":5441:5475   */\n      0x4552433732313a20617070726f76656420717565727920666f72206e6f6e6578\n        /* \"#utility.yul\":5421:5439   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5414:5476   */\n      mstore\n      shl(0xa1, 0x34b9ba32b73a103a37b5b2b7)\n        /* \"#utility.yul\":5492:5510   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5485:5527   */\n      mstore\n        /* \"#utility.yul\":5544:5563   */\n      0x84\n      add\n        /* \"MY MainNFT/My_NFT.sol\":23269:23342  require(_exists(tokenId), \"ERC721: approved query for nonexistent token\") */\n    tag_91:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_90:\n      pop\n        /* \"MY MainNFT/My_NFT.sol\":23362:23386  _tokenApprovals[tokenId] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"MY MainNFT/My_NFT.sol\":23362:23377  _tokenApprovals */\n      0x04\n        /* \"MY MainNFT/My_NFT.sol\":23362:23386  _tokenApprovals[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"MY MainNFT/My_NFT.sol\":23173:23394  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n      jump\t// out\n        /* \"MY MainNFT/My_NFT.sol\":22710:23107  function approve(address to, uint256 tokenId) public virtual override {... */\n    tag_37:\n        /* \"MY MainNFT/My_NFT.sol\":22791:22804  address owner */\n      0x00\n        /* \"MY MainNFT/My_NFT.sol\":22807:22830  ERC721.ownerOf(tokenId) */\n      tag_94\n        /* \"MY MainNFT/My_NFT.sol\":22822:22829  tokenId */\n      dup3\n        /* \"MY MainNFT/My_NFT.sol\":22807:22821  ERC721.ownerOf */\n      tag_47\n        /* \"MY MainNFT/My_NFT.sol\":22807:22830  ERC721.ownerOf(tokenId) */\n      jump\t// in\n    tag_94:\n        /* \"MY MainNFT/My_NFT.sol\":22791:22830  address owner = ERC721.ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"MY MainNFT/My_NFT.sol\":22855:22860  owner */\n      dup1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"MY MainNFT/My_NFT.sol\":22849:22860  to != owner */\n      and\n        /* \"MY MainNFT/My_NFT.sol\":22849:22851  to */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"MY MainNFT/My_NFT.sol\":22849:22860  to != owner */\n      and\n      sub\n        /* \"MY MainNFT/My_NFT.sol\":22841:22898  require(to != owner, \"ERC721: approval to current owner\") */\n      tag_95\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5776:5778   */\n      0x20\n        /* \"MY MainNFT/My_NFT.sol\":22841:22898  require(to != owner, \"ERC721: approval to current owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5758:5779   */\n      mstore\n        /* \"#utility.yul\":5815:5817   */\n      0x21\n        /* \"#utility.yul\":5795:5813   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5788:5818   */\n      mstore\n        /* \"#utility.yul\":5854:5888   */\n      0x4552433732313a20617070726f76616c20746f2063757272656e74206f776e65\n        /* \"#utility.yul\":5834:5852   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5827:5889   */\n      mstore\n      shl(0xf9, 0x39)\n        /* \"#utility.yul\":5905:5923   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5898:5929   */\n      mstore\n        /* \"#utility.yul\":5946:5965   */\n      0x84\n      add\n        /* \"MY MainNFT/My_NFT.sol\":22841:22898  require(to != owner, \"ERC721: approval to current owner\") */\n      tag_91\n        /* \"#utility.yul\":5574:5971   */\n      jump\n        /* \"MY MainNFT/My_NFT.sol\":22841:22898  require(to != owner, \"ERC721: approval to current owner\") */\n    tag_95:\n        /* \"MY MainNFT/My_NFT.sol\":16135:16145  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"MY MainNFT/My_NFT.sol\":22919:22940  _msgSender() == owner */\n      dup3\n      and\n      eq\n      dup1\n        /* \"MY MainNFT/My_NFT.sol\":22919:22981  _msgSender() == owner || isApprovedForAll(owner, _msgSender()) */\n      tag_101\n      jumpi\n      pop\n        /* \"MY MainNFT/My_NFT.sol\":22944:22981  isApprovedForAll(owner, _msgSender()) */\n      tag_101\n        /* \"MY MainNFT/My_NFT.sol\":22961:22966  owner */\n      dup2\n        /* \"MY MainNFT/My_NFT.sol\":16135:16145  msg.sender */\n      caller\n        /* \"MY MainNFT/My_NFT.sol\":23832:23996  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n      tag_73\n      jump\t// in\n        /* \"MY MainNFT/My_NFT.sol\":22944:22981  isApprovedForAll(owner, _msgSender()) */\n    tag_101:\n        /* \"MY MainNFT/My_NFT.sol\":22911:23065  require(_msgSender() == owner || isApprovedForAll(owner, _msgSender()),... */\n      tag_103\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6178:6180   */\n      0x20\n        /* \"MY MainNFT/My_NFT.sol\":22911:23065  require(_msgSender() == owner || isApprovedForAll(owner, _msgSender()),... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6160:6181   */\n      mstore\n        /* \"#utility.yul\":6217:6219   */\n      0x38\n        /* \"#utility.yul\":6197:6215   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6190:6220   */\n      mstore\n        /* \"#utility.yul\":6256:6290   */\n      0x4552433732313a20617070726f76652063616c6c6572206973206e6f74206f77\n        /* \"#utility.yul\":6236:6254   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6229:6291   */\n      mstore\n        /* \"#utility.yul\":6327:6353   */\n      0x6e6572206e6f7220617070726f76656420666f7220616c6c0000000000000000\n        /* \"#utility.yul\":6307:6325   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":6300:6354   */\n      mstore\n        /* \"#utility.yul\":6371:6390   */\n      0x84\n      add\n        /* \"MY MainNFT/My_NFT.sol\":22911:23065  require(_msgSender() == owner || isApprovedForAll(owner, _msgSender()),... */\n      tag_91\n        /* \"#utility.yul\":5976:6396   */\n      jump\n        /* \"MY MainNFT/My_NFT.sol\":22911:23065  require(_msgSender() == owner || isApprovedForAll(owner, _msgSender()),... */\n    tag_103:\n        /* \"MY MainNFT/My_NFT.sol\":23078:23099  _approve(to, tokenId) */\n      tag_106\n        /* \"MY MainNFT/My_NFT.sol\":23087:23089  to */\n      dup4\n        /* \"MY MainNFT/My_NFT.sol\":23091:23098  tokenId */\n      dup4\n        /* \"MY MainNFT/My_NFT.sol\":23078:23086  _approve */\n      tag_107\n        /* \"MY MainNFT/My_NFT.sol\":23078:23099  _approve(to, tokenId) */\n      jump\t// in\n    tag_106:\n        /* \"MY MainNFT/My_NFT.sol\":22780:23107  {... */\n      pop\n        /* \"MY MainNFT/My_NFT.sol\":22710:23107  function approve(address to, uint256 tokenId) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"MY MainNFT/My_NFT.sol\":24063:24368  function transferFrom(address from, address to, uint256 tokenId) public virtual override {... */\n    tag_41:\n        /* \"MY MainNFT/My_NFT.sol\":24224:24265  _isApprovedOrOwner(_msgSender(), tokenId) */\n      tag_109\n        /* \"MY MainNFT/My_NFT.sol\":16135:16145  msg.sender */\n      caller\n        /* \"MY MainNFT/My_NFT.sol\":24257:24264  tokenId */\n      dup3\n        /* \"MY MainNFT/My_NFT.sol\":24224:24242  _isApprovedOrOwner */\n      tag_111\n        /* \"MY MainNFT/My_NFT.sol\":24224:24265  _isApprovedOrOwner(_msgSender(), tokenId) */\n      jump\t// in\n    tag_109:\n        /* \"MY MainNFT/My_NFT.sol\":24216:24319  require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: transfer caller is not owner nor approved\") */\n      tag_112\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_91\n      swap1\n      tag_114\n      jump\t// in\n    tag_112:\n        /* \"MY MainNFT/My_NFT.sol\":24332:24360  _transfer(from, to, tokenId) */\n      tag_106\n        /* \"MY MainNFT/My_NFT.sol\":24342:24346  from */\n      dup4\n        /* \"MY MainNFT/My_NFT.sol\":24348:24350  to */\n      dup4\n        /* \"MY MainNFT/My_NFT.sol\":24352:24359  tokenId */\n      dup4\n        /* \"MY MainNFT/My_NFT.sol\":24332:24341  _transfer */\n      tag_116\n        /* \"MY MainNFT/My_NFT.sol\":24332:24360  _transfer(from, to, tokenId) */\n      jump\t// in\n        /* \"MY MainNFT/My_NFT.sol\":24439:24590  function safeTransferFrom(address from, address to, uint256 tokenId) public virtual override {... */\n    tag_44:\n        /* \"MY MainNFT/My_NFT.sol\":24543:24582  safeTransferFrom(from, to, tokenId, \"\") */\n      tag_106\n        /* \"MY MainNFT/My_NFT.sol\":24560:24564  from */\n      dup4\n        /* \"MY MainNFT/My_NFT.sol\":24566:24568  to */\n      dup4\n        /* \"MY MainNFT/My_NFT.sol\":24570:24577  tokenId */\n      dup4\n        /* \"MY MainNFT/My_NFT.sol\":24543:24582  safeTransferFrom(from, to, tokenId, \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"MY MainNFT/My_NFT.sol\":24543:24559  safeTransferFrom */\n      tag_65\n        /* \"MY MainNFT/My_NFT.sol\":24543:24582  safeTransferFrom(from, to, tokenId, \"\") */\n      jump\t// in\n        /* \"MY MainNFT/My_NFT.sol\":21407:21646  function ownerOf(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_47:\n        /* \"MY MainNFT/My_NFT.sol\":21479:21486  address */\n      0x00\n        /* \"MY MainNFT/My_NFT.sol\":21515:21531  _owners[tokenId] */\n      dup2\n      dup2\n      mstore\n        /* \"MY MainNFT/My_NFT.sol\":21515:21522  _owners */\n      0x02\n        /* \"MY MainNFT/My_NFT.sol\":21515:21531  _owners[tokenId] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup1\n        /* \"MY MainNFT/My_NFT.sol\":21542:21615  require(owner != address(0), \"ERC721: owner query for nonexistent token\") */\n      tag_78\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7021:7023   */\n      0x20\n        /* \"MY MainNFT/My_NFT.sol\":21542:21615  require(owner != address(0), \"ERC721: owner query for nonexistent token\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7003:7024   */\n      mstore\n        /* \"#utility.yul\":7060:7062   */\n      0x29\n        /* \"#utility.yul\":7040:7058   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7033:7063   */\n      mstore\n        /* \"#utility.yul\":7099:7133   */\n      0x4552433732313a206f776e657220717565727920666f72206e6f6e6578697374\n        /* \"#utility.yul\":7079:7097   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7072:7134   */\n      mstore\n      shl(0xb9, 0x32b73a103a37b5b2b7)\n        /* \"#utility.yul\":7150:7168   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":7143:7182   */\n      mstore\n        /* \"#utility.yul\":7199:7218   */\n      0x84\n      add\n        /* \"MY MainNFT/My_NFT.sol\":21542:21615  require(owner != address(0), \"ERC721: owner query for nonexistent token\") */\n      tag_91\n        /* \"#utility.yul\":6819:7224   */\n      jump\n        /* \"MY MainNFT/My_NFT.sol\":21137:21345  function balanceOf(address owner) public view virtual override returns (uint256) {... */\n    tag_52:\n        /* \"MY MainNFT/My_NFT.sol\":21209:21216  uint256 */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"MY MainNFT/My_NFT.sol\":21237:21256  owner != address(0) */\n      dup3\n      and\n        /* \"MY MainNFT/My_NFT.sol\":21229:21303  require(owner != address(0), \"ERC721: balance query for the zero address\") */\n      tag_124\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7431:7433   */\n      0x20\n        /* \"MY MainNFT/My_NFT.sol\":21229:21303  require(owner != address(0), \"ERC721: balance query for the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7413:7434   */\n      mstore\n        /* \"#utility.yul\":7470:7472   */\n      0x2a\n        /* \"#utility.yul\":7450:7468   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7443:7473   */\n      mstore\n        /* \"#utility.yul\":7509:7543   */\n      0x4552433732313a2062616c616e636520717565727920666f7220746865207a65\n        /* \"#utility.yul\":7489:7507   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7482:7544   */\n      mstore\n      shl(0xb0, 0x726f2061646472657373)\n        /* \"#utility.yul\":7560:7578   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":7553:7593   */\n      mstore\n        /* \"#utility.yul\":7610:7629   */\n      0x84\n      add\n        /* \"MY MainNFT/My_NFT.sol\":21229:21303  require(owner != address(0), \"ERC721: balance query for the zero address\") */\n      tag_91\n        /* \"#utility.yul\":7229:7635   */\n      jump\n        /* \"MY MainNFT/My_NFT.sol\":21229:21303  require(owner != address(0), \"ERC721: balance query for the zero address\") */\n    tag_124:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"MY MainNFT/My_NFT.sol\":21321:21337  _balances[owner] */\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"MY MainNFT/My_NFT.sol\":21321:21330  _balances */\n      0x03\n        /* \"MY MainNFT/My_NFT.sol\":21321:21337  _balances[owner] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"MY MainNFT/My_NFT.sol\":21137:21345  function balanceOf(address owner) public view virtual override returns (uint256) {... */\n      jump\t// out\n        /* \"MY MainNFT/My_NFT.sol\":21882:21986  function symbol() public view virtual override returns (string memory) {... */\n    tag_56:\n        /* \"MY MainNFT/My_NFT.sol\":21938:21951  string memory */\n      0x60\n        /* \"MY MainNFT/My_NFT.sol\":21971:21978  _symbol */\n      0x01\n        /* \"MY MainNFT/My_NFT.sol\":21964:21978  return _symbol */\n      dup1\n      sload\n      tag_81\n      swap1\n      tag_82\n      jump\t// in\n        /* \"MY MainNFT/My_NFT.sol\":23466:23761  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_61:\n        /* \"MY MainNFT/My_NFT.sol\":16135:16145  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"MY MainNFT/My_NFT.sol\":23569:23593  operator != _msgSender() */\n      dup4\n      and\n      sub\n        /* \"MY MainNFT/My_NFT.sol\":23561:23623  require(operator != _msgSender(), \"ERC721: approve to caller\") */\n      tag_135\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7842:7844   */\n      0x20\n        /* \"MY MainNFT/My_NFT.sol\":23561:23623  require(operator != _msgSender(), \"ERC721: approve to caller\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7824:7845   */\n      mstore\n        /* \"#utility.yul\":7881:7883   */\n      0x19\n        /* \"#utility.yul\":7861:7879   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7854:7884   */\n      mstore\n        /* \"#utility.yul\":7920:7947   */\n      0x4552433732313a20617070726f766520746f2063616c6c657200000000000000\n        /* \"#utility.yul\":7900:7918   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7893:7948   */\n      mstore\n        /* \"#utility.yul\":7965:7983   */\n      0x64\n      add\n        /* \"MY MainNFT/My_NFT.sol\":23561:23623  require(operator != _msgSender(), \"ERC721: approve to caller\") */\n      tag_91\n        /* \"#utility.yul\":7640:7989   */\n      jump\n        /* \"MY MainNFT/My_NFT.sol\":23561:23623  require(operator != _msgSender(), \"ERC721: approve to caller\") */\n    tag_135:\n        /* \"MY MainNFT/My_NFT.sol\":16135:16145  msg.sender */\n      caller\n        /* \"MY MainNFT/My_NFT.sol\":23636:23668  _operatorApprovals[_msgSender()] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"MY MainNFT/My_NFT.sol\":23636:23654  _operatorApprovals */\n      0x05\n        /* \"MY MainNFT/My_NFT.sol\":23636:23668  _operatorApprovals[_msgSender()] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"MY MainNFT/My_NFT.sol\":23636:23678  _operatorApprovals[_msgSender()][operator] */\n      dup8\n      and\n      dup1\n      dup6\n      mstore\n      swap1\n      dup4\n      mstore\n      swap3\n      dup2\n      swap1\n      keccak256\n        /* \"MY MainNFT/My_NFT.sol\":23636:23689  _operatorApprovals[_msgSender()][operator] = approved */\n      dup1\n      sload\n      not(0xff)\n      and\n      dup7\n      iszero\n      iszero\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"MY MainNFT/My_NFT.sol\":23705:23753  ApprovalForAll(_msgSender(), operator, approved) */\n      swap1\n      mload\n        /* \"#utility.yul\":540:581   */\n      swap1\n      dup2\n      mstore\n        /* \"MY MainNFT/My_NFT.sol\":23636:23678  _operatorApprovals[_msgSender()][operator] */\n      swap2\n      swap3\n        /* \"MY MainNFT/My_NFT.sol\":16135:16145  msg.sender */\n      swap2\n        /* \"MY MainNFT/My_NFT.sol\":23705:23753  ApprovalForAll(_msgSender(), operator, approved) */\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n      swap2\n        /* \"#utility.yul\":513:531   */\n      add\n        /* \"MY MainNFT/My_NFT.sol\":23705:23753  ApprovalForAll(_msgSender(), operator, approved) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"MY MainNFT/My_NFT.sol\":23466:23761  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"MY MainNFT/My_NFT.sol\":24661:24946  function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory _data) public virtual override {... */\n    tag_65:\n        /* \"MY MainNFT/My_NFT.sol\":24793:24834  _isApprovedOrOwner(_msgSender(), tokenId) */\n      tag_142\n        /* \"MY MainNFT/My_NFT.sol\":16135:16145  msg.sender */\n      caller\n        /* \"MY MainNFT/My_NFT.sol\":24826:24833  tokenId */\n      dup4\n        /* \"MY MainNFT/My_NFT.sol\":24793:24811  _isApprovedOrOwner */\n      tag_111\n        /* \"MY MainNFT/My_NFT.sol\":24793:24834  _isApprovedOrOwner(_msgSender(), tokenId) */\n      jump\t// in\n    tag_142:\n        /* \"MY MainNFT/My_NFT.sol\":24785:24888  require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: transfer caller is not owner nor approved\") */\n      tag_144\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_91\n      swap1\n      tag_114\n      jump\t// in\n    tag_144:\n        /* \"MY MainNFT/My_NFT.sol\":24899:24938  _safeTransfer(from, to, tokenId, _data) */\n      tag_146\n        /* \"MY MainNFT/My_NFT.sol\":24913:24917  from */\n      dup5\n        /* \"MY MainNFT/My_NFT.sol\":24919:24921  to */\n      dup5\n        /* \"MY MainNFT/My_NFT.sol\":24923:24930  tokenId */\n      dup5\n        /* \"MY MainNFT/My_NFT.sol\":24932:24937  _data */\n      dup5\n        /* \"MY MainNFT/My_NFT.sol\":24899:24912  _safeTransfer */\n      tag_147\n        /* \"MY MainNFT/My_NFT.sol\":24899:24938  _safeTransfer(from, to, tokenId, _data) */\n      jump\t// in\n    tag_146:\n        /* \"MY MainNFT/My_NFT.sol\":24661:24946  function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory _data) public virtual override {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"MY MainNFT/My_NFT.sol\":22057:22417  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_68:\n        /* \"MY MainNFT/My_NFT.sol\":26478:26482  bool */\n      0x00\n        /* \"MY MainNFT/My_NFT.sol\":26502:26518  _owners[tokenId] */\n      dup2\n      dup2\n      mstore\n        /* \"MY MainNFT/My_NFT.sol\":26502:26509  _owners */\n      0x02\n        /* \"MY MainNFT/My_NFT.sol\":26502:26518  _owners[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"MY MainNFT/My_NFT.sol\":22130:22143  string memory */\n      0x60\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"MY MainNFT/My_NFT.sol\":26502:26518  _owners[tokenId] */\n      and\n        /* \"MY MainNFT/My_NFT.sol\":22156:22232  require(_exists(tokenId), \"ERC721Metadata: URI query for nonexistent token\") */\n      tag_150\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8196:8198   */\n      0x20\n        /* \"MY MainNFT/My_NFT.sol\":22156:22232  require(_exists(tokenId), \"ERC721Metadata: URI query for nonexistent token\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8178:8199   */\n      mstore\n        /* \"#utility.yul\":8235:8237   */\n      0x2f\n        /* \"#utility.yul\":8215:8233   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8208:8238   */\n      mstore\n        /* \"#utility.yul\":8274:8308   */\n      0x4552433732314d657461646174613a2055524920717565727920666f72206e6f\n        /* \"#utility.yul\":8254:8272   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8247:8309   */\n      mstore\n      shl(0x89, 0x3732bc34b9ba32b73a103a37b5b2b7)\n        /* \"#utility.yul\":8325:8343   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":8318:8363   */\n      mstore\n        /* \"#utility.yul\":8380:8399   */\n      0x84\n      add\n        /* \"MY MainNFT/My_NFT.sol\":22156:22232  require(_exists(tokenId), \"ERC721Metadata: URI query for nonexistent token\") */\n      tag_91\n        /* \"#utility.yul\":7994:8405   */\n      jump\n        /* \"MY MainNFT/My_NFT.sol\":22156:22232  require(_exists(tokenId), \"ERC721Metadata: URI query for nonexistent token\") */\n    tag_150:\n        /* \"MY MainNFT/My_NFT.sol\":22245:22266  string memory baseURI */\n      0x00\n        /* \"MY MainNFT/My_NFT.sol\":22269:22279  _baseURI() */\n      tag_153\n        /* \"MY MainNFT/My_NFT.sol\":22631:22640  return \"\" */\n      0x40\n      dup1\n      mload\n      0x20\n      dup2\n      add\n      swap1\n      swap2\n      mstore\n      0x00\n      dup2\n      mstore\n      swap1\n        /* \"MY MainNFT/My_NFT.sol\":22554:22648  function _baseURI() internal view virtual returns (string memory) {... */\n      jump\n        /* \"MY MainNFT/My_NFT.sol\":22269:22279  _baseURI() */\n    tag_153:\n        /* \"MY MainNFT/My_NFT.sol\":22245:22279  string memory baseURI = _baseURI() */\n      swap1\n      pop\n        /* \"MY MainNFT/My_NFT.sol\":22321:22322  0 */\n      0x00\n        /* \"MY MainNFT/My_NFT.sol\":22303:22310  baseURI */\n      dup2\n        /* \"MY MainNFT/My_NFT.sol\":22297:22318  bytes(baseURI).length */\n      mload\n        /* \"MY MainNFT/My_NFT.sol\":22297:22322  bytes(baseURI).length > 0 */\n      gt\n        /* \"MY MainNFT/My_NFT.sol\":22297:22409  bytes(baseURI).length > 0... */\n      tag_155\n      jumpi\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      jump(tag_156)\n    tag_155:\n        /* \"MY MainNFT/My_NFT.sol\":22362:22369  baseURI */\n      dup1\n        /* \"MY MainNFT/My_NFT.sol\":22371:22389  tokenId.toString() */\n      tag_157\n        /* \"MY MainNFT/My_NFT.sol\":22371:22378  tokenId */\n      dup5\n        /* \"MY MainNFT/My_NFT.sol\":22371:22387  tokenId.toString */\n      tag_158\n        /* \"MY MainNFT/My_NFT.sol\":22371:22389  tokenId.toString() */\n      jump\t// in\n    tag_157:\n        /* \"MY MainNFT/My_NFT.sol\":22345:22390  abi.encodePacked(baseURI, tokenId.toString()) */\n      add(0x20, mload(0x40))\n      tag_159\n      swap3\n      swap2\n      swap1\n      tag_160\n      jump\t// in\n    tag_159:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"MY MainNFT/My_NFT.sol\":22297:22409  bytes(baseURI).length > 0... */\n    tag_156:\n        /* \"MY MainNFT/My_NFT.sol\":22290:22409  return bytes(baseURI).length > 0... */\n      swap4\n        /* \"MY MainNFT/My_NFT.sol\":22057:22417  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"MY MainNFT/My_NFT.sol\":23832:23996  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n    tag_73:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"MY MainNFT/My_NFT.sol\":23953:23978  _operatorApprovals[owner] */\n      swap2\n      dup3\n      and\n        /* \"MY MainNFT/My_NFT.sol\":23929:23933  bool */\n      0x00\n        /* \"MY MainNFT/My_NFT.sol\":23953:23978  _operatorApprovals[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"MY MainNFT/My_NFT.sol\":23953:23971  _operatorApprovals */\n      0x05\n        /* \"MY MainNFT/My_NFT.sol\":23953:23978  _operatorApprovals[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"MY MainNFT/My_NFT.sol\":23953:23988  _operatorApprovals[owner][operator] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"MY MainNFT/My_NFT.sol\":23832:23996  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n      jump\t// out\n        /* \"MY MainNFT/My_NFT.sol\":30290:30464  function _approve(address to, uint256 tokenId) internal virtual {... */\n    tag_107:\n        /* \"MY MainNFT/My_NFT.sol\":30365:30389  _tokenApprovals[tokenId] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"MY MainNFT/My_NFT.sol\":30365:30380  _tokenApprovals */\n      0x04\n        /* \"MY MainNFT/My_NFT.sol\":30365:30389  _tokenApprovals[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"MY MainNFT/My_NFT.sol\":30365:30394  _tokenApprovals[tokenId] = to */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup5\n      and\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"MY MainNFT/My_NFT.sol\":30365:30389  _tokenApprovals[tokenId] */\n      dup2\n      swap1\n        /* \"MY MainNFT/My_NFT.sol\":30419:30442  ERC721.ownerOf(tokenId) */\n      tag_166\n        /* \"MY MainNFT/My_NFT.sol\":30365:30389  _tokenApprovals[tokenId] */\n      dup3\n        /* \"MY MainNFT/My_NFT.sol\":30419:30433  ERC721.ownerOf */\n      tag_47\n        /* \"MY MainNFT/My_NFT.sol\":30419:30442  ERC721.ownerOf(tokenId) */\n      jump\t// in\n    tag_166:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"MY MainNFT/My_NFT.sol\":30410:30456  Approval(ERC721.ownerOf(tokenId), to, tokenId) */\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"MY MainNFT/My_NFT.sol\":30290:30464  function _approve(address to, uint256 tokenId) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"MY MainNFT/My_NFT.sol\":26707:27055  function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {... */\n    tag_111:\n        /* \"MY MainNFT/My_NFT.sol\":26800:26804  bool */\n      0x00\n        /* \"MY MainNFT/My_NFT.sol\":26502:26518  _owners[tokenId] */\n      dup2\n      dup2\n      mstore\n        /* \"MY MainNFT/My_NFT.sol\":26502:26509  _owners */\n      0x02\n        /* \"MY MainNFT/My_NFT.sol\":26502:26518  _owners[tokenId] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"MY MainNFT/My_NFT.sol\":26817:26890  require(_exists(tokenId), \"ERC721: operator query for nonexistent token\") */\n      tag_169\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9113:9115   */\n      0x20\n        /* \"MY MainNFT/My_NFT.sol\":26817:26890  require(_exists(tokenId), \"ERC721: operator query for nonexistent token\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9095:9116   */\n      mstore\n        /* \"#utility.yul\":9152:9154   */\n      0x2c\n        /* \"#utility.yul\":9132:9150   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9125:9155   */\n      mstore\n        /* \"#utility.yul\":9191:9225   */\n      0x4552433732313a206f70657261746f7220717565727920666f72206e6f6e6578\n        /* \"#utility.yul\":9171:9189   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9164:9226   */\n      mstore\n      shl(0xa1, 0x34b9ba32b73a103a37b5b2b7)\n        /* \"#utility.yul\":9242:9260   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":9235:9277   */\n      mstore\n        /* \"#utility.yul\":9294:9313   */\n      0x84\n      add\n        /* \"MY MainNFT/My_NFT.sol\":26817:26890  require(_exists(tokenId), \"ERC721: operator query for nonexistent token\") */\n      tag_91\n        /* \"#utility.yul\":8911:9319   */\n      jump\n        /* \"MY MainNFT/My_NFT.sol\":26817:26890  require(_exists(tokenId), \"ERC721: operator query for nonexistent token\") */\n    tag_169:\n        /* \"MY MainNFT/My_NFT.sol\":26901:26914  address owner */\n      0x00\n        /* \"MY MainNFT/My_NFT.sol\":26917:26940  ERC721.ownerOf(tokenId) */\n      tag_172\n        /* \"MY MainNFT/My_NFT.sol\":26932:26939  tokenId */\n      dup4\n        /* \"MY MainNFT/My_NFT.sol\":26917:26931  ERC721.ownerOf */\n      tag_47\n        /* \"MY MainNFT/My_NFT.sol\":26917:26940  ERC721.ownerOf(tokenId) */\n      jump\t// in\n    tag_172:\n        /* \"MY MainNFT/My_NFT.sol\":26901:26940  address owner = ERC721.ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"MY MainNFT/My_NFT.sol\":26970:26975  owner */\n      dup1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"MY MainNFT/My_NFT.sol\":26959:26975  spender == owner */\n      and\n        /* \"MY MainNFT/My_NFT.sol\":26959:26966  spender */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"MY MainNFT/My_NFT.sol\":26959:26975  spender == owner */\n      and\n      eq\n        /* \"MY MainNFT/My_NFT.sol\":26959:27010  spender == owner || getApproved(tokenId) == spender */\n      dup1\n      tag_173\n      jumpi\n      pop\n        /* \"MY MainNFT/My_NFT.sol\":27003:27010  spender */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"MY MainNFT/My_NFT.sol\":26979:27010  getApproved(tokenId) == spender */\n      and\n        /* \"MY MainNFT/My_NFT.sol\":26979:26999  getApproved(tokenId) */\n      tag_174\n        /* \"MY MainNFT/My_NFT.sol\":26991:26998  tokenId */\n      dup5\n        /* \"MY MainNFT/My_NFT.sol\":26979:26990  getApproved */\n      tag_31\n        /* \"MY MainNFT/My_NFT.sol\":26979:26999  getApproved(tokenId) */\n      jump\t// in\n    tag_174:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"MY MainNFT/My_NFT.sol\":26979:27010  getApproved(tokenId) == spender */\n      and\n      eq\n        /* \"MY MainNFT/My_NFT.sol\":26959:27010  spender == owner || getApproved(tokenId) == spender */\n    tag_173:\n        /* \"MY MainNFT/My_NFT.sol\":26959:27046  spender == owner || getApproved(tokenId) == spender || isApprovedForAll(owner, spender) */\n      dup1\n      tag_176\n      jumpi\n      pop\n        /* \"MY MainNFT/My_NFT.sol\":27014:27046  isApprovedForAll(owner, spender) */\n      tag_176\n        /* \"MY MainNFT/My_NFT.sol\":27031:27036  owner */\n      dup2\n        /* \"MY MainNFT/My_NFT.sol\":27038:27045  spender */\n      dup6\n        /* \"MY MainNFT/My_NFT.sol\":27014:27030  isApprovedForAll */\n      tag_73\n        /* \"MY MainNFT/My_NFT.sol\":27014:27046  isApprovedForAll(owner, spender) */\n      jump\t// in\n    tag_176:\n        /* \"MY MainNFT/My_NFT.sol\":26951:27047  return (spender == owner || getApproved(tokenId) == spender || isApprovedForAll(owner, spender)) */\n      swap5\n        /* \"MY MainNFT/My_NFT.sol\":26707:27055  function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"MY MainNFT/My_NFT.sol\":29628:30172  function _transfer(address from, address to, uint256 tokenId) internal virtual {... */\n    tag_116:\n        /* \"MY MainNFT/My_NFT.sol\":29753:29757  from */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"MY MainNFT/My_NFT.sol\":29726:29757  ERC721.ownerOf(tokenId) == from */\n      and\n        /* \"MY MainNFT/My_NFT.sol\":29726:29749  ERC721.ownerOf(tokenId) */\n      tag_178\n        /* \"MY MainNFT/My_NFT.sol\":29741:29748  tokenId */\n      dup3\n        /* \"MY MainNFT/My_NFT.sol\":29726:29740  ERC721.ownerOf */\n      tag_47\n        /* \"MY MainNFT/My_NFT.sol\":29726:29749  ERC721.ownerOf(tokenId) */\n      jump\t// in\n    tag_178:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"MY MainNFT/My_NFT.sol\":29726:29757  ERC721.ownerOf(tokenId) == from */\n      and\n      eq\n        /* \"MY MainNFT/My_NFT.sol\":29718:29803  require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer of token that is not own\") */\n      tag_179\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9526:9528   */\n      0x20\n        /* \"MY MainNFT/My_NFT.sol\":29718:29803  require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer of token that is not own\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9508:9529   */\n      mstore\n        /* \"#utility.yul\":9565:9567   */\n      0x29\n        /* \"#utility.yul\":9545:9563   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9538:9568   */\n      mstore\n        /* \"#utility.yul\":9604:9638   */\n      0x4552433732313a207472616e73666572206f6620746f6b656e20746861742069\n        /* \"#utility.yul\":9584:9602   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9577:9639   */\n      mstore\n      shl(0xb9, 0x39903737ba1037bbb7)\n        /* \"#utility.yul\":9655:9673   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":9648:9687   */\n      mstore\n        /* \"#utility.yul\":9704:9723   */\n      0x84\n      add\n        /* \"MY MainNFT/My_NFT.sol\":29718:29803  require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer of token that is not own\") */\n      tag_91\n        /* \"#utility.yul\":9324:9729   */\n      jump\n        /* \"MY MainNFT/My_NFT.sol\":29718:29803  require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer of token that is not own\") */\n    tag_179:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"MY MainNFT/My_NFT.sol\":29822:29838  to != address(0) */\n      dup3\n      and\n        /* \"MY MainNFT/My_NFT.sol\":29814:29879  require(to != address(0), \"ERC721: transfer to the zero address\") */\n      tag_182\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9936:9938   */\n      0x20\n        /* \"MY MainNFT/My_NFT.sol\":29814:29879  require(to != address(0), \"ERC721: transfer to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9918:9939   */\n      mstore\n        /* \"#utility.yul\":9975:9977   */\n      0x24\n        /* \"#utility.yul\":9955:9973   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":9948:9978   */\n      mstore\n        /* \"#utility.yul\":10014:10048   */\n      0x4552433732313a207472616e7366657220746f20746865207a65726f20616464\n        /* \"#utility.yul\":9994:10012   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9987:10049   */\n      mstore\n      shl(0xe0, 0x72657373)\n        /* \"#utility.yul\":10065:10083   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":10058:10092   */\n      mstore\n        /* \"#utility.yul\":10109:10128   */\n      0x84\n      add\n        /* \"MY MainNFT/My_NFT.sol\":29814:29879  require(to != address(0), \"ERC721: transfer to the zero address\") */\n      tag_91\n        /* \"#utility.yul\":9734:10134   */\n      jump\n        /* \"MY MainNFT/My_NFT.sol\":29814:29879  require(to != address(0), \"ERC721: transfer to the zero address\") */\n    tag_182:\n        /* \"MY MainNFT/My_NFT.sol\":29996:30025  _approve(address(0), tokenId) */\n      tag_187\n        /* \"MY MainNFT/My_NFT.sol\":30013:30014  0 */\n      0x00\n        /* \"MY MainNFT/My_NFT.sol\":30017:30024  tokenId */\n      dup3\n        /* \"MY MainNFT/My_NFT.sol\":29996:30004  _approve */\n      tag_107\n        /* \"MY MainNFT/My_NFT.sol\":29996:30025  _approve(address(0), tokenId) */\n      jump\t// in\n    tag_187:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"MY MainNFT/My_NFT.sol\":30038:30053  _balances[from] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"MY MainNFT/My_NFT.sol\":30038:30047  _balances */\n      0x03\n        /* \"MY MainNFT/My_NFT.sol\":30038:30053  _balances[from] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"MY MainNFT/My_NFT.sol\":30038:30058  _balances[from] -= 1 */\n      dup1\n      sload\n        /* \"MY MainNFT/My_NFT.sol\":30057:30058  1 */\n      0x01\n      swap3\n        /* \"MY MainNFT/My_NFT.sol\":30038:30053  _balances[from] */\n      swap1\n        /* \"MY MainNFT/My_NFT.sol\":30038:30058  _balances[from] -= 1 */\n      tag_188\n      swap1\n        /* \"MY MainNFT/My_NFT.sol\":30057:30058  1 */\n      dup5\n      swap1\n        /* \"MY MainNFT/My_NFT.sol\":30038:30058  _balances[from] -= 1 */\n      tag_189\n      jump\t// in\n    tag_188:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"MY MainNFT/My_NFT.sol\":30069:30082  _balances[to] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"MY MainNFT/My_NFT.sol\":30069:30078  _balances */\n      0x03\n        /* \"MY MainNFT/My_NFT.sol\":30069:30082  _balances[to] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"MY MainNFT/My_NFT.sol\":30069:30087  _balances[to] += 1 */\n      dup1\n      sload\n        /* \"MY MainNFT/My_NFT.sol\":30086:30087  1 */\n      0x01\n      swap3\n        /* \"MY MainNFT/My_NFT.sol\":30069:30082  _balances[to] */\n      swap1\n        /* \"MY MainNFT/My_NFT.sol\":30069:30087  _balances[to] += 1 */\n      tag_190\n      swap1\n        /* \"MY MainNFT/My_NFT.sol\":30086:30087  1 */\n      dup5\n      swap1\n        /* \"MY MainNFT/My_NFT.sol\":30069:30087  _balances[to] += 1 */\n      tag_191\n      jump\t// in\n    tag_190:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"MY MainNFT/My_NFT.sol\":30098:30114  _owners[tokenId] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"MY MainNFT/My_NFT.sol\":30098:30105  _owners */\n      0x02\n        /* \"MY MainNFT/My_NFT.sol\":30098:30114  _owners[tokenId] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"MY MainNFT/My_NFT.sol\":30098:30119  _owners[tokenId] = to */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup7\n      dup2\n      and\n      swap2\n      dup3\n      or\n      swap1\n      swap3\n      sstore\n        /* \"MY MainNFT/My_NFT.sol\":30137:30164  Transfer(from, to, tokenId) */\n      swap2\n      mload\n        /* \"MY MainNFT/My_NFT.sol\":30098:30114  _owners[tokenId] */\n      dup5\n      swap4\n        /* \"MY MainNFT/My_NFT.sol\":30137:30164  Transfer(from, to, tokenId) */\n      swap2\n      dup8\n      and\n      swap2\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap2\n      log4\n        /* \"MY MainNFT/My_NFT.sol\":29628:30172  function _transfer(address from, address to, uint256 tokenId) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"MY MainNFT/My_NFT.sol\":25828:26100  function _safeTransfer(address from, address to, uint256 tokenId, bytes memory _data) internal virtual {... */\n    tag_147:\n        /* \"MY MainNFT/My_NFT.sol\":25942:25970  _transfer(from, to, tokenId) */\n      tag_193\n        /* \"MY MainNFT/My_NFT.sol\":25952:25956  from */\n      dup5\n        /* \"MY MainNFT/My_NFT.sol\":25958:25960  to */\n      dup5\n        /* \"MY MainNFT/My_NFT.sol\":25962:25969  tokenId */\n      dup5\n        /* \"MY MainNFT/My_NFT.sol\":25942:25951  _transfer */\n      tag_116\n        /* \"MY MainNFT/My_NFT.sol\":25942:25970  _transfer(from, to, tokenId) */\n      jump\t// in\n    tag_193:\n        /* \"MY MainNFT/My_NFT.sol\":25989:26037  _checkOnERC721Received(from, to, tokenId, _data) */\n      tag_194\n        /* \"MY MainNFT/My_NFT.sol\":26012:26016  from */\n      dup5\n        /* \"MY MainNFT/My_NFT.sol\":26018:26020  to */\n      dup5\n        /* \"MY MainNFT/My_NFT.sol\":26022:26029  tokenId */\n      dup5\n        /* \"MY MainNFT/My_NFT.sol\":26031:26036  _data */\n      dup5\n        /* \"MY MainNFT/My_NFT.sol\":25989:26011  _checkOnERC721Received */\n      tag_195\n        /* \"MY MainNFT/My_NFT.sol\":25989:26037  _checkOnERC721Received(from, to, tokenId, _data) */\n      jump\t// in\n    tag_194:\n        /* \"MY MainNFT/My_NFT.sol\":25981:26092  require(_checkOnERC721Received(from, to, tokenId, _data), \"ERC721: transfer to non ERC721Receiver implementer\") */\n      tag_146\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_91\n      swap1\n      tag_198\n      jump\t// in\n        /* \"MY MainNFT/My_NFT.sol\":16716:17439  function toString(uint256 value) internal pure returns (string memory) {... */\n    tag_158:\n        /* \"MY MainNFT/My_NFT.sol\":16772:16785  string memory */\n      0x60\n        /* \"MY MainNFT/My_NFT.sol\":16993:16998  value */\n      dup2\n        /* \"MY MainNFT/My_NFT.sol\":17002:17003  0 */\n      0x00\n        /* \"MY MainNFT/My_NFT.sol\":16993:17003  value == 0 */\n      sub\n        /* \"MY MainNFT/My_NFT.sol\":16989:17042  if (value == 0) {... */\n      tag_201\n      jumpi\n      pop\n      pop\n        /* \"MY MainNFT/My_NFT.sol\":17020:17030  return \"0\" */\n      0x40\n      dup1\n      mload\n      dup1\n      dup3\n      add\n      swap1\n      swap2\n      mstore\n      0x01\n      dup2\n      mstore\n      shl(0xfc, 0x03)\n      0x20\n      dup3\n      add\n      mstore\n      swap1\n        /* \"MY MainNFT/My_NFT.sol\":16716:17439  function toString(uint256 value) internal pure returns (string memory) {... */\n      jump\t// out\n        /* \"MY MainNFT/My_NFT.sol\":16989:17042  if (value == 0) {... */\n    tag_201:\n        /* \"MY MainNFT/My_NFT.sol\":17067:17072  value */\n      dup2\n        /* \"MY MainNFT/My_NFT.sol\":17052:17064  uint256 temp */\n      0x00\n        /* \"MY MainNFT/My_NFT.sol\":17108:17186  while (temp != 0) {... */\n    tag_202:\n        /* \"MY MainNFT/My_NFT.sol\":17115:17124  temp != 0 */\n      dup2\n      iszero\n        /* \"MY MainNFT/My_NFT.sol\":17108:17186  while (temp != 0) {... */\n      tag_203\n      jumpi\n        /* \"MY MainNFT/My_NFT.sol\":17141:17149  digits++ */\n      dup1\n      tag_204\n      dup2\n      tag_205\n      jump\t// in\n    tag_204:\n      swap2\n      pop\n        /* \"MY MainNFT/My_NFT.sol\":17164:17174  temp /= 10 */\n      tag_206\n      swap1\n      pop\n        /* \"MY MainNFT/My_NFT.sol\":17172:17174  10 */\n      0x0a\n        /* \"MY MainNFT/My_NFT.sol\":17164:17174  temp /= 10 */\n      dup4\n      tag_207\n      jump\t// in\n    tag_206:\n      swap2\n      pop\n        /* \"MY MainNFT/My_NFT.sol\":17108:17186  while (temp != 0) {... */\n      jump(tag_202)\n    tag_203:\n        /* \"MY MainNFT/My_NFT.sol\":17196:17215  bytes memory buffer */\n      0x00\n        /* \"MY MainNFT/My_NFT.sol\":17228:17234  digits */\n      dup2\n        /* \"MY MainNFT/My_NFT.sol\":17218:17235  new bytes(digits) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_209\n      jumpi\n      tag_209\n      tag_210\n      jump\t// in\n    tag_209:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_211\n      jumpi\n      0x20\n      dup3\n      add\n      dup2\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_211:\n      pop\n        /* \"MY MainNFT/My_NFT.sol\":17196:17235  bytes memory buffer = new bytes(digits) */\n      swap1\n      pop\n        /* \"MY MainNFT/My_NFT.sol\":17246:17400  while (value != 0) {... */\n    tag_212:\n        /* \"MY MainNFT/My_NFT.sol\":17253:17263  value != 0 */\n      dup5\n      iszero\n        /* \"MY MainNFT/My_NFT.sol\":17246:17400  while (value != 0) {... */\n      tag_176\n      jumpi\n        /* \"MY MainNFT/My_NFT.sol\":17280:17291  digits -= 1 */\n      tag_214\n        /* \"MY MainNFT/My_NFT.sol\":17290:17291  1 */\n      0x01\n        /* \"MY MainNFT/My_NFT.sol\":17280:17291  digits -= 1 */\n      dup4\n      tag_189\n      jump\t// in\n    tag_214:\n      swap2\n      pop\n        /* \"MY MainNFT/My_NFT.sol\":17349:17359  value % 10 */\n      tag_215\n        /* \"MY MainNFT/My_NFT.sol\":17357:17359  10 */\n      0x0a\n        /* \"MY MainNFT/My_NFT.sol\":17349:17354  value */\n      dup7\n        /* \"MY MainNFT/My_NFT.sol\":17349:17359  value % 10 */\n      tag_216\n      jump\t// in\n    tag_215:\n        /* \"MY MainNFT/My_NFT.sol\":17336:17360  48 + uint256(value % 10) */\n      tag_217\n      swap1\n        /* \"MY MainNFT/My_NFT.sol\":17336:17338  48 */\n      0x30\n        /* \"MY MainNFT/My_NFT.sol\":17336:17360  48 + uint256(value % 10) */\n      tag_191\n      jump\t// in\n    tag_217:\n        /* \"MY MainNFT/My_NFT.sol\":17323:17362  bytes1(uint8(48 + uint256(value % 10))) */\n      0xf8\n      shl\n        /* \"MY MainNFT/My_NFT.sol\":17306:17312  buffer */\n      dup2\n        /* \"MY MainNFT/My_NFT.sol\":17313:17319  digits */\n      dup4\n        /* \"MY MainNFT/My_NFT.sol\":17306:17320  buffer[digits] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_219\n      jumpi\n      tag_219\n      tag_220\n      jump\t// in\n    tag_219:\n      0x20\n      add\n      add\n        /* \"MY MainNFT/My_NFT.sol\":17306:17362  buffer[digits] = bytes1(uint8(48 + uint256(value % 10))) */\n      swap1\n      not(sub(shl(0xf8, 0x01), 0x01))\n      and\n      swap1\n      dup2\n      0x00\n      byte\n      swap1\n      mstore8\n      pop\n        /* \"MY MainNFT/My_NFT.sol\":17377:17388  value /= 10 */\n      tag_221\n        /* \"MY MainNFT/My_NFT.sol\":17386:17388  10 */\n      0x0a\n        /* \"MY MainNFT/My_NFT.sol\":17377:17388  value /= 10 */\n      dup7\n      tag_207\n      jump\t// in\n    tag_221:\n      swap5\n      pop\n        /* \"MY MainNFT/My_NFT.sol\":17246:17400  while (value != 0) {... */\n      jump(tag_212)\n        /* \"MY MainNFT/My_NFT.sol\":31029:31872  function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory _data)... */\n    tag_195:\n        /* \"MY MainNFT/My_NFT.sol\":31150:31154  bool */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"MY MainNFT/My_NFT.sol\":31176:31189  to.isContract */\n      dup5\n      and\n        /* \"MY MainNFT/My_NFT.sol\":8533:8553  extcodesize(account) */\n      extcodesize\n        /* \"MY MainNFT/My_NFT.sol\":8572:8580  size > 0 */\n      iszero\n        /* \"MY MainNFT/My_NFT.sol\":31172:31865  if (to.isContract()) {... */\n      tag_226\n      jumpi\n        /* \"MY MainNFT/My_NFT.sol\":31212:31284  IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, _data) */\n      mload(0x40)\n      shl(0xe1, 0x0a85bd01)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"MY MainNFT/My_NFT.sol\":31212:31248  IERC721Receiver(to).onERC721Received */\n      dup6\n      and\n      swap1\n      0x150b7a02\n      swap1\n        /* \"MY MainNFT/My_NFT.sol\":31212:31284  IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, _data) */\n      tag_228\n      swap1\n        /* \"MY MainNFT/My_NFT.sol\":16135:16145  msg.sender */\n      caller\n      swap1\n        /* \"MY MainNFT/My_NFT.sol\":31263:31267  from */\n      dup10\n      swap1\n        /* \"MY MainNFT/My_NFT.sol\":31269:31276  tokenId */\n      dup9\n      swap1\n        /* \"MY MainNFT/My_NFT.sol\":31278:31283  _data */\n      dup9\n      swap1\n        /* \"MY MainNFT/My_NFT.sol\":31212:31284  IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, _data) */\n      0x04\n      add\n      tag_229\n      jump\t// in\n    tag_228:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_230\n      jumpi\n      pop\n      0x40\n      dup1\n      mload\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      tag_231\n      swap2\n      dup2\n      add\n      swap1\n      tag_232\n      jump\t// in\n    tag_231:\n      0x01\n    tag_230:\n        /* \"MY MainNFT/My_NFT.sol\":31208:31810  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, _data) returns (bytes4 retval) {... */\n      tag_233\n      jumpi\n      returndatasize\n      dup1\n      dup1\n      iszero\n      tag_238\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_237)\n    tag_238:\n      0x60\n      swap2\n      pop\n    tag_237:\n      pop\n        /* \"MY MainNFT/My_NFT.sol\":31458:31464  reason */\n      dup1\n        /* \"MY MainNFT/My_NFT.sol\":31458:31471  reason.length */\n      mload\n        /* \"MY MainNFT/My_NFT.sol\":31475:31476  0 */\n      0x00\n        /* \"MY MainNFT/My_NFT.sol\":31458:31476  reason.length == 0 */\n      sub\n        /* \"MY MainNFT/My_NFT.sol\":31454:31795  if (reason.length == 0) {... */\n      tag_239\n      jumpi\n        /* \"MY MainNFT/My_NFT.sol\":31501:31561  revert(\"ERC721: transfer to non ERC721Receiver implementer\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_91\n      swap1\n      tag_198\n      jump\t// in\n        /* \"MY MainNFT/My_NFT.sol\":31454:31795  if (reason.length == 0) {... */\n    tag_239:\n        /* \"MY MainNFT/My_NFT.sol\":31745:31751  reason */\n      dup1\n        /* \"MY MainNFT/My_NFT.sol\":31739:31752  mload(reason) */\n      mload\n        /* \"MY MainNFT/My_NFT.sol\":31730:31736  reason */\n      dup2\n        /* \"MY MainNFT/My_NFT.sol\":31726:31728  32 */\n      0x20\n        /* \"MY MainNFT/My_NFT.sol\":31722:31737  add(32, reason) */\n      add\n        /* \"MY MainNFT/My_NFT.sol\":31715:31753  revert(add(32, reason), mload(reason)) */\n      revert\n        /* \"MY MainNFT/My_NFT.sol\":31208:31810  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, _data) returns (bytes4 retval) {... */\n    tag_233:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"MY MainNFT/My_NFT.sol\":31335:31390  retval == IERC721Receiver(to).onERC721Received.selector */\n      and\n      shl(0xe1, 0x0a85bd01)\n      eq\n      swap1\n      pop\n        /* \"MY MainNFT/My_NFT.sol\":31328:31390  return retval == IERC721Receiver(to).onERC721Received.selector */\n      jump(tag_176)\n        /* \"MY MainNFT/My_NFT.sol\":31172:31865  if (to.isContract()) {... */\n    tag_226:\n      pop\n        /* \"MY MainNFT/My_NFT.sol\":31849:31853  true */\n      0x01\n        /* \"MY MainNFT/My_NFT.sol\":31029:31872  function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory _data)... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:145   */\n    tag_245:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"#utility.yul\":88:120   */\n      dup2\n      and\n        /* \"#utility.yul\":78:121   */\n      dup2\n      eq\n        /* \"#utility.yul\":68:139   */\n      tag_253\n      jumpi\n        /* \"#utility.yul\":135:136   */\n      0x00\n        /* \"#utility.yul\":132:133   */\n      dup1\n        /* \"#utility.yul\":125:137   */\n      revert\n        /* \"#utility.yul\":68:139   */\n    tag_253:\n        /* \"#utility.yul\":14:145   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":150:395   */\n    tag_20:\n        /* \"#utility.yul\":208:214   */\n      0x00\n        /* \"#utility.yul\":261:263   */\n      0x20\n        /* \"#utility.yul\":249:258   */\n      dup3\n        /* \"#utility.yul\":240:247   */\n      dup5\n        /* \"#utility.yul\":236:259   */\n      sub\n        /* \"#utility.yul\":232:264   */\n      slt\n        /* \"#utility.yul\":229:281   */\n      iszero\n      tag_255\n      jumpi\n        /* \"#utility.yul\":277:278   */\n      0x00\n        /* \"#utility.yul\":274:275   */\n      dup1\n        /* \"#utility.yul\":267:279   */\n      revert\n        /* \"#utility.yul\":229:281   */\n    tag_255:\n        /* \"#utility.yul\":316:325   */\n      dup2\n        /* \"#utility.yul\":303:326   */\n      calldataload\n        /* \"#utility.yul\":335:365   */\n      tag_156\n        /* \"#utility.yul\":359:364   */\n      dup2\n        /* \"#utility.yul\":335:365   */\n      tag_245\n      jump\t// in\n        /* \"#utility.yul\":592:842   */\n    tag_246:\n        /* \"#utility.yul\":677:678   */\n      0x00\n        /* \"#utility.yul\":687:800   */\n    tag_259:\n        /* \"#utility.yul\":701:707   */\n      dup4\n        /* \"#utility.yul\":698:699   */\n      dup2\n        /* \"#utility.yul\":695:708   */\n      lt\n        /* \"#utility.yul\":687:800   */\n      iszero\n      tag_261\n      jumpi\n        /* \"#utility.yul\":777:788   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":771:789   */\n      mload\n        /* \"#utility.yul\":758:769   */\n      dup4\n      dup3\n      add\n        /* \"#utility.yul\":751:790   */\n      mstore\n        /* \"#utility.yul\":723:725   */\n      0x20\n        /* \"#utility.yul\":716:726   */\n      add\n        /* \"#utility.yul\":687:800   */\n      jump(tag_259)\n    tag_261:\n      pop\n      pop\n        /* \"#utility.yul\":834:835   */\n      0x00\n        /* \"#utility.yul\":816:832   */\n      swap2\n      add\n        /* \"#utility.yul\":809:836   */\n      mstore\n        /* \"#utility.yul\":592:842   */\n      jump\t// out\n        /* \"#utility.yul\":847:1118   */\n    tag_247:\n        /* \"#utility.yul\":889:892   */\n      0x00\n        /* \"#utility.yul\":927:932   */\n      dup2\n        /* \"#utility.yul\":921:933   */\n      mload\n        /* \"#utility.yul\":954:960   */\n      dup1\n        /* \"#utility.yul\":949:952   */\n      dup5\n        /* \"#utility.yul\":942:961   */\n      mstore\n        /* \"#utility.yul\":970:1046   */\n      tag_263\n        /* \"#utility.yul\":1039:1045   */\n      dup2\n        /* \"#utility.yul\":1032:1036   */\n      0x20\n        /* \"#utility.yul\":1027:1030   */\n      dup7\n        /* \"#utility.yul\":1023:1037   */\n      add\n        /* \"#utility.yul\":1016:1020   */\n      0x20\n        /* \"#utility.yul\":1009:1014   */\n      dup7\n        /* \"#utility.yul\":1005:1021   */\n      add\n        /* \"#utility.yul\":970:1046   */\n      tag_246\n      jump\t// in\n    tag_263:\n        /* \"#utility.yul\":1100:1102   */\n      0x1f\n        /* \"#utility.yul\":1079:1094   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":1075:1104   */\n      and\n        /* \"#utility.yul\":1066:1105   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":1107:1111   */\n      0x20\n        /* \"#utility.yul\":1062:1112   */\n      add\n      swap3\n        /* \"#utility.yul\":847:1118   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1123:1343   */\n    tag_27:\n        /* \"#utility.yul\":1272:1274   */\n      0x20\n        /* \"#utility.yul\":1261:1270   */\n      dup2\n        /* \"#utility.yul\":1254:1275   */\n      mstore\n        /* \"#utility.yul\":1235:1239   */\n      0x00\n        /* \"#utility.yul\":1292:1337   */\n      tag_156\n        /* \"#utility.yul\":1333:1335   */\n      0x20\n        /* \"#utility.yul\":1322:1331   */\n      dup4\n        /* \"#utility.yul\":1318:1336   */\n      add\n        /* \"#utility.yul\":1310:1316   */\n      dup5\n        /* \"#utility.yul\":1292:1337   */\n      tag_247\n      jump\t// in\n        /* \"#utility.yul\":1348:1528   */\n    tag_30:\n        /* \"#utility.yul\":1407:1413   */\n      0x00\n        /* \"#utility.yul\":1460:1462   */\n      0x20\n        /* \"#utility.yul\":1448:1457   */\n      dup3\n        /* \"#utility.yul\":1439:1446   */\n      dup5\n        /* \"#utility.yul\":1435:1458   */\n      sub\n        /* \"#utility.yul\":1431:1463   */\n      slt\n        /* \"#utility.yul\":1428:1480   */\n      iszero\n      tag_267\n      jumpi\n        /* \"#utility.yul\":1476:1477   */\n      0x00\n        /* \"#utility.yul\":1473:1474   */\n      dup1\n        /* \"#utility.yul\":1466:1478   */\n      revert\n        /* \"#utility.yul\":1428:1480   */\n    tag_267:\n      pop\n        /* \"#utility.yul\":1499:1522   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":1348:1528   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1741:1914   */\n    tag_248:\n        /* \"#utility.yul\":1809:1829   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1858:1889   */\n      dup2\n      and\n        /* \"#utility.yul\":1848:1890   */\n      dup2\n      eq\n        /* \"#utility.yul\":1838:1908   */\n      tag_270\n      jumpi\n        /* \"#utility.yul\":1904:1905   */\n      0x00\n        /* \"#utility.yul\":1901:1902   */\n      dup1\n        /* \"#utility.yul\":1894:1906   */\n      revert\n        /* \"#utility.yul\":1838:1908   */\n    tag_270:\n        /* \"#utility.yul\":1741:1914   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1919:2173   */\n    tag_36:\n        /* \"#utility.yul\":1987:1993   */\n      0x00\n        /* \"#utility.yul\":1995:2001   */\n      dup1\n        /* \"#utility.yul\":2048:2050   */\n      0x40\n        /* \"#utility.yul\":2036:2045   */\n      dup4\n        /* \"#utility.yul\":2027:2034   */\n      dup6\n        /* \"#utility.yul\":2023:2046   */\n      sub\n        /* \"#utility.yul\":2019:2051   */\n      slt\n        /* \"#utility.yul\":2016:2068   */\n      iszero\n      tag_272\n      jumpi\n        /* \"#utility.yul\":2064:2065   */\n      0x00\n        /* \"#utility.yul\":2061:2062   */\n      dup1\n        /* \"#utility.yul\":2054:2066   */\n      revert\n        /* \"#utility.yul\":2016:2068   */\n    tag_272:\n        /* \"#utility.yul\":2087:2116   */\n      tag_273\n        /* \"#utility.yul\":2106:2115   */\n      dup4\n        /* \"#utility.yul\":2087:2116   */\n      tag_248\n      jump\t// in\n    tag_273:\n        /* \"#utility.yul\":2077:2116   */\n      swap5\n        /* \"#utility.yul\":2163:2165   */\n      0x20\n        /* \"#utility.yul\":2148:2166   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":2135:2167   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1919:2173   */\n      jump\t// out\n        /* \"#utility.yul\":2178:2506   */\n    tag_40:\n        /* \"#utility.yul\":2255:2261   */\n      0x00\n        /* \"#utility.yul\":2263:2269   */\n      dup1\n        /* \"#utility.yul\":2271:2277   */\n      0x00\n        /* \"#utility.yul\":2324:2326   */\n      0x60\n        /* \"#utility.yul\":2312:2321   */\n      dup5\n        /* \"#utility.yul\":2303:2310   */\n      dup7\n        /* \"#utility.yul\":2299:2322   */\n      sub\n        /* \"#utility.yul\":2295:2327   */\n      slt\n        /* \"#utility.yul\":2292:2344   */\n      iszero\n      tag_275\n      jumpi\n        /* \"#utility.yul\":2340:2341   */\n      0x00\n        /* \"#utility.yul\":2337:2338   */\n      dup1\n        /* \"#utility.yul\":2330:2342   */\n      revert\n        /* \"#utility.yul\":2292:2344   */\n    tag_275:\n        /* \"#utility.yul\":2363:2392   */\n      tag_276\n        /* \"#utility.yul\":2382:2391   */\n      dup5\n        /* \"#utility.yul\":2363:2392   */\n      tag_248\n      jump\t// in\n    tag_276:\n        /* \"#utility.yul\":2353:2392   */\n      swap3\n      pop\n        /* \"#utility.yul\":2411:2449   */\n      tag_277\n        /* \"#utility.yul\":2445:2447   */\n      0x20\n        /* \"#utility.yul\":2434:2443   */\n      dup6\n        /* \"#utility.yul\":2430:2448   */\n      add\n        /* \"#utility.yul\":2411:2449   */\n      tag_248\n      jump\t// in\n    tag_277:\n        /* \"#utility.yul\":2401:2449   */\n      swap2\n      pop\n        /* \"#utility.yul\":2496:2498   */\n      0x40\n        /* \"#utility.yul\":2485:2494   */\n      dup5\n        /* \"#utility.yul\":2481:2499   */\n      add\n        /* \"#utility.yul\":2468:2500   */\n      calldataload\n        /* \"#utility.yul\":2458:2500   */\n      swap1\n      pop\n        /* \"#utility.yul\":2178:2506   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":2511:2697   */\n    tag_51:\n        /* \"#utility.yul\":2570:2576   */\n      0x00\n        /* \"#utility.yul\":2623:2625   */\n      0x20\n        /* \"#utility.yul\":2611:2620   */\n      dup3\n        /* \"#utility.yul\":2602:2609   */\n      dup5\n        /* \"#utility.yul\":2598:2621   */\n      sub\n        /* \"#utility.yul\":2594:2626   */\n      slt\n        /* \"#utility.yul\":2591:2643   */\n      iszero\n      tag_279\n      jumpi\n        /* \"#utility.yul\":2639:2640   */\n      0x00\n        /* \"#utility.yul\":2636:2637   */\n      dup1\n        /* \"#utility.yul\":2629:2641   */\n      revert\n        /* \"#utility.yul\":2591:2643   */\n    tag_279:\n        /* \"#utility.yul\":2662:2691   */\n      tag_156\n        /* \"#utility.yul\":2681:2690   */\n      dup3\n        /* \"#utility.yul\":2662:2691   */\n      tag_248\n      jump\t// in\n        /* \"#utility.yul\":2884:3231   */\n    tag_60:\n        /* \"#utility.yul\":2949:2955   */\n      0x00\n        /* \"#utility.yul\":2957:2963   */\n      dup1\n        /* \"#utility.yul\":3010:3012   */\n      0x40\n        /* \"#utility.yul\":2998:3007   */\n      dup4\n        /* \"#utility.yul\":2989:2996   */\n      dup6\n        /* \"#utility.yul\":2985:3008   */\n      sub\n        /* \"#utility.yul\":2981:3013   */\n      slt\n        /* \"#utility.yul\":2978:3030   */\n      iszero\n      tag_283\n      jumpi\n        /* \"#utility.yul\":3026:3027   */\n      0x00\n        /* \"#utility.yul\":3023:3024   */\n      dup1\n        /* \"#utility.yul\":3016:3028   */\n      revert\n        /* \"#utility.yul\":2978:3030   */\n    tag_283:\n        /* \"#utility.yul\":3049:3078   */\n      tag_284\n        /* \"#utility.yul\":3068:3077   */\n      dup4\n        /* \"#utility.yul\":3049:3078   */\n      tag_248\n      jump\t// in\n    tag_284:\n        /* \"#utility.yul\":3039:3078   */\n      swap2\n      pop\n        /* \"#utility.yul\":3128:3130   */\n      0x20\n        /* \"#utility.yul\":3117:3126   */\n      dup4\n        /* \"#utility.yul\":3113:3131   */\n      add\n        /* \"#utility.yul\":3100:3132   */\n      calldataload\n        /* \"#utility.yul\":3175:3180   */\n      dup1\n        /* \"#utility.yul\":3168:3181   */\n      iszero\n        /* \"#utility.yul\":3161:3182   */\n      iszero\n        /* \"#utility.yul\":3154:3159   */\n      dup2\n        /* \"#utility.yul\":3151:3183   */\n      eq\n        /* \"#utility.yul\":3141:3201   */\n      tag_285\n      jumpi\n        /* \"#utility.yul\":3197:3198   */\n      0x00\n        /* \"#utility.yul\":3194:3195   */\n      dup1\n        /* \"#utility.yul\":3187:3199   */\n      revert\n        /* \"#utility.yul\":3141:3201   */\n    tag_285:\n        /* \"#utility.yul\":3220:3225   */\n      dup1\n        /* \"#utility.yul\":3210:3225   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":2884:3231   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3236:3363   */\n    tag_210:\n        /* \"#utility.yul\":3297:3307   */\n      0x4e487b71\n        /* \"#utility.yul\":3292:3295   */\n      0xe0\n        /* \"#utility.yul\":3288:3308   */\n      shl\n        /* \"#utility.yul\":3285:3286   */\n      0x00\n        /* \"#utility.yul\":3278:3309   */\n      mstore\n        /* \"#utility.yul\":3328:3332   */\n      0x41\n        /* \"#utility.yul\":3325:3326   */\n      0x04\n        /* \"#utility.yul\":3318:3333   */\n      mstore\n        /* \"#utility.yul\":3352:3356   */\n      0x24\n        /* \"#utility.yul\":3349:3350   */\n      0x00\n        /* \"#utility.yul\":3342:3357   */\n      revert\n        /* \"#utility.yul\":3368:4506   */\n    tag_64:\n        /* \"#utility.yul\":3463:3469   */\n      0x00\n        /* \"#utility.yul\":3471:3477   */\n      dup1\n        /* \"#utility.yul\":3479:3485   */\n      0x00\n        /* \"#utility.yul\":3487:3493   */\n      dup1\n        /* \"#utility.yul\":3540:3543   */\n      0x80\n        /* \"#utility.yul\":3528:3537   */\n      dup6\n        /* \"#utility.yul\":3519:3526   */\n      dup8\n        /* \"#utility.yul\":3515:3538   */\n      sub\n        /* \"#utility.yul\":3511:3544   */\n      slt\n        /* \"#utility.yul\":3508:3561   */\n      iszero\n      tag_288\n      jumpi\n        /* \"#utility.yul\":3557:3558   */\n      0x00\n        /* \"#utility.yul\":3554:3555   */\n      dup1\n        /* \"#utility.yul\":3547:3559   */\n      revert\n        /* \"#utility.yul\":3508:3561   */\n    tag_288:\n        /* \"#utility.yul\":3580:3609   */\n      tag_289\n        /* \"#utility.yul\":3599:3608   */\n      dup6\n        /* \"#utility.yul\":3580:3609   */\n      tag_248\n      jump\t// in\n    tag_289:\n        /* \"#utility.yul\":3570:3609   */\n      swap4\n      pop\n        /* \"#utility.yul\":3628:3666   */\n      tag_290\n        /* \"#utility.yul\":3662:3664   */\n      0x20\n        /* \"#utility.yul\":3651:3660   */\n      dup7\n        /* \"#utility.yul\":3647:3665   */\n      add\n        /* \"#utility.yul\":3628:3666   */\n      tag_248\n      jump\t// in\n    tag_290:\n        /* \"#utility.yul\":3618:3666   */\n      swap3\n      pop\n        /* \"#utility.yul\":3713:3715   */\n      0x40\n        /* \"#utility.yul\":3702:3711   */\n      dup6\n        /* \"#utility.yul\":3698:3716   */\n      add\n        /* \"#utility.yul\":3685:3717   */\n      calldataload\n        /* \"#utility.yul\":3675:3717   */\n      swap2\n      pop\n        /* \"#utility.yul\":3768:3770   */\n      0x60\n        /* \"#utility.yul\":3757:3766   */\n      dup6\n        /* \"#utility.yul\":3753:3771   */\n      add\n        /* \"#utility.yul\":3740:3772   */\n      calldataload\n        /* \"#utility.yul\":3791:3809   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3832:3834   */\n      dup1\n        /* \"#utility.yul\":3824:3830   */\n      dup3\n        /* \"#utility.yul\":3821:3835   */\n      gt\n        /* \"#utility.yul\":3818:3852   */\n      iszero\n      tag_291\n      jumpi\n        /* \"#utility.yul\":3848:3849   */\n      0x00\n        /* \"#utility.yul\":3845:3846   */\n      dup1\n        /* \"#utility.yul\":3838:3850   */\n      revert\n        /* \"#utility.yul\":3818:3852   */\n    tag_291:\n        /* \"#utility.yul\":3886:3892   */\n      dup2\n        /* \"#utility.yul\":3875:3884   */\n      dup8\n        /* \"#utility.yul\":3871:3893   */\n      add\n        /* \"#utility.yul\":3861:3893   */\n      swap2\n      pop\n        /* \"#utility.yul\":3931:3938   */\n      dup8\n        /* \"#utility.yul\":3924:3928   */\n      0x1f\n        /* \"#utility.yul\":3920:3922   */\n      dup4\n        /* \"#utility.yul\":3916:3929   */\n      add\n        /* \"#utility.yul\":3912:3939   */\n      slt\n        /* \"#utility.yul\":3902:3957   */\n      tag_292\n      jumpi\n        /* \"#utility.yul\":3953:3954   */\n      0x00\n        /* \"#utility.yul\":3950:3951   */\n      dup1\n        /* \"#utility.yul\":3943:3955   */\n      revert\n        /* \"#utility.yul\":3902:3957   */\n    tag_292:\n        /* \"#utility.yul\":3989:3991   */\n      dup2\n        /* \"#utility.yul\":3976:3992   */\n      calldataload\n        /* \"#utility.yul\":4011:4013   */\n      dup2\n        /* \"#utility.yul\":4007:4009   */\n      dup2\n        /* \"#utility.yul\":4004:4014   */\n      gt\n        /* \"#utility.yul\":4001:4037   */\n      iszero\n      tag_294\n      jumpi\n        /* \"#utility.yul\":4017:4035   */\n      tag_294\n      tag_210\n      jump\t// in\n    tag_294:\n        /* \"#utility.yul\":4092:4094   */\n      0x40\n        /* \"#utility.yul\":4086:4095   */\n      mload\n        /* \"#utility.yul\":4060:4062   */\n      0x1f\n        /* \"#utility.yul\":4146:4159   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":4142:4164   */\n      swap1\n      dup2\n      and\n        /* \"#utility.yul\":4166:4168   */\n      0x3f\n        /* \"#utility.yul\":4138:4169   */\n      add\n        /* \"#utility.yul\":4134:4174   */\n      and\n        /* \"#utility.yul\":4122:4175   */\n      dup2\n      add\n      swap1\n        /* \"#utility.yul\":4190:4208   */\n      dup4\n      dup3\n      gt\n        /* \"#utility.yul\":4210:4232   */\n      dup2\n      dup4\n      lt\n        /* \"#utility.yul\":4187:4233   */\n      or\n        /* \"#utility.yul\":4184:4256   */\n      iszero\n      tag_296\n      jumpi\n        /* \"#utility.yul\":4236:4254   */\n      tag_296\n      tag_210\n      jump\t// in\n    tag_296:\n        /* \"#utility.yul\":4276:4286   */\n      dup2\n        /* \"#utility.yul\":4272:4274   */\n      0x40\n        /* \"#utility.yul\":4265:4287   */\n      mstore\n        /* \"#utility.yul\":4311:4313   */\n      dup3\n        /* \"#utility.yul\":4303:4309   */\n      dup2\n        /* \"#utility.yul\":4296:4314   */\n      mstore\n        /* \"#utility.yul\":4351:4358   */\n      dup11\n        /* \"#utility.yul\":4346:4348   */\n      0x20\n        /* \"#utility.yul\":4341:4343   */\n      dup5\n        /* \"#utility.yul\":4337:4339   */\n      dup8\n        /* \"#utility.yul\":4333:4344   */\n      add\n        /* \"#utility.yul\":4329:4349   */\n      add\n        /* \"#utility.yul\":4326:4359   */\n      gt\n        /* \"#utility.yul\":4323:4376   */\n      iszero\n      tag_297\n      jumpi\n        /* \"#utility.yul\":4372:4373   */\n      0x00\n        /* \"#utility.yul\":4369:4370   */\n      dup1\n        /* \"#utility.yul\":4362:4374   */\n      revert\n        /* \"#utility.yul\":4323:4376   */\n    tag_297:\n        /* \"#utility.yul\":4428:4430   */\n      dup3\n        /* \"#utility.yul\":4423:4425   */\n      0x20\n        /* \"#utility.yul\":4419:4421   */\n      dup7\n        /* \"#utility.yul\":4415:4426   */\n      add\n        /* \"#utility.yul\":4410:4412   */\n      0x20\n        /* \"#utility.yul\":4402:4408   */\n      dup4\n        /* \"#utility.yul\":4398:4413   */\n      add\n        /* \"#utility.yul\":4385:4431   */\n      calldatacopy\n        /* \"#utility.yul\":4473:4474   */\n      0x00\n        /* \"#utility.yul\":4468:4470   */\n      0x20\n        /* \"#utility.yul\":4463:4465   */\n      dup5\n        /* \"#utility.yul\":4455:4461   */\n      dup4\n        /* \"#utility.yul\":4451:4466   */\n      add\n        /* \"#utility.yul\":4447:4471   */\n      add\n        /* \"#utility.yul\":4440:4475   */\n      mstore\n        /* \"#utility.yul\":4494:4500   */\n      dup1\n        /* \"#utility.yul\":4484:4500   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":3368:4506   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4511:4771   */\n    tag_72:\n        /* \"#utility.yul\":4579:4585   */\n      0x00\n        /* \"#utility.yul\":4587:4593   */\n      dup1\n        /* \"#utility.yul\":4640:4642   */\n      0x40\n        /* \"#utility.yul\":4628:4637   */\n      dup4\n        /* \"#utility.yul\":4619:4626   */\n      dup6\n        /* \"#utility.yul\":4615:4638   */\n      sub\n        /* \"#utility.yul\":4611:4643   */\n      slt\n        /* \"#utility.yul\":4608:4660   */\n      iszero\n      tag_299\n      jumpi\n        /* \"#utility.yul\":4656:4657   */\n      0x00\n        /* \"#utility.yul\":4653:4654   */\n      dup1\n        /* \"#utility.yul\":4646:4658   */\n      revert\n        /* \"#utility.yul\":4608:4660   */\n    tag_299:\n        /* \"#utility.yul\":4679:4708   */\n      tag_300\n        /* \"#utility.yul\":4698:4707   */\n      dup4\n        /* \"#utility.yul\":4679:4708   */\n      tag_248\n      jump\t// in\n    tag_300:\n        /* \"#utility.yul\":4669:4708   */\n      swap2\n      pop\n        /* \"#utility.yul\":4727:4765   */\n      tag_301\n        /* \"#utility.yul\":4761:4763   */\n      0x20\n        /* \"#utility.yul\":4750:4759   */\n      dup5\n        /* \"#utility.yul\":4746:4764   */\n      add\n        /* \"#utility.yul\":4727:4765   */\n      tag_248\n      jump\t// in\n    tag_301:\n        /* \"#utility.yul\":4717:4765   */\n      swap1\n      pop\n        /* \"#utility.yul\":4511:4771   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4776:5156   */\n    tag_82:\n        /* \"#utility.yul\":4855:4856   */\n      0x01\n        /* \"#utility.yul\":4851:4863   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":4898:4910   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":4919:4980   */\n      tag_303\n      jumpi\n        /* \"#utility.yul\":4973:4977   */\n      0x7f\n        /* \"#utility.yul\":4965:4971   */\n      dup3\n        /* \"#utility.yul\":4961:4978   */\n      and\n        /* \"#utility.yul\":4951:4978   */\n      swap2\n      pop\n        /* \"#utility.yul\":4919:4980   */\n    tag_303:\n        /* \"#utility.yul\":5026:5028   */\n      0x20\n        /* \"#utility.yul\":5018:5024   */\n      dup3\n        /* \"#utility.yul\":5015:5029   */\n      lt\n        /* \"#utility.yul\":4995:5013   */\n      dup2\n        /* \"#utility.yul\":4992:5030   */\n      sub\n        /* \"#utility.yul\":4989:5150   */\n      tag_304\n      jumpi\n        /* \"#utility.yul\":5072:5082   */\n      0x4e487b71\n        /* \"#utility.yul\":5067:5070   */\n      0xe0\n        /* \"#utility.yul\":5063:5083   */\n      shl\n        /* \"#utility.yul\":5060:5061   */\n      0x00\n        /* \"#utility.yul\":5053:5084   */\n      mstore\n        /* \"#utility.yul\":5107:5111   */\n      0x22\n        /* \"#utility.yul\":5104:5105   */\n      0x04\n        /* \"#utility.yul\":5097:5112   */\n      mstore\n        /* \"#utility.yul\":5135:5139   */\n      0x24\n        /* \"#utility.yul\":5132:5133   */\n      0x00\n        /* \"#utility.yul\":5125:5140   */\n      revert\n        /* \"#utility.yul\":4989:5150   */\n    tag_304:\n      pop\n        /* \"#utility.yul\":4776:5156   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6401:6814   */\n    tag_114:\n        /* \"#utility.yul\":6603:6605   */\n      0x20\n        /* \"#utility.yul\":6585:6606   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":6642:6644   */\n      0x31\n        /* \"#utility.yul\":6622:6640   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":6615:6645   */\n      mstore\n        /* \"#utility.yul\":6681:6715   */\n      0x4552433732313a207472616e736665722063616c6c6572206973206e6f74206f\n        /* \"#utility.yul\":6676:6678   */\n      0x40\n        /* \"#utility.yul\":6661:6679   */\n      dup3\n      add\n        /* \"#utility.yul\":6654:6716   */\n      mstore\n      shl(0x7a, 0x1ddb995c881b9bdc88185c1c1c9bdd9959)\n        /* \"#utility.yul\":6747:6749   */\n      0x60\n        /* \"#utility.yul\":6732:6750   */\n      dup3\n      add\n        /* \"#utility.yul\":6725:6772   */\n      mstore\n        /* \"#utility.yul\":6804:6807   */\n      0x80\n        /* \"#utility.yul\":6789:6808   */\n      add\n      swap1\n        /* \"#utility.yul\":6401:6814   */\n      jump\t// out\n        /* \"#utility.yul\":8410:8906   */\n    tag_160:\n        /* \"#utility.yul\":8589:8592   */\n      0x00\n        /* \"#utility.yul\":8627:8633   */\n      dup4\n        /* \"#utility.yul\":8621:8634   */\n      mload\n        /* \"#utility.yul\":8643:8709   */\n      tag_314\n        /* \"#utility.yul\":8702:8708   */\n      dup2\n        /* \"#utility.yul\":8697:8700   */\n      dup5\n        /* \"#utility.yul\":8690:8694   */\n      0x20\n        /* \"#utility.yul\":8682:8688   */\n      dup9\n        /* \"#utility.yul\":8678:8695   */\n      add\n        /* \"#utility.yul\":8643:8709   */\n      tag_246\n      jump\t// in\n    tag_314:\n        /* \"#utility.yul\":8772:8785   */\n      dup4\n      mload\n        /* \"#utility.yul\":8731:8747   */\n      swap1\n      dup4\n      add\n      swap1\n        /* \"#utility.yul\":8794:8864   */\n      tag_315\n        /* \"#utility.yul\":8772:8785   */\n      dup2\n        /* \"#utility.yul\":8731:8747   */\n      dup4\n        /* \"#utility.yul\":8841:8845   */\n      0x20\n        /* \"#utility.yul\":8829:8846   */\n      dup9\n      add\n        /* \"#utility.yul\":8794:8864   */\n      tag_246\n      jump\t// in\n    tag_315:\n        /* \"#utility.yul\":8880:8900   */\n      add\n      swap5\n        /* \"#utility.yul\":8410:8906   */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10139:10266   */\n    tag_249:\n        /* \"#utility.yul\":10200:10210   */\n      0x4e487b71\n        /* \"#utility.yul\":10195:10198   */\n      0xe0\n        /* \"#utility.yul\":10191:10211   */\n      shl\n        /* \"#utility.yul\":10188:10189   */\n      0x00\n        /* \"#utility.yul\":10181:10212   */\n      mstore\n        /* \"#utility.yul\":10231:10235   */\n      0x11\n        /* \"#utility.yul\":10228:10229   */\n      0x04\n        /* \"#utility.yul\":10221:10236   */\n      mstore\n        /* \"#utility.yul\":10255:10259   */\n      0x24\n        /* \"#utility.yul\":10252:10253   */\n      0x00\n        /* \"#utility.yul\":10245:10260   */\n      revert\n        /* \"#utility.yul\":10271:10399   */\n    tag_189:\n        /* \"#utility.yul\":10338:10347   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":10359:10370   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":10356:10393   */\n      iszero\n      tag_78\n      jumpi\n        /* \"#utility.yul\":10373:10391   */\n      tag_78\n      tag_249\n      jump\t// in\n        /* \"#utility.yul\":10404:10529   */\n    tag_191:\n        /* \"#utility.yul\":10469:10478   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":10490:10500   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":10487:10523   */\n      iszero\n      tag_78\n      jumpi\n        /* \"#utility.yul\":10503:10521   */\n      tag_78\n      tag_249\n      jump\t// in\n        /* \"#utility.yul\":10534:10948   */\n    tag_198:\n        /* \"#utility.yul\":10736:10738   */\n      0x20\n        /* \"#utility.yul\":10718:10739   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":10775:10777   */\n      0x32\n        /* \"#utility.yul\":10755:10773   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":10748:10778   */\n      mstore\n        /* \"#utility.yul\":10814:10848   */\n      0x4552433732313a207472616e7366657220746f206e6f6e204552433732315265\n        /* \"#utility.yul\":10809:10811   */\n      0x40\n        /* \"#utility.yul\":10794:10812   */\n      dup3\n      add\n        /* \"#utility.yul\":10787:10849   */\n      mstore\n      shl(0x71, 0x31b2b4bb32b91034b6b83632b6b2b73a32b9)\n        /* \"#utility.yul\":10880:10882   */\n      0x60\n        /* \"#utility.yul\":10865:10883   */\n      dup3\n      add\n        /* \"#utility.yul\":10858:10906   */\n      mstore\n        /* \"#utility.yul\":10938:10941   */\n      0x80\n        /* \"#utility.yul\":10923:10942   */\n      add\n      swap1\n        /* \"#utility.yul\":10534:10948   */\n      jump\t// out\n        /* \"#utility.yul\":10953:11088   */\n    tag_205:\n        /* \"#utility.yul\":10992:10995   */\n      0x00\n        /* \"#utility.yul\":11013:11030   */\n      0x01\n      dup3\n      add\n        /* \"#utility.yul\":11010:11053   */\n      tag_329\n      jumpi\n        /* \"#utility.yul\":11033:11051   */\n      tag_329\n      tag_249\n      jump\t// in\n    tag_329:\n      pop\n        /* \"#utility.yul\":11080:11081   */\n      0x01\n        /* \"#utility.yul\":11069:11082   */\n      add\n      swap1\n        /* \"#utility.yul\":10953:11088   */\n      jump\t// out\n        /* \"#utility.yul\":11093:11220   */\n    tag_250:\n        /* \"#utility.yul\":11154:11164   */\n      0x4e487b71\n        /* \"#utility.yul\":11149:11152   */\n      0xe0\n        /* \"#utility.yul\":11145:11165   */\n      shl\n        /* \"#utility.yul\":11142:11143   */\n      0x00\n        /* \"#utility.yul\":11135:11166   */\n      mstore\n        /* \"#utility.yul\":11185:11189   */\n      0x12\n        /* \"#utility.yul\":11182:11183   */\n      0x04\n        /* \"#utility.yul\":11175:11190   */\n      mstore\n        /* \"#utility.yul\":11209:11213   */\n      0x24\n        /* \"#utility.yul\":11206:11207   */\n      0x00\n        /* \"#utility.yul\":11199:11214   */\n      revert\n        /* \"#utility.yul\":11225:11345   */\n    tag_207:\n        /* \"#utility.yul\":11265:11266   */\n      0x00\n        /* \"#utility.yul\":11291:11292   */\n      dup3\n        /* \"#utility.yul\":11281:11316   */\n      tag_333\n      jumpi\n        /* \"#utility.yul\":11296:11314   */\n      tag_333\n      tag_250\n      jump\t// in\n    tag_333:\n      pop\n        /* \"#utility.yul\":11330:11339   */\n      div\n      swap1\n        /* \"#utility.yul\":11225:11345   */\n      jump\t// out\n        /* \"#utility.yul\":11350:11462   */\n    tag_216:\n        /* \"#utility.yul\":11382:11383   */\n      0x00\n        /* \"#utility.yul\":11408:11409   */\n      dup3\n        /* \"#utility.yul\":11398:11433   */\n      tag_336\n      jumpi\n        /* \"#utility.yul\":11413:11431   */\n      tag_336\n      tag_250\n      jump\t// in\n    tag_336:\n      pop\n        /* \"#utility.yul\":11447:11456   */\n      mod\n      swap1\n        /* \"#utility.yul\":11350:11462   */\n      jump\t// out\n        /* \"#utility.yul\":11467:11594   */\n    tag_220:\n        /* \"#utility.yul\":11528:11538   */\n      0x4e487b71\n        /* \"#utility.yul\":11523:11526   */\n      0xe0\n        /* \"#utility.yul\":11519:11539   */\n      shl\n        /* \"#utility.yul\":11516:11517   */\n      0x00\n        /* \"#utility.yul\":11509:11540   */\n      mstore\n        /* \"#utility.yul\":11559:11563   */\n      0x32\n        /* \"#utility.yul\":11556:11557   */\n      0x04\n        /* \"#utility.yul\":11549:11564   */\n      mstore\n        /* \"#utility.yul\":11583:11587   */\n      0x24\n        /* \"#utility.yul\":11580:11581   */\n      0x00\n        /* \"#utility.yul\":11573:11588   */\n      revert\n        /* \"#utility.yul\":11599:12088   */\n    tag_229:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":11868:11883   */\n      dup6\n      dup2\n      and\n        /* \"#utility.yul\":11850:11884   */\n      dup3\n      mstore\n        /* \"#utility.yul\":11920:11935   */\n      dup5\n      and\n        /* \"#utility.yul\":11915:11917   */\n      0x20\n        /* \"#utility.yul\":11900:11918   */\n      dup3\n      add\n        /* \"#utility.yul\":11893:11936   */\n      mstore\n        /* \"#utility.yul\":11967:11969   */\n      0x40\n        /* \"#utility.yul\":11952:11970   */\n      dup2\n      add\n        /* \"#utility.yul\":11945:11979   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":12015:12018   */\n      0x80\n        /* \"#utility.yul\":12010:12012   */\n      0x60\n        /* \"#utility.yul\":11995:12013   */\n      dup3\n      add\n        /* \"#utility.yul\":11988:12019   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":11793:11797   */\n      0x00\n      swap1\n        /* \"#utility.yul\":12036:12082   */\n      tag_339\n      swap1\n        /* \"#utility.yul\":12062:12081   */\n      dup4\n      add\n        /* \"#utility.yul\":12054:12060   */\n      dup5\n        /* \"#utility.yul\":12036:12082   */\n      tag_247\n      jump\t// in\n    tag_339:\n        /* \"#utility.yul\":12028:12082   */\n      swap7\n        /* \"#utility.yul\":11599:12088   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12093:12342   */\n    tag_232:\n        /* \"#utility.yul\":12162:12168   */\n      0x00\n        /* \"#utility.yul\":12215:12217   */\n      0x20\n        /* \"#utility.yul\":12203:12212   */\n      dup3\n        /* \"#utility.yul\":12194:12201   */\n      dup5\n        /* \"#utility.yul\":12190:12213   */\n      sub\n        /* \"#utility.yul\":12186:12218   */\n      slt\n        /* \"#utility.yul\":12183:12235   */\n      iszero\n      tag_341\n      jumpi\n        /* \"#utility.yul\":12231:12232   */\n      0x00\n        /* \"#utility.yul\":12228:12229   */\n      dup1\n        /* \"#utility.yul\":12221:12233   */\n      revert\n        /* \"#utility.yul\":12183:12235   */\n    tag_341:\n        /* \"#utility.yul\":12263:12272   */\n      dup2\n        /* \"#utility.yul\":12257:12273   */\n      mload\n        /* \"#utility.yul\":12282:12312   */\n      tag_156\n        /* \"#utility.yul\":12306:12311   */\n      dup2\n        /* \"#utility.yul\":12282:12312   */\n      tag_245\n      jump\t// in\n\n    auxdata: 0xa26469706673582212208f330809fc70a4b0a8f12119ae14d6e030412ebde9bfa3ad76d8aa48f68e07a564736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_763": {
									"entryPoint": null,
									"id": 763,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_string_fromMemory": {
									"entryPoint": 112,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory": {
									"entryPoint": 287,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 453,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 536,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 393,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 90,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:4144:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "46:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "63:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "70:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "75:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "56:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "56:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "103:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "106:4:1",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "96:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "96:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "127:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "130:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "120:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "120:15:1"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "210:776:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "259:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "268:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "271:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "261:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "261:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "261:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "238:6:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "246:4:1",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "234:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "234:17:1"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "253:3:1"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "230:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "230:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "223:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "223:35:1"
															},
															"nodeType": "YulIf",
															"src": "220:55:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "284:23:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "300:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "294:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "294:13:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "288:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "316:28:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "334:2:1",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "338:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "330:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "330:10:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "342:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "326:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "326:18:1"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "320:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "367:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "369:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "369:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "369:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "359:2:1"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "363:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "356:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "356:10:1"
															},
															"nodeType": "YulIf",
															"src": "353:36:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "398:17:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "412:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "408:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "408:7:1"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "402:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "424:23:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "444:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "438:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "438:9:1"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "428:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "456:71:1",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "478:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_1",
																										"nodeType": "YulIdentifier",
																										"src": "502:2:1"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "506:4:1",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "498:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "498:13:1"
																							},
																							{
																								"name": "_3",
																								"nodeType": "YulIdentifier",
																								"src": "513:2:1"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "494:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "494:22:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "518:2:1",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "490:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "490:31:1"
																			},
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "523:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "486:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "486:40:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "474:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "474:53:1"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "460:10:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "586:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "588:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "588:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "588:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "545:10:1"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "557:2:1"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "542:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "542:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "565:10:1"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "577:6:1"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "562:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "562:22:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "539:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "539:46:1"
															},
															"nodeType": "YulIf",
															"src": "536:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "624:2:1",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "628:10:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "617:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "617:22:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "617:22:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "655:6:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "663:2:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "648:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "648:18:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "648:18:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "675:14:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "685:4:1",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "679:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "735:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "744:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "747:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "737:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "737:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "737:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "712:6:1"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "720:2:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "708:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "708:15:1"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "725:2:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "704:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "704:24:1"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "730:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "701:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "701:33:1"
															},
															"nodeType": "YulIf",
															"src": "698:53:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "760:10:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "769:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "764:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "825:87:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "854:6:1"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "862:1:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "850:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "850:14:1"
																						},
																						{
																							"name": "_4",
																							"nodeType": "YulIdentifier",
																							"src": "866:2:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "846:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "846:23:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "offset",
																											"nodeType": "YulIdentifier",
																											"src": "885:6:1"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "893:1:1"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "881:3:1"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "881:14:1"
																								},
																								{
																									"name": "_4",
																									"nodeType": "YulIdentifier",
																									"src": "897:2:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "877:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "877:23:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "871:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "871:30:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "839:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "839:63:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "839:63:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "790:1:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "793:2:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "787:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "787:9:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "797:19:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "799:15:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "808:1:1"
																				},
																				{
																					"name": "_4",
																					"nodeType": "YulIdentifier",
																					"src": "811:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "804:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "804:10:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "799:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "783:3:1",
																"statements": []
															},
															"src": "779:133:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nodeType": "YulIdentifier",
																						"src": "936:6:1"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "944:2:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "932:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "932:15:1"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "949:2:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "928:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "928:24:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "954:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "921:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "921:35:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "921:35:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "965:15:1",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "974:6:1"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "965:5:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_string_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "184:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "192:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "200:5:1",
														"type": ""
													}
												],
												"src": "146:840:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1109:444:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1155:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1164:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1167:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1157:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1157:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1157:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1130:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1139:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1126:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1126:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1151:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1122:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1122:32:1"
															},
															"nodeType": "YulIf",
															"src": "1119:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1180:30:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1200:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1194:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1194:16:1"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "1184:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1219:28:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1237:2:1",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1241:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1233:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1233:10:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1245:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "1229:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1229:18:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1223:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1274:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1283:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1286:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1276:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1276:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1276:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1262:6:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1270:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1259:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1259:14:1"
															},
															"nodeType": "YulIf",
															"src": "1256:34:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1299:71:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1342:9:1"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1353:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1338:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1338:22:1"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1362:7:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1309:28:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1309:61:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1299:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1379:41:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1405:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1416:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1401:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1401:18:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1395:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1395:25:1"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "1383:8:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1449:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1458:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1461:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1451:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1451:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1451:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "1435:8:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1445:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1432:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1432:16:1"
															},
															"nodeType": "YulIf",
															"src": "1429:36:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1474:73:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1517:9:1"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "1528:8:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1513:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1513:24:1"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1539:7:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1484:28:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1484:63:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1474:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1067:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1078:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1090:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1098:6:1",
														"type": ""
													}
												],
												"src": "991:562:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1613:325:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1623:22:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1637:1:1",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1640:4:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "1633:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1633:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1623:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1654:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1684:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1690:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1680:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1680:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "1658:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1731:31:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1733:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "1747:6:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1755:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "1743:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1743:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1733:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1711:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1704:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1704:26:1"
															},
															"nodeType": "YulIf",
															"src": "1701:61:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1821:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1842:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1849:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1854:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "1845:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1845:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1835:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1835:31:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1835:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1886:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1889:4:1",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1879:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1879:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1879:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1914:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1917:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1907:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1907:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1907:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1777:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1800:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1808:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1797:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1797:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "1774:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1774:38:1"
															},
															"nodeType": "YulIf",
															"src": "1771:161:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1593:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1602:6:1",
														"type": ""
													}
												],
												"src": "1558:380:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1999:65:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2016:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "2019:3:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2009:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2009:14:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2009:14:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2032:26:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2050:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2053:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "2040:9:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2040:18:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "2032:4:1"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "1982:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1990:4:1",
														"type": ""
													}
												],
												"src": "1943:121:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2150:464:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2183:425:1",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2197:11:1",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "2207:1:1",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nodeType": "YulTypedName",
																				"src": "2201:2:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "2228:2:1"
																				},
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "2232:5:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2221:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2221:17:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2221:17:1"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2251:31:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "2273:2:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2277:4:1",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nodeType": "YulIdentifier",
																				"src": "2263:9:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2263:19:1"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nodeType": "YulTypedName",
																				"src": "2255:4:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2295:57:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nodeType": "YulIdentifier",
																					"src": "2318:4:1"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2328:1:1",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nodeType": "YulIdentifier",
																									"src": "2335:10:1"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "2347:2:1",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2331:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2331:19:1"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nodeType": "YulIdentifier",
																						"src": "2324:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2324:27:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2314:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2314:38:1"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nodeType": "YulTypedName",
																				"src": "2299:11:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "2389:23:1",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "2391:19:1",
																					"value": {
																						"name": "data",
																						"nodeType": "YulIdentifier",
																						"src": "2406:4:1"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nodeType": "YulIdentifier",
																							"src": "2391:11:1"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nodeType": "YulIdentifier",
																					"src": "2371:10:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2383:4:1",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "2368:2:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2368:20:1"
																		},
																		"nodeType": "YulIf",
																		"src": "2365:47:1"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2425:41:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nodeType": "YulIdentifier",
																					"src": "2439:4:1"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2449:1:1",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nodeType": "YulIdentifier",
																									"src": "2456:3:1"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "2461:2:1",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2452:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2452:12:1"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nodeType": "YulIdentifier",
																						"src": "2445:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2445:20:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2435:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2435:31:1"
																		},
																		"variables": [
																			{
																				"name": "_2",
																				"nodeType": "YulTypedName",
																				"src": "2429:2:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2479:24:1",
																		"value": {
																			"name": "deleteStart",
																			"nodeType": "YulIdentifier",
																			"src": "2492:11:1"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nodeType": "YulTypedName",
																				"src": "2483:5:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "2577:21:1",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nodeType": "YulIdentifier",
																								"src": "2586:5:1"
																							},
																							{
																								"name": "_1",
																								"nodeType": "YulIdentifier",
																								"src": "2593:2:1"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nodeType": "YulIdentifier",
																							"src": "2579:6:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2579:17:1"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "2579:17:1"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "2527:5:1"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "2534:2:1"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "2524:2:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2524:13:1"
																		},
																		"nodeType": "YulForLoop",
																		"post": {
																			"nodeType": "YulBlock",
																			"src": "2538:26:1",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "2540:22:1",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nodeType": "YulIdentifier",
																								"src": "2553:5:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2560:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "2549:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2549:13:1"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nodeType": "YulIdentifier",
																							"src": "2540:5:1"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nodeType": "YulBlock",
																			"src": "2520:3:1",
																			"statements": []
																		},
																		"src": "2516:82:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "2166:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2171:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2163:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2163:11:1"
															},
															"nodeType": "YulIf",
															"src": "2160:448:1"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2122:5:1",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "2129:3:1",
														"type": ""
													},
													{
														"name": "startIndex",
														"nodeType": "YulTypedName",
														"src": "2134:10:1",
														"type": ""
													}
												],
												"src": "2069:545:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2704:81:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2714:65:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nodeType": "YulIdentifier",
																				"src": "2729:4:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "2747:1:1",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nodeType": "YulIdentifier",
																										"src": "2750:3:1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "2743:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2743:11:1"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "2760:1:1",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nodeType": "YulIdentifier",
																									"src": "2756:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2756:6:1"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nodeType": "YulIdentifier",
																							"src": "2739:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2739:24:1"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "2735:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2735:29:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2725:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2725:40:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2771:1:1",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nodeType": "YulIdentifier",
																				"src": "2774:3:1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "2767:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2767:11:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "2722:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2722:57:1"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nodeType": "YulIdentifier",
																	"src": "2714:4:1"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "2681:4:1",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "2687:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nodeType": "YulTypedName",
														"src": "2695:4:1",
														"type": ""
													}
												],
												"src": "2619:166:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2886:1256:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2896:24:1",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "2916:3:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2910:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2910:10:1"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nodeType": "YulTypedName",
																	"src": "2900:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2963:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "2965:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2965:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2965:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "2935:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2951:2:1",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2955:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "2947:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2947:10:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2959:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2943:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2943:18:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2932:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2932:30:1"
															},
															"nodeType": "YulIf",
															"src": "2929:56:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "3038:4:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nodeType": "YulIdentifier",
																						"src": "3076:4:1"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nodeType": "YulIdentifier",
																					"src": "3070:5:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3070:11:1"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nodeType": "YulIdentifier",
																			"src": "3044:25:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3044:38:1"
																	},
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "3084:6:1"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nodeType": "YulIdentifier",
																	"src": "2994:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2994:97:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2994:97:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3100:18:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3117:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulTypedName",
																	"src": "3104:9:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3127:23:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3146:4:1",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "srcOffset_1",
																	"nodeType": "YulTypedName",
																	"src": "3131:11:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3159:24:1",
															"value": {
																"name": "srcOffset_1",
																"nodeType": "YulIdentifier",
																"src": "3172:11:1"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulIdentifier",
																	"src": "3159:9:1"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3229:656:1",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "3243:35:1",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "3262:6:1"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "3274:2:1",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "3270:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3270:7:1"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "3258:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3258:20:1"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nodeType": "YulTypedName",
																						"src": "3247:7:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "3291:49:1",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "3335:4:1"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nodeType": "YulIdentifier",
																						"src": "3305:29:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3305:35:1"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nodeType": "YulTypedName",
																						"src": "3295:6:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "3353:10:1",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3362:1:1",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "3357:1:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "3440:172:1",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "3465:6:1"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nodeType": "YulIdentifier",
																														"src": "3483:3:1"
																													},
																													{
																														"name": "srcOffset",
																														"nodeType": "YulIdentifier",
																														"src": "3488:9:1"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nodeType": "YulIdentifier",
																													"src": "3479:3:1"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "3479:19:1"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "3473:5:1"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "3473:26:1"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "3458:6:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3458:42:1"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "3458:42:1"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "3517:24:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "3531:6:1"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "3539:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "3527:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3527:14:1"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nodeType": "YulIdentifier",
																									"src": "3517:6:1"
																								}
																							]
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "3558:40:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nodeType": "YulIdentifier",
																										"src": "3575:9:1"
																									},
																									{
																										"name": "srcOffset_1",
																										"nodeType": "YulIdentifier",
																										"src": "3586:11:1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "3571:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3571:27:1"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nodeType": "YulIdentifier",
																									"src": "3558:9:1"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "3387:1:1"
																						},
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "3390:7:1"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "3384:2:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3384:14:1"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "3399:28:1",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "3401:24:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "3410:1:1"
																									},
																									{
																										"name": "srcOffset_1",
																										"nodeType": "YulIdentifier",
																										"src": "3413:11:1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "3406:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3406:19:1"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "3401:1:1"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "3380:3:1",
																					"statements": []
																				},
																				"src": "3376:236:1"
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "3660:166:1",
																					"statements": [
																						{
																							"nodeType": "YulVariableDeclaration",
																							"src": "3678:43:1",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "3705:3:1"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "3710:9:1"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "3701:3:1"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "3701:19:1"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "3695:5:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3695:26:1"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nodeType": "YulTypedName",
																									"src": "3682:9:1",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "3745:6:1"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nodeType": "YulIdentifier",
																												"src": "3757:9:1"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nodeType": "YulLiteral",
																																				"src": "3784:1:1",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nodeType": "YulIdentifier",
																																				"src": "3787:6:1"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nodeType": "YulIdentifier",
																																			"src": "3780:3:1"
																																		},
																																		"nodeType": "YulFunctionCall",
																																		"src": "3780:14:1"
																																	},
																																	{
																																		"kind": "number",
																																		"nodeType": "YulLiteral",
																																		"src": "3796:3:1",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nodeType": "YulIdentifier",
																																	"src": "3776:3:1"
																																},
																																"nodeType": "YulFunctionCall",
																																"src": "3776:24:1"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nodeType": "YulLiteral",
																																		"src": "3806:1:1",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nodeType": "YulIdentifier",
																																	"src": "3802:3:1"
																																},
																																"nodeType": "YulFunctionCall",
																																"src": "3802:6:1"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nodeType": "YulIdentifier",
																															"src": "3772:3:1"
																														},
																														"nodeType": "YulFunctionCall",
																														"src": "3772:37:1"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nodeType": "YulIdentifier",
																													"src": "3768:3:1"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "3768:42:1"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nodeType": "YulIdentifier",
																											"src": "3753:3:1"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "3753:58:1"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "3738:6:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3738:74:1"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "3738:74:1"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "3631:7:1"
																						},
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "3640:6:1"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "3628:2:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3628:19:1"
																				},
																				"nodeType": "YulIf",
																				"src": "3625:201:1"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "3846:4:1"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "3860:1:1",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nodeType": "YulIdentifier",
																											"src": "3863:6:1"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nodeType": "YulIdentifier",
																										"src": "3856:3:1"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "3856:14:1"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "3872:1:1",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "3852:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3852:22:1"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "3839:6:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3839:36:1"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "3839:36:1"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "3222:663:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3227:1:1",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3902:234:1",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "3916:14:1",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3929:1:1",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nodeType": "YulTypedName",
																						"src": "3920:5:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "3965:67:1",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "3983:35:1",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "4002:3:1"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "4007:9:1"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "3998:3:1"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "3998:19:1"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "3992:5:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3992:26:1"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "3983:5:1"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nodeType": "YulIdentifier",
																					"src": "3946:6:1"
																				},
																				"nodeType": "YulIf",
																				"src": "3943:89:1"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "4052:4:1"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "4111:5:1"
																								},
																								{
																									"name": "newLen",
																									"nodeType": "YulIdentifier",
																									"src": "4118:6:1"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nodeType": "YulIdentifier",
																								"src": "4058:52:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "4058:67:1"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "4045:6:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4045:81:1"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "4045:81:1"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "3894:242:1",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "3202:6:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3210:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3199:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3199:14:1"
															},
															"nodeType": "YulSwitch",
															"src": "3192:944:1"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "2871:4:1",
														"type": ""
													},
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "2877:3:1",
														"type": ""
													}
												],
												"src": "2790:1352:1"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        let _4 := 0x20\n        if gt(add(add(offset, _1), _4), end) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _1) { i := add(i, _4) }\n        {\n            mstore(add(add(memPtr, i), _4), mload(add(add(offset, i), _4)))\n        }\n        mstore(add(add(memPtr, _1), _4), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b50604051620015003803806200150083398101604081905262000034916200011f565b600062000042838262000218565b50600162000051828262000218565b505050620002e4565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200008257600080fd5b81516001600160401b03808211156200009f576200009f6200005a565b604051601f8301601f19908116603f01168101908282118183101715620000ca57620000ca6200005a565b81604052838152602092508683858801011115620000e757600080fd5b600091505b838210156200010b5785820183015181830184015290820190620000ec565b600093810190920192909252949350505050565b600080604083850312156200013357600080fd5b82516001600160401b03808211156200014b57600080fd5b620001598683870162000070565b935060208501519150808211156200017057600080fd5b506200017f8582860162000070565b9150509250929050565b600181811c908216806200019e57607f821691505b602082108103620001bf57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200021357600081815260208120601f850160051c81016020861015620001ee5750805b601f850160051c820191505b818110156200020f57828155600101620001fa565b5050505b505050565b81516001600160401b038111156200023457620002346200005a565b6200024c8162000245845462000189565b84620001c5565b602080601f8311600181146200028457600084156200026b5750858301515b600019600386901b1c1916600185901b1785556200020f565b600085815260208120601f198616915b82811015620002b55788860151825594840194600190910190840162000294565b5085821015620002d45787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b61120c80620002f46000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c80636352211e1161008c578063a22cb46511610066578063a22cb465146101b3578063b88d4fde146101c6578063c87b56dd146101d9578063e985e9c5146101ec57600080fd5b80636352211e1461017757806370a082311461018a57806395d89b41146101ab57600080fd5b806301ffc9a7146100d457806306fdde03146100fc578063081812fc14610111578063095ea7b31461013c57806323b872dd1461015157806342842e0e14610164575b600080fd5b6100e76100e2366004610d30565b6101ff565b60405190151581526020015b60405180910390f35b610104610251565b6040516100f39190610d9d565b61012461011f366004610db0565b6102e3565b6040516001600160a01b0390911681526020016100f3565b61014f61014a366004610de5565b61037d565b005b61014f61015f366004610e0f565b610492565b61014f610172366004610e0f565b6104c3565b610124610185366004610db0565b6104de565b61019d610198366004610e4b565b610555565b6040519081526020016100f3565b6101046105dc565b61014f6101c1366004610e66565b6105eb565b61014f6101d4366004610eb8565b6106af565b6101046101e7366004610db0565b6106e7565b6100e76101fa366004610f94565b6107cf565b60006001600160e01b031982166380ac58cd60e01b148061023057506001600160e01b03198216635b5e139f60e01b145b8061024b57506301ffc9a760e01b6001600160e01b03198316145b92915050565b60606000805461026090610fc7565b80601f016020809104026020016040519081016040528092919081815260200182805461028c90610fc7565b80156102d95780601f106102ae576101008083540402835291602001916102d9565b820191906000526020600020905b8154815290600101906020018083116102bc57829003601f168201915b5050505050905090565b6000818152600260205260408120546001600160a01b03166103615760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b6000610388826104de565b9050806001600160a01b0316836001600160a01b0316036103f55760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b6064820152608401610358565b336001600160a01b0382161480610411575061041181336107cf565b6104835760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c00000000000000006064820152608401610358565b61048d83836107fd565b505050565b61049c338261086b565b6104b85760405162461bcd60e51b815260040161035890611001565b61048d838383610942565b61048d838383604051806020016040528060008152506106af565b6000818152600260205260408120546001600160a01b03168061024b5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b6064820152608401610358565b60006001600160a01b0382166105c05760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b6064820152608401610358565b506001600160a01b031660009081526003602052604090205490565b60606001805461026090610fc7565b336001600160a01b038316036106435760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610358565b3360008181526005602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b6106b9338361086b565b6106d55760405162461bcd60e51b815260040161035890611001565b6106e184848484610ae2565b50505050565b6000818152600260205260409020546060906001600160a01b03166107665760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b6064820152608401610358565b600061077d60408051602081019091526000815290565b9050600081511161079d57604051806020016040528060008152506107c8565b806107a784610b15565b6040516020016107b8929190611052565b6040516020818303038152906040525b9392505050565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b600081815260046020526040902080546001600160a01b0319166001600160a01b0384169081179091558190610832826104de565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000818152600260205260408120546001600160a01b03166108e45760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b6064820152608401610358565b60006108ef836104de565b9050806001600160a01b0316846001600160a01b0316148061092a5750836001600160a01b031661091f846102e3565b6001600160a01b0316145b8061093a575061093a81856107cf565b949350505050565b826001600160a01b0316610955826104de565b6001600160a01b0316146109bd5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960448201526839903737ba1037bbb760b91b6064820152608401610358565b6001600160a01b038216610a1f5760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610358565b610a2a6000826107fd565b6001600160a01b0383166000908152600360205260408120805460019290610a53908490611097565b90915550506001600160a01b0382166000908152600360205260408120805460019290610a819084906110aa565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b610aed848484610942565b610af984848484610c16565b6106e15760405162461bcd60e51b8152600401610358906110bd565b606081600003610b3c5750506040805180820190915260018152600360fc1b602082015290565b8160005b8115610b665780610b508161110f565b9150610b5f9050600a8361113e565b9150610b40565b60008167ffffffffffffffff811115610b8157610b81610ea2565b6040519080825280601f01601f191660200182016040528015610bab576020820181803683370190505b5090505b841561093a57610bc0600183611097565b9150610bcd600a86611152565b610bd89060306110aa565b60f81b818381518110610bed57610bed611166565b60200101906001600160f81b031916908160001a905350610c0f600a8661113e565b9450610baf565b60006001600160a01b0384163b15610d0c57604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290610c5a90339089908890889060040161117c565b6020604051808303816000875af1925050508015610c95575060408051601f3d908101601f19168201909252610c92918101906111b9565b60015b610cf2573d808015610cc3576040519150601f19603f3d011682016040523d82523d6000602084013e610cc8565b606091505b508051600003610cea5760405162461bcd60e51b8152600401610358906110bd565b805181602001fd5b6001600160e01b031916630a85bd0160e11b14905061093a565b506001949350505050565b6001600160e01b031981168114610d2d57600080fd5b50565b600060208284031215610d4257600080fd5b81356107c881610d17565b60005b83811015610d68578181015183820152602001610d50565b50506000910152565b60008151808452610d89816020860160208601610d4d565b601f01601f19169290920160200192915050565b6020815260006107c86020830184610d71565b600060208284031215610dc257600080fd5b5035919050565b80356001600160a01b0381168114610de057600080fd5b919050565b60008060408385031215610df857600080fd5b610e0183610dc9565b946020939093013593505050565b600080600060608486031215610e2457600080fd5b610e2d84610dc9565b9250610e3b60208501610dc9565b9150604084013590509250925092565b600060208284031215610e5d57600080fd5b6107c882610dc9565b60008060408385031215610e7957600080fd5b610e8283610dc9565b915060208301358015158114610e9757600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b60008060008060808587031215610ece57600080fd5b610ed785610dc9565b9350610ee560208601610dc9565b925060408501359150606085013567ffffffffffffffff80821115610f0957600080fd5b818701915087601f830112610f1d57600080fd5b813581811115610f2f57610f2f610ea2565b604051601f8201601f19908116603f01168101908382118183101715610f5757610f57610ea2565b816040528281528a6020848701011115610f7057600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b60008060408385031215610fa757600080fd5b610fb083610dc9565b9150610fbe60208401610dc9565b90509250929050565b600181811c90821680610fdb57607f821691505b602082108103610ffb57634e487b7160e01b600052602260045260246000fd5b50919050565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b60008351611064818460208801610d4d565b835190830190611078818360208801610d4d565b01949350505050565b634e487b7160e01b600052601160045260246000fd5b8181038181111561024b5761024b611081565b8082018082111561024b5761024b611081565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b60006001820161112157611121611081565b5060010190565b634e487b7160e01b600052601260045260246000fd5b60008261114d5761114d611128565b500490565b60008261116157611161611128565b500690565b634e487b7160e01b600052603260045260246000fd5b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906111af90830184610d71565b9695505050505050565b6000602082840312156111cb57600080fd5b81516107c881610d1756fea26469706673582212208f330809fc70a4b0a8f12119ae14d6e030412ebde9bfa3ad76d8aa48f68e07a564736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1500 CODESIZE SUB DUP1 PUSH3 0x1500 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x11F JUMP JUMPDEST PUSH1 0x0 PUSH3 0x42 DUP4 DUP3 PUSH3 0x218 JUMP JUMPDEST POP PUSH1 0x1 PUSH3 0x51 DUP3 DUP3 PUSH3 0x218 JUMP JUMPDEST POP POP POP PUSH3 0x2E4 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x82 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x9F JUMPI PUSH3 0x9F PUSH3 0x5A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0xCA JUMPI PUSH3 0xCA PUSH3 0x5A JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE PUSH1 0x20 SWAP3 POP DUP7 DUP4 DUP6 DUP9 ADD ADD GT ISZERO PUSH3 0xE7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 POP JUMPDEST DUP4 DUP3 LT ISZERO PUSH3 0x10B JUMPI DUP6 DUP3 ADD DUP4 ADD MLOAD DUP2 DUP4 ADD DUP5 ADD MSTORE SWAP1 DUP3 ADD SWAP1 PUSH3 0xEC JUMP JUMPDEST PUSH1 0x0 SWAP4 DUP2 ADD SWAP1 SWAP3 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x133 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x14B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x159 DUP7 DUP4 DUP8 ADD PUSH3 0x70 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x170 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x17F DUP6 DUP3 DUP7 ADD PUSH3 0x70 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x19E JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x1BF JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x213 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH3 0x1EE JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x20F JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x1FA JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x234 JUMPI PUSH3 0x234 PUSH3 0x5A JUMP JUMPDEST PUSH3 0x24C DUP2 PUSH3 0x245 DUP5 SLOAD PUSH3 0x189 JUMP JUMPDEST DUP5 PUSH3 0x1C5 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x284 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x26B JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0x20F JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x2B5 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x294 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x2D4 JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x120C DUP1 PUSH3 0x2F4 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x1B3 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x1C6 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x1D9 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x1EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x177 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x18A JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x111 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x13C JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x151 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x164 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE7 PUSH2 0xE2 CALLDATASIZE PUSH1 0x4 PUSH2 0xD30 JUMP JUMPDEST PUSH2 0x1FF JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x104 PUSH2 0x251 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0xD9D JUMP JUMPDEST PUSH2 0x124 PUSH2 0x11F CALLDATASIZE PUSH1 0x4 PUSH2 0xDB0 JUMP JUMPDEST PUSH2 0x2E3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xF3 JUMP JUMPDEST PUSH2 0x14F PUSH2 0x14A CALLDATASIZE PUSH1 0x4 PUSH2 0xDE5 JUMP JUMPDEST PUSH2 0x37D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x14F PUSH2 0x15F CALLDATASIZE PUSH1 0x4 PUSH2 0xE0F JUMP JUMPDEST PUSH2 0x492 JUMP JUMPDEST PUSH2 0x14F PUSH2 0x172 CALLDATASIZE PUSH1 0x4 PUSH2 0xE0F JUMP JUMPDEST PUSH2 0x4C3 JUMP JUMPDEST PUSH2 0x124 PUSH2 0x185 CALLDATASIZE PUSH1 0x4 PUSH2 0xDB0 JUMP JUMPDEST PUSH2 0x4DE JUMP JUMPDEST PUSH2 0x19D PUSH2 0x198 CALLDATASIZE PUSH1 0x4 PUSH2 0xE4B JUMP JUMPDEST PUSH2 0x555 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xF3 JUMP JUMPDEST PUSH2 0x104 PUSH2 0x5DC JUMP JUMPDEST PUSH2 0x14F PUSH2 0x1C1 CALLDATASIZE PUSH1 0x4 PUSH2 0xE66 JUMP JUMPDEST PUSH2 0x5EB JUMP JUMPDEST PUSH2 0x14F PUSH2 0x1D4 CALLDATASIZE PUSH1 0x4 PUSH2 0xEB8 JUMP JUMPDEST PUSH2 0x6AF JUMP JUMPDEST PUSH2 0x104 PUSH2 0x1E7 CALLDATASIZE PUSH1 0x4 PUSH2 0xDB0 JUMP JUMPDEST PUSH2 0x6E7 JUMP JUMPDEST PUSH2 0xE7 PUSH2 0x1FA CALLDATASIZE PUSH1 0x4 PUSH2 0xF94 JUMP JUMPDEST PUSH2 0x7CF JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x80AC58CD PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x230 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5B5E139F PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x24B JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x260 SWAP1 PUSH2 0xFC7 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x28C SWAP1 PUSH2 0xFC7 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2D9 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2AE JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2D9 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2BC JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x361 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76656420717565727920666F72206E6F6E6578 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x34B9BA32B73A103A37B5B2B7 PUSH1 0xA1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x388 DUP3 PUSH2 0x4DE JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x3F5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x358 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ DUP1 PUSH2 0x411 JUMPI POP PUSH2 0x411 DUP2 CALLER PUSH2 0x7CF JUMP JUMPDEST PUSH2 0x483 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F74206F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E6572206E6F7220617070726F76656420666F7220616C6C0000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x358 JUMP JUMPDEST PUSH2 0x48D DUP4 DUP4 PUSH2 0x7FD JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x49C CALLER DUP3 PUSH2 0x86B JUMP JUMPDEST PUSH2 0x4B8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x358 SWAP1 PUSH2 0x1001 JUMP JUMPDEST PUSH2 0x48D DUP4 DUP4 DUP4 PUSH2 0x942 JUMP JUMPDEST PUSH2 0x48D DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x6AF JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x24B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206F776E657220717565727920666F72206E6F6E6578697374 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x32B73A103A37B5B2B7 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x358 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5C0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A2062616C616E636520717565727920666F7220746865207A65 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x726F2061646472657373 PUSH1 0xB0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x358 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x260 SWAP1 PUSH2 0xFC7 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SUB PUSH2 0x643 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x358 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD SWAP1 DUP2 MSTORE SWAP2 SWAP3 SWAP2 PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x6B9 CALLER DUP4 PUSH2 0x86B JUMP JUMPDEST PUSH2 0x6D5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x358 SWAP1 PUSH2 0x1001 JUMP JUMPDEST PUSH2 0x6E1 DUP5 DUP5 DUP5 DUP5 PUSH2 0xAE2 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x60 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x766 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732314D657461646174613A2055524920717565727920666F72206E6F PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x3732BC34B9BA32B73A103A37B5B2B7 PUSH1 0x89 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x358 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x77D PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x79D JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x7C8 JUMP JUMPDEST DUP1 PUSH2 0x7A7 DUP5 PUSH2 0xB15 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x7B8 SWAP3 SWAP2 SWAP1 PUSH2 0x1052 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH2 0x832 DUP3 PUSH2 0x4DE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x8E4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206F70657261746F7220717565727920666F72206E6F6E6578 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x34B9BA32B73A103A37B5B2B7 PUSH1 0xA1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x358 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8EF DUP4 PUSH2 0x4DE JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x92A JUMPI POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x91F DUP5 PUSH2 0x2E3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST DUP1 PUSH2 0x93A JUMPI POP PUSH2 0x93A DUP2 DUP6 PUSH2 0x7CF JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x955 DUP3 PUSH2 0x4DE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x9BD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E73666572206F6620746F6B656E20746861742069 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x39903737BA1037BBB7 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x358 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xA1F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x358 JUMP JUMPDEST PUSH2 0xA2A PUSH1 0x0 DUP3 PUSH2 0x7FD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0xA53 SWAP1 DUP5 SWAP1 PUSH2 0x1097 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0xA81 SWAP1 DUP5 SWAP1 PUSH2 0x10AA JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD DUP5 SWAP4 SWAP2 DUP8 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG4 POP POP POP JUMP JUMPDEST PUSH2 0xAED DUP5 DUP5 DUP5 PUSH2 0x942 JUMP JUMPDEST PUSH2 0xAF9 DUP5 DUP5 DUP5 DUP5 PUSH2 0xC16 JUMP JUMPDEST PUSH2 0x6E1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x358 SWAP1 PUSH2 0x10BD JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH1 0x0 SUB PUSH2 0xB3C JUMPI POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x3 PUSH1 0xFC SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x0 JUMPDEST DUP2 ISZERO PUSH2 0xB66 JUMPI DUP1 PUSH2 0xB50 DUP2 PUSH2 0x110F JUMP JUMPDEST SWAP2 POP PUSH2 0xB5F SWAP1 POP PUSH1 0xA DUP4 PUSH2 0x113E JUMP JUMPDEST SWAP2 POP PUSH2 0xB40 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xB81 JUMPI PUSH2 0xB81 PUSH2 0xEA2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xBAB JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP JUMPDEST DUP5 ISZERO PUSH2 0x93A JUMPI PUSH2 0xBC0 PUSH1 0x1 DUP4 PUSH2 0x1097 JUMP JUMPDEST SWAP2 POP PUSH2 0xBCD PUSH1 0xA DUP7 PUSH2 0x1152 JUMP JUMPDEST PUSH2 0xBD8 SWAP1 PUSH1 0x30 PUSH2 0x10AA JUMP JUMPDEST PUSH1 0xF8 SHL DUP2 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xBED JUMPI PUSH2 0xBED PUSH2 0x1166 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH2 0xC0F PUSH1 0xA DUP7 PUSH2 0x113E JUMP JUMPDEST SWAP5 POP PUSH2 0xBAF JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0xD0C JUMPI PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0xC5A SWAP1 CALLER SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x117C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xC95 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xC92 SWAP2 DUP2 ADD SWAP1 PUSH2 0x11B9 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xCF2 JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0xCC3 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xCC8 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0xCEA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x358 SWAP1 PUSH2 0x10BD JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ SWAP1 POP PUSH2 0x93A JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0xD2D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD42 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x7C8 DUP2 PUSH2 0xD17 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xD68 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xD50 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0xD89 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0xD4D JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x7C8 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xD71 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDC2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xDE0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xDF8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE01 DUP4 PUSH2 0xDC9 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xE24 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE2D DUP5 PUSH2 0xDC9 JUMP JUMPDEST SWAP3 POP PUSH2 0xE3B PUSH1 0x20 DUP6 ADD PUSH2 0xDC9 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE5D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7C8 DUP3 PUSH2 0xDC9 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE79 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE82 DUP4 PUSH2 0xDC9 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xE97 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xECE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xED7 DUP6 PUSH2 0xDC9 JUMP JUMPDEST SWAP4 POP PUSH2 0xEE5 PUSH1 0x20 DUP7 ADD PUSH2 0xDC9 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xF09 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xF1D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0xF2F JUMPI PUSH2 0xF2F PUSH2 0xEA2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0xF57 JUMPI PUSH2 0xF57 PUSH2 0xEA2 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP11 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0xF70 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xFA7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xFB0 DUP4 PUSH2 0xDC9 JUMP JUMPDEST SWAP2 POP PUSH2 0xFBE PUSH1 0x20 DUP5 ADD PUSH2 0xDC9 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xFDB JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xFFB JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x31 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E736665722063616C6C6572206973206E6F74206F PUSH1 0x40 DUP3 ADD MSTORE PUSH17 0x1DDB995C881B9BDC88185C1C1C9BDD9959 PUSH1 0x7A SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH2 0x1064 DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0xD4D JUMP JUMPDEST DUP4 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0x1078 DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0xD4D JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x24B JUMPI PUSH2 0x24B PUSH2 0x1081 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x24B JUMPI PUSH2 0x24B PUSH2 0x1081 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x32 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x40 DUP3 ADD MSTORE PUSH18 0x31B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x71 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x1121 JUMPI PUSH2 0x1121 PUSH2 0x1081 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x114D JUMPI PUSH2 0x114D PUSH2 0x1128 JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1161 JUMPI PUSH2 0x1161 PUSH2 0x1128 JUMP JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x11AF SWAP1 DUP4 ADD DUP5 PUSH2 0xD71 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x7C8 DUP2 PUSH2 0xD17 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP16 CALLER ADDMOD MULMOD 0xFC PUSH17 0xA4B0A8F12119AE14D6E030412EBDE9BFA3 0xAD PUSH23 0xD8AA48F68E07A564736F6C634300081200330000000000 ",
							"sourceMap": "19800:12781:0:-:0;;;20592:117;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;20660:5;:13;20668:5;20660;:13;:::i;:::-;-1:-1:-1;20684:7:0;:17;20694:7;20684;:17;:::i;:::-;;20592:117;;19800:12781;;14:127:1;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:840;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:1;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:1;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;954:1;932:15;;;928:24;;;921:35;;;;936:6;146:840;-1:-1:-1;;;;146:840:1:o;991:562::-;1090:6;1098;1151:2;1139:9;1130:7;1126:23;1122:32;1119:52;;;1167:1;1164;1157:12;1119:52;1194:16;;-1:-1:-1;;;;;1259:14:1;;;1256:34;;;1286:1;1283;1276:12;1256:34;1309:61;1362:7;1353:6;1342:9;1338:22;1309:61;:::i;:::-;1299:71;;1416:2;1405:9;1401:18;1395:25;1379:41;;1445:2;1435:8;1432:16;1429:36;;;1461:1;1458;1451:12;1429:36;;1484:63;1539:7;1528:8;1517:9;1513:24;1484:63;:::i;:::-;1474:73;;;991:562;;;;;:::o;1558:380::-;1637:1;1633:12;;;;1680;;;1701:61;;1755:4;1747:6;1743:17;1733:27;;1701:61;1808:2;1800:6;1797:14;1777:18;1774:38;1771:161;;1854:10;1849:3;1845:20;1842:1;1835:31;1889:4;1886:1;1879:15;1917:4;1914:1;1907:15;1771:161;;1558:380;;;:::o;2069:545::-;2171:2;2166:3;2163:11;2160:448;;;2207:1;2232:5;2228:2;2221:17;2277:4;2273:2;2263:19;2347:2;2335:10;2331:19;2328:1;2324:27;2318:4;2314:38;2383:4;2371:10;2368:20;2365:47;;;-1:-1:-1;2406:4:1;2365:47;2461:2;2456:3;2452:12;2449:1;2445:20;2439:4;2435:31;2425:41;;2516:82;2534:2;2527:5;2524:13;2516:82;;;2579:17;;;2560:1;2549:13;2516:82;;;2520:3;;;2160:448;2069:545;;;:::o;2790:1352::-;2910:10;;-1:-1:-1;;;;;2932:30:1;;2929:56;;;2965:18;;:::i;:::-;2994:97;3084:6;3044:38;3076:4;3070:11;3044:38;:::i;:::-;3038:4;2994:97;:::i;:::-;3146:4;;3210:2;3199:14;;3227:1;3222:663;;;;3929:1;3946:6;3943:89;;;-1:-1:-1;3998:19:1;;;3992:26;3943:89;-1:-1:-1;;2747:1:1;2743:11;;;2739:24;2735:29;2725:40;2771:1;2767:11;;;2722:57;4045:81;;3192:944;;3222:663;2016:1;2009:14;;;2053:4;2040:18;;-1:-1:-1;;3258:20:1;;;3376:236;3390:7;3387:1;3384:14;3376:236;;;3479:19;;;3473:26;3458:42;;3571:27;;;;3539:1;3527:14;;;;3406:19;;3376:236;;;3380:3;3640:6;3631:7;3628:19;3625:201;;;3701:19;;;3695:26;-1:-1:-1;;3784:1:1;3780:14;;;3796:3;3776:24;3772:37;3768:42;3753:58;3738:74;;3625:201;-1:-1:-1;;;;;3872:1:1;3856:14;;;3852:22;3839:36;;-1:-1:-1;2790:1352:1:o;:::-;19800:12781:0;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_1442": {
									"entryPoint": 2045,
									"id": 1442,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_baseURI_917": {
									"entryPoint": null,
									"id": 917,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_beforeTokenTransfer_1517": {
									"entryPoint": null,
									"id": 1517,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_checkOnERC721Received_1506": {
									"entryPoint": 3094,
									"id": 1506,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@_exists_1156": {
									"entryPoint": null,
									"id": 1156,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_isApprovedOrOwner_1197": {
									"entryPoint": 2155,
									"id": 1197,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_msgSender_472": {
									"entryPoint": null,
									"id": 472,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_safeTransfer_1138": {
									"entryPoint": 2786,
									"id": 1138,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_transfer_1418": {
									"entryPoint": 2370,
									"id": 1418,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@approve_960": {
									"entryPoint": 893,
									"id": 960,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@balanceOf_818": {
									"entryPoint": 1365,
									"id": 818,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getApproved_981": {
									"entryPoint": 739,
									"id": 981,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isApprovedForAll_1033": {
									"entryPoint": 1999,
									"id": 1033,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isContract_186": {
									"entryPoint": null,
									"id": 186,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@name_856": {
									"entryPoint": 593,
									"id": 856,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@ownerOf_846": {
									"entryPoint": 1246,
									"id": 846,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@safeTransferFrom_1079": {
									"entryPoint": 1219,
									"id": 1079,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@safeTransferFrom_1109": {
									"entryPoint": 1711,
									"id": 1109,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@setApprovalForAll_1015": {
									"entryPoint": 1515,
									"id": 1015,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_707": {
									"entryPoint": null,
									"id": 707,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_794": {
									"entryPoint": 511,
									"id": 794,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@symbol_866": {
									"entryPoint": 1500,
									"id": 866,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@toString_568": {
									"entryPoint": 2837,
									"id": 568,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@tokenURI_908": {
									"entryPoint": 1767,
									"id": 908,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@transferFrom_1060": {
									"entryPoint": 1170,
									"id": 1060,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 3529,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3659,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 3988,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 3599,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr": {
									"entryPoint": 3768,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 3686,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 3557,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 3376,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 4537,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 3504,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_string": {
									"entryPoint": 3441,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 4178,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 4476,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3485,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4285,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a01073130a885d6c1c1af6ac75fc3b1c4f9403c235362962bbf528e2bd87d950__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4097,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 4266,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 4414,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 4247,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 3405,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 4039,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 4367,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mod_t_uint256": {
									"entryPoint": 4434,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 4225,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 4392,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 4454,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 3746,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_bytes4": {
									"entryPoint": 3351,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:12344:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "58:87:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "123:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "132:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "135:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "125:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "125:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "125:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "81:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "92:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "103:3:1",
																								"type": "",
																								"value": "224"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "108:10:1",
																								"type": "",
																								"value": "0xffffffff"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "99:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "99:20:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "88:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "88:32:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "78:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "78:43:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "71:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "71:51:1"
															},
															"nodeType": "YulIf",
															"src": "68:71:1"
														}
													]
												},
												"name": "validator_revert_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "47:5:1",
														"type": ""
													}
												],
												"src": "14:131:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "219:176:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "265:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "274:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "277:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "267:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "267:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "267:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "240:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "249:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "236:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "236:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "261:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "232:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "232:32:1"
															},
															"nodeType": "YulIf",
															"src": "229:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "290:36:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "316:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "303:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "303:23:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "294:5:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "359:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "335:23:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "335:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "335:30:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "374:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "384:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "374:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "185:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "196:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "208:6:1",
														"type": ""
													}
												],
												"src": "150:245:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "495:92:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "505:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "517:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "528:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "513:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "513:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "505:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "547:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "572:6:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "565:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "565:14:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "558:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "558:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "540:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "540:41:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "540:41:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "464:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "475:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "486:4:1",
														"type": ""
													}
												],
												"src": "400:187:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "658:184:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "668:10:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "677:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "672:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "737:63:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "762:3:1"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "767:1:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "758:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "758:11:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "781:3:1"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "786:1:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "777:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "777:11:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "771:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "771:18:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "751:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "751:39:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "751:39:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "698:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "701:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "695:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "695:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "709:19:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "711:15:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "720:1:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "723:2:1",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "716:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "716:10:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "711:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "691:3:1",
																"statements": []
															},
															"src": "687:113:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "820:3:1"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "825:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "816:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "816:16:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "834:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "809:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "809:27:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "809:27:1"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "636:3:1",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "641:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "646:6:1",
														"type": ""
													}
												],
												"src": "592:250:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "897:221:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "907:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "927:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "921:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "921:12:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "911:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "949:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "954:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "942:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "942:19:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "942:19:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1009:5:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1016:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1005:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1005:16:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "1027:3:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1032:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1023:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1023:14:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1039:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "970:34:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "970:76:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "970:76:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1055:57:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "1070:3:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "1083:6:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1091:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "1079:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1079:15:1"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1100:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "1096:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1096:7:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "1075:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1075:29:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1066:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1066:39:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1107:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1062:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1062:50:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1055:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_string",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "874:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "881:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "889:3:1",
														"type": ""
													}
												],
												"src": "847:271:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1244:99:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1261:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1272:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1254:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1254:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1254:21:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1284:53:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1310:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1322:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1333:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1318:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1318:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nodeType": "YulIdentifier",
																	"src": "1292:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1292:45:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1284:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1213:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1224:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1235:4:1",
														"type": ""
													}
												],
												"src": "1123:220:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1418:110:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1464:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1473:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1476:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1466:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1466:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1466:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1439:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1448:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1435:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1435:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1460:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1431:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1431:32:1"
															},
															"nodeType": "YulIf",
															"src": "1428:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1489:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1512:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1499:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1499:23:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1489:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1384:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1395:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1407:6:1",
														"type": ""
													}
												],
												"src": "1348:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1634:102:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1644:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1656:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1667:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1652:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1652:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1644:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1686:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1701:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1717:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1722:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "1713:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1713:11:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1726:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "1709:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1709:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1697:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1697:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1679:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1679:51:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1679:51:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1603:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1614:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1625:4:1",
														"type": ""
													}
												],
												"src": "1533:203:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1790:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1800:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1822:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1809:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1809:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1800:5:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1892:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1901:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1904:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1894:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1894:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1894:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1851:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1862:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1877:3:1",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1882:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "1873:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "1873:11:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1886:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "1869:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1869:19:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "1858:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1858:31:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1848:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1848:42:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1841:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1841:50:1"
															},
															"nodeType": "YulIf",
															"src": "1838:70:1"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1769:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1780:5:1",
														"type": ""
													}
												],
												"src": "1741:173:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2006:167:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2052:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2061:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2064:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2054:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2054:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2054:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2027:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2036:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2023:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2023:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2048:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2019:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2019:32:1"
															},
															"nodeType": "YulIf",
															"src": "2016:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2077:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2106:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2087:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2087:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2077:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2125:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2152:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2163:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2148:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2148:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2135:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2135:32:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2125:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1964:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1975:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1987:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1995:6:1",
														"type": ""
													}
												],
												"src": "1919:254:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2282:224:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2328:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2337:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2340:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2330:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2330:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2330:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2303:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2312:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2299:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2299:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2324:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2295:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2295:32:1"
															},
															"nodeType": "YulIf",
															"src": "2292:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2353:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2382:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2363:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2363:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2353:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2401:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2434:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2445:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2430:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2430:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2411:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2411:38:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2401:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2458:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2485:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2496:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2481:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2481:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2468:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2468:32:1"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "2458:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2232:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2243:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2255:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2263:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2271:6:1",
														"type": ""
													}
												],
												"src": "2178:328:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2581:116:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2627:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2636:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2639:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2629:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2629:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2629:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2602:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2611:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2598:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2598:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2623:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2594:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2594:32:1"
															},
															"nodeType": "YulIf",
															"src": "2591:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2652:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2681:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2662:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2662:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2652:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2547:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2558:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2570:6:1",
														"type": ""
													}
												],
												"src": "2511:186:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2803:76:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2813:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2825:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2836:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2821:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2821:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2813:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2855:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2866:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2848:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2848:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2848:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2772:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2783:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2794:4:1",
														"type": ""
													}
												],
												"src": "2702:177:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2968:263:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3014:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3023:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3026:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3016:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3016:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3016:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2989:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2998:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2985:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2985:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3010:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2981:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2981:32:1"
															},
															"nodeType": "YulIf",
															"src": "2978:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3039:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3068:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "3049:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3049:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3039:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3087:45:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3117:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3128:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3113:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3113:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3100:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3100:32:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "3091:5:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3185:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3194:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3197:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3187:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3187:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3187:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3154:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "3175:5:1"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "3168:6:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3168:13:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "3161:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3161:21:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "3151:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3151:32:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3144:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3144:40:1"
															},
															"nodeType": "YulIf",
															"src": "3141:60:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3210:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3220:5:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "3210:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2926:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2937:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2949:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2957:6:1",
														"type": ""
													}
												],
												"src": "2884:347:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3268:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3285:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3292:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3297:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "3288:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3288:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3278:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3278:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3278:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3325:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3328:4:1",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3318:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3318:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3318:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3349:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3352:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3342:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3342:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3342:15:1"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "3236:127:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3498:1008:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3545:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3554:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3557:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3547:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3547:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3547:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3519:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3528:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3515:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3515:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3540:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3511:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3511:33:1"
															},
															"nodeType": "YulIf",
															"src": "3508:53:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3570:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3599:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "3580:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3580:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3570:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3618:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3651:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3662:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3647:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3647:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "3628:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3628:38:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "3618:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3675:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3702:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3713:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3698:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3698:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3685:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3685:32:1"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "3675:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3726:46:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3757:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3768:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3753:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3753:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3740:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3740:32:1"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "3730:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3781:28:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3791:18:1",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "3785:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3836:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3845:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3848:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3838:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3838:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3838:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3824:6:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3832:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3821:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3821:14:1"
															},
															"nodeType": "YulIf",
															"src": "3818:34:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3861:32:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3875:9:1"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3886:6:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3871:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3871:22:1"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "3865:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3941:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3950:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3953:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3943:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3943:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3943:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "3920:2:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3924:4:1",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3916:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3916:13:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3931:7:1"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "3912:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3912:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3905:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3905:35:1"
															},
															"nodeType": "YulIf",
															"src": "3902:55:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3966:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "3989:2:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3976:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3976:16:1"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "3970:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4015:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "4017:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4017:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4017:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "4007:2:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4011:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4004:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4004:10:1"
															},
															"nodeType": "YulIf",
															"src": "4001:36:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4046:17:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4060:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "4056:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4056:7:1"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "4050:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4072:23:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4092:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4086:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4086:9:1"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "4076:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4104:71:1",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "4126:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_3",
																										"nodeType": "YulIdentifier",
																										"src": "4150:2:1"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "4154:4:1",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "4146:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4146:13:1"
																							},
																							{
																								"name": "_4",
																								"nodeType": "YulIdentifier",
																								"src": "4161:2:1"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "4142:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4142:22:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4166:2:1",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4138:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4138:31:1"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "4171:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4134:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4134:40:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4122:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4122:53:1"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "4108:10:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4234:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "4236:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4236:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4236:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "4193:10:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "4205:2:1"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "4190:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4190:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "4213:10:1"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "4225:6:1"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "4210:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4210:22:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "4187:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4187:46:1"
															},
															"nodeType": "YulIf",
															"src": "4184:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4272:2:1",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "4276:10:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4265:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4265:22:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4265:22:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "4303:6:1"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "4311:2:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4296:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4296:18:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4296:18:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4360:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4369:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4372:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4362:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4362:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4362:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "4337:2:1"
																					},
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "4341:2:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4333:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4333:11:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4346:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4329:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4329:20:1"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "4351:7:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4326:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4326:33:1"
															},
															"nodeType": "YulIf",
															"src": "4323:53:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "4402:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4410:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4398:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4398:15:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "4419:2:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4423:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4415:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4415:11:1"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "4428:2:1"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "4385:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4385:46:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4385:46:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nodeType": "YulIdentifier",
																						"src": "4455:6:1"
																					},
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "4463:2:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4451:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4451:15:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4468:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4447:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4447:24:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4473:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4440:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4440:35:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4440:35:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4484:16:1",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "4494:6:1"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "4484:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3440:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3451:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3463:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3471:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3479:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "3487:6:1",
														"type": ""
													}
												],
												"src": "3368:1138:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4598:173:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4644:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4653:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4656:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4646:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4646:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4646:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4619:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4628:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4615:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4615:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4640:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4611:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4611:32:1"
															},
															"nodeType": "YulIf",
															"src": "4608:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4669:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4698:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "4679:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4679:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4669:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4717:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4750:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4761:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4746:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4746:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "4727:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4727:38:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "4717:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4556:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4567:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4579:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4587:6:1",
														"type": ""
													}
												],
												"src": "4511:260:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4831:325:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4841:22:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4855:1:1",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "4858:4:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "4851:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4851:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "4841:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4872:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "4902:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4908:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4898:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4898:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "4876:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4949:31:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "4951:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "4965:6:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4973:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "4961:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4961:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "4951:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "4929:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4922:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4922:26:1"
															},
															"nodeType": "YulIf",
															"src": "4919:61:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5039:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5060:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5067:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5072:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "5063:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5063:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5053:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5053:31:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5053:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5104:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5107:4:1",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5097:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5097:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5097:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5132:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5135:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5125:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5125:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5125:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "4995:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "5018:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5026:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "5015:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5015:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "4992:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4992:38:1"
															},
															"nodeType": "YulIf",
															"src": "4989:161:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "4811:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "4820:6:1",
														"type": ""
													}
												],
												"src": "4776:380:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5335:234:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5352:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5363:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5345:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5345:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5345:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5386:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5397:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5382:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5382:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5402:2:1",
																		"type": "",
																		"value": "44"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5375:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5375:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5375:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5425:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5436:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5421:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5421:18:1"
																	},
																	{
																		"hexValue": "4552433732313a20617070726f76656420717565727920666f72206e6f6e6578",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5441:34:1",
																		"type": "",
																		"value": "ERC721: approved query for nonex"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5414:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5414:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5414:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5496:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5507:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5492:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5492:18:1"
																	},
																	{
																		"hexValue": "697374656e7420746f6b656e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5512:14:1",
																		"type": "",
																		"value": "istent token"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5485:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5485:42:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5485:42:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5536:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5548:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5559:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5544:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5544:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5536:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5312:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5326:4:1",
														"type": ""
													}
												],
												"src": "5161:408:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5748:223:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5765:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5776:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5758:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5758:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5758:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5799:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5810:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5795:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5795:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5815:2:1",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5788:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5788:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5788:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5838:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5849:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5834:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5834:18:1"
																	},
																	{
																		"hexValue": "4552433732313a20617070726f76616c20746f2063757272656e74206f776e65",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5854:34:1",
																		"type": "",
																		"value": "ERC721: approval to current owne"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5827:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5827:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5827:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5909:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5920:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5905:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5905:18:1"
																	},
																	{
																		"hexValue": "72",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5925:3:1",
																		"type": "",
																		"value": "r"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5898:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5898:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5898:31:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5938:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5950:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5961:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5946:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5946:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5938:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5725:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5739:4:1",
														"type": ""
													}
												],
												"src": "5574:397:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6150:246:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6167:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6178:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6160:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6160:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6160:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6201:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6212:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6197:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6197:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6217:2:1",
																		"type": "",
																		"value": "56"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6190:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6190:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6190:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6240:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6251:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6236:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6236:18:1"
																	},
																	{
																		"hexValue": "4552433732313a20617070726f76652063616c6c6572206973206e6f74206f77",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6256:34:1",
																		"type": "",
																		"value": "ERC721: approve caller is not ow"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6229:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6229:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6229:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6311:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6322:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6307:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6307:18:1"
																	},
																	{
																		"hexValue": "6e6572206e6f7220617070726f76656420666f7220616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6327:26:1",
																		"type": "",
																		"value": "ner nor approved for all"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6300:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6300:54:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6300:54:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6363:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6375:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6386:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6371:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6371:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6363:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6127:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6141:4:1",
														"type": ""
													}
												],
												"src": "5976:420:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6575:239:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6592:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6603:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6585:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6585:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6585:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6626:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6637:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6622:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6622:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6642:2:1",
																		"type": "",
																		"value": "49"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6615:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6615:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6615:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6665:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6676:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6661:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6661:18:1"
																	},
																	{
																		"hexValue": "4552433732313a207472616e736665722063616c6c6572206973206e6f74206f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6681:34:1",
																		"type": "",
																		"value": "ERC721: transfer caller is not o"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6654:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6654:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6654:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6736:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6747:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6732:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6732:18:1"
																	},
																	{
																		"hexValue": "776e6572206e6f7220617070726f766564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6752:19:1",
																		"type": "",
																		"value": "wner nor approved"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6725:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6725:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6725:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6781:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6793:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6804:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6789:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6789:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6781:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6552:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6566:4:1",
														"type": ""
													}
												],
												"src": "6401:413:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6993:231:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7010:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7021:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7003:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7003:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7003:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7044:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7055:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7040:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7040:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7060:2:1",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7033:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7033:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7033:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7083:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7094:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7079:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7079:18:1"
																	},
																	{
																		"hexValue": "4552433732313a206f776e657220717565727920666f72206e6f6e6578697374",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7099:34:1",
																		"type": "",
																		"value": "ERC721: owner query for nonexist"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7072:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7072:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7072:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7154:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7165:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7150:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7150:18:1"
																	},
																	{
																		"hexValue": "656e7420746f6b656e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7170:11:1",
																		"type": "",
																		"value": "ent token"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7143:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7143:39:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7143:39:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7191:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7203:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7214:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7199:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7199:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7191:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6970:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6984:4:1",
														"type": ""
													}
												],
												"src": "6819:405:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7403:232:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7420:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7431:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7413:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7413:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7413:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7454:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7465:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7450:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7450:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7470:2:1",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7443:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7443:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7443:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7493:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7504:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7489:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7489:18:1"
																	},
																	{
																		"hexValue": "4552433732313a2062616c616e636520717565727920666f7220746865207a65",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7509:34:1",
																		"type": "",
																		"value": "ERC721: balance query for the ze"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7482:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7482:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7482:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7564:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7575:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7560:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7560:18:1"
																	},
																	{
																		"hexValue": "726f2061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7580:12:1",
																		"type": "",
																		"value": "ro address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7553:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7553:40:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7553:40:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7602:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7614:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7625:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7610:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7610:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7602:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7380:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7394:4:1",
														"type": ""
													}
												],
												"src": "7229:406:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7814:175:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7831:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7842:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7824:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7824:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7824:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7865:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7876:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7861:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7861:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7881:2:1",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7854:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7854:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7854:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7904:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7915:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7900:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7900:18:1"
																	},
																	{
																		"hexValue": "4552433732313a20617070726f766520746f2063616c6c6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7920:27:1",
																		"type": "",
																		"value": "ERC721: approve to caller"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7893:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7893:55:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7893:55:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7957:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7969:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7980:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7965:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7965:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7957:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7791:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7805:4:1",
														"type": ""
													}
												],
												"src": "7640:349:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8168:237:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8185:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8196:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8178:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8178:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8178:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8219:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8230:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8215:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8215:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8235:2:1",
																		"type": "",
																		"value": "47"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8208:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8208:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8208:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8258:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8269:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8254:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8254:18:1"
																	},
																	{
																		"hexValue": "4552433732314d657461646174613a2055524920717565727920666f72206e6f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8274:34:1",
																		"type": "",
																		"value": "ERC721Metadata: URI query for no"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8247:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8247:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8247:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8329:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8340:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8325:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8325:18:1"
																	},
																	{
																		"hexValue": "6e6578697374656e7420746f6b656e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8345:17:1",
																		"type": "",
																		"value": "nexistent token"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8318:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8318:45:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8318:45:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8372:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8384:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8395:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8380:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8380:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8372:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8145:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8159:4:1",
														"type": ""
													}
												],
												"src": "7994:411:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8597:309:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8607:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8627:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "8621:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8621:13:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "8611:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "8682:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8690:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8678:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8678:17:1"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8697:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8702:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "8643:34:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8643:66:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8643:66:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8718:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8735:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8740:6:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8731:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8731:16:1"
															},
															"variables": [
																{
																	"name": "end_1",
																	"nodeType": "YulTypedName",
																	"src": "8722:5:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8756:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "8778:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "8772:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8772:13:1"
															},
															"variables": [
																{
																	"name": "length_1",
																	"nodeType": "YulTypedName",
																	"src": "8760:8:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "8833:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8841:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8829:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8829:17:1"
																	},
																	{
																		"name": "end_1",
																		"nodeType": "YulIdentifier",
																		"src": "8848:5:1"
																	},
																	{
																		"name": "length_1",
																		"nodeType": "YulIdentifier",
																		"src": "8855:8:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "8794:34:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8794:70:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8794:70:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8873:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "end_1",
																		"nodeType": "YulIdentifier",
																		"src": "8884:5:1"
																	},
																	{
																		"name": "length_1",
																		"nodeType": "YulIdentifier",
																		"src": "8891:8:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8880:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8880:20:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "8873:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8565:3:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "8570:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8578:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8589:3:1",
														"type": ""
													}
												],
												"src": "8410:496:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9085:234:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9102:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9113:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9095:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9095:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9095:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9136:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9147:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9132:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9132:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9152:2:1",
																		"type": "",
																		"value": "44"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9125:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9125:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9125:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9175:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9186:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9171:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9171:18:1"
																	},
																	{
																		"hexValue": "4552433732313a206f70657261746f7220717565727920666f72206e6f6e6578",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9191:34:1",
																		"type": "",
																		"value": "ERC721: operator query for nonex"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9164:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9164:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9164:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9246:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9257:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9242:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9242:18:1"
																	},
																	{
																		"hexValue": "697374656e7420746f6b656e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9262:14:1",
																		"type": "",
																		"value": "istent token"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9235:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9235:42:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9235:42:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9286:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9298:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9309:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9294:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9294:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9286:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9062:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9076:4:1",
														"type": ""
													}
												],
												"src": "8911:408:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9498:231:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9515:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9526:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9508:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9508:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9508:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9549:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9560:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9545:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9545:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9565:2:1",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9538:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9538:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9538:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9588:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9599:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9584:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9584:18:1"
																	},
																	{
																		"hexValue": "4552433732313a207472616e73666572206f6620746f6b656e20746861742069",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9604:34:1",
																		"type": "",
																		"value": "ERC721: transfer of token that i"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9577:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9577:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9577:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9659:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9670:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9655:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9655:18:1"
																	},
																	{
																		"hexValue": "73206e6f74206f776e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9675:11:1",
																		"type": "",
																		"value": "s not own"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9648:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9648:39:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9648:39:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9696:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9708:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9719:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9704:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9704:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9696:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a01073130a885d6c1c1af6ac75fc3b1c4f9403c235362962bbf528e2bd87d950__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9475:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9489:4:1",
														"type": ""
													}
												],
												"src": "9324:405:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9908:226:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9925:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9936:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9918:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9918:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9918:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9959:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9970:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9955:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9955:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9975:2:1",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9948:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9948:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9948:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9998:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10009:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9994:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9994:18:1"
																	},
																	{
																		"hexValue": "4552433732313a207472616e7366657220746f20746865207a65726f20616464",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10014:34:1",
																		"type": "",
																		"value": "ERC721: transfer to the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9987:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9987:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9987:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10069:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10080:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10065:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10065:18:1"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10085:6:1",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10058:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10058:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10058:34:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10101:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10113:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10124:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10109:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10109:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10101:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9885:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9899:4:1",
														"type": ""
													}
												],
												"src": "9734:400:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10171:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10188:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10195:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10200:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "10191:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10191:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10181:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10181:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10181:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10228:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10231:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10221:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10221:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10221:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10252:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10255:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "10245:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10245:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10245:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "10139:127:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10320:79:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10330:17:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10342:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10345:1:1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "10338:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10338:9:1"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "10330:4:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10371:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "10373:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10373:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10373:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nodeType": "YulIdentifier",
																		"src": "10362:4:1"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10368:1:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "10359:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10359:11:1"
															},
															"nodeType": "YulIf",
															"src": "10356:37:1"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "10302:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "10305:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "10311:4:1",
														"type": ""
													}
												],
												"src": "10271:128:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10452:77:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10462:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10473:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10476:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10469:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10469:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "10462:3:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10501:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "10503:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10503:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10503:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10493:1:1"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "10496:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "10490:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10490:10:1"
															},
															"nodeType": "YulIf",
															"src": "10487:36:1"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "10435:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "10438:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "10444:3:1",
														"type": ""
													}
												],
												"src": "10404:125:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10708:240:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10725:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10736:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10718:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10718:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10718:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10759:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10770:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10755:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10755:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10775:2:1",
																		"type": "",
																		"value": "50"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10748:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10748:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10748:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10798:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10809:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10794:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10794:18:1"
																	},
																	{
																		"hexValue": "4552433732313a207472616e7366657220746f206e6f6e204552433732315265",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10814:34:1",
																		"type": "",
																		"value": "ERC721: transfer to non ERC721Re"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10787:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10787:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10787:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10869:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10880:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10865:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10865:18:1"
																	},
																	{
																		"hexValue": "63656976657220696d706c656d656e746572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10885:20:1",
																		"type": "",
																		"value": "ceiver implementer"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10858:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10858:48:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10858:48:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10915:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10927:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10938:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10923:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10923:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10915:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10685:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10699:4:1",
														"type": ""
													}
												],
												"src": "10534:414:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11000:88:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11031:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "11033:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11033:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11033:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11016:5:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11027:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "11023:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11023:6:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "11013:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11013:17:1"
															},
															"nodeType": "YulIf",
															"src": "11010:43:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11062:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11073:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11080:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11069:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11069:13:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "11062:3:1"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10982:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "10992:3:1",
														"type": ""
													}
												],
												"src": "10953:135:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11125:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11142:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11149:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11154:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "11145:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11145:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11135:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11135:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11135:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11182:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11185:4:1",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11175:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11175:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11175:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11206:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11209:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "11199:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11199:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11199:15:1"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "11093:127:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11271:74:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11294:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "11296:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11296:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11296:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11291:1:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "11284:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11284:9:1"
															},
															"nodeType": "YulIf",
															"src": "11281:35:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11325:14:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11334:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11337:1:1"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "11330:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11330:9:1"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "11325:1:1"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "11256:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "11259:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "11265:1:1",
														"type": ""
													}
												],
												"src": "11225:120:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11388:74:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11411:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "11413:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11413:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11413:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11408:1:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "11401:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11401:9:1"
															},
															"nodeType": "YulIf",
															"src": "11398:35:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11442:14:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11451:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11454:1:1"
																	}
																],
																"functionName": {
																	"name": "mod",
																	"nodeType": "YulIdentifier",
																	"src": "11447:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11447:9:1"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "11442:1:1"
																}
															]
														}
													]
												},
												"name": "mod_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "11373:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "11376:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "11382:1:1",
														"type": ""
													}
												],
												"src": "11350:112:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11499:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11516:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11523:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11528:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "11519:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11519:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11509:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11509:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11509:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11556:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11559:4:1",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11549:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11549:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11549:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11580:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11583:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "11573:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11573:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11573:15:1"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "11467:127:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11802:286:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11812:29:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11830:3:1",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11835:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "11826:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11826:11:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11839:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "11822:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11822:19:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "11816:2:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11857:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "11872:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "11880:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "11868:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11868:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11850:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11850:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11850:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11904:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11915:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11900:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11900:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "11924:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "11932:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "11920:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11920:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11893:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11893:43:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11893:43:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11956:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11967:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11952:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11952:18:1"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "11972:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11945:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11945:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11945:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11999:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12010:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11995:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11995:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12015:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11988:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11988:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11988:31:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12028:54:1",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "12054:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12066:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12077:3:1",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12062:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12062:19:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nodeType": "YulIdentifier",
																	"src": "12036:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12036:46:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12028:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11747:9:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "11758:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "11766:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "11774:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11782:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11793:4:1",
														"type": ""
													}
												],
												"src": "11599:489:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12173:169:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12219:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12228:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12231:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "12221:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12221:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12221:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "12194:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12203:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "12190:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12190:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12215:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "12186:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12186:32:1"
															},
															"nodeType": "YulIf",
															"src": "12183:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12244:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12263:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "12257:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12257:16:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "12248:5:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12306:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "12282:23:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12282:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12282:30:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12321:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "12331:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "12321:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12139:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "12150:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "12162:6:1",
														"type": ""
													}
												],
												"src": "12093:249:1"
											}
										]
									},
									"contents": "{\n    { }\n    function validator_revert_bytes4(value)\n    {\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value1 := value\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        let offset := calldataload(add(headStart, 96))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := calldataload(_2)\n        if gt(_3, _1) { panic_error_0x41() }\n        let _4 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_3, 0x1f), _4), 63), _4))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _3)\n        if gt(add(add(_2, _3), 32), dataEnd) { revert(0, 0) }\n        calldatacopy(add(memPtr, 32), add(_2, 32), _3)\n        mstore(add(add(memPtr, _3), 32), 0)\n        value3 := memPtr\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 44)\n        mstore(add(headStart, 64), \"ERC721: approved query for nonex\")\n        mstore(add(headStart, 96), \"istent token\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"ERC721: approval to current owne\")\n        mstore(add(headStart, 96), \"r\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 56)\n        mstore(add(headStart, 64), \"ERC721: approve caller is not ow\")\n        mstore(add(headStart, 96), \"ner nor approved for all\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 49)\n        mstore(add(headStart, 64), \"ERC721: transfer caller is not o\")\n        mstore(add(headStart, 96), \"wner nor approved\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"ERC721: owner query for nonexist\")\n        mstore(add(headStart, 96), \"ent token\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"ERC721: balance query for the ze\")\n        mstore(add(headStart, 96), \"ro address\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"ERC721: approve to caller\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 47)\n        mstore(add(headStart, 64), \"ERC721Metadata: URI query for no\")\n        mstore(add(headStart, 96), \"nexistent token\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), pos, length)\n        let end_1 := add(pos, length)\n        let length_1 := mload(value1)\n        copy_memory_to_memory_with_cleanup(add(value1, 0x20), end_1, length_1)\n        end := add(end_1, length_1)\n    }\n    function abi_encode_tuple_t_stringliteral_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 44)\n        mstore(add(headStart, 64), \"ERC721: operator query for nonex\")\n        mstore(add(headStart, 96), \"istent token\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_a01073130a885d6c1c1af6ac75fc3b1c4f9403c235362962bbf528e2bd87d950__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"ERC721: transfer of token that i\")\n        mstore(add(headStart, 96), \"s not own\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC721: transfer to the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 50)\n        mstore(add(headStart, 64), \"ERC721: transfer to non ERC721Re\")\n        mstore(add(headStart, 96), \"ceiver implementer\")\n        tail := add(headStart, 128)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function panic_error_0x12()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y) { panic_error_0x12() }\n        r := div(x, y)\n    }\n    function mod_t_uint256(x, y) -> r\n    {\n        if iszero(y) { panic_error_0x12() }\n        r := mod(x, y)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), 128)\n        tail := abi_encode_string(value3, add(headStart, 128))\n    }\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100cf5760003560e01c80636352211e1161008c578063a22cb46511610066578063a22cb465146101b3578063b88d4fde146101c6578063c87b56dd146101d9578063e985e9c5146101ec57600080fd5b80636352211e1461017757806370a082311461018a57806395d89b41146101ab57600080fd5b806301ffc9a7146100d457806306fdde03146100fc578063081812fc14610111578063095ea7b31461013c57806323b872dd1461015157806342842e0e14610164575b600080fd5b6100e76100e2366004610d30565b6101ff565b60405190151581526020015b60405180910390f35b610104610251565b6040516100f39190610d9d565b61012461011f366004610db0565b6102e3565b6040516001600160a01b0390911681526020016100f3565b61014f61014a366004610de5565b61037d565b005b61014f61015f366004610e0f565b610492565b61014f610172366004610e0f565b6104c3565b610124610185366004610db0565b6104de565b61019d610198366004610e4b565b610555565b6040519081526020016100f3565b6101046105dc565b61014f6101c1366004610e66565b6105eb565b61014f6101d4366004610eb8565b6106af565b6101046101e7366004610db0565b6106e7565b6100e76101fa366004610f94565b6107cf565b60006001600160e01b031982166380ac58cd60e01b148061023057506001600160e01b03198216635b5e139f60e01b145b8061024b57506301ffc9a760e01b6001600160e01b03198316145b92915050565b60606000805461026090610fc7565b80601f016020809104026020016040519081016040528092919081815260200182805461028c90610fc7565b80156102d95780601f106102ae576101008083540402835291602001916102d9565b820191906000526020600020905b8154815290600101906020018083116102bc57829003601f168201915b5050505050905090565b6000818152600260205260408120546001600160a01b03166103615760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b6000610388826104de565b9050806001600160a01b0316836001600160a01b0316036103f55760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b6064820152608401610358565b336001600160a01b0382161480610411575061041181336107cf565b6104835760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c00000000000000006064820152608401610358565b61048d83836107fd565b505050565b61049c338261086b565b6104b85760405162461bcd60e51b815260040161035890611001565b61048d838383610942565b61048d838383604051806020016040528060008152506106af565b6000818152600260205260408120546001600160a01b03168061024b5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b6064820152608401610358565b60006001600160a01b0382166105c05760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b6064820152608401610358565b506001600160a01b031660009081526003602052604090205490565b60606001805461026090610fc7565b336001600160a01b038316036106435760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610358565b3360008181526005602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b6106b9338361086b565b6106d55760405162461bcd60e51b815260040161035890611001565b6106e184848484610ae2565b50505050565b6000818152600260205260409020546060906001600160a01b03166107665760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b6064820152608401610358565b600061077d60408051602081019091526000815290565b9050600081511161079d57604051806020016040528060008152506107c8565b806107a784610b15565b6040516020016107b8929190611052565b6040516020818303038152906040525b9392505050565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b600081815260046020526040902080546001600160a01b0319166001600160a01b0384169081179091558190610832826104de565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000818152600260205260408120546001600160a01b03166108e45760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b6064820152608401610358565b60006108ef836104de565b9050806001600160a01b0316846001600160a01b0316148061092a5750836001600160a01b031661091f846102e3565b6001600160a01b0316145b8061093a575061093a81856107cf565b949350505050565b826001600160a01b0316610955826104de565b6001600160a01b0316146109bd5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960448201526839903737ba1037bbb760b91b6064820152608401610358565b6001600160a01b038216610a1f5760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610358565b610a2a6000826107fd565b6001600160a01b0383166000908152600360205260408120805460019290610a53908490611097565b90915550506001600160a01b0382166000908152600360205260408120805460019290610a819084906110aa565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b610aed848484610942565b610af984848484610c16565b6106e15760405162461bcd60e51b8152600401610358906110bd565b606081600003610b3c5750506040805180820190915260018152600360fc1b602082015290565b8160005b8115610b665780610b508161110f565b9150610b5f9050600a8361113e565b9150610b40565b60008167ffffffffffffffff811115610b8157610b81610ea2565b6040519080825280601f01601f191660200182016040528015610bab576020820181803683370190505b5090505b841561093a57610bc0600183611097565b9150610bcd600a86611152565b610bd89060306110aa565b60f81b818381518110610bed57610bed611166565b60200101906001600160f81b031916908160001a905350610c0f600a8661113e565b9450610baf565b60006001600160a01b0384163b15610d0c57604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290610c5a90339089908890889060040161117c565b6020604051808303816000875af1925050508015610c95575060408051601f3d908101601f19168201909252610c92918101906111b9565b60015b610cf2573d808015610cc3576040519150601f19603f3d011682016040523d82523d6000602084013e610cc8565b606091505b508051600003610cea5760405162461bcd60e51b8152600401610358906110bd565b805181602001fd5b6001600160e01b031916630a85bd0160e11b14905061093a565b506001949350505050565b6001600160e01b031981168114610d2d57600080fd5b50565b600060208284031215610d4257600080fd5b81356107c881610d17565b60005b83811015610d68578181015183820152602001610d50565b50506000910152565b60008151808452610d89816020860160208601610d4d565b601f01601f19169290920160200192915050565b6020815260006107c86020830184610d71565b600060208284031215610dc257600080fd5b5035919050565b80356001600160a01b0381168114610de057600080fd5b919050565b60008060408385031215610df857600080fd5b610e0183610dc9565b946020939093013593505050565b600080600060608486031215610e2457600080fd5b610e2d84610dc9565b9250610e3b60208501610dc9565b9150604084013590509250925092565b600060208284031215610e5d57600080fd5b6107c882610dc9565b60008060408385031215610e7957600080fd5b610e8283610dc9565b915060208301358015158114610e9757600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b60008060008060808587031215610ece57600080fd5b610ed785610dc9565b9350610ee560208601610dc9565b925060408501359150606085013567ffffffffffffffff80821115610f0957600080fd5b818701915087601f830112610f1d57600080fd5b813581811115610f2f57610f2f610ea2565b604051601f8201601f19908116603f01168101908382118183101715610f5757610f57610ea2565b816040528281528a6020848701011115610f7057600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b60008060408385031215610fa757600080fd5b610fb083610dc9565b9150610fbe60208401610dc9565b90509250929050565b600181811c90821680610fdb57607f821691505b602082108103610ffb57634e487b7160e01b600052602260045260246000fd5b50919050565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b60008351611064818460208801610d4d565b835190830190611078818360208801610d4d565b01949350505050565b634e487b7160e01b600052601160045260246000fd5b8181038181111561024b5761024b611081565b8082018082111561024b5761024b611081565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b60006001820161112157611121611081565b5060010190565b634e487b7160e01b600052601260045260246000fd5b60008261114d5761114d611128565b500490565b60008261116157611161611128565b500690565b634e487b7160e01b600052603260045260246000fd5b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906111af90830184610d71565b9695505050505050565b6000602082840312156111cb57600080fd5b81516107c881610d1756fea26469706673582212208f330809fc70a4b0a8f12119ae14d6e030412ebde9bfa3ad76d8aa48f68e07a564736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x1B3 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x1C6 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x1D9 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x1EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x177 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x18A JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x111 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x13C JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x151 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x164 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE7 PUSH2 0xE2 CALLDATASIZE PUSH1 0x4 PUSH2 0xD30 JUMP JUMPDEST PUSH2 0x1FF JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x104 PUSH2 0x251 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0xD9D JUMP JUMPDEST PUSH2 0x124 PUSH2 0x11F CALLDATASIZE PUSH1 0x4 PUSH2 0xDB0 JUMP JUMPDEST PUSH2 0x2E3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xF3 JUMP JUMPDEST PUSH2 0x14F PUSH2 0x14A CALLDATASIZE PUSH1 0x4 PUSH2 0xDE5 JUMP JUMPDEST PUSH2 0x37D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x14F PUSH2 0x15F CALLDATASIZE PUSH1 0x4 PUSH2 0xE0F JUMP JUMPDEST PUSH2 0x492 JUMP JUMPDEST PUSH2 0x14F PUSH2 0x172 CALLDATASIZE PUSH1 0x4 PUSH2 0xE0F JUMP JUMPDEST PUSH2 0x4C3 JUMP JUMPDEST PUSH2 0x124 PUSH2 0x185 CALLDATASIZE PUSH1 0x4 PUSH2 0xDB0 JUMP JUMPDEST PUSH2 0x4DE JUMP JUMPDEST PUSH2 0x19D PUSH2 0x198 CALLDATASIZE PUSH1 0x4 PUSH2 0xE4B JUMP JUMPDEST PUSH2 0x555 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xF3 JUMP JUMPDEST PUSH2 0x104 PUSH2 0x5DC JUMP JUMPDEST PUSH2 0x14F PUSH2 0x1C1 CALLDATASIZE PUSH1 0x4 PUSH2 0xE66 JUMP JUMPDEST PUSH2 0x5EB JUMP JUMPDEST PUSH2 0x14F PUSH2 0x1D4 CALLDATASIZE PUSH1 0x4 PUSH2 0xEB8 JUMP JUMPDEST PUSH2 0x6AF JUMP JUMPDEST PUSH2 0x104 PUSH2 0x1E7 CALLDATASIZE PUSH1 0x4 PUSH2 0xDB0 JUMP JUMPDEST PUSH2 0x6E7 JUMP JUMPDEST PUSH2 0xE7 PUSH2 0x1FA CALLDATASIZE PUSH1 0x4 PUSH2 0xF94 JUMP JUMPDEST PUSH2 0x7CF JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x80AC58CD PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x230 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5B5E139F PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x24B JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x260 SWAP1 PUSH2 0xFC7 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x28C SWAP1 PUSH2 0xFC7 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2D9 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2AE JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2D9 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2BC JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x361 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76656420717565727920666F72206E6F6E6578 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x34B9BA32B73A103A37B5B2B7 PUSH1 0xA1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x388 DUP3 PUSH2 0x4DE JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x3F5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x358 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ DUP1 PUSH2 0x411 JUMPI POP PUSH2 0x411 DUP2 CALLER PUSH2 0x7CF JUMP JUMPDEST PUSH2 0x483 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F74206F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E6572206E6F7220617070726F76656420666F7220616C6C0000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x358 JUMP JUMPDEST PUSH2 0x48D DUP4 DUP4 PUSH2 0x7FD JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x49C CALLER DUP3 PUSH2 0x86B JUMP JUMPDEST PUSH2 0x4B8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x358 SWAP1 PUSH2 0x1001 JUMP JUMPDEST PUSH2 0x48D DUP4 DUP4 DUP4 PUSH2 0x942 JUMP JUMPDEST PUSH2 0x48D DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x6AF JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x24B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206F776E657220717565727920666F72206E6F6E6578697374 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x32B73A103A37B5B2B7 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x358 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5C0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A2062616C616E636520717565727920666F7220746865207A65 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x726F2061646472657373 PUSH1 0xB0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x358 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x260 SWAP1 PUSH2 0xFC7 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SUB PUSH2 0x643 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x358 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD SWAP1 DUP2 MSTORE SWAP2 SWAP3 SWAP2 PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x6B9 CALLER DUP4 PUSH2 0x86B JUMP JUMPDEST PUSH2 0x6D5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x358 SWAP1 PUSH2 0x1001 JUMP JUMPDEST PUSH2 0x6E1 DUP5 DUP5 DUP5 DUP5 PUSH2 0xAE2 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x60 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x766 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732314D657461646174613A2055524920717565727920666F72206E6F PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x3732BC34B9BA32B73A103A37B5B2B7 PUSH1 0x89 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x358 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x77D PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x79D JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x7C8 JUMP JUMPDEST DUP1 PUSH2 0x7A7 DUP5 PUSH2 0xB15 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x7B8 SWAP3 SWAP2 SWAP1 PUSH2 0x1052 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH2 0x832 DUP3 PUSH2 0x4DE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x8E4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206F70657261746F7220717565727920666F72206E6F6E6578 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x34B9BA32B73A103A37B5B2B7 PUSH1 0xA1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x358 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8EF DUP4 PUSH2 0x4DE JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x92A JUMPI POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x91F DUP5 PUSH2 0x2E3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST DUP1 PUSH2 0x93A JUMPI POP PUSH2 0x93A DUP2 DUP6 PUSH2 0x7CF JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x955 DUP3 PUSH2 0x4DE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x9BD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E73666572206F6620746F6B656E20746861742069 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x39903737BA1037BBB7 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x358 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xA1F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x358 JUMP JUMPDEST PUSH2 0xA2A PUSH1 0x0 DUP3 PUSH2 0x7FD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0xA53 SWAP1 DUP5 SWAP1 PUSH2 0x1097 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0xA81 SWAP1 DUP5 SWAP1 PUSH2 0x10AA JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD DUP5 SWAP4 SWAP2 DUP8 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG4 POP POP POP JUMP JUMPDEST PUSH2 0xAED DUP5 DUP5 DUP5 PUSH2 0x942 JUMP JUMPDEST PUSH2 0xAF9 DUP5 DUP5 DUP5 DUP5 PUSH2 0xC16 JUMP JUMPDEST PUSH2 0x6E1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x358 SWAP1 PUSH2 0x10BD JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH1 0x0 SUB PUSH2 0xB3C JUMPI POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x3 PUSH1 0xFC SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x0 JUMPDEST DUP2 ISZERO PUSH2 0xB66 JUMPI DUP1 PUSH2 0xB50 DUP2 PUSH2 0x110F JUMP JUMPDEST SWAP2 POP PUSH2 0xB5F SWAP1 POP PUSH1 0xA DUP4 PUSH2 0x113E JUMP JUMPDEST SWAP2 POP PUSH2 0xB40 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xB81 JUMPI PUSH2 0xB81 PUSH2 0xEA2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xBAB JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP JUMPDEST DUP5 ISZERO PUSH2 0x93A JUMPI PUSH2 0xBC0 PUSH1 0x1 DUP4 PUSH2 0x1097 JUMP JUMPDEST SWAP2 POP PUSH2 0xBCD PUSH1 0xA DUP7 PUSH2 0x1152 JUMP JUMPDEST PUSH2 0xBD8 SWAP1 PUSH1 0x30 PUSH2 0x10AA JUMP JUMPDEST PUSH1 0xF8 SHL DUP2 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xBED JUMPI PUSH2 0xBED PUSH2 0x1166 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH2 0xC0F PUSH1 0xA DUP7 PUSH2 0x113E JUMP JUMPDEST SWAP5 POP PUSH2 0xBAF JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0xD0C JUMPI PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0xC5A SWAP1 CALLER SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x117C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xC95 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xC92 SWAP2 DUP2 ADD SWAP1 PUSH2 0x11B9 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xCF2 JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0xCC3 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xCC8 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0xCEA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x358 SWAP1 PUSH2 0x10BD JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ SWAP1 POP PUSH2 0x93A JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0xD2D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD42 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x7C8 DUP2 PUSH2 0xD17 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xD68 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xD50 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0xD89 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0xD4D JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x7C8 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xD71 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDC2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xDE0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xDF8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE01 DUP4 PUSH2 0xDC9 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xE24 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE2D DUP5 PUSH2 0xDC9 JUMP JUMPDEST SWAP3 POP PUSH2 0xE3B PUSH1 0x20 DUP6 ADD PUSH2 0xDC9 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE5D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7C8 DUP3 PUSH2 0xDC9 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE79 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE82 DUP4 PUSH2 0xDC9 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xE97 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xECE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xED7 DUP6 PUSH2 0xDC9 JUMP JUMPDEST SWAP4 POP PUSH2 0xEE5 PUSH1 0x20 DUP7 ADD PUSH2 0xDC9 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xF09 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xF1D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0xF2F JUMPI PUSH2 0xF2F PUSH2 0xEA2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0xF57 JUMPI PUSH2 0xF57 PUSH2 0xEA2 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP11 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0xF70 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xFA7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xFB0 DUP4 PUSH2 0xDC9 JUMP JUMPDEST SWAP2 POP PUSH2 0xFBE PUSH1 0x20 DUP5 ADD PUSH2 0xDC9 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xFDB JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xFFB JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x31 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E736665722063616C6C6572206973206E6F74206F PUSH1 0x40 DUP3 ADD MSTORE PUSH17 0x1DDB995C881B9BDC88185C1C1C9BDD9959 PUSH1 0x7A SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH2 0x1064 DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0xD4D JUMP JUMPDEST DUP4 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0x1078 DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0xD4D JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x24B JUMPI PUSH2 0x24B PUSH2 0x1081 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x24B JUMPI PUSH2 0x24B PUSH2 0x1081 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x32 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x40 DUP3 ADD MSTORE PUSH18 0x31B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x71 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x1121 JUMPI PUSH2 0x1121 PUSH2 0x1081 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x114D JUMPI PUSH2 0x114D PUSH2 0x1128 JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1161 JUMPI PUSH2 0x1161 PUSH2 0x1128 JUMP JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x11AF SWAP1 DUP4 ADD DUP5 PUSH2 0xD71 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x7C8 DUP2 PUSH2 0xD17 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP16 CALLER ADDMOD MULMOD 0xFC PUSH17 0xA4B0A8F12119AE14D6E030412EBDE9BFA3 0xAD PUSH23 0xD8AA48F68E07A564736F6C634300081200330000000000 ",
							"sourceMap": "19800:12781:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20781:292;;;;;;:::i;:::-;;:::i;:::-;;;565:14:1;;558:22;540:41;;528:2;513:18;20781:292:0;;;;;;;;21713:100;;;:::i;:::-;;;;;;;:::i;23173:221::-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;1697:32:1;;;1679:51;;1667:2;1652:18;23173:221:0;1533:203:1;22710:397:0;;;;;;:::i;:::-;;:::i;:::-;;24063:305;;;;;;:::i;:::-;;:::i;24439:151::-;;;;;;:::i;:::-;;:::i;21407:239::-;;;;;;:::i;:::-;;:::i;21137:208::-;;;;;;:::i;:::-;;:::i;:::-;;;2848:25:1;;;2836:2;2821:18;21137:208:0;2702:177:1;21882:104:0;;;:::i;23466:295::-;;;;;;:::i;:::-;;:::i;24661:285::-;;;;;;:::i;:::-;;:::i;22057:360::-;;;;;;:::i;:::-;;:::i;23832:164::-;;;;;;:::i;:::-;;:::i;20781:292::-;20883:4;-1:-1:-1;;;;;;20907:40:0;;-1:-1:-1;;;20907:40:0;;:105;;-1:-1:-1;;;;;;;20964:48:0;;-1:-1:-1;;;20964:48:0;20907:105;:158;;;-1:-1:-1;;;;;;;;;;19384:40:0;;;21029:36;20900:165;20781:292;-1:-1:-1;;20781:292:0:o;21713:100::-;21767:13;21800:5;21793:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21713:100;:::o;23173:221::-;23249:7;26502:16;;;:7;:16;;;;;;-1:-1:-1;;;;;26502:16:0;23269:73;;;;-1:-1:-1;;;23269:73:0;;5363:2:1;23269:73:0;;;5345:21:1;5402:2;5382:18;;;5375:30;5441:34;5421:18;;;5414:62;-1:-1:-1;;;5492:18:1;;;5485:42;5544:19;;23269:73:0;;;;;;;;;-1:-1:-1;23362:24:0;;;;:15;:24;;;;;;-1:-1:-1;;;;;23362:24:0;;23173:221::o;22710:397::-;22791:13;22807:23;22822:7;22807:14;:23::i;:::-;22791:39;;22855:5;-1:-1:-1;;;;;22849:11:0;:2;-1:-1:-1;;;;;22849:11:0;;22841:57;;;;-1:-1:-1;;;22841:57:0;;5776:2:1;22841:57:0;;;5758:21:1;5815:2;5795:18;;;5788:30;5854:34;5834:18;;;5827:62;-1:-1:-1;;;5905:18:1;;;5898:31;5946:19;;22841:57:0;5574:397:1;22841:57:0;16135:10;-1:-1:-1;;;;;22919:21:0;;;;:62;;-1:-1:-1;22944:37:0;22961:5;16135:10;23832:164;:::i;22944:37::-;22911:154;;;;-1:-1:-1;;;22911:154:0;;6178:2:1;22911:154:0;;;6160:21:1;6217:2;6197:18;;;6190:30;6256:34;6236:18;;;6229:62;6327:26;6307:18;;;6300:54;6371:19;;22911:154:0;5976:420:1;22911:154:0;23078:21;23087:2;23091:7;23078:8;:21::i;:::-;22780:327;22710:397;;:::o;24063:305::-;24224:41;16135:10;24257:7;24224:18;:41::i;:::-;24216:103;;;;-1:-1:-1;;;24216:103:0;;;;;;;:::i;:::-;24332:28;24342:4;24348:2;24352:7;24332:9;:28::i;24439:151::-;24543:39;24560:4;24566:2;24570:7;24543:39;;;;;;;;;;;;:16;:39::i;21407:239::-;21479:7;21515:16;;;:7;:16;;;;;;-1:-1:-1;;;;;21515:16:0;;21542:73;;;;-1:-1:-1;;;21542:73:0;;7021:2:1;21542:73:0;;;7003:21:1;7060:2;7040:18;;;7033:30;7099:34;7079:18;;;7072:62;-1:-1:-1;;;7150:18:1;;;7143:39;7199:19;;21542:73:0;6819:405:1;21137:208:0;21209:7;-1:-1:-1;;;;;21237:19:0;;21229:74;;;;-1:-1:-1;;;21229:74:0;;7431:2:1;21229:74:0;;;7413:21:1;7470:2;7450:18;;;7443:30;7509:34;7489:18;;;7482:62;-1:-1:-1;;;7560:18:1;;;7553:40;7610:19;;21229:74:0;7229:406:1;21229:74:0;-1:-1:-1;;;;;;21321:16:0;;;;;:9;:16;;;;;;;21137:208::o;21882:104::-;21938:13;21971:7;21964:14;;;;;:::i;23466:295::-;16135:10;-1:-1:-1;;;;;23569:24:0;;;23561:62;;;;-1:-1:-1;;;23561:62:0;;7842:2:1;23561:62:0;;;7824:21:1;7881:2;7861:18;;;7854:30;7920:27;7900:18;;;7893:55;7965:18;;23561:62:0;7640:349:1;23561:62:0;16135:10;23636:32;;;;:18;:32;;;;;;;;-1:-1:-1;;;;;23636:42:0;;;;;;;;;;;;:53;;-1:-1:-1;;23636:53:0;;;;;;;;;;23705:48;;540:41:1;;;23636:42:0;;16135:10;23705:48;;513:18:1;23705:48:0;;;;;;;23466:295;;:::o;24661:285::-;24793:41;16135:10;24826:7;24793:18;:41::i;:::-;24785:103;;;;-1:-1:-1;;;24785:103:0;;;;;;;:::i;:::-;24899:39;24913:4;24919:2;24923:7;24932:5;24899:13;:39::i;:::-;24661:285;;;;:::o;22057:360::-;26478:4;26502:16;;;:7;:16;;;;;;22130:13;;-1:-1:-1;;;;;26502:16:0;22156:76;;;;-1:-1:-1;;;22156:76:0;;8196:2:1;22156:76:0;;;8178:21:1;8235:2;8215:18;;;8208:30;8274:34;8254:18;;;8247:62;-1:-1:-1;;;8325:18:1;;;8318:45;8380:19;;22156:76:0;7994:411:1;22156:76:0;22245:21;22269:10;22631:9;;;;;;;;;-1:-1:-1;22631:9:0;;;22554:94;22269:10;22245:34;;22321:1;22303:7;22297:21;:25;:112;;;;;;;;;;;;;;;;;22362:7;22371:18;:7;:16;:18::i;:::-;22345:45;;;;;;;;;:::i;:::-;;;;;;;;;;;;;22297:112;22290:119;22057:360;-1:-1:-1;;;22057:360:0:o;23832:164::-;-1:-1:-1;;;;;23953:25:0;;;23929:4;23953:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;23832:164::o;30290:174::-;30365:24;;;;:15;:24;;;;;:29;;-1:-1:-1;;;;;;30365:29:0;-1:-1:-1;;;;;30365:29:0;;;;;;;;:24;;30419:23;30365:24;30419:14;:23::i;:::-;-1:-1:-1;;;;;30410:46:0;;;;;;;;;;;30290:174;;:::o;26707:348::-;26800:4;26502:16;;;:7;:16;;;;;;-1:-1:-1;;;;;26502:16:0;26817:73;;;;-1:-1:-1;;;26817:73:0;;9113:2:1;26817:73:0;;;9095:21:1;9152:2;9132:18;;;9125:30;9191:34;9171:18;;;9164:62;-1:-1:-1;;;9242:18:1;;;9235:42;9294:19;;26817:73:0;8911:408:1;26817:73:0;26901:13;26917:23;26932:7;26917:14;:23::i;:::-;26901:39;;26970:5;-1:-1:-1;;;;;26959:16:0;:7;-1:-1:-1;;;;;26959:16:0;;:51;;;;27003:7;-1:-1:-1;;;;;26979:31:0;:20;26991:7;26979:11;:20::i;:::-;-1:-1:-1;;;;;26979:31:0;;26959:51;:87;;;;27014:32;27031:5;27038:7;27014:16;:32::i;:::-;26951:96;26707:348;-1:-1:-1;;;;26707:348:0:o;29628:544::-;29753:4;-1:-1:-1;;;;;29726:31:0;:23;29741:7;29726:14;:23::i;:::-;-1:-1:-1;;;;;29726:31:0;;29718:85;;;;-1:-1:-1;;;29718:85:0;;9526:2:1;29718:85:0;;;9508:21:1;9565:2;9545:18;;;9538:30;9604:34;9584:18;;;9577:62;-1:-1:-1;;;9655:18:1;;;9648:39;9704:19;;29718:85:0;9324:405:1;29718:85:0;-1:-1:-1;;;;;29822:16:0;;29814:65;;;;-1:-1:-1;;;29814:65:0;;9936:2:1;29814:65:0;;;9918:21:1;9975:2;9955:18;;;9948:30;10014:34;9994:18;;;9987:62;-1:-1:-1;;;10065:18:1;;;10058:34;10109:19;;29814:65:0;9734:400:1;29814:65:0;29996:29;30013:1;30017:7;29996:8;:29::i;:::-;-1:-1:-1;;;;;30038:15:0;;;;;;:9;:15;;;;;:20;;30057:1;;30038:15;:20;;30057:1;;30038:20;:::i;:::-;;;;-1:-1:-1;;;;;;;30069:13:0;;;;;;:9;:13;;;;;:18;;30086:1;;30069:13;:18;;30086:1;;30069:18;:::i;:::-;;;;-1:-1:-1;;30098:16:0;;;;:7;:16;;;;;;:21;;-1:-1:-1;;;;;;30098:21:0;-1:-1:-1;;;;;30098:21:0;;;;;;;;;30137:27;;30098:16;;30137:27;;;;;;;29628:544;;;:::o;25828:272::-;25942:28;25952:4;25958:2;25962:7;25942:9;:28::i;:::-;25989:48;26012:4;26018:2;26022:7;26031:5;25989:22;:48::i;:::-;25981:111;;;;-1:-1:-1;;;25981:111:0;;;;;;;:::i;16716:723::-;16772:13;16993:5;17002:1;16993:10;16989:53;;-1:-1:-1;;17020:10:0;;;;;;;;;;;;-1:-1:-1;;;17020:10:0;;;;;16716:723::o;16989:53::-;17067:5;17052:12;17108:78;17115:9;;17108:78;;17141:8;;;;:::i;:::-;;-1:-1:-1;17164:10:0;;-1:-1:-1;17172:2:0;17164:10;;:::i;:::-;;;17108:78;;;17196:19;17228:6;17218:17;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;17218:17:0;;17196:39;;17246:154;17253:10;;17246:154;;17280:11;17290:1;17280:11;;:::i;:::-;;-1:-1:-1;17349:10:0;17357:2;17349:5;:10;:::i;:::-;17336:24;;:2;:24;:::i;:::-;17323:39;;17306:6;17313;17306:14;;;;;;;;:::i;:::-;;;;:56;-1:-1:-1;;;;;17306:56:0;;;;;;;;-1:-1:-1;17377:11:0;17386:2;17377:11;;:::i;:::-;;;17246:154;;31029:843;31150:4;-1:-1:-1;;;;;31176:13:0;;8533:20;8572:8;31172:693;;31212:72;;-1:-1:-1;;;31212:72:0;;-1:-1:-1;;;;;31212:36:0;;;;;:72;;16135:10;;31263:4;;31269:7;;31278:5;;31212:72;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;31212:72:0;;;;;;;;-1:-1:-1;;31212:72:0;;;;;;;;;;;;:::i;:::-;;;31208:602;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;31458:6;:13;31475:1;31458:18;31454:341;;31501:60;;-1:-1:-1;;;31501:60:0;;;;;;;:::i;31454:341::-;31745:6;31739:13;31730:6;31726:2;31722:15;31715:38;31208:602;-1:-1:-1;;;;;;31335:55:0;-1:-1:-1;;;31335:55:0;;-1:-1:-1;31328:62:0;;31172:693;-1:-1:-1;31849:4:0;31029:843;;;;;;:::o;14:131:1:-;-1:-1:-1;;;;;;88:32:1;;78:43;;68:71;;135:1;132;125:12;68:71;14:131;:::o;150:245::-;208:6;261:2;249:9;240:7;236:23;232:32;229:52;;;277:1;274;267:12;229:52;316:9;303:23;335:30;359:5;335:30;:::i;592:250::-;677:1;687:113;701:6;698:1;695:13;687:113;;;777:11;;;771:18;758:11;;;751:39;723:2;716:10;687:113;;;-1:-1:-1;;834:1:1;816:16;;809:27;592:250::o;847:271::-;889:3;927:5;921:12;954:6;949:3;942:19;970:76;1039:6;1032:4;1027:3;1023:14;1016:4;1009:5;1005:16;970:76;:::i;:::-;1100:2;1079:15;-1:-1:-1;;1075:29:1;1066:39;;;;1107:4;1062:50;;847:271;-1:-1:-1;;847:271:1:o;1123:220::-;1272:2;1261:9;1254:21;1235:4;1292:45;1333:2;1322:9;1318:18;1310:6;1292:45;:::i;1348:180::-;1407:6;1460:2;1448:9;1439:7;1435:23;1431:32;1428:52;;;1476:1;1473;1466:12;1428:52;-1:-1:-1;1499:23:1;;1348:180;-1:-1:-1;1348:180:1:o;1741:173::-;1809:20;;-1:-1:-1;;;;;1858:31:1;;1848:42;;1838:70;;1904:1;1901;1894:12;1838:70;1741:173;;;:::o;1919:254::-;1987:6;1995;2048:2;2036:9;2027:7;2023:23;2019:32;2016:52;;;2064:1;2061;2054:12;2016:52;2087:29;2106:9;2087:29;:::i;:::-;2077:39;2163:2;2148:18;;;;2135:32;;-1:-1:-1;;;1919:254:1:o;2178:328::-;2255:6;2263;2271;2324:2;2312:9;2303:7;2299:23;2295:32;2292:52;;;2340:1;2337;2330:12;2292:52;2363:29;2382:9;2363:29;:::i;:::-;2353:39;;2411:38;2445:2;2434:9;2430:18;2411:38;:::i;:::-;2401:48;;2496:2;2485:9;2481:18;2468:32;2458:42;;2178:328;;;;;:::o;2511:186::-;2570:6;2623:2;2611:9;2602:7;2598:23;2594:32;2591:52;;;2639:1;2636;2629:12;2591:52;2662:29;2681:9;2662:29;:::i;2884:347::-;2949:6;2957;3010:2;2998:9;2989:7;2985:23;2981:32;2978:52;;;3026:1;3023;3016:12;2978:52;3049:29;3068:9;3049:29;:::i;:::-;3039:39;;3128:2;3117:9;3113:18;3100:32;3175:5;3168:13;3161:21;3154:5;3151:32;3141:60;;3197:1;3194;3187:12;3141:60;3220:5;3210:15;;;2884:347;;;;;:::o;3236:127::-;3297:10;3292:3;3288:20;3285:1;3278:31;3328:4;3325:1;3318:15;3352:4;3349:1;3342:15;3368:1138;3463:6;3471;3479;3487;3540:3;3528:9;3519:7;3515:23;3511:33;3508:53;;;3557:1;3554;3547:12;3508:53;3580:29;3599:9;3580:29;:::i;:::-;3570:39;;3628:38;3662:2;3651:9;3647:18;3628:38;:::i;:::-;3618:48;;3713:2;3702:9;3698:18;3685:32;3675:42;;3768:2;3757:9;3753:18;3740:32;3791:18;3832:2;3824:6;3821:14;3818:34;;;3848:1;3845;3838:12;3818:34;3886:6;3875:9;3871:22;3861:32;;3931:7;3924:4;3920:2;3916:13;3912:27;3902:55;;3953:1;3950;3943:12;3902:55;3989:2;3976:16;4011:2;4007;4004:10;4001:36;;;4017:18;;:::i;:::-;4092:2;4086:9;4060:2;4146:13;;-1:-1:-1;;4142:22:1;;;4166:2;4138:31;4134:40;4122:53;;;4190:18;;;4210:22;;;4187:46;4184:72;;;4236:18;;:::i;:::-;4276:10;4272:2;4265:22;4311:2;4303:6;4296:18;4351:7;4346:2;4341;4337;4333:11;4329:20;4326:33;4323:53;;;4372:1;4369;4362:12;4323:53;4428:2;4423;4419;4415:11;4410:2;4402:6;4398:15;4385:46;4473:1;4468:2;4463;4455:6;4451:15;4447:24;4440:35;4494:6;4484:16;;;;;;;3368:1138;;;;;;;:::o;4511:260::-;4579:6;4587;4640:2;4628:9;4619:7;4615:23;4611:32;4608:52;;;4656:1;4653;4646:12;4608:52;4679:29;4698:9;4679:29;:::i;:::-;4669:39;;4727:38;4761:2;4750:9;4746:18;4727:38;:::i;:::-;4717:48;;4511:260;;;;;:::o;4776:380::-;4855:1;4851:12;;;;4898;;;4919:61;;4973:4;4965:6;4961:17;4951:27;;4919:61;5026:2;5018:6;5015:14;4995:18;4992:38;4989:161;;5072:10;5067:3;5063:20;5060:1;5053:31;5107:4;5104:1;5097:15;5135:4;5132:1;5125:15;4989:161;;4776:380;;;:::o;6401:413::-;6603:2;6585:21;;;6642:2;6622:18;;;6615:30;6681:34;6676:2;6661:18;;6654:62;-1:-1:-1;;;6747:2:1;6732:18;;6725:47;6804:3;6789:19;;6401:413::o;8410:496::-;8589:3;8627:6;8621:13;8643:66;8702:6;8697:3;8690:4;8682:6;8678:17;8643:66;:::i;:::-;8772:13;;8731:16;;;;8794:70;8772:13;8731:16;8841:4;8829:17;;8794:70;:::i;:::-;8880:20;;8410:496;-1:-1:-1;;;;8410:496:1:o;10139:127::-;10200:10;10195:3;10191:20;10188:1;10181:31;10231:4;10228:1;10221:15;10255:4;10252:1;10245:15;10271:128;10338:9;;;10359:11;;;10356:37;;;10373:18;;:::i;10404:125::-;10469:9;;;10490:10;;;10487:36;;;10503:18;;:::i;10534:414::-;10736:2;10718:21;;;10775:2;10755:18;;;10748:30;10814:34;10809:2;10794:18;;10787:62;-1:-1:-1;;;10880:2:1;10865:18;;10858:48;10938:3;10923:19;;10534:414::o;10953:135::-;10992:3;11013:17;;;11010:43;;11033:18;;:::i;:::-;-1:-1:-1;11080:1:1;11069:13;;10953:135::o;11093:127::-;11154:10;11149:3;11145:20;11142:1;11135:31;11185:4;11182:1;11175:15;11209:4;11206:1;11199:15;11225:120;11265:1;11291;11281:35;;11296:18;;:::i;:::-;-1:-1:-1;11330:9:1;;11225:120::o;11350:112::-;11382:1;11408;11398:35;;11413:18;;:::i;:::-;-1:-1:-1;11447:9:1;;11350:112::o;11467:127::-;11528:10;11523:3;11519:20;11516:1;11509:31;11559:4;11556:1;11549:15;11583:4;11580:1;11573:15;11599:489;-1:-1:-1;;;;;11868:15:1;;;11850:34;;11920:15;;11915:2;11900:18;;11893:43;11967:2;11952:18;;11945:34;;;12015:3;12010:2;11995:18;;11988:31;;;11793:4;;12036:46;;12062:19;;12054:6;12036:46;:::i;:::-;12028:54;11599:489;-1:-1:-1;;;;;;11599:489:1:o;12093:249::-;12162:6;12215:2;12203:9;12194:7;12190:23;12186:32;12183:52;;;12231:1;12228;12221:12;12183:52;12263:9;12257:16;12282:30;12306:5;12282:30;:::i"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "924000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2634",
								"getApproved(uint256)": "4737",
								"isApprovedForAll(address,address)": "infinite",
								"name()": "infinite",
								"ownerOf(uint256)": "2579",
								"safeTransferFrom(address,address,uint256)": "infinite",
								"safeTransferFrom(address,address,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "26647",
								"supportsInterface(bytes4)": "511",
								"symbol()": "infinite",
								"tokenURI(uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_approve(address,uint256)": "infinite",
								"_baseURI()": "infinite",
								"_beforeTokenTransfer(address,address,uint256)": "infinite",
								"_burn(uint256)": "infinite",
								"_checkOnERC721Received(address,address,uint256,bytes memory)": "infinite",
								"_exists(uint256)": "infinite",
								"_isApprovedOrOwner(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_safeMint(address,uint256)": "infinite",
								"_safeMint(address,uint256,bytes memory)": "infinite",
								"_safeTransfer(address,address,uint256,bytes memory)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 19800,
									"end": 32581,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 19800,
									"end": 32581,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 19800,
									"end": 32581,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 20592,
									"end": 20709,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 20592,
									"end": 20709,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 20592,
									"end": 20709,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 20592,
									"end": 20709,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 20592,
									"end": 20709,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 20592,
									"end": 20709,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 20592,
									"end": 20709,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 20592,
									"end": 20709,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 20592,
									"end": 20709,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 20592,
									"end": 20709,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 20592,
									"end": 20709,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 20592,
									"end": 20709,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 20592,
									"end": 20709,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 20592,
									"end": 20709,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 20592,
									"end": 20709,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 20592,
									"end": 20709,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 20592,
									"end": 20709,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 20592,
									"end": 20709,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 20592,
									"end": 20709,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 20592,
									"end": 20709,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 20592,
									"end": 20709,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 20592,
									"end": 20709,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 20592,
									"end": 20709,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 20592,
									"end": 20709,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 20592,
									"end": 20709,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 20592,
									"end": 20709,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 20592,
									"end": 20709,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 20592,
									"end": 20709,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 20592,
									"end": 20709,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 20592,
									"end": 20709,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 20592,
									"end": 20709,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 20592,
									"end": 20709,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 20660,
									"end": 20665,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 20660,
									"end": 20673,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 20668,
									"end": 20673,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 20660,
									"end": 20665,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 20660,
									"end": 20673,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 20660,
									"end": 20673,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 20660,
									"end": 20673,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 20660,
									"end": 20673,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 20684,
									"end": 20691,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 20684,
									"end": 20701,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 20694,
									"end": 20701,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 20684,
									"end": 20691,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 20684,
									"end": 20701,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 20684,
									"end": 20701,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 20684,
									"end": 20701,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 20684,
									"end": 20701,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 20684,
									"end": 20701,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 20592,
									"end": 20709,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 20592,
									"end": 20709,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 19800,
									"end": 32581,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 19800,
									"end": 32581,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 141,
									"name": "tag",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 14,
									"end": 141,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 75,
									"end": 85,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B71"
								},
								{
									"begin": 70,
									"end": 73,
									"name": "PUSH",
									"source": 1,
									"value": "E0"
								},
								{
									"begin": 66,
									"end": 86,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 63,
									"end": 64,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 87,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 106,
									"end": 110,
									"name": "PUSH",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 103,
									"end": 104,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 96,
									"end": 111,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 130,
									"end": 134,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 127,
									"end": 128,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 135,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 146,
									"end": 986,
									"name": "tag",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 146,
									"end": 986,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 200,
									"end": 205,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 253,
									"end": 256,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 246,
									"end": 250,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 238,
									"end": 244,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 234,
									"end": 251,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 230,
									"end": 257,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 220,
									"end": 275,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 220,
									"end": 275,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 271,
									"end": 272,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 268,
									"end": 269,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 261,
									"end": 273,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 220,
									"end": 275,
									"name": "tag",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 220,
									"end": 275,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 294,
									"end": 307,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 294,
									"end": 307,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 356,
									"end": 366,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 356,
									"end": 366,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 356,
									"end": 366,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 353,
									"end": 389,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 353,
									"end": 389,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 353,
									"end": 389,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 369,
									"end": 387,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 369,
									"end": 387,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 369,
									"end": 387,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 369,
									"end": 387,
									"name": "tag",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 369,
									"end": 387,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 444,
									"end": 446,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 438,
									"end": 447,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 412,
									"end": 414,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 498,
									"end": 511,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 498,
									"end": 511,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 494,
									"end": 516,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 494,
									"end": 516,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 494,
									"end": 516,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 518,
									"end": 520,
									"name": "PUSH",
									"source": 1,
									"value": "3F"
								},
								{
									"begin": 490,
									"end": 521,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 486,
									"end": 526,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 474,
									"end": 527,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 474,
									"end": 527,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 474,
									"end": 527,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 542,
									"end": 560,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 542,
									"end": 560,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 542,
									"end": 560,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 562,
									"end": 584,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 562,
									"end": 584,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 562,
									"end": 584,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 539,
									"end": 585,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 536,
									"end": 608,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 536,
									"end": 608,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 536,
									"end": 608,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 588,
									"end": 606,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 588,
									"end": 606,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 588,
									"end": 606,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 588,
									"end": 606,
									"name": "tag",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 588,
									"end": 606,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 628,
									"end": 638,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 624,
									"end": 626,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 617,
									"end": 639,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 663,
									"end": 665,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 655,
									"end": 661,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 648,
									"end": 666,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 685,
									"end": 689,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 675,
									"end": 689,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 675,
									"end": 689,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 730,
									"end": 733,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 725,
									"end": 727,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 720,
									"end": 722,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 712,
									"end": 718,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 708,
									"end": 723,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 704,
									"end": 728,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 701,
									"end": 734,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 698,
									"end": 751,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 698,
									"end": 751,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 698,
									"end": 751,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 747,
									"end": 748,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 744,
									"end": 745,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 737,
									"end": 749,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 698,
									"end": 751,
									"name": "tag",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 698,
									"end": 751,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 769,
									"end": 770,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 760,
									"end": 770,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 760,
									"end": 770,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 779,
									"end": 912,
									"name": "tag",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 793,
									"end": 795,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 790,
									"end": 791,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 787,
									"end": 796,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 779,
									"end": 912,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 779,
									"end": 912,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 881,
									"end": 895,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 881,
									"end": 895,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 881,
									"end": 895,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 877,
									"end": 900,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 877,
									"end": 900,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 871,
									"end": 901,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 850,
									"end": 864,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 850,
									"end": 864,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 850,
									"end": 864,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 846,
									"end": 869,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 846,
									"end": 869,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 839,
									"end": 902,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 804,
									"end": 814,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 804,
									"end": 814,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 804,
									"end": 814,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 804,
									"end": 814,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 779,
									"end": 912,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 779,
									"end": 912,
									"name": "tag",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 954,
									"end": 955,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 932,
									"end": 947,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 932,
									"end": 947,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 932,
									"end": 947,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 928,
									"end": 952,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 928,
									"end": 952,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 928,
									"end": 952,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 921,
									"end": 956,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 921,
									"end": 956,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 921,
									"end": 956,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 921,
									"end": 956,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 936,
									"end": 942,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 146,
									"end": 986,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 146,
									"end": 986,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 991,
									"end": 1553,
									"name": "tag",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 991,
									"end": 1553,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1090,
									"end": 1096,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1098,
									"end": 1104,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1151,
									"end": 1153,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1139,
									"end": 1148,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1130,
									"end": 1137,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1126,
									"end": 1149,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1122,
									"end": 1154,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 1119,
									"end": 1171,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1119,
									"end": 1171,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 1119,
									"end": 1171,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1167,
									"end": 1168,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1164,
									"end": 1165,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1157,
									"end": 1169,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1119,
									"end": 1171,
									"name": "tag",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 1119,
									"end": 1171,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1194,
									"end": 1210,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1194,
									"end": 1210,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1259,
									"end": 1273,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1259,
									"end": 1273,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1259,
									"end": 1273,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1256,
									"end": 1290,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1256,
									"end": 1290,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 1256,
									"end": 1290,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1286,
									"end": 1287,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1283,
									"end": 1284,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1276,
									"end": 1288,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1256,
									"end": 1290,
									"name": "tag",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 1256,
									"end": 1290,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1309,
									"end": 1370,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 1362,
									"end": 1369,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 1353,
									"end": 1359,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1342,
									"end": 1351,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 1338,
									"end": 1360,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1309,
									"end": 1370,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 1309,
									"end": 1370,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1309,
									"end": 1370,
									"name": "tag",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 1309,
									"end": 1370,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1299,
									"end": 1370,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 1299,
									"end": 1370,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1416,
									"end": 1418,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1405,
									"end": 1414,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1401,
									"end": 1419,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1395,
									"end": 1420,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1379,
									"end": 1420,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1379,
									"end": 1420,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1445,
									"end": 1447,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1435,
									"end": 1443,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1432,
									"end": 1448,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1429,
									"end": 1465,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1429,
									"end": 1465,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "32"
								},
								{
									"begin": 1429,
									"end": 1465,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1461,
									"end": 1462,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1458,
									"end": 1459,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1451,
									"end": 1463,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1429,
									"end": 1465,
									"name": "tag",
									"source": 1,
									"value": "32"
								},
								{
									"begin": 1429,
									"end": 1465,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1429,
									"end": 1465,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1484,
									"end": 1547,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "33"
								},
								{
									"begin": 1539,
									"end": 1546,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1528,
									"end": 1536,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1517,
									"end": 1526,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 1513,
									"end": 1537,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1484,
									"end": 1547,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 1484,
									"end": 1547,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1484,
									"end": 1547,
									"name": "tag",
									"source": 1,
									"value": "33"
								},
								{
									"begin": 1484,
									"end": 1547,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1474,
									"end": 1547,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1474,
									"end": 1547,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1474,
									"end": 1547,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 991,
									"end": 1553,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 991,
									"end": 1553,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 991,
									"end": 1553,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 991,
									"end": 1553,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 991,
									"end": 1553,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 991,
									"end": 1553,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1558,
									"end": 1938,
									"name": "tag",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 1558,
									"end": 1938,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1637,
									"end": 1638,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1633,
									"end": 1645,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1633,
									"end": 1645,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1633,
									"end": 1645,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 1633,
									"end": 1645,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1680,
									"end": 1692,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1680,
									"end": 1692,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1680,
									"end": 1692,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1701,
									"end": 1762,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "35"
								},
								{
									"begin": 1701,
									"end": 1762,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1755,
									"end": 1759,
									"name": "PUSH",
									"source": 1,
									"value": "7F"
								},
								{
									"begin": 1747,
									"end": 1753,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1743,
									"end": 1760,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1733,
									"end": 1760,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1733,
									"end": 1760,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1701,
									"end": 1762,
									"name": "tag",
									"source": 1,
									"value": "35"
								},
								{
									"begin": 1701,
									"end": 1762,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1808,
									"end": 1810,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1800,
									"end": 1806,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1797,
									"end": 1811,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 1777,
									"end": 1795,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1774,
									"end": 1812,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1771,
									"end": 1932,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "36"
								},
								{
									"begin": 1771,
									"end": 1932,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1854,
									"end": 1864,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B71"
								},
								{
									"begin": 1849,
									"end": 1852,
									"name": "PUSH",
									"source": 1,
									"value": "E0"
								},
								{
									"begin": 1845,
									"end": 1865,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 1842,
									"end": 1843,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1835,
									"end": 1866,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1889,
									"end": 1893,
									"name": "PUSH",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 1886,
									"end": 1887,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1879,
									"end": 1894,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1917,
									"end": 1921,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 1914,
									"end": 1915,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1907,
									"end": 1922,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1771,
									"end": 1932,
									"name": "tag",
									"source": 1,
									"value": "36"
								},
								{
									"begin": 1771,
									"end": 1932,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1771,
									"end": 1932,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1558,
									"end": 1938,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1558,
									"end": 1938,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1558,
									"end": 1938,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1558,
									"end": 1938,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2069,
									"end": 2614,
									"name": "tag",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 2069,
									"end": 2614,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2171,
									"end": 2173,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 2166,
									"end": 2169,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2163,
									"end": 2174,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 2160,
									"end": 2608,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2160,
									"end": 2608,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "39"
								},
								{
									"begin": 2160,
									"end": 2608,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2207,
									"end": 2208,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2232,
									"end": 2237,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2228,
									"end": 2230,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2221,
									"end": 2238,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2277,
									"end": 2281,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2273,
									"end": 2275,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2263,
									"end": 2282,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 2347,
									"end": 2349,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 2335,
									"end": 2345,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 2331,
									"end": 2350,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2328,
									"end": 2329,
									"name": "PUSH",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 2324,
									"end": 2351,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 2318,
									"end": 2322,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2314,
									"end": 2352,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2383,
									"end": 2387,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2371,
									"end": 2381,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 2368,
									"end": 2388,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 2365,
									"end": 2412,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2365,
									"end": 2412,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 2365,
									"end": 2412,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2406,
									"end": 2410,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2365,
									"end": 2412,
									"name": "tag",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 2365,
									"end": 2412,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2461,
									"end": 2463,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 2456,
									"end": 2459,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 2452,
									"end": 2464,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2449,
									"end": 2450,
									"name": "PUSH",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 2445,
									"end": 2465,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 2439,
									"end": 2443,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2435,
									"end": 2466,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2425,
									"end": 2466,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2425,
									"end": 2466,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "tag",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2534,
									"end": 2536,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2527,
									"end": 2532,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2524,
									"end": 2537,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "43"
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2579,
									"end": 2596,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2579,
									"end": 2596,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2579,
									"end": 2596,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 2560,
									"end": 2561,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 2549,
									"end": 2562,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "tag",
									"source": 1,
									"value": "43"
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2520,
									"end": 2523,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2520,
									"end": 2523,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2520,
									"end": 2523,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2160,
									"end": 2608,
									"name": "tag",
									"source": 1,
									"value": "39"
								},
								{
									"begin": 2160,
									"end": 2608,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2069,
									"end": 2614,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2069,
									"end": 2614,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2069,
									"end": 2614,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2069,
									"end": 2614,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2790,
									"end": 4142,
									"name": "tag",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 2790,
									"end": 4142,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2910,
									"end": 2920,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2910,
									"end": 2920,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2932,
									"end": 2962,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2932,
									"end": 2962,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 2929,
									"end": 2985,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2929,
									"end": 2985,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "47"
								},
								{
									"begin": 2929,
									"end": 2985,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2965,
									"end": 2983,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "47"
								},
								{
									"begin": 2965,
									"end": 2983,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 2965,
									"end": 2983,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2965,
									"end": 2983,
									"name": "tag",
									"source": 1,
									"value": "47"
								},
								{
									"begin": 2965,
									"end": 2983,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2994,
									"end": 3091,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "48"
								},
								{
									"begin": 3084,
									"end": 3090,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3044,
									"end": 3082,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "49"
								},
								{
									"begin": 3076,
									"end": 3080,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 3070,
									"end": 3081,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 3044,
									"end": 3082,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 3044,
									"end": 3082,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3044,
									"end": 3082,
									"name": "tag",
									"source": 1,
									"value": "49"
								},
								{
									"begin": 3044,
									"end": 3082,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3038,
									"end": 3042,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2994,
									"end": 3091,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 2994,
									"end": 3091,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2994,
									"end": 3091,
									"name": "tag",
									"source": 1,
									"value": "48"
								},
								{
									"begin": 2994,
									"end": 3091,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3146,
									"end": 3150,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 3146,
									"end": 3150,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 3210,
									"end": 3212,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 3199,
									"end": 3213,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 3199,
									"end": 3213,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 3227,
									"end": 3228,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 3222,
									"end": 3885,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3222,
									"end": 3885,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 3222,
									"end": 3885,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "51"
								},
								{
									"begin": 3222,
									"end": 3885,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 3929,
									"end": 3930,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3946,
									"end": 3952,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 3943,
									"end": 4032,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 3943,
									"end": 4032,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "52"
								},
								{
									"begin": 3943,
									"end": 4032,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3998,
									"end": 4017,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 3998,
									"end": 4017,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 3998,
									"end": 4017,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3992,
									"end": 4018,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 3943,
									"end": 4032,
									"name": "tag",
									"source": 1,
									"value": "52"
								},
								{
									"begin": 3943,
									"end": 4032,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2747,
									"end": 2748,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 2743,
									"end": 2754,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 2743,
									"end": 2754,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2743,
									"end": 2754,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 2739,
									"end": 2763,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 2735,
									"end": 2764,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 2725,
									"end": 2765,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2771,
									"end": 2772,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 2767,
									"end": 2778,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 2767,
									"end": 2778,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2767,
									"end": 2778,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 2722,
									"end": 2779,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 4045,
									"end": 4126,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 4045,
									"end": 4126,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 3192,
									"end": 4136,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "43"
								},
								{
									"begin": 3192,
									"end": 4136,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3222,
									"end": 3885,
									"name": "tag",
									"source": 1,
									"value": "51"
								},
								{
									"begin": 3222,
									"end": 3885,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2016,
									"end": 2017,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2009,
									"end": 2023,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 2009,
									"end": 2023,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2009,
									"end": 2023,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2053,
									"end": 2057,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2040,
									"end": 2058,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2040,
									"end": 2058,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3258,
									"end": 3278,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 3258,
									"end": 3278,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3258,
									"end": 3278,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "tag",
									"source": 1,
									"value": "55"
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3390,
									"end": 3397,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3387,
									"end": 3388,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3384,
									"end": 3398,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "57"
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 3479,
									"end": 3498,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 3479,
									"end": 3498,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 3479,
									"end": 3498,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3473,
									"end": 3499,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 3458,
									"end": 3500,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3458,
									"end": 3500,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 3571,
									"end": 3598,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 3571,
									"end": 3598,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 3571,
									"end": 3598,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3571,
									"end": 3598,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 3539,
									"end": 3540,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 3527,
									"end": 3541,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3527,
									"end": 3541,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3527,
									"end": 3541,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3527,
									"end": 3541,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3406,
									"end": 3425,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 3406,
									"end": 3425,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "55"
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "tag",
									"source": 1,
									"value": "57"
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3380,
									"end": 3383,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3640,
									"end": 3646,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 3631,
									"end": 3638,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3628,
									"end": 3647,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 3625,
									"end": 3826,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 3625,
									"end": 3826,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "58"
								},
								{
									"begin": 3625,
									"end": 3826,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 3701,
									"end": 3720,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 3701,
									"end": 3720,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 3701,
									"end": 3720,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3695,
									"end": 3721,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3784,
									"end": 3785,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 3780,
									"end": 3794,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 3780,
									"end": 3794,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3780,
									"end": 3794,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 3796,
									"end": 3799,
									"name": "PUSH",
									"source": 1,
									"value": "F8"
								},
								{
									"begin": 3776,
									"end": 3800,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3772,
									"end": 3809,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 3768,
									"end": 3810,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 3753,
									"end": 3811,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3738,
									"end": 3812,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3738,
									"end": 3812,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 3625,
									"end": 3826,
									"name": "tag",
									"source": 1,
									"value": "58"
								},
								{
									"begin": 3625,
									"end": 3826,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3872,
									"end": 3873,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 3856,
									"end": 3870,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3856,
									"end": 3870,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3856,
									"end": 3870,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 3852,
									"end": 3874,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3839,
									"end": 3875,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3839,
									"end": 3875,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2790,
									"end": 4142,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2790,
									"end": 4142,
									"name": "tag",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 2790,
									"end": 4142,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 19800,
									"end": 32581,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 19800,
									"end": 32581,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 19800,
									"end": 32581,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 19800,
									"end": 32581,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 19800,
									"end": 32581,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 19800,
									"end": 32581,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 19800,
									"end": 32581,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212208f330809fc70a4b0a8f12119ae14d6e030412ebde9bfa3ad76d8aa48f68e07a564736f6c63430008120033",
									".code": [
										{
											"begin": 19800,
											"end": 32581,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 19800,
											"end": 32581,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19800,
											"end": 32581,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19800,
											"end": 32581,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 19800,
											"end": 32581,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19800,
											"end": 32581,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 19800,
											"end": 32581,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 19800,
											"end": 32581,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19800,
											"end": 32581,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19800,
											"end": 32581,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19800,
											"end": 32581,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 19800,
											"end": 32581,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 19800,
											"end": 32581,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19800,
											"end": 32581,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19800,
											"end": 32581,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 19800,
											"end": 32581,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 19800,
											"end": 32581,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 19800,
											"end": 32581,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 19800,
											"end": 32581,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19800,
											"end": 32581,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19800,
											"end": 32581,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 19800,
											"end": 32581,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 19800,
											"end": 32581,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 19800,
											"end": 32581,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19800,
											"end": 32581,
											"name": "PUSH",
											"source": 0,
											"value": "6352211E"
										},
										{
											"begin": 19800,
											"end": 32581,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 19800,
											"end": 32581,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 19800,
											"end": 32581,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19800,
											"end": 32581,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19800,
											"end": 32581,
											"name": "PUSH",
											"source": 0,
											"value": "A22CB465"
										},
										{
											"begin": 19800,
											"end": 32581,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 19800,
											"end": 32581,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 19800,
											"end": 32581,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19800,
											"end": 32581,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19800,
											"end": 32581,
											"name": "PUSH",
											"source": 0,
											"value": "A22CB465"
										},
										{
											"begin": 19800,
											"end": 32581,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 19800,
											"end": 32581,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 19800,
											"end": 32581,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19800,
											"end": 32581,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19800,
											"end": 32581,
											"name": "PUSH",
											"source": 0,
											"value": "B88D4FDE"
										},
										{
											"begin": 19800,
											"end": 32581,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 19800,
											"end": 32581,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 19800,
											"end": 32581,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19800,
											"end": 32581,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19800,
											"end": 32581,
											"name": "PUSH",
											"source": 0,
											"value": "C87B56DD"
										},
										{
											"begin": 19800,
											"end": 32581,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 19800,
											"end": 32581,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 19800,
											"end": 32581,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19800,
											"end": 32581,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19800,
											"end": 32581,
											"name": "PUSH",
											"source": 0,
											"value": "E985E9C5"
										},
										{
											"begin": 19800,
											"end": 32581,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 19800,
											"end": 32581,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 19800,
											"end": 32581,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19800,
											"end": 32581,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19800,
											"end": 32581,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19800,
											"end": 32581,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 19800,
											"end": 32581,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 19800,
											"end": 32581,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19800,
											"end": 32581,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19800,
											"end": 32581,
											"name": "PUSH",
											"source": 0,
											"value": "6352211E"
										},
										{
											"begin": 19800,
											"end": 32581,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 19800,
											"end": 32581,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 19800,
											"end": 32581,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19800,
											"end": 32581,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19800,
											"end": 32581,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 19800,
											"end": 32581,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 19800,
											"end": 32581,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 19800,
											"end": 32581,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19800,
											"end": 32581,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19800,
											"end": 32581,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 19800,
											"end": 32581,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 19800,
											"end": 32581,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 19800,
											"end": 32581,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19800,
											"end": 32581,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19800,
											"end": 32581,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19800,
											"end": 32581,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 19800,
											"end": 32581,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 19800,
											"end": 32581,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19800,
											"end": 32581,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19800,
											"end": 32581,
											"name": "PUSH",
											"source": 0,
											"value": "1FFC9A7"
										},
										{
											"begin": 19800,
											"end": 32581,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 19800,
											"end": 32581,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 19800,
											"end": 32581,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19800,
											"end": 32581,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19800,
											"end": 32581,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 19800,
											"end": 32581,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 19800,
											"end": 32581,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 19800,
											"end": 32581,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19800,
											"end": 32581,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19800,
											"end": 32581,
											"name": "PUSH",
											"source": 0,
											"value": "81812FC"
										},
										{
											"begin": 19800,
											"end": 32581,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 19800,
											"end": 32581,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 19800,
											"end": 32581,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19800,
											"end": 32581,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19800,
											"end": 32581,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 19800,
											"end": 32581,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 19800,
											"end": 32581,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 19800,
											"end": 32581,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19800,
											"end": 32581,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19800,
											"end": 32581,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 19800,
											"end": 32581,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 19800,
											"end": 32581,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 19800,
											"end": 32581,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19800,
											"end": 32581,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19800,
											"end": 32581,
											"name": "PUSH",
											"source": 0,
											"value": "42842E0E"
										},
										{
											"begin": 19800,
											"end": 32581,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 19800,
											"end": 32581,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 19800,
											"end": 32581,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19800,
											"end": 32581,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 19800,
											"end": 32581,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19800,
											"end": 32581,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19800,
											"end": 32581,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19800,
											"end": 32581,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 20781,
											"end": 21073,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 20781,
											"end": 21073,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20781,
											"end": 21073,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 20781,
											"end": 21073,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 20781,
											"end": 21073,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 20781,
											"end": 21073,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20781,
											"end": 21073,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20781,
											"end": 21073,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20781,
											"end": 21073,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 20781,
											"end": 21073,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20781,
											"end": 21073,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 20781,
											"end": 21073,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20781,
											"end": 21073,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 20781,
											"end": 21073,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20781,
											"end": 21073,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20781,
											"end": 21073,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 565,
											"end": 579,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 565,
											"end": 579,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 558,
											"end": 580,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 540,
											"end": 581,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 540,
											"end": 581,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 528,
											"end": 530,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 513,
											"end": 531,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20781,
											"end": 21073,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 20781,
											"end": 21073,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20781,
											"end": 21073,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20781,
											"end": 21073,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20781,
											"end": 21073,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20781,
											"end": 21073,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20781,
											"end": 21073,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20781,
											"end": 21073,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20781,
											"end": 21073,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 21713,
											"end": 21813,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 21713,
											"end": 21813,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21713,
											"end": 21813,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 21713,
											"end": 21813,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 21713,
											"end": 21813,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21713,
											"end": 21813,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 21713,
											"end": 21813,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21713,
											"end": 21813,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21713,
											"end": 21813,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21713,
											"end": 21813,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 21713,
											"end": 21813,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21713,
											"end": 21813,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21713,
											"end": 21813,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 21713,
											"end": 21813,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23173,
											"end": 23394,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 23173,
											"end": 23394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23173,
											"end": 23394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 23173,
											"end": 23394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 23173,
											"end": 23394,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 23173,
											"end": 23394,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 23173,
											"end": 23394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 23173,
											"end": 23394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23173,
											"end": 23394,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 23173,
											"end": 23394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23173,
											"end": 23394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 23173,
											"end": 23394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23173,
											"end": 23394,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 23173,
											"end": 23394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23173,
											"end": 23394,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23173,
											"end": 23394,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1697,
											"end": 1729,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1697,
											"end": 1729,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1697,
											"end": 1729,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1679,
											"end": 1730,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1679,
											"end": 1730,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1667,
											"end": 1669,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1652,
											"end": 1670,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 23173,
											"end": 23394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1533,
											"end": 1736,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 22710,
											"end": 23107,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 22710,
											"end": 23107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22710,
											"end": 23107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 22710,
											"end": 23107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 22710,
											"end": 23107,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 22710,
											"end": 23107,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 22710,
											"end": 23107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 22710,
											"end": 23107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22710,
											"end": 23107,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 22710,
											"end": 23107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22710,
											"end": 23107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 22710,
											"end": 23107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22710,
											"end": 23107,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 22710,
											"end": 23107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22710,
											"end": 23107,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 24063,
											"end": 24368,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 24063,
											"end": 24368,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24063,
											"end": 24368,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 24063,
											"end": 24368,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 24063,
											"end": 24368,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 24063,
											"end": 24368,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 24063,
											"end": 24368,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24063,
											"end": 24368,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24063,
											"end": 24368,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 24063,
											"end": 24368,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24063,
											"end": 24368,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 24063,
											"end": 24368,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24439,
											"end": 24590,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 24439,
											"end": 24590,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24439,
											"end": 24590,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 24439,
											"end": 24590,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 24439,
											"end": 24590,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 24439,
											"end": 24590,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 24439,
											"end": 24590,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24439,
											"end": 24590,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24439,
											"end": 24590,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 24439,
											"end": 24590,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24439,
											"end": 24590,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 24439,
											"end": 24590,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21407,
											"end": 21646,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 21407,
											"end": 21646,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21407,
											"end": 21646,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 21407,
											"end": 21646,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 21407,
											"end": 21646,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 21407,
											"end": 21646,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 21407,
											"end": 21646,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 21407,
											"end": 21646,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21407,
											"end": 21646,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 21407,
											"end": 21646,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21407,
											"end": 21646,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 21407,
											"end": 21646,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21137,
											"end": 21345,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 21137,
											"end": 21345,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21137,
											"end": 21345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 21137,
											"end": 21345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 21137,
											"end": 21345,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 21137,
											"end": 21345,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 21137,
											"end": 21345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 21137,
											"end": 21345,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21137,
											"end": 21345,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 21137,
											"end": 21345,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21137,
											"end": 21345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 21137,
											"end": 21345,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21137,
											"end": 21345,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 21137,
											"end": 21345,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21137,
											"end": 21345,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21137,
											"end": 21345,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2848,
											"end": 2873,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2848,
											"end": 2873,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2848,
											"end": 2873,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2836,
											"end": 2838,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2821,
											"end": 2839,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 21137,
											"end": 21345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 2702,
											"end": 2879,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 21882,
											"end": 21986,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 21882,
											"end": 21986,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21882,
											"end": 21986,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 21882,
											"end": 21986,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 21882,
											"end": 21986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23466,
											"end": 23761,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 23466,
											"end": 23761,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23466,
											"end": 23761,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 23466,
											"end": 23761,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 23466,
											"end": 23761,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 23466,
											"end": 23761,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 23466,
											"end": 23761,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 23466,
											"end": 23761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23466,
											"end": 23761,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 23466,
											"end": 23761,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23466,
											"end": 23761,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 23466,
											"end": 23761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24661,
											"end": 24946,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 24661,
											"end": 24946,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24661,
											"end": 24946,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 24661,
											"end": 24946,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 24661,
											"end": 24946,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 24661,
											"end": 24946,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 24661,
											"end": 24946,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 24661,
											"end": 24946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24661,
											"end": 24946,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 24661,
											"end": 24946,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24661,
											"end": 24946,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 24661,
											"end": 24946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22057,
											"end": 22417,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 22057,
											"end": 22417,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22057,
											"end": 22417,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 22057,
											"end": 22417,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 22057,
											"end": 22417,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 22057,
											"end": 22417,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 22057,
											"end": 22417,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 22057,
											"end": 22417,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22057,
											"end": 22417,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 22057,
											"end": 22417,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22057,
											"end": 22417,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 22057,
											"end": 22417,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23832,
											"end": 23996,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 23832,
											"end": 23996,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23832,
											"end": 23996,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 23832,
											"end": 23996,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 23832,
											"end": 23996,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 23832,
											"end": 23996,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 23832,
											"end": 23996,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 23832,
											"end": 23996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23832,
											"end": 23996,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 23832,
											"end": 23996,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23832,
											"end": 23996,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 23832,
											"end": 23996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20781,
											"end": 21073,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 20781,
											"end": 21073,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20883,
											"end": 20887,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 20907,
											"end": 20947,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20907,
											"end": 20947,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80AC58CD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 20907,
											"end": 20947,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 20907,
											"end": 20947,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20907,
											"end": 21012,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 20907,
											"end": 21012,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 20964,
											"end": 21012,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20964,
											"end": 21012,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5B5E139F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 20964,
											"end": 21012,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 20907,
											"end": 21012,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 20907,
											"end": 21012,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20907,
											"end": 21065,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20907,
											"end": 21065,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 20907,
											"end": 21065,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1FFC9A7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 19384,
											"end": 19424,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 19384,
											"end": 19424,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19384,
											"end": 19424,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 21029,
											"end": 21065,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 21029,
											"end": 21065,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20900,
											"end": 21065,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 20781,
											"end": 21073,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 20781,
											"end": 21073,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21713,
											"end": 21813,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 21713,
											"end": 21813,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21767,
											"end": 21780,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 21800,
											"end": 21805,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21793,
											"end": 21805,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21793,
											"end": 21805,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 21793,
											"end": 21805,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 21793,
											"end": 21805,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21793,
											"end": 21805,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 21793,
											"end": 21805,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21793,
											"end": 21805,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 21793,
											"end": 21805,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21793,
											"end": 21805,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21793,
											"end": 21805,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 21793,
											"end": 21805,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21793,
											"end": 21805,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 21793,
											"end": 21805,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21793,
											"end": 21805,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21793,
											"end": 21805,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 21793,
											"end": 21805,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 21793,
											"end": 21805,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 21793,
											"end": 21805,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21793,
											"end": 21805,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21793,
											"end": 21805,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21793,
											"end": 21805,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21793,
											"end": 21805,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21793,
											"end": 21805,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21793,
											"end": 21805,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21793,
											"end": 21805,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21793,
											"end": 21805,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21793,
											"end": 21805,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 21793,
											"end": 21805,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21793,
											"end": 21805,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21793,
											"end": 21805,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21793,
											"end": 21805,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21793,
											"end": 21805,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21793,
											"end": 21805,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 21793,
											"end": 21805,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21793,
											"end": 21805,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21793,
											"end": 21805,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21793,
											"end": 21805,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 21793,
											"end": 21805,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 21793,
											"end": 21805,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21793,
											"end": 21805,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 21793,
											"end": 21805,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21793,
											"end": 21805,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 21793,
											"end": 21805,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21793,
											"end": 21805,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21793,
											"end": 21805,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 21793,
											"end": 21805,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 21793,
											"end": 21805,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21793,
											"end": 21805,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21793,
											"end": 21805,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 21793,
											"end": 21805,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 21793,
											"end": 21805,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 21793,
											"end": 21805,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21793,
											"end": 21805,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 21793,
											"end": 21805,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21793,
											"end": 21805,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 21793,
											"end": 21805,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 21793,
											"end": 21805,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 21793,
											"end": 21805,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 21793,
											"end": 21805,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 21793,
											"end": 21805,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21793,
											"end": 21805,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21793,
											"end": 21805,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 21793,
											"end": 21805,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21793,
											"end": 21805,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21793,
											"end": 21805,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 21793,
											"end": 21805,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21793,
											"end": 21805,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 21793,
											"end": 21805,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21793,
											"end": 21805,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21793,
											"end": 21805,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21793,
											"end": 21805,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21793,
											"end": 21805,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21793,
											"end": 21805,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21793,
											"end": 21805,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21793,
											"end": 21805,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 21793,
											"end": 21805,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21793,
											"end": 21805,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 21793,
											"end": 21805,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21793,
											"end": 21805,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 21793,
											"end": 21805,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21793,
											"end": 21805,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21793,
											"end": 21805,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 21793,
											"end": 21805,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21793,
											"end": 21805,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21793,
											"end": 21805,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21793,
											"end": 21805,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 21793,
											"end": 21805,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21793,
											"end": 21805,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21793,
											"end": 21805,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 21793,
											"end": 21805,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21793,
											"end": 21805,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21793,
											"end": 21805,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 21793,
											"end": 21805,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 21793,
											"end": 21805,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 21793,
											"end": 21805,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21793,
											"end": 21805,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21793,
											"end": 21805,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21793,
											"end": 21805,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 21793,
											"end": 21805,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 21793,
											"end": 21805,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21793,
											"end": 21805,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21793,
											"end": 21805,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21793,
											"end": 21805,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21793,
											"end": 21805,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 21793,
											"end": 21805,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21793,
											"end": 21805,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21793,
											"end": 21805,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21793,
											"end": 21805,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21793,
											"end": 21805,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21793,
											"end": 21805,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21793,
											"end": 21805,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21793,
											"end": 21805,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21713,
											"end": 21813,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21713,
											"end": 21813,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23173,
											"end": 23394,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 23173,
											"end": 23394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23249,
											"end": 23256,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26502,
											"end": 26518,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26502,
											"end": 26518,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26502,
											"end": 26518,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26502,
											"end": 26509,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 26502,
											"end": 26518,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26502,
											"end": 26518,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26502,
											"end": 26518,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26502,
											"end": 26518,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26502,
											"end": 26518,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 26502,
											"end": 26518,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 26502,
											"end": 26518,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23269,
											"end": 23342,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 23269,
											"end": 23342,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23269,
											"end": 23342,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23269,
											"end": 23342,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 23269,
											"end": 23342,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23269,
											"end": 23342,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5363,
											"end": 5365,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 23269,
											"end": 23342,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 23269,
											"end": 23342,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23269,
											"end": 23342,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5345,
											"end": 5366,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5402,
											"end": 5404,
											"name": "PUSH",
											"source": 1,
											"value": "2C"
										},
										{
											"begin": 5382,
											"end": 5400,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5382,
											"end": 5400,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5382,
											"end": 5400,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5375,
											"end": 5405,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5441,
											"end": 5475,
											"name": "PUSH",
											"source": 1,
											"value": "4552433732313A20617070726F76656420717565727920666F72206E6F6E6578"
										},
										{
											"begin": 5421,
											"end": 5439,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 5421,
											"end": 5439,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5421,
											"end": 5439,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5414,
											"end": 5476,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "34B9BA32B73A103A37B5B2B7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5492,
											"end": 5510,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 5492,
											"end": 5510,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5492,
											"end": 5510,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5485,
											"end": 5527,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5544,
											"end": 5563,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 5544,
											"end": 5563,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 23269,
											"end": 23342,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 23269,
											"end": 23342,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23269,
											"end": 23342,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23269,
											"end": 23342,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23269,
											"end": 23342,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23269,
											"end": 23342,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23269,
											"end": 23342,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 23269,
											"end": 23342,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23269,
											"end": 23342,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 23269,
											"end": 23342,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 23269,
											"end": 23342,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 23362,
											"end": 23386,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23362,
											"end": 23386,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23362,
											"end": 23386,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23362,
											"end": 23386,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23362,
											"end": 23377,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 23362,
											"end": 23386,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23362,
											"end": 23386,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23362,
											"end": 23386,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23362,
											"end": 23386,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23362,
											"end": 23386,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 23362,
											"end": 23386,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 23362,
											"end": 23386,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23362,
											"end": 23386,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23173,
											"end": 23394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22710,
											"end": 23107,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 22710,
											"end": 23107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22791,
											"end": 22804,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22807,
											"end": 22830,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 22822,
											"end": 22829,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 22807,
											"end": 22821,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 22807,
											"end": 22830,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22807,
											"end": 22830,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 22807,
											"end": 22830,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22791,
											"end": 22830,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22791,
											"end": 22830,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22855,
											"end": 22860,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 22849,
											"end": 22860,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22849,
											"end": 22851,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 22849,
											"end": 22860,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22849,
											"end": 22860,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 22841,
											"end": 22898,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 22841,
											"end": 22898,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22841,
											"end": 22898,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22841,
											"end": 22898,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 22841,
											"end": 22898,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22841,
											"end": 22898,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5776,
											"end": 5778,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 22841,
											"end": 22898,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 22841,
											"end": 22898,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 22841,
											"end": 22898,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5758,
											"end": 5779,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5815,
											"end": 5817,
											"name": "PUSH",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 5795,
											"end": 5813,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5795,
											"end": 5813,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5795,
											"end": 5813,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5788,
											"end": 5818,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5854,
											"end": 5888,
											"name": "PUSH",
											"source": 1,
											"value": "4552433732313A20617070726F76616C20746F2063757272656E74206F776E65"
										},
										{
											"begin": 5834,
											"end": 5852,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 5834,
											"end": 5852,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5834,
											"end": 5852,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5827,
											"end": 5889,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "39"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5905,
											"end": 5923,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 5905,
											"end": 5923,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5905,
											"end": 5923,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5898,
											"end": 5929,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5946,
											"end": 5965,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 5946,
											"end": 5965,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 22841,
											"end": 22898,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 5574,
											"end": 5971,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 22841,
											"end": 22898,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 22841,
											"end": 22898,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16135,
											"end": 16145,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 22919,
											"end": 22940,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 22919,
											"end": 22940,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22919,
											"end": 22940,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22919,
											"end": 22940,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22919,
											"end": 22981,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 22919,
											"end": 22981,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 22944,
											"end": 22981,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 22961,
											"end": 22966,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16135,
											"end": 16145,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 23832,
											"end": 23996,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 23832,
											"end": 23996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22944,
											"end": 22981,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 22944,
											"end": 22981,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22911,
											"end": 23065,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 22911,
											"end": 23065,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22911,
											"end": 23065,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22911,
											"end": 23065,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 22911,
											"end": 23065,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22911,
											"end": 23065,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6178,
											"end": 6180,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 22911,
											"end": 23065,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 22911,
											"end": 23065,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 22911,
											"end": 23065,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6160,
											"end": 6181,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6217,
											"end": 6219,
											"name": "PUSH",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 6197,
											"end": 6215,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 6197,
											"end": 6215,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6197,
											"end": 6215,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6190,
											"end": 6220,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6256,
											"end": 6290,
											"name": "PUSH",
											"source": 1,
											"value": "4552433732313A20617070726F76652063616C6C6572206973206E6F74206F77"
										},
										{
											"begin": 6236,
											"end": 6254,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 6236,
											"end": 6254,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6236,
											"end": 6254,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6229,
											"end": 6291,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6327,
											"end": 6353,
											"name": "PUSH",
											"source": 1,
											"value": "6E6572206E6F7220617070726F76656420666F7220616C6C0000000000000000"
										},
										{
											"begin": 6307,
											"end": 6325,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 6307,
											"end": 6325,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6307,
											"end": 6325,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6300,
											"end": 6354,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6371,
											"end": 6390,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 6371,
											"end": 6390,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 22911,
											"end": 23065,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 5976,
											"end": 6396,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 22911,
											"end": 23065,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 22911,
											"end": 23065,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23078,
											"end": 23099,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 23087,
											"end": 23089,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 23091,
											"end": 23098,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 23078,
											"end": 23086,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 23078,
											"end": 23099,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23078,
											"end": 23099,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 23078,
											"end": 23099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22780,
											"end": 23107,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22710,
											"end": 23107,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22710,
											"end": 23107,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22710,
											"end": 23107,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24063,
											"end": 24368,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 24063,
											"end": 24368,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24224,
											"end": 24265,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 16135,
											"end": 16145,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 24257,
											"end": 24264,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24224,
											"end": 24242,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 24224,
											"end": 24265,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24224,
											"end": 24265,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 24224,
											"end": 24265,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24216,
											"end": 24319,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 24216,
											"end": 24319,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24216,
											"end": 24319,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24216,
											"end": 24319,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 24216,
											"end": 24319,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24216,
											"end": 24319,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24216,
											"end": 24319,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 24216,
											"end": 24319,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24216,
											"end": 24319,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 24216,
											"end": 24319,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24216,
											"end": 24319,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 24216,
											"end": 24319,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24216,
											"end": 24319,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 24216,
											"end": 24319,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24332,
											"end": 24360,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 24342,
											"end": 24346,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 24348,
											"end": 24350,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 24352,
											"end": 24359,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 24332,
											"end": 24341,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 24332,
											"end": 24360,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24439,
											"end": 24590,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 24439,
											"end": 24590,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24543,
											"end": 24582,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 24560,
											"end": 24564,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 24566,
											"end": 24568,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 24570,
											"end": 24577,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 24543,
											"end": 24582,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24543,
											"end": 24582,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24543,
											"end": 24582,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24543,
											"end": 24582,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24543,
											"end": 24582,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24543,
											"end": 24582,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24543,
											"end": 24582,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24543,
											"end": 24582,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24543,
											"end": 24582,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24543,
											"end": 24582,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24543,
											"end": 24582,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24543,
											"end": 24582,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24543,
											"end": 24559,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 24543,
											"end": 24582,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21407,
											"end": 21646,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 21407,
											"end": 21646,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21479,
											"end": 21486,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21515,
											"end": 21531,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21515,
											"end": 21531,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21515,
											"end": 21531,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21515,
											"end": 21522,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 21515,
											"end": 21531,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 21515,
											"end": 21531,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21515,
											"end": 21531,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21515,
											"end": 21531,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21515,
											"end": 21531,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 21515,
											"end": 21531,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 21515,
											"end": 21531,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21515,
											"end": 21531,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21542,
											"end": 21615,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 21542,
											"end": 21615,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21542,
											"end": 21615,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21542,
											"end": 21615,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 21542,
											"end": 21615,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21542,
											"end": 21615,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7021,
											"end": 7023,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 21542,
											"end": 21615,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 21542,
											"end": 21615,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21542,
											"end": 21615,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7003,
											"end": 7024,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7060,
											"end": 7062,
											"name": "PUSH",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 7040,
											"end": 7058,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 7040,
											"end": 7058,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7040,
											"end": 7058,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7033,
											"end": 7063,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7099,
											"end": 7133,
											"name": "PUSH",
											"source": 1,
											"value": "4552433732313A206F776E657220717565727920666F72206E6F6E6578697374"
										},
										{
											"begin": 7079,
											"end": 7097,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 7079,
											"end": 7097,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7079,
											"end": 7097,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7072,
											"end": 7134,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "32B73A103A37B5B2B7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7150,
											"end": 7168,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 7150,
											"end": 7168,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7150,
											"end": 7168,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7143,
											"end": 7182,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7199,
											"end": 7218,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 7199,
											"end": 7218,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 21542,
											"end": 21615,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 6819,
											"end": 7224,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 21137,
											"end": 21345,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 21137,
											"end": 21345,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21209,
											"end": 21216,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 21237,
											"end": 21256,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21237,
											"end": 21256,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21229,
											"end": 21303,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 21229,
											"end": 21303,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21229,
											"end": 21303,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21229,
											"end": 21303,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 21229,
											"end": 21303,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21229,
											"end": 21303,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7431,
											"end": 7433,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 21229,
											"end": 21303,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 21229,
											"end": 21303,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21229,
											"end": 21303,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7413,
											"end": 7434,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7470,
											"end": 7472,
											"name": "PUSH",
											"source": 1,
											"value": "2A"
										},
										{
											"begin": 7450,
											"end": 7468,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 7450,
											"end": 7468,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7450,
											"end": 7468,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7443,
											"end": 7473,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7509,
											"end": 7543,
											"name": "PUSH",
											"source": 1,
											"value": "4552433732313A2062616C616E636520717565727920666F7220746865207A65"
										},
										{
											"begin": 7489,
											"end": 7507,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 7489,
											"end": 7507,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7489,
											"end": 7507,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7482,
											"end": 7544,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "726F2061646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7560,
											"end": 7578,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 7560,
											"end": 7578,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7560,
											"end": 7578,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7553,
											"end": 7593,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7610,
											"end": 7629,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 7610,
											"end": 7629,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 21229,
											"end": 21303,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 7229,
											"end": 7635,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 21229,
											"end": 21303,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 21229,
											"end": 21303,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 21321,
											"end": 21337,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21321,
											"end": 21337,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21321,
											"end": 21337,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21321,
											"end": 21337,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21321,
											"end": 21337,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21321,
											"end": 21330,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 21321,
											"end": 21337,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 21321,
											"end": 21337,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21321,
											"end": 21337,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21321,
											"end": 21337,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21321,
											"end": 21337,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 21321,
											"end": 21337,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 21321,
											"end": 21337,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21137,
											"end": 21345,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21882,
											"end": 21986,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 21882,
											"end": 21986,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21938,
											"end": 21951,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 21971,
											"end": 21978,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 21964,
											"end": 21978,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21964,
											"end": 21978,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 21964,
											"end": 21978,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 21964,
											"end": 21978,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21964,
											"end": 21978,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 21964,
											"end": 21978,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23466,
											"end": 23761,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 23466,
											"end": 23761,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16135,
											"end": 16145,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 23569,
											"end": 23593,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 23569,
											"end": 23593,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23569,
											"end": 23593,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 23561,
											"end": 23623,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 23561,
											"end": 23623,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23561,
											"end": 23623,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23561,
											"end": 23623,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 23561,
											"end": 23623,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23561,
											"end": 23623,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7842,
											"end": 7844,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 23561,
											"end": 23623,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 23561,
											"end": 23623,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23561,
											"end": 23623,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7824,
											"end": 7845,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7881,
											"end": 7883,
											"name": "PUSH",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 7861,
											"end": 7879,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 7861,
											"end": 7879,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7861,
											"end": 7879,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7854,
											"end": 7884,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7920,
											"end": 7947,
											"name": "PUSH",
											"source": 1,
											"value": "4552433732313A20617070726F766520746F2063616C6C657200000000000000"
										},
										{
											"begin": 7900,
											"end": 7918,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 7900,
											"end": 7918,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7900,
											"end": 7918,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7893,
											"end": 7948,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7965,
											"end": 7983,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 7965,
											"end": 7983,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 23561,
											"end": 23623,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 7640,
											"end": 7989,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 23561,
											"end": 23623,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 23561,
											"end": 23623,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16135,
											"end": 16145,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 23636,
											"end": 23668,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23636,
											"end": 23668,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23636,
											"end": 23668,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23636,
											"end": 23668,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23636,
											"end": 23654,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 23636,
											"end": 23668,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23636,
											"end": 23668,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23636,
											"end": 23668,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23636,
											"end": 23668,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23636,
											"end": 23668,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23636,
											"end": 23668,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23636,
											"end": 23668,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 23636,
											"end": 23668,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 23636,
											"end": 23678,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 23636,
											"end": 23678,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23636,
											"end": 23678,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23636,
											"end": 23678,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 23636,
											"end": 23678,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23636,
											"end": 23678,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23636,
											"end": 23678,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 23636,
											"end": 23678,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23636,
											"end": 23678,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 23636,
											"end": 23678,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23636,
											"end": 23678,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23636,
											"end": 23678,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 23636,
											"end": 23689,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23636,
											"end": 23689,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 23636,
											"end": 23689,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23636,
											"end": 23689,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 23636,
											"end": 23689,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 23636,
											"end": 23689,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 23636,
											"end": 23689,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23636,
											"end": 23689,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23636,
											"end": 23689,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 23636,
											"end": 23689,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23636,
											"end": 23689,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23636,
											"end": 23689,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 23705,
											"end": 23753,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23705,
											"end": 23753,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 540,
											"end": 581,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 540,
											"end": 581,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 540,
											"end": 581,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 23636,
											"end": 23678,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23636,
											"end": 23678,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 16135,
											"end": 16145,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23705,
											"end": 23753,
											"name": "PUSH",
											"source": 0,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 23705,
											"end": 23753,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 513,
											"end": 531,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 23705,
											"end": 23753,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23705,
											"end": 23753,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23705,
											"end": 23753,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23705,
											"end": 23753,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23705,
											"end": 23753,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 23705,
											"end": 23753,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23705,
											"end": 23753,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 23466,
											"end": 23761,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23466,
											"end": 23761,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23466,
											"end": 23761,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24661,
											"end": 24946,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 24661,
											"end": 24946,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24793,
											"end": 24834,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 16135,
											"end": 16145,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 24826,
											"end": 24833,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 24793,
											"end": 24811,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 24793,
											"end": 24834,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24793,
											"end": 24834,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 24793,
											"end": 24834,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24785,
											"end": 24888,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 24785,
											"end": 24888,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24785,
											"end": 24888,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24785,
											"end": 24888,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 24785,
											"end": 24888,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24785,
											"end": 24888,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24785,
											"end": 24888,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 24785,
											"end": 24888,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24785,
											"end": 24888,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 24785,
											"end": 24888,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24785,
											"end": 24888,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 24785,
											"end": 24888,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24785,
											"end": 24888,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 24785,
											"end": 24888,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24899,
											"end": 24938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 24913,
											"end": 24917,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 24919,
											"end": 24921,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 24923,
											"end": 24930,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 24932,
											"end": 24937,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 24899,
											"end": 24912,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 24899,
											"end": 24938,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24899,
											"end": 24938,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 24899,
											"end": 24938,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24661,
											"end": 24946,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24661,
											"end": 24946,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24661,
											"end": 24946,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24661,
											"end": 24946,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24661,
											"end": 24946,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22057,
											"end": 22417,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 22057,
											"end": 22417,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26478,
											"end": 26482,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26502,
											"end": 26518,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26502,
											"end": 26518,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26502,
											"end": 26518,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26502,
											"end": 26509,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 26502,
											"end": 26518,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26502,
											"end": 26518,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26502,
											"end": 26518,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26502,
											"end": 26518,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26502,
											"end": 26518,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 26502,
											"end": 26518,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 22130,
											"end": 22143,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 22130,
											"end": 22143,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 26502,
											"end": 26518,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22156,
											"end": 22232,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 22156,
											"end": 22232,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22156,
											"end": 22232,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22156,
											"end": 22232,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 22156,
											"end": 22232,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22156,
											"end": 22232,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8196,
											"end": 8198,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 22156,
											"end": 22232,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 22156,
											"end": 22232,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 22156,
											"end": 22232,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8178,
											"end": 8199,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8235,
											"end": 8237,
											"name": "PUSH",
											"source": 1,
											"value": "2F"
										},
										{
											"begin": 8215,
											"end": 8233,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 8215,
											"end": 8233,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8215,
											"end": 8233,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8208,
											"end": 8238,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8274,
											"end": 8308,
											"name": "PUSH",
											"source": 1,
											"value": "4552433732314D657461646174613A2055524920717565727920666F72206E6F"
										},
										{
											"begin": 8254,
											"end": 8272,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 8254,
											"end": 8272,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8254,
											"end": 8272,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8247,
											"end": 8309,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3732BC34B9BA32B73A103A37B5B2B7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "89"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8325,
											"end": 8343,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 8325,
											"end": 8343,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8325,
											"end": 8343,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8318,
											"end": 8363,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8380,
											"end": 8399,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 8380,
											"end": 8399,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 22156,
											"end": 22232,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 7994,
											"end": 8405,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 22156,
											"end": 22232,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 22156,
											"end": 22232,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22245,
											"end": 22266,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22269,
											"end": 22279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 22631,
											"end": 22640,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22631,
											"end": 22640,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22631,
											"end": 22640,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 22631,
											"end": 22640,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 22631,
											"end": 22640,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22631,
											"end": 22640,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22631,
											"end": 22640,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22631,
											"end": 22640,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22631,
											"end": 22640,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 22631,
											"end": 22640,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22631,
											"end": 22640,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22631,
											"end": 22640,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22554,
											"end": 22648,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22269,
											"end": 22279,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 22269,
											"end": 22279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22245,
											"end": 22279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22245,
											"end": 22279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22321,
											"end": 22322,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22303,
											"end": 22310,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22297,
											"end": 22318,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 22297,
											"end": 22322,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 22297,
											"end": 22409,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 22297,
											"end": 22409,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22297,
											"end": 22409,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22297,
											"end": 22409,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 22297,
											"end": 22409,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22297,
											"end": 22409,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 22297,
											"end": 22409,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22297,
											"end": 22409,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22297,
											"end": 22409,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22297,
											"end": 22409,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22297,
											"end": 22409,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22297,
											"end": 22409,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22297,
											"end": 22409,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22297,
											"end": 22409,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22297,
											"end": 22409,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 22297,
											"end": 22409,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22297,
											"end": 22409,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 22297,
											"end": 22409,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22362,
											"end": 22369,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22371,
											"end": 22389,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 22371,
											"end": 22378,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 22371,
											"end": 22387,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 22371,
											"end": 22389,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22371,
											"end": 22389,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 22371,
											"end": 22389,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22345,
											"end": 22390,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22345,
											"end": 22390,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 22345,
											"end": 22390,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 22345,
											"end": 22390,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22345,
											"end": 22390,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 22345,
											"end": 22390,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 22345,
											"end": 22390,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22345,
											"end": 22390,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22345,
											"end": 22390,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 22345,
											"end": 22390,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22345,
											"end": 22390,
											"name": "tag",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 22345,
											"end": 22390,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22345,
											"end": 22390,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22345,
											"end": 22390,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 22345,
											"end": 22390,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 22345,
											"end": 22390,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22345,
											"end": 22390,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 22345,
											"end": 22390,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 22345,
											"end": 22390,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 22345,
											"end": 22390,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22345,
											"end": 22390,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22345,
											"end": 22390,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22345,
											"end": 22390,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22345,
											"end": 22390,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22297,
											"end": 22409,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 22297,
											"end": 22409,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22290,
											"end": 22409,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 22057,
											"end": 22417,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 22057,
											"end": 22417,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23832,
											"end": 23996,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 23832,
											"end": 23996,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 23953,
											"end": 23978,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23953,
											"end": 23978,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23953,
											"end": 23978,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23929,
											"end": 23933,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23953,
											"end": 23978,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23953,
											"end": 23978,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23953,
											"end": 23978,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23953,
											"end": 23971,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 23953,
											"end": 23978,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23953,
											"end": 23978,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23953,
											"end": 23978,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23953,
											"end": 23978,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23953,
											"end": 23978,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23953,
											"end": 23978,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23953,
											"end": 23978,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 23953,
											"end": 23978,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 23953,
											"end": 23988,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 23953,
											"end": 23988,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23953,
											"end": 23988,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 23953,
											"end": 23988,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23953,
											"end": 23988,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23953,
											"end": 23988,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23953,
											"end": 23988,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23953,
											"end": 23988,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23953,
											"end": 23988,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23953,
											"end": 23988,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23953,
											"end": 23988,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 23953,
											"end": 23988,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23953,
											"end": 23988,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 23953,
											"end": 23988,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23953,
											"end": 23988,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23832,
											"end": 23996,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30290,
											"end": 30464,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 30290,
											"end": 30464,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30365,
											"end": 30389,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30365,
											"end": 30389,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30365,
											"end": 30389,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30365,
											"end": 30389,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30365,
											"end": 30380,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 30365,
											"end": 30389,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30365,
											"end": 30389,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30365,
											"end": 30389,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30365,
											"end": 30389,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30365,
											"end": 30389,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 30365,
											"end": 30394,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30365,
											"end": 30394,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 30365,
											"end": 30394,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 30365,
											"end": 30394,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 30365,
											"end": 30394,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30365,
											"end": 30394,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30365,
											"end": 30394,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30365,
											"end": 30394,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 30365,
											"end": 30394,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30365,
											"end": 30394,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30365,
											"end": 30394,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 30365,
											"end": 30389,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30365,
											"end": 30389,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30419,
											"end": 30442,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 30365,
											"end": 30389,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30419,
											"end": 30433,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 30419,
											"end": 30442,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30419,
											"end": 30442,
											"name": "tag",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 30419,
											"end": 30442,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 30410,
											"end": 30456,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30410,
											"end": 30456,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 30410,
											"end": 30456,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30410,
											"end": 30456,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30410,
											"end": 30456,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30410,
											"end": 30456,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30410,
											"end": 30456,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30410,
											"end": 30456,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30410,
											"end": 30456,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 30410,
											"end": 30456,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30410,
											"end": 30456,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 30290,
											"end": 30464,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30290,
											"end": 30464,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30290,
											"end": 30464,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26707,
											"end": 27055,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 26707,
											"end": 27055,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26800,
											"end": 26804,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26502,
											"end": 26518,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26502,
											"end": 26518,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26502,
											"end": 26518,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26502,
											"end": 26509,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 26502,
											"end": 26518,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26502,
											"end": 26518,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26502,
											"end": 26518,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26502,
											"end": 26518,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26502,
											"end": 26518,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 26502,
											"end": 26518,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 26502,
											"end": 26518,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26817,
											"end": 26890,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 26817,
											"end": 26890,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26817,
											"end": 26890,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26817,
											"end": 26890,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 26817,
											"end": 26890,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26817,
											"end": 26890,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9113,
											"end": 9115,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 26817,
											"end": 26890,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 26817,
											"end": 26890,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 26817,
											"end": 26890,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9095,
											"end": 9116,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9152,
											"end": 9154,
											"name": "PUSH",
											"source": 1,
											"value": "2C"
										},
										{
											"begin": 9132,
											"end": 9150,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 9132,
											"end": 9150,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9132,
											"end": 9150,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9125,
											"end": 9155,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9191,
											"end": 9225,
											"name": "PUSH",
											"source": 1,
											"value": "4552433732313A206F70657261746F7220717565727920666F72206E6F6E6578"
										},
										{
											"begin": 9171,
											"end": 9189,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 9171,
											"end": 9189,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9171,
											"end": 9189,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9164,
											"end": 9226,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "34B9BA32B73A103A37B5B2B7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9242,
											"end": 9260,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 9242,
											"end": 9260,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9242,
											"end": 9260,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9235,
											"end": 9277,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9294,
											"end": 9313,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 9294,
											"end": 9313,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 26817,
											"end": 26890,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 8911,
											"end": 9319,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 26817,
											"end": 26890,
											"name": "tag",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 26817,
											"end": 26890,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26901,
											"end": 26914,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26917,
											"end": 26940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 26932,
											"end": 26939,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 26917,
											"end": 26931,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 26917,
											"end": 26940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26917,
											"end": 26940,
											"name": "tag",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 26917,
											"end": 26940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26901,
											"end": 26940,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26901,
											"end": 26940,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26970,
											"end": 26975,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 26959,
											"end": 26975,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26959,
											"end": 26966,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 26959,
											"end": 26975,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26959,
											"end": 26975,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 26959,
											"end": 27010,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26959,
											"end": 27010,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 26959,
											"end": 27010,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26959,
											"end": 27010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27003,
											"end": 27010,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 26979,
											"end": 27010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26979,
											"end": 26999,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 26991,
											"end": 26998,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 26979,
											"end": 26990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 26979,
											"end": 26999,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26979,
											"end": 26999,
											"name": "tag",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 26979,
											"end": 26999,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 26979,
											"end": 27010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26979,
											"end": 27010,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 26959,
											"end": 27010,
											"name": "tag",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 26959,
											"end": 27010,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26959,
											"end": 27046,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26959,
											"end": 27046,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 26959,
											"end": 27046,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26959,
											"end": 27046,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27014,
											"end": 27046,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 27031,
											"end": 27036,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27038,
											"end": 27045,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 27014,
											"end": 27030,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 27014,
											"end": 27046,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27014,
											"end": 27046,
											"name": "tag",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 27014,
											"end": 27046,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26951,
											"end": 27047,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 26707,
											"end": 27055,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 26707,
											"end": 27055,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29628,
											"end": 30172,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 29628,
											"end": 30172,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29753,
											"end": 29757,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 29726,
											"end": 29757,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29726,
											"end": 29749,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 29741,
											"end": 29748,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29726,
											"end": 29740,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 29726,
											"end": 29749,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29726,
											"end": 29749,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 29726,
											"end": 29749,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 29726,
											"end": 29757,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29726,
											"end": 29757,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 29718,
											"end": 29803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 29718,
											"end": 29803,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29718,
											"end": 29803,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29718,
											"end": 29803,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 29718,
											"end": 29803,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29718,
											"end": 29803,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9526,
											"end": 9528,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 29718,
											"end": 29803,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 29718,
											"end": 29803,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29718,
											"end": 29803,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9508,
											"end": 9529,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9565,
											"end": 9567,
											"name": "PUSH",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 9545,
											"end": 9563,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 9545,
											"end": 9563,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9545,
											"end": 9563,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9538,
											"end": 9568,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9604,
											"end": 9638,
											"name": "PUSH",
											"source": 1,
											"value": "4552433732313A207472616E73666572206F6620746F6B656E20746861742069"
										},
										{
											"begin": 9584,
											"end": 9602,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 9584,
											"end": 9602,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9584,
											"end": 9602,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9577,
											"end": 9639,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "39903737BA1037BBB7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9655,
											"end": 9673,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 9655,
											"end": 9673,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9655,
											"end": 9673,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9648,
											"end": 9687,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9704,
											"end": 9723,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 9704,
											"end": 9723,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 29718,
											"end": 29803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 9324,
											"end": 9729,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 29718,
											"end": 29803,
											"name": "tag",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 29718,
											"end": 29803,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 29822,
											"end": 29838,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29822,
											"end": 29838,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29814,
											"end": 29879,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 29814,
											"end": 29879,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29814,
											"end": 29879,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29814,
											"end": 29879,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 29814,
											"end": 29879,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29814,
											"end": 29879,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9936,
											"end": 9938,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 29814,
											"end": 29879,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 29814,
											"end": 29879,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29814,
											"end": 29879,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9918,
											"end": 9939,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9975,
											"end": 9977,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 9955,
											"end": 9973,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9955,
											"end": 9973,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9955,
											"end": 9973,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9948,
											"end": 9978,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10014,
											"end": 10048,
											"name": "PUSH",
											"source": 1,
											"value": "4552433732313A207472616E7366657220746F20746865207A65726F20616464"
										},
										{
											"begin": 9994,
											"end": 10012,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 9994,
											"end": 10012,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9994,
											"end": 10012,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9987,
											"end": 10049,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10065,
											"end": 10083,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 10065,
											"end": 10083,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10065,
											"end": 10083,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10058,
											"end": 10092,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10109,
											"end": 10128,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 10109,
											"end": 10128,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 29814,
											"end": 29879,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 9734,
											"end": 10134,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 29814,
											"end": 29879,
											"name": "tag",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 29814,
											"end": 29879,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29996,
											"end": 30025,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 30013,
											"end": 30014,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30017,
											"end": 30024,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29996,
											"end": 30004,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 29996,
											"end": 30025,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29996,
											"end": 30025,
											"name": "tag",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 29996,
											"end": 30025,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 30038,
											"end": 30053,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 30038,
											"end": 30053,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30038,
											"end": 30053,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30038,
											"end": 30053,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30038,
											"end": 30053,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30038,
											"end": 30053,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30038,
											"end": 30047,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 30038,
											"end": 30053,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30038,
											"end": 30053,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30038,
											"end": 30053,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30038,
											"end": 30053,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30038,
											"end": 30053,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 30038,
											"end": 30058,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30038,
											"end": 30058,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 30057,
											"end": 30058,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 30057,
											"end": 30058,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 30038,
											"end": 30053,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30038,
											"end": 30058,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 30038,
											"end": 30058,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30057,
											"end": 30058,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 30057,
											"end": 30058,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30038,
											"end": 30058,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 30038,
											"end": 30058,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30038,
											"end": 30058,
											"name": "tag",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 30038,
											"end": 30058,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30038,
											"end": 30058,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30038,
											"end": 30058,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30038,
											"end": 30058,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 30069,
											"end": 30082,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30069,
											"end": 30082,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30069,
											"end": 30082,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30069,
											"end": 30082,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30069,
											"end": 30082,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30069,
											"end": 30082,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30069,
											"end": 30078,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 30069,
											"end": 30082,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30069,
											"end": 30082,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30069,
											"end": 30082,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30069,
											"end": 30082,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30069,
											"end": 30082,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 30069,
											"end": 30087,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30069,
											"end": 30087,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 30086,
											"end": 30087,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 30086,
											"end": 30087,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 30069,
											"end": 30082,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30069,
											"end": 30087,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 30069,
											"end": 30087,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30086,
											"end": 30087,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 30086,
											"end": 30087,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30069,
											"end": 30087,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 30069,
											"end": 30087,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30069,
											"end": 30087,
											"name": "tag",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 30069,
											"end": 30087,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30069,
											"end": 30087,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30069,
											"end": 30087,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30069,
											"end": 30087,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 30098,
											"end": 30114,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30098,
											"end": 30114,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30098,
											"end": 30114,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30098,
											"end": 30114,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30098,
											"end": 30105,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 30098,
											"end": 30114,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30098,
											"end": 30114,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30098,
											"end": 30114,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30098,
											"end": 30114,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30098,
											"end": 30114,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30098,
											"end": 30114,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 30098,
											"end": 30119,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30098,
											"end": 30119,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 30098,
											"end": 30119,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 30098,
											"end": 30119,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 30098,
											"end": 30119,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30098,
											"end": 30119,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30098,
											"end": 30119,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30098,
											"end": 30119,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30098,
											"end": 30119,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 30098,
											"end": 30119,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30098,
											"end": 30119,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 30098,
											"end": 30119,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 30137,
											"end": 30164,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30137,
											"end": 30164,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30098,
											"end": 30114,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 30098,
											"end": 30114,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 30137,
											"end": 30164,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30137,
											"end": 30164,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 30137,
											"end": 30164,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30137,
											"end": 30164,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30137,
											"end": 30164,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 30137,
											"end": 30164,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30137,
											"end": 30164,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 29628,
											"end": 30172,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29628,
											"end": 30172,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29628,
											"end": 30172,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29628,
											"end": 30172,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25828,
											"end": 26100,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 25828,
											"end": 26100,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25942,
											"end": 25970,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 25952,
											"end": 25956,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 25958,
											"end": 25960,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 25962,
											"end": 25969,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 25942,
											"end": 25951,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 25942,
											"end": 25970,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25942,
											"end": 25970,
											"name": "tag",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 25942,
											"end": 25970,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25989,
											"end": 26037,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 26012,
											"end": 26016,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 26018,
											"end": 26020,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 26022,
											"end": 26029,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 26031,
											"end": 26036,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 25989,
											"end": 26011,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 25989,
											"end": 26037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25989,
											"end": 26037,
											"name": "tag",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 25989,
											"end": 26037,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25981,
											"end": 26092,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 25981,
											"end": 26092,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25981,
											"end": 26092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25981,
											"end": 26092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 25981,
											"end": 26092,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25981,
											"end": 26092,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25981,
											"end": 26092,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 25981,
											"end": 26092,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25981,
											"end": 26092,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 25981,
											"end": 26092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25981,
											"end": 26092,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 25981,
											"end": 26092,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16716,
											"end": 17439,
											"name": "tag",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 16716,
											"end": 17439,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16772,
											"end": 16785,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 16993,
											"end": 16998,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17002,
											"end": 17003,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16993,
											"end": 17003,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16989,
											"end": 17042,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 16989,
											"end": 17042,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17020,
											"end": 17030,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17020,
											"end": 17030,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17020,
											"end": 17030,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17020,
											"end": 17030,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17020,
											"end": 17030,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17020,
											"end": 17030,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17020,
											"end": 17030,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17020,
											"end": 17030,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17020,
											"end": 17030,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17020,
											"end": 17030,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 17020,
											"end": 17030,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17020,
											"end": 17030,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17020,
											"end": 17030,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17020,
											"end": 17030,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17020,
											"end": 17030,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17020,
											"end": 17030,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17020,
											"end": 17030,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16716,
											"end": 17439,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16989,
											"end": 17042,
											"name": "tag",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 16989,
											"end": 17042,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17067,
											"end": 17072,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17052,
											"end": 17064,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17108,
											"end": 17186,
											"name": "tag",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 17108,
											"end": 17186,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17115,
											"end": 17124,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17115,
											"end": 17124,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17108,
											"end": 17186,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 17108,
											"end": 17186,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17141,
											"end": 17149,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17141,
											"end": 17149,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 17141,
											"end": 17149,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17141,
											"end": 17149,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 17141,
											"end": 17149,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17141,
											"end": 17149,
											"name": "tag",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 17141,
											"end": 17149,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17141,
											"end": 17149,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17164,
											"end": 17174,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 17164,
											"end": 17174,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17172,
											"end": 17174,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 17164,
											"end": 17174,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17164,
											"end": 17174,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 17164,
											"end": 17174,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17164,
											"end": 17174,
											"name": "tag",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 17164,
											"end": 17174,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17164,
											"end": 17174,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17164,
											"end": 17174,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17108,
											"end": 17186,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 17108,
											"end": 17186,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17108,
											"end": 17186,
											"name": "tag",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 17108,
											"end": 17186,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17196,
											"end": 17215,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17228,
											"end": 17234,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17218,
											"end": 17235,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17218,
											"end": 17235,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17218,
											"end": 17235,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 17218,
											"end": 17235,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17218,
											"end": 17235,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 17218,
											"end": 17235,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17218,
											"end": 17235,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 17218,
											"end": 17235,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 17218,
											"end": 17235,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17218,
											"end": 17235,
											"name": "tag",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 17218,
											"end": 17235,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17218,
											"end": 17235,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17218,
											"end": 17235,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17218,
											"end": 17235,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17218,
											"end": 17235,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17218,
											"end": 17235,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17218,
											"end": 17235,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17218,
											"end": 17235,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17218,
											"end": 17235,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 17218,
											"end": 17235,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17218,
											"end": 17235,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 17218,
											"end": 17235,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 17218,
											"end": 17235,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17218,
											"end": 17235,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17218,
											"end": 17235,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17218,
											"end": 17235,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17218,
											"end": 17235,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17218,
											"end": 17235,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17218,
											"end": 17235,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17218,
											"end": 17235,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17218,
											"end": 17235,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17218,
											"end": 17235,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 17218,
											"end": 17235,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17218,
											"end": 17235,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17218,
											"end": 17235,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17218,
											"end": 17235,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17218,
											"end": 17235,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17218,
											"end": 17235,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17218,
											"end": 17235,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 17218,
											"end": 17235,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17218,
											"end": 17235,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 17218,
											"end": 17235,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17218,
											"end": 17235,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17218,
											"end": 17235,
											"name": "tag",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 17218,
											"end": 17235,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17218,
											"end": 17235,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17196,
											"end": 17235,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17196,
											"end": 17235,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17246,
											"end": 17400,
											"name": "tag",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 17246,
											"end": 17400,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17253,
											"end": 17263,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 17253,
											"end": 17263,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17246,
											"end": 17400,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 17246,
											"end": 17400,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17280,
											"end": 17291,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 17290,
											"end": 17291,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 17280,
											"end": 17291,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17280,
											"end": 17291,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 17280,
											"end": 17291,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17280,
											"end": 17291,
											"name": "tag",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 17280,
											"end": 17291,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17280,
											"end": 17291,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17349,
											"end": 17359,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 17357,
											"end": 17359,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 17349,
											"end": 17354,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 17349,
											"end": 17359,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 17349,
											"end": 17359,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17349,
											"end": 17359,
											"name": "tag",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 17349,
											"end": 17359,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17336,
											"end": 17360,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 17336,
											"end": 17360,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17336,
											"end": 17338,
											"name": "PUSH",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 17336,
											"end": 17360,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 17336,
											"end": 17360,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17336,
											"end": 17360,
											"name": "tag",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 17336,
											"end": 17360,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17323,
											"end": 17362,
											"name": "PUSH",
											"source": 0,
											"value": "F8"
										},
										{
											"begin": 17323,
											"end": 17362,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 17306,
											"end": 17312,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17313,
											"end": 17319,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17306,
											"end": 17320,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17306,
											"end": 17320,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17306,
											"end": 17320,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17306,
											"end": 17320,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 17306,
											"end": 17320,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 17306,
											"end": 17320,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17306,
											"end": 17320,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 17306,
											"end": 17320,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 17306,
											"end": 17320,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17306,
											"end": 17320,
											"name": "tag",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 17306,
											"end": 17320,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17306,
											"end": 17320,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17306,
											"end": 17320,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17306,
											"end": 17320,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17306,
											"end": 17362,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17306,
											"end": 17362,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 17306,
											"end": 17362,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17306,
											"end": 17362,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17306,
											"end": 17362,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17306,
											"end": 17362,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17306,
											"end": 17362,
											"name": "BYTE",
											"source": 0
										},
										{
											"begin": 17306,
											"end": 17362,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17306,
											"end": 17362,
											"name": "MSTORE8",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17377,
											"end": 17388,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 17386,
											"end": 17388,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 17377,
											"end": 17388,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 17377,
											"end": 17388,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 17377,
											"end": 17388,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17377,
											"end": 17388,
											"name": "tag",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 17377,
											"end": 17388,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17377,
											"end": 17388,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 17377,
											"end": 17388,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17246,
											"end": 17400,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 17246,
											"end": 17400,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31029,
											"end": 31872,
											"name": "tag",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 31029,
											"end": 31872,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31150,
											"end": 31154,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 31176,
											"end": 31189,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 31176,
											"end": 31189,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8533,
											"end": 8553,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 8572,
											"end": 8580,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 31172,
											"end": 31865,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 31172,
											"end": 31865,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31212,
											"end": 31284,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31212,
											"end": 31284,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A85BD01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 31212,
											"end": 31284,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31212,
											"end": 31284,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 31212,
											"end": 31248,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 31212,
											"end": 31248,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31212,
											"end": 31248,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31212,
											"end": 31248,
											"name": "PUSH",
											"source": 0,
											"value": "150B7A02"
										},
										{
											"begin": 31212,
											"end": 31248,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31212,
											"end": 31284,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 31212,
											"end": 31284,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16135,
											"end": 16145,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 16135,
											"end": 16145,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31263,
											"end": 31267,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 31263,
											"end": 31267,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31269,
											"end": 31276,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 31269,
											"end": 31276,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31278,
											"end": 31283,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 31278,
											"end": 31283,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31212,
											"end": 31284,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 31212,
											"end": 31284,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31212,
											"end": 31284,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 31212,
											"end": 31284,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31212,
											"end": 31284,
											"name": "tag",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 31212,
											"end": 31284,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31212,
											"end": 31284,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31212,
											"end": 31284,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31212,
											"end": 31284,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31212,
											"end": 31284,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31212,
											"end": 31284,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 31212,
											"end": 31284,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 31212,
											"end": 31284,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31212,
											"end": 31284,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31212,
											"end": 31284,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 31212,
											"end": 31284,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 31212,
											"end": 31284,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 31212,
											"end": 31284,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 31212,
											"end": 31284,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31212,
											"end": 31284,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31212,
											"end": 31284,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31212,
											"end": 31284,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31212,
											"end": 31284,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 31212,
											"end": 31284,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 31212,
											"end": 31284,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 31212,
											"end": 31284,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31212,
											"end": 31284,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31212,
											"end": 31284,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31212,
											"end": 31284,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 31212,
											"end": 31284,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 31212,
											"end": 31284,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31212,
											"end": 31284,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31212,
											"end": 31284,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 31212,
											"end": 31284,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31212,
											"end": 31284,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31212,
											"end": 31284,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31212,
											"end": 31284,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31212,
											"end": 31284,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 31212,
											"end": 31284,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31212,
											"end": 31284,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 31212,
											"end": 31284,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31212,
											"end": 31284,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31212,
											"end": 31284,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31212,
											"end": 31284,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31212,
											"end": 31284,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 31212,
											"end": 31284,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31212,
											"end": 31284,
											"name": "tag",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 31212,
											"end": 31284,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31212,
											"end": 31284,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 31212,
											"end": 31284,
											"name": "tag",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 31212,
											"end": 31284,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31208,
											"end": 31810,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 31208,
											"end": 31810,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31208,
											"end": 31810,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 31208,
											"end": 31810,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31208,
											"end": 31810,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31208,
											"end": 31810,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 31208,
											"end": 31810,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 31208,
											"end": 31810,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31208,
											"end": 31810,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31208,
											"end": 31810,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31208,
											"end": 31810,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31208,
											"end": 31810,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31208,
											"end": 31810,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 31208,
											"end": 31810,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 31208,
											"end": 31810,
											"name": "PUSH",
											"source": 0,
											"value": "3F"
										},
										{
											"begin": 31208,
											"end": 31810,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 31208,
											"end": 31810,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31208,
											"end": 31810,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31208,
											"end": 31810,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31208,
											"end": 31810,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31208,
											"end": 31810,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31208,
											"end": 31810,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31208,
											"end": 31810,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 31208,
											"end": 31810,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31208,
											"end": 31810,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31208,
											"end": 31810,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 31208,
											"end": 31810,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31208,
											"end": 31810,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31208,
											"end": 31810,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 31208,
											"end": 31810,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31208,
											"end": 31810,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 31208,
											"end": 31810,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 31208,
											"end": 31810,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31208,
											"end": 31810,
											"name": "tag",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 31208,
											"end": 31810,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31208,
											"end": 31810,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 31208,
											"end": 31810,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31208,
											"end": 31810,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31208,
											"end": 31810,
											"name": "tag",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 31208,
											"end": 31810,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31208,
											"end": 31810,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31458,
											"end": 31464,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31458,
											"end": 31471,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31475,
											"end": 31476,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31458,
											"end": 31476,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 31454,
											"end": 31795,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 31454,
											"end": 31795,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31501,
											"end": 31561,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31501,
											"end": 31561,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 31501,
											"end": 31561,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31501,
											"end": 31561,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31501,
											"end": 31561,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 31501,
											"end": 31561,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31501,
											"end": 31561,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 31501,
											"end": 31561,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31501,
											"end": 31561,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 31501,
											"end": 31561,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31454,
											"end": 31795,
											"name": "tag",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 31454,
											"end": 31795,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31745,
											"end": 31751,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31739,
											"end": 31752,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31730,
											"end": 31736,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31726,
											"end": 31728,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31722,
											"end": 31737,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31715,
											"end": 31753,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 31208,
											"end": 31810,
											"name": "tag",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 31208,
											"end": 31810,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 31335,
											"end": 31390,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A85BD01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 31335,
											"end": 31390,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 31335,
											"end": 31390,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 31328,
											"end": 31390,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 31328,
											"end": 31390,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31172,
											"end": 31865,
											"name": "tag",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 31172,
											"end": 31865,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 31849,
											"end": 31853,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 31029,
											"end": 31872,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 31029,
											"end": 31872,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 31029,
											"end": 31872,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31029,
											"end": 31872,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31029,
											"end": 31872,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31029,
											"end": 31872,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31029,
											"end": 31872,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14,
											"end": 145,
											"name": "tag",
											"source": 1,
											"value": "245"
										},
										{
											"begin": 14,
											"end": 145,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 88,
											"end": 120,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 88,
											"end": 120,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 78,
											"end": 121,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 78,
											"end": 121,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 68,
											"end": 139,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "253"
										},
										{
											"begin": 68,
											"end": 139,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 135,
											"end": 136,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 132,
											"end": 133,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 125,
											"end": 137,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 68,
											"end": 139,
											"name": "tag",
											"source": 1,
											"value": "253"
										},
										{
											"begin": 68,
											"end": 139,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14,
											"end": 145,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14,
											"end": 145,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 150,
											"end": 395,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 150,
											"end": 395,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 208,
											"end": 214,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 261,
											"end": 263,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 249,
											"end": 258,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 240,
											"end": 247,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 236,
											"end": 259,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 232,
											"end": 264,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 229,
											"end": 281,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 229,
											"end": 281,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "255"
										},
										{
											"begin": 229,
											"end": 281,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 277,
											"end": 278,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 274,
											"end": 275,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 267,
											"end": 279,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 229,
											"end": 281,
											"name": "tag",
											"source": 1,
											"value": "255"
										},
										{
											"begin": 229,
											"end": 281,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 316,
											"end": 325,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 303,
											"end": 326,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 335,
											"end": 365,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 359,
											"end": 364,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 335,
											"end": 365,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "245"
										},
										{
											"begin": 335,
											"end": 365,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 592,
											"end": 842,
											"name": "tag",
											"source": 1,
											"value": "246"
										},
										{
											"begin": 592,
											"end": 842,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 677,
											"end": 678,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 687,
											"end": 800,
											"name": "tag",
											"source": 1,
											"value": "259"
										},
										{
											"begin": 687,
											"end": 800,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 701,
											"end": 707,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 698,
											"end": 699,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 695,
											"end": 708,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 687,
											"end": 800,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 687,
											"end": 800,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "261"
										},
										{
											"begin": 687,
											"end": 800,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 777,
											"end": 788,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 777,
											"end": 788,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 777,
											"end": 788,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 771,
											"end": 789,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 758,
											"end": 769,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 758,
											"end": 769,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 758,
											"end": 769,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 751,
											"end": 790,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 723,
											"end": 725,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 716,
											"end": 726,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 687,
											"end": 800,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "259"
										},
										{
											"begin": 687,
											"end": 800,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 687,
											"end": 800,
											"name": "tag",
											"source": 1,
											"value": "261"
										},
										{
											"begin": 687,
											"end": 800,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 834,
											"end": 835,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 816,
											"end": 832,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 816,
											"end": 832,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 809,
											"end": 836,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 592,
											"end": 842,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 847,
											"end": 1118,
											"name": "tag",
											"source": 1,
											"value": "247"
										},
										{
											"begin": 847,
											"end": 1118,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 889,
											"end": 892,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 927,
											"end": 932,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 921,
											"end": 933,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 954,
											"end": 960,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 949,
											"end": 952,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 942,
											"end": 961,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 970,
											"end": 1046,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "263"
										},
										{
											"begin": 1039,
											"end": 1045,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1032,
											"end": 1036,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1027,
											"end": 1030,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1023,
											"end": 1037,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1016,
											"end": 1020,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1009,
											"end": 1014,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1005,
											"end": 1021,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 970,
											"end": 1046,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "246"
										},
										{
											"begin": 970,
											"end": 1046,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 970,
											"end": 1046,
											"name": "tag",
											"source": 1,
											"value": "263"
										},
										{
											"begin": 970,
											"end": 1046,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1100,
											"end": 1102,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1079,
											"end": 1094,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1075,
											"end": 1104,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1066,
											"end": 1105,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1066,
											"end": 1105,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1066,
											"end": 1105,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1066,
											"end": 1105,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1107,
											"end": 1111,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1062,
											"end": 1112,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1062,
											"end": 1112,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 847,
											"end": 1118,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 847,
											"end": 1118,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1123,
											"end": 1343,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 1123,
											"end": 1343,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1272,
											"end": 1274,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1261,
											"end": 1270,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1254,
											"end": 1275,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1235,
											"end": 1239,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1292,
											"end": 1337,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 1333,
											"end": 1335,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1322,
											"end": 1331,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1318,
											"end": 1336,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1310,
											"end": 1316,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1292,
											"end": 1337,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "247"
										},
										{
											"begin": 1292,
											"end": 1337,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1348,
											"end": 1528,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 1348,
											"end": 1528,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1407,
											"end": 1413,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1460,
											"end": 1462,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1448,
											"end": 1457,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1439,
											"end": 1446,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1435,
											"end": 1458,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1431,
											"end": 1463,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1428,
											"end": 1480,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1428,
											"end": 1480,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "267"
										},
										{
											"begin": 1428,
											"end": 1480,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1476,
											"end": 1477,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1473,
											"end": 1474,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1466,
											"end": 1478,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1428,
											"end": 1480,
											"name": "tag",
											"source": 1,
											"value": "267"
										},
										{
											"begin": 1428,
											"end": 1480,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1499,
											"end": 1522,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1499,
											"end": 1522,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1348,
											"end": 1528,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1348,
											"end": 1528,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1741,
											"end": 1914,
											"name": "tag",
											"source": 1,
											"value": "248"
										},
										{
											"begin": 1741,
											"end": 1914,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1809,
											"end": 1829,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1809,
											"end": 1829,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1858,
											"end": 1889,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1858,
											"end": 1889,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1848,
											"end": 1890,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1848,
											"end": 1890,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1838,
											"end": 1908,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "270"
										},
										{
											"begin": 1838,
											"end": 1908,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1904,
											"end": 1905,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1901,
											"end": 1902,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1894,
											"end": 1906,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1838,
											"end": 1908,
											"name": "tag",
											"source": 1,
											"value": "270"
										},
										{
											"begin": 1838,
											"end": 1908,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1741,
											"end": 1914,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1741,
											"end": 1914,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1741,
											"end": 1914,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1741,
											"end": 1914,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1919,
											"end": 2173,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 1919,
											"end": 2173,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1987,
											"end": 1993,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1995,
											"end": 2001,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2048,
											"end": 2050,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2036,
											"end": 2045,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2027,
											"end": 2034,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2023,
											"end": 2046,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2019,
											"end": 2051,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2016,
											"end": 2068,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2016,
											"end": 2068,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "272"
										},
										{
											"begin": 2016,
											"end": 2068,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2064,
											"end": 2065,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2061,
											"end": 2062,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2054,
											"end": 2066,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2016,
											"end": 2068,
											"name": "tag",
											"source": 1,
											"value": "272"
										},
										{
											"begin": 2016,
											"end": 2068,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2087,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "273"
										},
										{
											"begin": 2106,
											"end": 2115,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2087,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "248"
										},
										{
											"begin": 2087,
											"end": 2116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2087,
											"end": 2116,
											"name": "tag",
											"source": 1,
											"value": "273"
										},
										{
											"begin": 2087,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2077,
											"end": 2116,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 2163,
											"end": 2165,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2148,
											"end": 2166,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 2148,
											"end": 2166,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2148,
											"end": 2166,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 2148,
											"end": 2166,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2135,
											"end": 2167,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2135,
											"end": 2167,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1919,
											"end": 2173,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2178,
											"end": 2506,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2178,
											"end": 2506,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2255,
											"end": 2261,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2263,
											"end": 2269,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2271,
											"end": 2277,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2324,
											"end": 2326,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2312,
											"end": 2321,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2303,
											"end": 2310,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2299,
											"end": 2322,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2295,
											"end": 2327,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2292,
											"end": 2344,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2292,
											"end": 2344,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "275"
										},
										{
											"begin": 2292,
											"end": 2344,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2340,
											"end": 2341,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2337,
											"end": 2338,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2330,
											"end": 2342,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2292,
											"end": 2344,
											"name": "tag",
											"source": 1,
											"value": "275"
										},
										{
											"begin": 2292,
											"end": 2344,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2363,
											"end": 2392,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "276"
										},
										{
											"begin": 2382,
											"end": 2391,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2363,
											"end": 2392,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "248"
										},
										{
											"begin": 2363,
											"end": 2392,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2363,
											"end": 2392,
											"name": "tag",
											"source": 1,
											"value": "276"
										},
										{
											"begin": 2363,
											"end": 2392,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2353,
											"end": 2392,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2353,
											"end": 2392,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2411,
											"end": 2449,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "277"
										},
										{
											"begin": 2445,
											"end": 2447,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2434,
											"end": 2443,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2430,
											"end": 2448,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2411,
											"end": 2449,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "248"
										},
										{
											"begin": 2411,
											"end": 2449,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2411,
											"end": 2449,
											"name": "tag",
											"source": 1,
											"value": "277"
										},
										{
											"begin": 2411,
											"end": 2449,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2401,
											"end": 2449,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2401,
											"end": 2449,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2496,
											"end": 2498,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2485,
											"end": 2494,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2481,
											"end": 2499,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2468,
											"end": 2500,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2458,
											"end": 2500,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2458,
											"end": 2500,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2178,
											"end": 2506,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2178,
											"end": 2506,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2178,
											"end": 2506,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2178,
											"end": 2506,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2178,
											"end": 2506,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2178,
											"end": 2506,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2511,
											"end": 2697,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 2511,
											"end": 2697,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2570,
											"end": 2576,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2623,
											"end": 2625,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2611,
											"end": 2620,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2602,
											"end": 2609,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2598,
											"end": 2621,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2594,
											"end": 2626,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2591,
											"end": 2643,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2591,
											"end": 2643,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "279"
										},
										{
											"begin": 2591,
											"end": 2643,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2639,
											"end": 2640,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2636,
											"end": 2637,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2629,
											"end": 2641,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2591,
											"end": 2643,
											"name": "tag",
											"source": 1,
											"value": "279"
										},
										{
											"begin": 2591,
											"end": 2643,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2662,
											"end": 2691,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 2681,
											"end": 2690,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2662,
											"end": 2691,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "248"
										},
										{
											"begin": 2662,
											"end": 2691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2884,
											"end": 3231,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2884,
											"end": 3231,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2949,
											"end": 2955,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2957,
											"end": 2963,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3010,
											"end": 3012,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2998,
											"end": 3007,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2989,
											"end": 2996,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3008,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2981,
											"end": 3013,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2978,
											"end": 3030,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2978,
											"end": 3030,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "283"
										},
										{
											"begin": 2978,
											"end": 3030,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3026,
											"end": 3027,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3023,
											"end": 3024,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3016,
											"end": 3028,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2978,
											"end": 3030,
											"name": "tag",
											"source": 1,
											"value": "283"
										},
										{
											"begin": 2978,
											"end": 3030,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3049,
											"end": 3078,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "284"
										},
										{
											"begin": 3068,
											"end": 3077,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3049,
											"end": 3078,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "248"
										},
										{
											"begin": 3049,
											"end": 3078,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3049,
											"end": 3078,
											"name": "tag",
											"source": 1,
											"value": "284"
										},
										{
											"begin": 3049,
											"end": 3078,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3039,
											"end": 3078,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3039,
											"end": 3078,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3128,
											"end": 3130,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3117,
											"end": 3126,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3113,
											"end": 3131,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3100,
											"end": 3132,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 3175,
											"end": 3180,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3168,
											"end": 3181,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3161,
											"end": 3182,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3154,
											"end": 3159,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3151,
											"end": 3183,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 3141,
											"end": 3201,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "285"
										},
										{
											"begin": 3141,
											"end": 3201,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3197,
											"end": 3198,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3194,
											"end": 3195,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3187,
											"end": 3199,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3141,
											"end": 3201,
											"name": "tag",
											"source": 1,
											"value": "285"
										},
										{
											"begin": 3141,
											"end": 3201,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3220,
											"end": 3225,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3210,
											"end": 3225,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3210,
											"end": 3225,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3210,
											"end": 3225,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2884,
											"end": 3231,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2884,
											"end": 3231,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2884,
											"end": 3231,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2884,
											"end": 3231,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2884,
											"end": 3231,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2884,
											"end": 3231,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3236,
											"end": 3363,
											"name": "tag",
											"source": 1,
											"value": "210"
										},
										{
											"begin": 3236,
											"end": 3363,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3297,
											"end": 3307,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 3292,
											"end": 3295,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 3288,
											"end": 3308,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 3285,
											"end": 3286,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3278,
											"end": 3309,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3328,
											"end": 3332,
											"name": "PUSH",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 3325,
											"end": 3326,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3318,
											"end": 3333,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3352,
											"end": 3356,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3349,
											"end": 3350,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3342,
											"end": 3357,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3368,
											"end": 4506,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3368,
											"end": 4506,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3463,
											"end": 3469,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3471,
											"end": 3477,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3479,
											"end": 3485,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3487,
											"end": 3493,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3540,
											"end": 3543,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 3528,
											"end": 3537,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3519,
											"end": 3526,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 3515,
											"end": 3538,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3511,
											"end": 3544,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3561,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3561,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "288"
										},
										{
											"begin": 3508,
											"end": 3561,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3557,
											"end": 3558,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3554,
											"end": 3555,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3547,
											"end": 3559,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3561,
											"name": "tag",
											"source": 1,
											"value": "288"
										},
										{
											"begin": 3508,
											"end": 3561,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3580,
											"end": 3609,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "289"
										},
										{
											"begin": 3599,
											"end": 3608,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3580,
											"end": 3609,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "248"
										},
										{
											"begin": 3580,
											"end": 3609,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3580,
											"end": 3609,
											"name": "tag",
											"source": 1,
											"value": "289"
										},
										{
											"begin": 3580,
											"end": 3609,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3570,
											"end": 3609,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3570,
											"end": 3609,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3628,
											"end": 3666,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "290"
										},
										{
											"begin": 3662,
											"end": 3664,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3651,
											"end": 3660,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3647,
											"end": 3665,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3628,
											"end": 3666,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "248"
										},
										{
											"begin": 3628,
											"end": 3666,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3628,
											"end": 3666,
											"name": "tag",
											"source": 1,
											"value": "290"
										},
										{
											"begin": 3628,
											"end": 3666,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3618,
											"end": 3666,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3618,
											"end": 3666,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3713,
											"end": 3715,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3702,
											"end": 3711,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3698,
											"end": 3716,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3685,
											"end": 3717,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 3675,
											"end": 3717,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3675,
											"end": 3717,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3768,
											"end": 3770,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 3757,
											"end": 3766,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3753,
											"end": 3771,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3740,
											"end": 3772,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 3791,
											"end": 3809,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3832,
											"end": 3834,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3824,
											"end": 3830,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3821,
											"end": 3835,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 3818,
											"end": 3852,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3818,
											"end": 3852,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "291"
										},
										{
											"begin": 3818,
											"end": 3852,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3848,
											"end": 3849,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3845,
											"end": 3846,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3838,
											"end": 3850,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3818,
											"end": 3852,
											"name": "tag",
											"source": 1,
											"value": "291"
										},
										{
											"begin": 3818,
											"end": 3852,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3886,
											"end": 3892,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3875,
											"end": 3884,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 3871,
											"end": 3893,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3861,
											"end": 3893,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3861,
											"end": 3893,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3931,
											"end": 3938,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 3924,
											"end": 3928,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 3920,
											"end": 3922,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3916,
											"end": 3929,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3912,
											"end": 3939,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 3902,
											"end": 3957,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "292"
										},
										{
											"begin": 3902,
											"end": 3957,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3953,
											"end": 3954,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3950,
											"end": 3951,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3943,
											"end": 3955,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3902,
											"end": 3957,
											"name": "tag",
											"source": 1,
											"value": "292"
										},
										{
											"begin": 3902,
											"end": 3957,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3989,
											"end": 3991,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3976,
											"end": 3992,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 4011,
											"end": 4013,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4007,
											"end": 4009,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4004,
											"end": 4014,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 4001,
											"end": 4037,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4001,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "294"
										},
										{
											"begin": 4001,
											"end": 4037,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4017,
											"end": 4035,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "294"
										},
										{
											"begin": 4017,
											"end": 4035,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "210"
										},
										{
											"begin": 4017,
											"end": 4035,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4017,
											"end": 4035,
											"name": "tag",
											"source": 1,
											"value": "294"
										},
										{
											"begin": 4017,
											"end": 4035,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 4094,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4086,
											"end": 4095,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4060,
											"end": 4062,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 4146,
											"end": 4159,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4146,
											"end": 4159,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4142,
											"end": 4164,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4142,
											"end": 4164,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4142,
											"end": 4164,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4166,
											"end": 4168,
											"name": "PUSH",
											"source": 1,
											"value": "3F"
										},
										{
											"begin": 4138,
											"end": 4169,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4134,
											"end": 4174,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4122,
											"end": 4175,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4122,
											"end": 4175,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4122,
											"end": 4175,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4190,
											"end": 4208,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4190,
											"end": 4208,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4190,
											"end": 4208,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 4210,
											"end": 4232,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4210,
											"end": 4232,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4210,
											"end": 4232,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 4187,
											"end": 4233,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 4184,
											"end": 4256,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4184,
											"end": 4256,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "296"
										},
										{
											"begin": 4184,
											"end": 4256,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4236,
											"end": 4254,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "296"
										},
										{
											"begin": 4236,
											"end": 4254,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "210"
										},
										{
											"begin": 4236,
											"end": 4254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4236,
											"end": 4254,
											"name": "tag",
											"source": 1,
											"value": "296"
										},
										{
											"begin": 4236,
											"end": 4254,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4276,
											"end": 4286,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4272,
											"end": 4274,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4265,
											"end": 4287,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4311,
											"end": 4313,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4303,
											"end": 4309,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4296,
											"end": 4314,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4351,
											"end": 4358,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 4346,
											"end": 4348,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4341,
											"end": 4343,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4337,
											"end": 4339,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 4333,
											"end": 4344,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4329,
											"end": 4349,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4326,
											"end": 4359,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 4323,
											"end": 4376,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4323,
											"end": 4376,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "297"
										},
										{
											"begin": 4323,
											"end": 4376,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4372,
											"end": 4373,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4369,
											"end": 4370,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4362,
											"end": 4374,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4323,
											"end": 4376,
											"name": "tag",
											"source": 1,
											"value": "297"
										},
										{
											"begin": 4323,
											"end": 4376,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4428,
											"end": 4430,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4423,
											"end": 4425,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4419,
											"end": 4421,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4415,
											"end": 4426,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4410,
											"end": 4412,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4402,
											"end": 4408,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4398,
											"end": 4413,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4385,
											"end": 4431,
											"name": "CALLDATACOPY",
											"source": 1
										},
										{
											"begin": 4473,
											"end": 4474,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4468,
											"end": 4470,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4463,
											"end": 4465,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4455,
											"end": 4461,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4451,
											"end": 4466,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4447,
											"end": 4471,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4440,
											"end": 4475,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4494,
											"end": 4500,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4484,
											"end": 4500,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 4484,
											"end": 4500,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4484,
											"end": 4500,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4484,
											"end": 4500,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4484,
											"end": 4500,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4484,
											"end": 4500,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4484,
											"end": 4500,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3368,
											"end": 4506,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3368,
											"end": 4506,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 3368,
											"end": 4506,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3368,
											"end": 4506,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 3368,
											"end": 4506,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3368,
											"end": 4506,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3368,
											"end": 4506,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3368,
											"end": 4506,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4511,
											"end": 4771,
											"name": "tag",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 4511,
											"end": 4771,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4579,
											"end": 4585,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4587,
											"end": 4593,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4640,
											"end": 4642,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4628,
											"end": 4637,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4619,
											"end": 4626,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4615,
											"end": 4638,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4611,
											"end": 4643,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 4608,
											"end": 4660,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4608,
											"end": 4660,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "299"
										},
										{
											"begin": 4608,
											"end": 4660,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4656,
											"end": 4657,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4653,
											"end": 4654,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4646,
											"end": 4658,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4608,
											"end": 4660,
											"name": "tag",
											"source": 1,
											"value": "299"
										},
										{
											"begin": 4608,
											"end": 4660,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4679,
											"end": 4708,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "300"
										},
										{
											"begin": 4698,
											"end": 4707,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4679,
											"end": 4708,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "248"
										},
										{
											"begin": 4679,
											"end": 4708,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4679,
											"end": 4708,
											"name": "tag",
											"source": 1,
											"value": "300"
										},
										{
											"begin": 4679,
											"end": 4708,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4669,
											"end": 4708,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4669,
											"end": 4708,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4727,
											"end": 4765,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "301"
										},
										{
											"begin": 4761,
											"end": 4763,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4750,
											"end": 4759,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4746,
											"end": 4764,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4727,
											"end": 4765,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "248"
										},
										{
											"begin": 4727,
											"end": 4765,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4727,
											"end": 4765,
											"name": "tag",
											"source": 1,
											"value": "301"
										},
										{
											"begin": 4727,
											"end": 4765,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4717,
											"end": 4765,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4717,
											"end": 4765,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4511,
											"end": 4771,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4511,
											"end": 4771,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4511,
											"end": 4771,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4511,
											"end": 4771,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4511,
											"end": 4771,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4511,
											"end": 4771,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 5156,
											"name": "tag",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 4776,
											"end": 5156,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4856,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4851,
											"end": 4863,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4851,
											"end": 4863,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4851,
											"end": 4863,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 4851,
											"end": 4863,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4898,
											"end": 4910,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4898,
											"end": 4910,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4898,
											"end": 4910,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4919,
											"end": 4980,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "303"
										},
										{
											"begin": 4919,
											"end": 4980,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4973,
											"end": 4977,
											"name": "PUSH",
											"source": 1,
											"value": "7F"
										},
										{
											"begin": 4965,
											"end": 4971,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4961,
											"end": 4978,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4978,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4978,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4919,
											"end": 4980,
											"name": "tag",
											"source": 1,
											"value": "303"
										},
										{
											"begin": 4919,
											"end": 4980,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5026,
											"end": 5028,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5018,
											"end": 5024,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5015,
											"end": 5029,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 4995,
											"end": 5013,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4992,
											"end": 5030,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4989,
											"end": 5150,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "304"
										},
										{
											"begin": 4989,
											"end": 5150,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5072,
											"end": 5082,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 5067,
											"end": 5070,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 5063,
											"end": 5083,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 5060,
											"end": 5061,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5053,
											"end": 5084,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5107,
											"end": 5111,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 5104,
											"end": 5105,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5097,
											"end": 5112,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5135,
											"end": 5139,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5132,
											"end": 5133,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5125,
											"end": 5140,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4989,
											"end": 5150,
											"name": "tag",
											"source": 1,
											"value": "304"
										},
										{
											"begin": 4989,
											"end": 5150,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4989,
											"end": 5150,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 5156,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 5156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 5156,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 5156,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6401,
											"end": 6814,
											"name": "tag",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 6401,
											"end": 6814,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6603,
											"end": 6605,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6585,
											"end": 6606,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6585,
											"end": 6606,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6585,
											"end": 6606,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6642,
											"end": 6644,
											"name": "PUSH",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 6622,
											"end": 6640,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6622,
											"end": 6640,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6622,
											"end": 6640,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6615,
											"end": 6645,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6681,
											"end": 6715,
											"name": "PUSH",
											"source": 1,
											"value": "4552433732313A207472616E736665722063616C6C6572206973206E6F74206F"
										},
										{
											"begin": 6676,
											"end": 6678,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6661,
											"end": 6679,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6661,
											"end": 6679,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6654,
											"end": 6716,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1DDB995C881B9BDC88185C1C1C9BDD9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6747,
											"end": 6749,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 6732,
											"end": 6750,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6732,
											"end": 6750,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6725,
											"end": 6772,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6804,
											"end": 6807,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 6789,
											"end": 6808,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6789,
											"end": 6808,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6401,
											"end": 6814,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8410,
											"end": 8906,
											"name": "tag",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 8410,
											"end": 8906,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8589,
											"end": 8592,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8627,
											"end": 8633,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8621,
											"end": 8634,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8643,
											"end": 8709,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "314"
										},
										{
											"begin": 8702,
											"end": 8708,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8697,
											"end": 8700,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8690,
											"end": 8694,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8682,
											"end": 8688,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 8678,
											"end": 8695,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8643,
											"end": 8709,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "246"
										},
										{
											"begin": 8643,
											"end": 8709,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8643,
											"end": 8709,
											"name": "tag",
											"source": 1,
											"value": "314"
										},
										{
											"begin": 8643,
											"end": 8709,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8772,
											"end": 8785,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8772,
											"end": 8785,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8731,
											"end": 8747,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8731,
											"end": 8747,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8731,
											"end": 8747,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8731,
											"end": 8747,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8794,
											"end": 8864,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "315"
										},
										{
											"begin": 8772,
											"end": 8785,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8731,
											"end": 8747,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8841,
											"end": 8845,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8829,
											"end": 8846,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 8829,
											"end": 8846,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8794,
											"end": 8864,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "246"
										},
										{
											"begin": 8794,
											"end": 8864,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8794,
											"end": 8864,
											"name": "tag",
											"source": 1,
											"value": "315"
										},
										{
											"begin": 8794,
											"end": 8864,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8880,
											"end": 8900,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8880,
											"end": 8900,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 8410,
											"end": 8906,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8410,
											"end": 8906,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10139,
											"end": 10266,
											"name": "tag",
											"source": 1,
											"value": "249"
										},
										{
											"begin": 10139,
											"end": 10266,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10200,
											"end": 10210,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 10195,
											"end": 10198,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 10191,
											"end": 10211,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 10188,
											"end": 10189,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10181,
											"end": 10212,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10231,
											"end": 10235,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 10228,
											"end": 10229,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10221,
											"end": 10236,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10255,
											"end": 10259,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 10252,
											"end": 10253,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10245,
											"end": 10260,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 10271,
											"end": 10399,
											"name": "tag",
											"source": 1,
											"value": "189"
										},
										{
											"begin": 10271,
											"end": 10399,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10338,
											"end": 10347,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10338,
											"end": 10347,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10338,
											"end": 10347,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10359,
											"end": 10370,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10359,
											"end": 10370,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10359,
											"end": 10370,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 10356,
											"end": 10393,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10356,
											"end": 10393,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 10356,
											"end": 10393,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10373,
											"end": 10391,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 10373,
											"end": 10391,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "249"
										},
										{
											"begin": 10373,
											"end": 10391,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10404,
											"end": 10529,
											"name": "tag",
											"source": 1,
											"value": "191"
										},
										{
											"begin": 10404,
											"end": 10529,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10469,
											"end": 10478,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10469,
											"end": 10478,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10469,
											"end": 10478,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10490,
											"end": 10500,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10490,
											"end": 10500,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10490,
											"end": 10500,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 10487,
											"end": 10523,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10487,
											"end": 10523,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 10487,
											"end": 10523,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10503,
											"end": 10521,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 10503,
											"end": 10521,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "249"
										},
										{
											"begin": 10503,
											"end": 10521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10534,
											"end": 10948,
											"name": "tag",
											"source": 1,
											"value": "198"
										},
										{
											"begin": 10534,
											"end": 10948,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10736,
											"end": 10738,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10718,
											"end": 10739,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10718,
											"end": 10739,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10718,
											"end": 10739,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10775,
											"end": 10777,
											"name": "PUSH",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 10755,
											"end": 10773,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10755,
											"end": 10773,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10755,
											"end": 10773,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10748,
											"end": 10778,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10814,
											"end": 10848,
											"name": "PUSH",
											"source": 1,
											"value": "4552433732313A207472616E7366657220746F206E6F6E204552433732315265"
										},
										{
											"begin": 10809,
											"end": 10811,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10794,
											"end": 10812,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10794,
											"end": 10812,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10787,
											"end": 10849,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "31B2B4BB32B91034B6B83632B6B2B73A32B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10880,
											"end": 10882,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 10865,
											"end": 10883,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10865,
											"end": 10883,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10858,
											"end": 10906,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10938,
											"end": 10941,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 10923,
											"end": 10942,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10923,
											"end": 10942,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10534,
											"end": 10948,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10953,
											"end": 11088,
											"name": "tag",
											"source": 1,
											"value": "205"
										},
										{
											"begin": 10953,
											"end": 11088,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10992,
											"end": 10995,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11013,
											"end": 11030,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 11013,
											"end": 11030,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11013,
											"end": 11030,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11010,
											"end": 11053,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "329"
										},
										{
											"begin": 11010,
											"end": 11053,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11033,
											"end": 11051,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "329"
										},
										{
											"begin": 11033,
											"end": 11051,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "249"
										},
										{
											"begin": 11033,
											"end": 11051,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11033,
											"end": 11051,
											"name": "tag",
											"source": 1,
											"value": "329"
										},
										{
											"begin": 11033,
											"end": 11051,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11080,
											"end": 11081,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 11069,
											"end": 11082,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11069,
											"end": 11082,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10953,
											"end": 11088,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11093,
											"end": 11220,
											"name": "tag",
											"source": 1,
											"value": "250"
										},
										{
											"begin": 11093,
											"end": 11220,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11154,
											"end": 11164,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 11149,
											"end": 11152,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 11145,
											"end": 11165,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 11142,
											"end": 11143,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11135,
											"end": 11166,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11185,
											"end": 11189,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 11182,
											"end": 11183,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 11175,
											"end": 11190,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11209,
											"end": 11213,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 11206,
											"end": 11207,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11199,
											"end": 11214,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 11225,
											"end": 11345,
											"name": "tag",
											"source": 1,
											"value": "207"
										},
										{
											"begin": 11225,
											"end": 11345,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11265,
											"end": 11266,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11291,
											"end": 11292,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11281,
											"end": 11316,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "333"
										},
										{
											"begin": 11281,
											"end": 11316,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11296,
											"end": 11314,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "333"
										},
										{
											"begin": 11296,
											"end": 11314,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "250"
										},
										{
											"begin": 11296,
											"end": 11314,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11296,
											"end": 11314,
											"name": "tag",
											"source": 1,
											"value": "333"
										},
										{
											"begin": 11296,
											"end": 11314,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11330,
											"end": 11339,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 11330,
											"end": 11339,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11225,
											"end": 11345,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11350,
											"end": 11462,
											"name": "tag",
											"source": 1,
											"value": "216"
										},
										{
											"begin": 11350,
											"end": 11462,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11382,
											"end": 11383,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11408,
											"end": 11409,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11398,
											"end": 11433,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "336"
										},
										{
											"begin": 11398,
											"end": 11433,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11413,
											"end": 11431,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "336"
										},
										{
											"begin": 11413,
											"end": 11431,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "250"
										},
										{
											"begin": 11413,
											"end": 11431,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11413,
											"end": 11431,
											"name": "tag",
											"source": 1,
											"value": "336"
										},
										{
											"begin": 11413,
											"end": 11431,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11447,
											"end": 11456,
											"name": "MOD",
											"source": 1
										},
										{
											"begin": 11447,
											"end": 11456,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11350,
											"end": 11462,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11467,
											"end": 11594,
											"name": "tag",
											"source": 1,
											"value": "220"
										},
										{
											"begin": 11467,
											"end": 11594,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11528,
											"end": 11538,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 11523,
											"end": 11526,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 11519,
											"end": 11539,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 11516,
											"end": 11517,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11509,
											"end": 11540,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11559,
											"end": 11563,
											"name": "PUSH",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 11556,
											"end": 11557,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 11549,
											"end": 11564,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11583,
											"end": 11587,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 11580,
											"end": 11581,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11573,
											"end": 11588,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 11599,
											"end": 12088,
											"name": "tag",
											"source": 1,
											"value": "229"
										},
										{
											"begin": 11599,
											"end": 12088,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11868,
											"end": 11883,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 11868,
											"end": 11883,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11868,
											"end": 11883,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11850,
											"end": 11884,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11850,
											"end": 11884,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11920,
											"end": 11935,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11920,
											"end": 11935,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11915,
											"end": 11917,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11900,
											"end": 11918,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11900,
											"end": 11918,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11893,
											"end": 11936,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11967,
											"end": 11969,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11952,
											"end": 11970,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11952,
											"end": 11970,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11945,
											"end": 11979,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11945,
											"end": 11979,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11945,
											"end": 11979,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12015,
											"end": 12018,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 12010,
											"end": 12012,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 11995,
											"end": 12013,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11995,
											"end": 12013,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11988,
											"end": 12019,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11988,
											"end": 12019,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11988,
											"end": 12019,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11793,
											"end": 11797,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11793,
											"end": 11797,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12036,
											"end": 12082,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "339"
										},
										{
											"begin": 12036,
											"end": 12082,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12062,
											"end": 12081,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12062,
											"end": 12081,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12054,
											"end": 12060,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 12036,
											"end": 12082,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "247"
										},
										{
											"begin": 12036,
											"end": 12082,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12036,
											"end": 12082,
											"name": "tag",
											"source": 1,
											"value": "339"
										},
										{
											"begin": 12036,
											"end": 12082,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12028,
											"end": 12082,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": 11599,
											"end": 12088,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11599,
											"end": 12088,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12093,
											"end": 12342,
											"name": "tag",
											"source": 1,
											"value": "232"
										},
										{
											"begin": 12093,
											"end": 12342,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12162,
											"end": 12168,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12215,
											"end": 12217,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12203,
											"end": 12212,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12194,
											"end": 12201,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 12190,
											"end": 12213,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 12186,
											"end": 12218,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 12183,
											"end": 12235,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 12183,
											"end": 12235,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "341"
										},
										{
											"begin": 12183,
											"end": 12235,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 12231,
											"end": 12232,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12228,
											"end": 12229,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12221,
											"end": 12233,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 12183,
											"end": 12235,
											"name": "tag",
											"source": 1,
											"value": "341"
										},
										{
											"begin": 12183,
											"end": 12235,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12263,
											"end": 12272,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12257,
											"end": 12273,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 12282,
											"end": 12312,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 12306,
											"end": 12311,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12282,
											"end": 12312,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "245"
										},
										{
											"begin": 12282,
											"end": 12312,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"MY MainNFT/My_NFT.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the contract by setting a `name` and a `symbol` to the token collection.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"MY MainNFT/My_NFT.sol\":\"ERC721\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"MY MainNFT/My_NFT.sol\":{\"keccak256\":\"0xd2db7b35f9f50e024810e13a2b06b9eb1507bea0a4b0749d169e842935029116\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://61d56da57f47a64427d04ea653ccf597b6976ede901fab03ecfb040a3c9ed7ac\",\"dweb:/ipfs/Qmeo8NV2khn8iZRHNUFfnvRoNbjEsvZg3W2C89RmoaAUL5\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 726,
								"contract": "MY MainNFT/My_NFT.sol:ERC721",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 728,
								"contract": "MY MainNFT/My_NFT.sol:ERC721",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 732,
								"contract": "MY MainNFT/My_NFT.sol:ERC721",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 736,
								"contract": "MY MainNFT/My_NFT.sol:ERC721",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 740,
								"contract": "MY MainNFT/My_NFT.sol:ERC721",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 746,
								"contract": "MY MainNFT/My_NFT.sol:ERC721",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC721Enumerable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "tokenByIndex",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "tokenOfOwnerByIndex",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "This implements an optional extension of {ERC721} defined in the EIP that adds enumerability of all the token ids in the contract as well as all token ids owned by each account.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenByIndex(uint256)": {
								"details": "See {IERC721Enumerable-tokenByIndex}."
							},
							"tokenOfOwnerByIndex(address,uint256)": {
								"details": "See {IERC721Enumerable-tokenOfOwnerByIndex}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"totalSupply()": {
								"details": "See {IERC721Enumerable-totalSupply}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenByIndex(uint256)": "4f6ccce7",
							"tokenOfOwnerByIndex(address,uint256)": "2f745c59",
							"tokenURI(uint256)": "c87b56dd",
							"totalSupply()": "18160ddd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This implements an optional extension of {ERC721} defined in the EIP that adds enumerability of all the token ids in the contract as well as all token ids owned by each account.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenByIndex(uint256)\":{\"details\":\"See {IERC721Enumerable-tokenByIndex}.\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"See {IERC721Enumerable-tokenOfOwnerByIndex}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"totalSupply()\":{\"details\":\"See {IERC721Enumerable-totalSupply}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"MY MainNFT/My_NFT.sol\":\"ERC721Enumerable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"MY MainNFT/My_NFT.sol\":{\"keccak256\":\"0xd2db7b35f9f50e024810e13a2b06b9eb1507bea0a4b0749d169e842935029116\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://61d56da57f47a64427d04ea653ccf597b6976ede901fab03ecfb040a3c9ed7ac\",\"dweb:/ipfs/Qmeo8NV2khn8iZRHNUFfnvRoNbjEsvZg3W2C89RmoaAUL5\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 726,
								"contract": "MY MainNFT/My_NFT.sol:ERC721Enumerable",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 728,
								"contract": "MY MainNFT/My_NFT.sol:ERC721Enumerable",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 732,
								"contract": "MY MainNFT/My_NFT.sol:ERC721Enumerable",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 736,
								"contract": "MY MainNFT/My_NFT.sol:ERC721Enumerable",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 740,
								"contract": "MY MainNFT/My_NFT.sol:ERC721Enumerable",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 746,
								"contract": "MY MainNFT/My_NFT.sol:ERC721Enumerable",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 1559,
								"contract": "MY MainNFT/My_NFT.sol:ERC721Enumerable",
								"label": "_ownedTokens",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))"
							},
							{
								"astId": 1563,
								"contract": "MY MainNFT/My_NFT.sol:ERC721Enumerable",
								"label": "_ownedTokensIndex",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_uint256,t_uint256)"
							},
							{
								"astId": 1566,
								"contract": "MY MainNFT/My_NFT.sol:ERC721Enumerable",
								"label": "_allTokens",
								"offset": 0,
								"slot": "8",
								"type": "t_array(t_uint256)dyn_storage"
							},
							{
								"astId": 1570,
								"contract": "MY MainNFT/My_NFT.sol:ERC721Enumerable",
								"label": "_allTokensIndex",
								"offset": 0,
								"slot": "9",
								"type": "t_mapping(t_uint256,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_uint256)dyn_storage": {
								"base": "t_uint256",
								"encoding": "dynamic_array",
								"label": "uint256[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(uint256 => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_uint256,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_uint256,t_uint256)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC721URIStorage": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "ERC721 token with storage based token URI management.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC721 token with storage based token URI management.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"MY MainNFT/My_NFT.sol\":\"ERC721URIStorage\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"MY MainNFT/My_NFT.sol\":{\"keccak256\":\"0xd2db7b35f9f50e024810e13a2b06b9eb1507bea0a4b0749d169e842935029116\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://61d56da57f47a64427d04ea653ccf597b6976ede901fab03ecfb040a3c9ed7ac\",\"dweb:/ipfs/Qmeo8NV2khn8iZRHNUFfnvRoNbjEsvZg3W2C89RmoaAUL5\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 726,
								"contract": "MY MainNFT/My_NFT.sol:ERC721URIStorage",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 728,
								"contract": "MY MainNFT/My_NFT.sol:ERC721URIStorage",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 732,
								"contract": "MY MainNFT/My_NFT.sol:ERC721URIStorage",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 736,
								"contract": "MY MainNFT/My_NFT.sol:ERC721URIStorage",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 740,
								"contract": "MY MainNFT/My_NFT.sol:ERC721URIStorage",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 746,
								"contract": "MY MainNFT/My_NFT.sol:ERC721URIStorage",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 1893,
								"contract": "MY MainNFT/My_NFT.sol:ERC721URIStorage",
								"label": "_tokenURIs",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_uint256,t_string_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_uint256,t_string_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => string)",
								"numberOfBytes": "32",
								"value": "t_string_storage"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"MY MainNFT/My_NFT.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"MY MainNFT/My_NFT.sol\":{\"keccak256\":\"0xd2db7b35f9f50e024810e13a2b06b9eb1507bea0a4b0749d169e842935029116\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://61d56da57f47a64427d04ea653ccf597b6976ede901fab03ecfb040a3c9ed7ac\",\"dweb:/ipfs/Qmeo8NV2khn8iZRHNUFfnvRoNbjEsvZg3W2C89RmoaAUL5\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC721 compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"MY MainNFT/My_NFT.sol\":\"IERC721\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"MY MainNFT/My_NFT.sol\":{\"keccak256\":\"0xd2db7b35f9f50e024810e13a2b06b9eb1507bea0a4b0749d169e842935029116\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://61d56da57f47a64427d04ea653ccf597b6976ede901fab03ecfb040a3c9ed7ac\",\"dweb:/ipfs/Qmeo8NV2khn8iZRHNUFfnvRoNbjEsvZg3W2C89RmoaAUL5\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Enumerable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "tokenByIndex",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "tokenOfOwnerByIndex",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "See https://eips.ethereum.org/EIPS/eip-721",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"tokenByIndex(uint256)": {
								"details": "Returns a token ID at a given `index` of all the tokens stored by the contract. Use along with {totalSupply} to enumerate all tokens."
							},
							"tokenOfOwnerByIndex(address,uint256)": {
								"details": "Returns a token ID owned by `owner` at a given `index` of its token list. Use along with {balanceOf} to enumerate all of ``owner``'s tokens."
							},
							"totalSupply()": {
								"details": "Returns the total amount of tokens stored by the contract."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "ERC-721 Non-Fungible Token Standard, optional enumeration extension",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"tokenByIndex(uint256)": "4f6ccce7",
							"tokenOfOwnerByIndex(address,uint256)": "2f745c59",
							"totalSupply()": "18160ddd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"tokenByIndex(uint256)\":{\"details\":\"Returns a token ID at a given `index` of all the tokens stored by the contract. Use along with {totalSupply} to enumerate all tokens.\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"Returns a token ID owned by `owner` at a given `index` of its token list. Use along with {balanceOf} to enumerate all of ``owner``'s tokens.\"},\"totalSupply()\":{\"details\":\"Returns the total amount of tokens stored by the contract.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional enumeration extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"MY MainNFT/My_NFT.sol\":\"IERC721Enumerable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"MY MainNFT/My_NFT.sol\":{\"keccak256\":\"0xd2db7b35f9f50e024810e13a2b06b9eb1507bea0a4b0749d169e842935029116\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://61d56da57f47a64427d04ea653ccf597b6976ede901fab03ecfb040a3c9ed7ac\",\"dweb:/ipfs/Qmeo8NV2khn8iZRHNUFfnvRoNbjEsvZg3W2C89RmoaAUL5\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "See https://eips.ethereum.org/EIPS/eip-721",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "ERC-721 Non-Fungible Token Standard, optional metadata extension",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"MY MainNFT/My_NFT.sol\":\"IERC721Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"MY MainNFT/My_NFT.sol\":{\"keccak256\":\"0xd2db7b35f9f50e024810e13a2b06b9eb1507bea0a4b0749d169e842935029116\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://61d56da57f47a64427d04ea653ccf597b6976ede901fab03ecfb040a3c9ed7ac\",\"dweb:/ipfs/Qmeo8NV2khn8iZRHNUFfnvRoNbjEsvZg3W2C89RmoaAUL5\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.",
						"kind": "dev",
						"methods": {
							"onERC721Received(address,address,uint256,bytes)": {
								"details": "Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721.onERC721Received.selector`."
							}
						},
						"title": "ERC721 token receiver interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC721Received(address,address,uint256,bytes)": "150b7a02"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721.onERC721Received.selector`.\"}},\"title\":\"ERC721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"MY MainNFT/My_NFT.sol\":\"IERC721Receiver\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"MY MainNFT/My_NFT.sol\":{\"keccak256\":\"0xd2db7b35f9f50e024810e13a2b06b9eb1507bea0a4b0749d169e842935029116\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://61d56da57f47a64427d04ea653ccf597b6976ede901fab03ecfb040a3c9ed7ac\",\"dweb:/ipfs/Qmeo8NV2khn8iZRHNUFfnvRoNbjEsvZg3W2C89RmoaAUL5\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"MinteriumUser": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "_symbol",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "string",
									"name": "tokenURI",
									"type": "string"
								}
							],
							"name": "safeMint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "tokenByIndex",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "tokenOfOwnerByIndex",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenByIndex(uint256)": {
								"details": "See {IERC721Enumerable-tokenByIndex}."
							},
							"tokenOfOwnerByIndex(address,uint256)": {
								"details": "See {IERC721Enumerable-tokenOfOwnerByIndex}."
							},
							"totalSupply()": {
								"details": "See {IERC721Enumerable-totalSupply}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"MY MainNFT/My_NFT.sol\":46272:47496  contract MinteriumUser is ERC721, ERC721Enumerable, ERC721URIStorage, Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"MY MainNFT/My_NFT.sol\":46450:46531  constructor(string memory _name, string memory _symbol) ERC721(_name, _symbol) {} */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"MY MainNFT/My_NFT.sol\":46513:46518  _name */\n  dup2\n    /* \"MY MainNFT/My_NFT.sol\":46520:46527  _symbol */\n  dup2\n    /* \"MY MainNFT/My_NFT.sol\":20660:20665  _name */\n  0x00\n    /* \"MY MainNFT/My_NFT.sol\":20660:20673  _name = name_ */\n  tag_8\n    /* \"MY MainNFT/My_NFT.sol\":46513:46518  _name */\n  dup4\n    /* \"MY MainNFT/My_NFT.sol\":20660:20665  _name */\n  dup3\n    /* \"MY MainNFT/My_NFT.sol\":20660:20673  _name = name_ */\n  tag_9\n  jump\t// in\ntag_8:\n  pop\n    /* \"MY MainNFT/My_NFT.sol\":20684:20691  _symbol */\n  0x01\n    /* \"MY MainNFT/My_NFT.sol\":20684:20701  _symbol = symbol_ */\n  tag_10\n    /* \"MY MainNFT/My_NFT.sol\":20694:20701  symbol_ */\n  dup3\n    /* \"MY MainNFT/My_NFT.sol\":20684:20691  _symbol */\n  dup3\n    /* \"MY MainNFT/My_NFT.sol\":20684:20701  _symbol = symbol_ */\n  tag_9\n  jump\t// in\ntag_10:\n  pop\n    /* \"MY MainNFT/My_NFT.sol\":20592:20709  constructor (string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"MY MainNFT/My_NFT.sol\":43463:43480  address msgSender */\n  0x00\n    /* \"MY MainNFT/My_NFT.sol\":43483:43495  _msgSender() */\n  tag_12\n    /* \"MY MainNFT/My_NFT.sol\":43483:43493  _msgSender */\n  shl(0x20, tag_13)\n    /* \"MY MainNFT/My_NFT.sol\":43483:43495  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_12:\n    /* \"MY MainNFT/My_NFT.sol\":43506:43512  _owner */\n  0x0b\n    /* \"MY MainNFT/My_NFT.sol\":43506:43524  _owner = msgSender */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  dup4\n  and\n  swap1\n  dup2\n  or\n  swap1\n  swap2\n  sstore\n    /* \"MY MainNFT/My_NFT.sol\":43540:43583  OwnershipTransferred(address(0), msgSender) */\n  mload(0x40)\n    /* \"MY MainNFT/My_NFT.sol\":43506:43524  _owner = msgSender */\n  swap2\n  swap3\n  pop\n  swap1\n  0x00\n  swap1\n    /* \"MY MainNFT/My_NFT.sol\":43540:43583  OwnershipTransferred(address(0), msgSender) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap1\n  dup3\n  swap1\n  log3\n    /* \"MY MainNFT/My_NFT.sol\":43452:43591  {... */\n  pop\n    /* \"MY MainNFT/My_NFT.sol\":46450:46531  constructor(string memory _name, string memory _symbol) ERC721(_name, _symbol) {} */\n  pop\n  pop\n    /* \"MY MainNFT/My_NFT.sol\":46272:47496  contract MinteriumUser is ERC721, ERC721Enumerable, ERC721URIStorage, Ownable {... */\n  jump(tag_23)\n    /* \"MY MainNFT/My_NFT.sol\":16055:16153  function _msgSender() internal view virtual returns (address) {... */\ntag_13:\n    /* \"MY MainNFT/My_NFT.sol\":16135:16145  msg.sender */\n  caller\n  swap1\n    /* \"MY MainNFT/My_NFT.sol\":16055:16153  function _msgSender() internal view virtual returns (address) {... */\n  jump\t// out\n    /* \"#utility.yul\":14:141   */\ntag_17:\n    /* \"#utility.yul\":75:85   */\n  0x4e487b71\n    /* \"#utility.yul\":70:73   */\n  0xe0\n    /* \"#utility.yul\":66:86   */\n  shl\n    /* \"#utility.yul\":63:64   */\n  0x00\n    /* \"#utility.yul\":56:87   */\n  mstore\n    /* \"#utility.yul\":106:110   */\n  0x41\n    /* \"#utility.yul\":103:104   */\n  0x04\n    /* \"#utility.yul\":96:111   */\n  mstore\n    /* \"#utility.yul\":130:134   */\n  0x24\n    /* \"#utility.yul\":127:128   */\n  0x00\n    /* \"#utility.yul\":120:135   */\n  revert\n    /* \"#utility.yul\":146:986   */\ntag_18:\n    /* \"#utility.yul\":200:205   */\n  0x00\n    /* \"#utility.yul\":253:256   */\n  dup3\n    /* \"#utility.yul\":246:250   */\n  0x1f\n    /* \"#utility.yul\":238:244   */\n  dup4\n    /* \"#utility.yul\":234:251   */\n  add\n    /* \"#utility.yul\":230:257   */\n  slt\n    /* \"#utility.yul\":220:275   */\n  tag_26\n  jumpi\n    /* \"#utility.yul\":271:272   */\n  0x00\n    /* \"#utility.yul\":268:269   */\n  dup1\n    /* \"#utility.yul\":261:273   */\n  revert\n    /* \"#utility.yul\":220:275   */\ntag_26:\n    /* \"#utility.yul\":294:307   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":356:366   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":353:389   */\n  iszero\n  tag_28\n  jumpi\n    /* \"#utility.yul\":369:387   */\n  tag_28\n  tag_17\n  jump\t// in\ntag_28:\n    /* \"#utility.yul\":444:446   */\n  0x40\n    /* \"#utility.yul\":438:447   */\n  mload\n    /* \"#utility.yul\":412:414   */\n  0x1f\n    /* \"#utility.yul\":498:511   */\n  dup4\n  add\n  not(0x1f)\n    /* \"#utility.yul\":494:516   */\n  swap1\n  dup2\n  and\n    /* \"#utility.yul\":518:520   */\n  0x3f\n    /* \"#utility.yul\":490:521   */\n  add\n    /* \"#utility.yul\":486:526   */\n  and\n    /* \"#utility.yul\":474:527   */\n  dup2\n  add\n  swap1\n    /* \"#utility.yul\":542:560   */\n  dup3\n  dup3\n  gt\n    /* \"#utility.yul\":562:584   */\n  dup2\n  dup4\n  lt\n    /* \"#utility.yul\":539:585   */\n  or\n    /* \"#utility.yul\":536:608   */\n  iszero\n  tag_30\n  jumpi\n    /* \"#utility.yul\":588:606   */\n  tag_30\n  tag_17\n  jump\t// in\ntag_30:\n    /* \"#utility.yul\":628:638   */\n  dup2\n    /* \"#utility.yul\":624:626   */\n  0x40\n    /* \"#utility.yul\":617:639   */\n  mstore\n    /* \"#utility.yul\":663:665   */\n  dup4\n    /* \"#utility.yul\":655:661   */\n  dup2\n    /* \"#utility.yul\":648:666   */\n  mstore\n    /* \"#utility.yul\":685:689   */\n  0x20\n    /* \"#utility.yul\":675:689   */\n  swap3\n  pop\n    /* \"#utility.yul\":730:733   */\n  dup7\n    /* \"#utility.yul\":725:727   */\n  dup4\n    /* \"#utility.yul\":720:722   */\n  dup6\n    /* \"#utility.yul\":712:718   */\n  dup9\n    /* \"#utility.yul\":708:723   */\n  add\n    /* \"#utility.yul\":704:728   */\n  add\n    /* \"#utility.yul\":701:734   */\n  gt\n    /* \"#utility.yul\":698:751   */\n  iszero\n  tag_31\n  jumpi\n    /* \"#utility.yul\":747:748   */\n  0x00\n    /* \"#utility.yul\":744:745   */\n  dup1\n    /* \"#utility.yul\":737:749   */\n  revert\n    /* \"#utility.yul\":698:751   */\ntag_31:\n    /* \"#utility.yul\":769:770   */\n  0x00\n    /* \"#utility.yul\":760:770   */\n  swap2\n  pop\n    /* \"#utility.yul\":779:912   */\ntag_32:\n    /* \"#utility.yul\":793:795   */\n  dup4\n    /* \"#utility.yul\":790:791   */\n  dup3\n    /* \"#utility.yul\":787:796   */\n  lt\n    /* \"#utility.yul\":779:912   */\n  iszero\n  tag_34\n  jumpi\n    /* \"#utility.yul\":881:895   */\n  dup6\n  dup3\n  add\n    /* \"#utility.yul\":877:900   */\n  dup4\n  add\n    /* \"#utility.yul\":871:901   */\n  mload\n    /* \"#utility.yul\":850:864   */\n  dup2\n  dup4\n  add\n    /* \"#utility.yul\":846:869   */\n  dup5\n  add\n    /* \"#utility.yul\":839:902   */\n  mstore\n    /* \"#utility.yul\":804:814   */\n  swap1\n  dup3\n  add\n  swap1\n    /* \"#utility.yul\":779:912   */\n  jump(tag_32)\ntag_34:\n    /* \"#utility.yul\":954:955   */\n  0x00\n    /* \"#utility.yul\":932:947   */\n  swap4\n  dup2\n  add\n    /* \"#utility.yul\":928:952   */\n  swap1\n  swap3\n  add\n    /* \"#utility.yul\":921:956   */\n  swap3\n  swap1\n  swap3\n  mstore\n    /* \"#utility.yul\":936:942   */\n  swap5\n    /* \"#utility.yul\":146:986   */\n  swap4\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":991:1553   */\ntag_3:\n    /* \"#utility.yul\":1090:1096   */\n  0x00\n    /* \"#utility.yul\":1098:1104   */\n  dup1\n    /* \"#utility.yul\":1151:1153   */\n  0x40\n    /* \"#utility.yul\":1139:1148   */\n  dup4\n    /* \"#utility.yul\":1130:1137   */\n  dup6\n    /* \"#utility.yul\":1126:1149   */\n  sub\n    /* \"#utility.yul\":1122:1154   */\n  slt\n    /* \"#utility.yul\":1119:1171   */\n  iszero\n  tag_36\n  jumpi\n    /* \"#utility.yul\":1167:1168   */\n  0x00\n    /* \"#utility.yul\":1164:1165   */\n  dup1\n    /* \"#utility.yul\":1157:1169   */\n  revert\n    /* \"#utility.yul\":1119:1171   */\ntag_36:\n    /* \"#utility.yul\":1194:1210   */\n  dup3\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1259:1273   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":1256:1290   */\n  iszero\n  tag_37\n  jumpi\n    /* \"#utility.yul\":1286:1287   */\n  0x00\n    /* \"#utility.yul\":1283:1284   */\n  dup1\n    /* \"#utility.yul\":1276:1288   */\n  revert\n    /* \"#utility.yul\":1256:1290   */\ntag_37:\n    /* \"#utility.yul\":1309:1370   */\n  tag_38\n    /* \"#utility.yul\":1362:1369   */\n  dup7\n    /* \"#utility.yul\":1353:1359   */\n  dup4\n    /* \"#utility.yul\":1342:1351   */\n  dup8\n    /* \"#utility.yul\":1338:1360   */\n  add\n    /* \"#utility.yul\":1309:1370   */\n  tag_18\n  jump\t// in\ntag_38:\n    /* \"#utility.yul\":1299:1370   */\n  swap4\n  pop\n    /* \"#utility.yul\":1416:1418   */\n  0x20\n    /* \"#utility.yul\":1405:1414   */\n  dup6\n    /* \"#utility.yul\":1401:1419   */\n  add\n    /* \"#utility.yul\":1395:1420   */\n  mload\n    /* \"#utility.yul\":1379:1420   */\n  swap2\n  pop\n    /* \"#utility.yul\":1445:1447   */\n  dup1\n    /* \"#utility.yul\":1435:1443   */\n  dup3\n    /* \"#utility.yul\":1432:1448   */\n  gt\n    /* \"#utility.yul\":1429:1465   */\n  iszero\n  tag_39\n  jumpi\n    /* \"#utility.yul\":1461:1462   */\n  0x00\n    /* \"#utility.yul\":1458:1459   */\n  dup1\n    /* \"#utility.yul\":1451:1463   */\n  revert\n    /* \"#utility.yul\":1429:1465   */\ntag_39:\n  pop\n    /* \"#utility.yul\":1484:1547   */\n  tag_40\n    /* \"#utility.yul\":1539:1546   */\n  dup6\n    /* \"#utility.yul\":1528:1536   */\n  dup3\n    /* \"#utility.yul\":1517:1526   */\n  dup7\n    /* \"#utility.yul\":1513:1537   */\n  add\n    /* \"#utility.yul\":1484:1547   */\n  tag_18\n  jump\t// in\ntag_40:\n    /* \"#utility.yul\":1474:1547   */\n  swap2\n  pop\n  pop\n    /* \"#utility.yul\":991:1553   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1558:1938   */\ntag_19:\n    /* \"#utility.yul\":1637:1638   */\n  0x01\n    /* \"#utility.yul\":1633:1645   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":1680:1692   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":1701:1762   */\n  tag_42\n  jumpi\n    /* \"#utility.yul\":1755:1759   */\n  0x7f\n    /* \"#utility.yul\":1747:1753   */\n  dup3\n    /* \"#utility.yul\":1743:1760   */\n  and\n    /* \"#utility.yul\":1733:1760   */\n  swap2\n  pop\n    /* \"#utility.yul\":1701:1762   */\ntag_42:\n    /* \"#utility.yul\":1808:1810   */\n  0x20\n    /* \"#utility.yul\":1800:1806   */\n  dup3\n    /* \"#utility.yul\":1797:1811   */\n  lt\n    /* \"#utility.yul\":1777:1795   */\n  dup2\n    /* \"#utility.yul\":1774:1812   */\n  sub\n    /* \"#utility.yul\":1771:1932   */\n  tag_43\n  jumpi\n    /* \"#utility.yul\":1854:1864   */\n  0x4e487b71\n    /* \"#utility.yul\":1849:1852   */\n  0xe0\n    /* \"#utility.yul\":1845:1865   */\n  shl\n    /* \"#utility.yul\":1842:1843   */\n  0x00\n    /* \"#utility.yul\":1835:1866   */\n  mstore\n    /* \"#utility.yul\":1889:1893   */\n  0x22\n    /* \"#utility.yul\":1886:1887   */\n  0x04\n    /* \"#utility.yul\":1879:1894   */\n  mstore\n    /* \"#utility.yul\":1917:1921   */\n  0x24\n    /* \"#utility.yul\":1914:1915   */\n  0x00\n    /* \"#utility.yul\":1907:1922   */\n  revert\n    /* \"#utility.yul\":1771:1932   */\ntag_43:\n  pop\n    /* \"#utility.yul\":1558:1938   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2069:2614   */\ntag_21:\n    /* \"#utility.yul\":2171:2173   */\n  0x1f\n    /* \"#utility.yul\":2166:2169   */\n  dup3\n    /* \"#utility.yul\":2163:2174   */\n  gt\n    /* \"#utility.yul\":2160:2608   */\n  iszero\n  tag_46\n  jumpi\n    /* \"#utility.yul\":2207:2208   */\n  0x00\n    /* \"#utility.yul\":2232:2237   */\n  dup2\n    /* \"#utility.yul\":2228:2230   */\n  dup2\n    /* \"#utility.yul\":2221:2238   */\n  mstore\n    /* \"#utility.yul\":2277:2281   */\n  0x20\n    /* \"#utility.yul\":2273:2275   */\n  dup2\n    /* \"#utility.yul\":2263:2282   */\n  keccak256\n    /* \"#utility.yul\":2347:2349   */\n  0x1f\n    /* \"#utility.yul\":2335:2345   */\n  dup6\n    /* \"#utility.yul\":2331:2350   */\n  add\n    /* \"#utility.yul\":2328:2329   */\n  0x05\n    /* \"#utility.yul\":2324:2351   */\n  shr\n    /* \"#utility.yul\":2318:2322   */\n  dup2\n    /* \"#utility.yul\":2314:2352   */\n  add\n    /* \"#utility.yul\":2383:2387   */\n  0x20\n    /* \"#utility.yul\":2371:2381   */\n  dup7\n    /* \"#utility.yul\":2368:2388   */\n  lt\n    /* \"#utility.yul\":2365:2412   */\n  iszero\n  tag_47\n  jumpi\n  pop\n    /* \"#utility.yul\":2406:2410   */\n  dup1\n    /* \"#utility.yul\":2365:2412   */\ntag_47:\n    /* \"#utility.yul\":2461:2463   */\n  0x1f\n    /* \"#utility.yul\":2456:2459   */\n  dup6\n    /* \"#utility.yul\":2452:2464   */\n  add\n    /* \"#utility.yul\":2449:2450   */\n  0x05\n    /* \"#utility.yul\":2445:2465   */\n  shr\n    /* \"#utility.yul\":2439:2443   */\n  dup3\n    /* \"#utility.yul\":2435:2466   */\n  add\n    /* \"#utility.yul\":2425:2466   */\n  swap2\n  pop\n    /* \"#utility.yul\":2516:2598   */\ntag_48:\n    /* \"#utility.yul\":2534:2536   */\n  dup2\n    /* \"#utility.yul\":2527:2532   */\n  dup2\n    /* \"#utility.yul\":2524:2537   */\n  lt\n    /* \"#utility.yul\":2516:2598   */\n  iszero\n  tag_50\n  jumpi\n    /* \"#utility.yul\":2579:2596   */\n  dup3\n  dup2\n  sstore\n    /* \"#utility.yul\":2560:2561   */\n  0x01\n    /* \"#utility.yul\":2549:2562   */\n  add\n    /* \"#utility.yul\":2516:2598   */\n  jump(tag_48)\ntag_50:\n    /* \"#utility.yul\":2520:2523   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":2160:2608   */\ntag_46:\n    /* \"#utility.yul\":2069:2614   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2790:4142   */\ntag_9:\n    /* \"#utility.yul\":2910:2920   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":2932:2962   */\n  dup2\n  gt\n    /* \"#utility.yul\":2929:2985   */\n  iszero\n  tag_54\n  jumpi\n    /* \"#utility.yul\":2965:2983   */\n  tag_54\n  tag_17\n  jump\t// in\ntag_54:\n    /* \"#utility.yul\":2994:3091   */\n  tag_55\n    /* \"#utility.yul\":3084:3090   */\n  dup2\n    /* \"#utility.yul\":3044:3082   */\n  tag_56\n    /* \"#utility.yul\":3076:3080   */\n  dup5\n    /* \"#utility.yul\":3070:3081   */\n  sload\n    /* \"#utility.yul\":3044:3082   */\n  tag_19\n  jump\t// in\ntag_56:\n    /* \"#utility.yul\":3038:3042   */\n  dup5\n    /* \"#utility.yul\":2994:3091   */\n  tag_21\n  jump\t// in\ntag_55:\n    /* \"#utility.yul\":3146:3150   */\n  0x20\n  dup1\n    /* \"#utility.yul\":3210:3212   */\n  0x1f\n    /* \"#utility.yul\":3199:3213   */\n  dup4\n  gt\n    /* \"#utility.yul\":3227:3228   */\n  0x01\n    /* \"#utility.yul\":3222:3885   */\n  dup2\n  eq\n  tag_58\n  jumpi\n    /* \"#utility.yul\":3929:3930   */\n  0x00\n    /* \"#utility.yul\":3946:3952   */\n  dup5\n    /* \"#utility.yul\":3943:4032   */\n  iszero\n  tag_59\n  jumpi\n  pop\n    /* \"#utility.yul\":3998:4017   */\n  dup6\n  dup4\n  add\n    /* \"#utility.yul\":3992:4018   */\n  mload\n    /* \"#utility.yul\":3943:4032   */\ntag_59:\n  not(0x00)\n    /* \"#utility.yul\":2747:2748   */\n  0x03\n    /* \"#utility.yul\":2743:2754   */\n  dup7\n  swap1\n  shl\n    /* \"#utility.yul\":2739:2763   */\n  shr\n    /* \"#utility.yul\":2735:2764   */\n  not\n    /* \"#utility.yul\":2725:2765   */\n  and\n    /* \"#utility.yul\":2771:2772   */\n  0x01\n    /* \"#utility.yul\":2767:2778   */\n  dup6\n  swap1\n  shl\n    /* \"#utility.yul\":2722:2779   */\n  or\n    /* \"#utility.yul\":4045:4126   */\n  dup6\n  sstore\n    /* \"#utility.yul\":3192:4136   */\n  jump(tag_50)\n    /* \"#utility.yul\":3222:3885   */\ntag_58:\n    /* \"#utility.yul\":2016:2017   */\n  0x00\n    /* \"#utility.yul\":2009:2023   */\n  dup6\n  dup2\n  mstore\n    /* \"#utility.yul\":2053:2057   */\n  0x20\n    /* \"#utility.yul\":2040:2058   */\n  dup2\n  keccak256\n  not(0x1f)\n    /* \"#utility.yul\":3258:3278   */\n  dup7\n  and\n  swap2\n    /* \"#utility.yul\":3376:3612   */\ntag_62:\n    /* \"#utility.yul\":3390:3397   */\n  dup3\n    /* \"#utility.yul\":3387:3388   */\n  dup2\n    /* \"#utility.yul\":3384:3398   */\n  lt\n    /* \"#utility.yul\":3376:3612   */\n  iszero\n  tag_64\n  jumpi\n    /* \"#utility.yul\":3479:3498   */\n  dup9\n  dup7\n  add\n    /* \"#utility.yul\":3473:3499   */\n  mload\n    /* \"#utility.yul\":3458:3500   */\n  dup3\n  sstore\n    /* \"#utility.yul\":3571:3598   */\n  swap5\n  dup5\n  add\n  swap5\n    /* \"#utility.yul\":3539:3540   */\n  0x01\n    /* \"#utility.yul\":3527:3541   */\n  swap1\n  swap2\n  add\n  swap1\n    /* \"#utility.yul\":3406:3425   */\n  dup5\n  add\n    /* \"#utility.yul\":3376:3612   */\n  jump(tag_62)\ntag_64:\n    /* \"#utility.yul\":3380:3383   */\n  pop\n    /* \"#utility.yul\":3640:3646   */\n  dup6\n    /* \"#utility.yul\":3631:3638   */\n  dup3\n    /* \"#utility.yul\":3628:3647   */\n  lt\n    /* \"#utility.yul\":3625:3826   */\n  iszero\n  tag_65\n  jumpi\n    /* \"#utility.yul\":3701:3720   */\n  dup8\n  dup6\n  add\n    /* \"#utility.yul\":3695:3721   */\n  mload\n  not(0x00)\n    /* \"#utility.yul\":3784:3785   */\n  0x03\n    /* \"#utility.yul\":3780:3794   */\n  dup9\n  swap1\n  shl\n    /* \"#utility.yul\":3796:3799   */\n  0xf8\n    /* \"#utility.yul\":3776:3800   */\n  and\n    /* \"#utility.yul\":3772:3809   */\n  shr\n    /* \"#utility.yul\":3768:3810   */\n  not\n    /* \"#utility.yul\":3753:3811   */\n  and\n    /* \"#utility.yul\":3738:3812   */\n  dup2\n  sstore\n    /* \"#utility.yul\":3625:3826   */\ntag_65:\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":3872:3873   */\n  0x01\n    /* \"#utility.yul\":3856:3870   */\n  swap1\n  dup2\n  shl\n    /* \"#utility.yul\":3852:3874   */\n  add\n    /* \"#utility.yul\":3839:3875   */\n  swap1\n  sstore\n  pop\n    /* \"#utility.yul\":2790:4142   */\n  jump\t// out\ntag_23:\n    /* \"MY MainNFT/My_NFT.sol\":46272:47496  contract MinteriumUser is ERC721, ERC721Enumerable, ERC721URIStorage, Ownable {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"MY MainNFT/My_NFT.sol\":46272:47496  contract MinteriumUser is ERC721, ERC721Enumerable, ERC721URIStorage, Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x70a08231\n      gt\n      tag_23\n      jumpi\n      dup1\n      0xb88d4fde\n      gt\n      tag_24\n      jumpi\n      dup1\n      0xb88d4fde\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xc87b56dd\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xd204c45e\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_22\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_24:\n      dup1\n      0x70a08231\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_17\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_23:\n      dup1\n      0x23b872dd\n      gt\n      tag_25\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x2f745c59\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x42842e0e\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x4f6ccce7\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x6352211e\n      eq\n      tag_12\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_25:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x081812fc\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"MY MainNFT/My_NFT.sol\":47322:47493  function supportsInterface(bytes4 interfaceId) public view override(ERC721, ERC721Enumerable) returns (bool) {... */\n    tag_3:\n      tag_26\n      tag_27\n      calldatasize\n      0x04\n      tag_28\n      jump\t// in\n    tag_27:\n      tag_29\n      jump\t// in\n    tag_26:\n      mload(0x40)\n        /* \"#utility.yul\":565:579   */\n      swap1\n      iszero\n        /* \"#utility.yul\":558:580   */\n      iszero\n        /* \"#utility.yul\":540:581   */\n      dup2\n      mstore\n        /* \"#utility.yul\":528:530   */\n      0x20\n        /* \"#utility.yul\":513:531   */\n      add\n        /* \"MY MainNFT/My_NFT.sol\":47322:47493  function supportsInterface(bytes4 interfaceId) public view override(ERC721, ERC721Enumerable) returns (bool) {... */\n    tag_30:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"MY MainNFT/My_NFT.sol\":21713:21813  function name() public view virtual override returns (string memory) {... */\n    tag_4:\n      tag_32\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      tag_30\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n        /* \"MY MainNFT/My_NFT.sol\":23173:23394  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_5:\n      tag_36\n      tag_37\n      calldatasize\n      0x04\n      tag_38\n      jump\t// in\n    tag_37:\n      tag_39\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1697:1729   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1679:1730   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1667:1669   */\n      0x20\n        /* \"#utility.yul\":1652:1670   */\n      add\n        /* \"MY MainNFT/My_NFT.sol\":23173:23394  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n      tag_30\n        /* \"#utility.yul\":1533:1736   */\n      jump\n        /* \"MY MainNFT/My_NFT.sol\":22710:23107  function approve(address to, uint256 tokenId) public virtual override {... */\n    tag_6:\n      tag_42\n      tag_43\n      calldatasize\n      0x04\n      tag_44\n      jump\t// in\n    tag_43:\n      tag_45\n      jump\t// in\n    tag_42:\n      stop\n        /* \"MY MainNFT/My_NFT.sol\":35169:35282  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_7:\n        /* \"MY MainNFT/My_NFT.sol\":35257:35267  _allTokens */\n      0x08\n        /* \"MY MainNFT/My_NFT.sol\":35257:35274  _allTokens.length */\n      sload\n        /* \"MY MainNFT/My_NFT.sol\":35169:35282  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_46:\n      mload(0x40)\n        /* \"#utility.yul\":2324:2349   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":2312:2314   */\n      0x20\n        /* \"#utility.yul\":2297:2315   */\n      add\n        /* \"MY MainNFT/My_NFT.sol\":35169:35282  function totalSupply() public view virtual override returns (uint256) {... */\n      tag_30\n        /* \"#utility.yul\":2178:2355   */\n      jump\n        /* \"MY MainNFT/My_NFT.sol\":24063:24368  function transferFrom(address from, address to, uint256 tokenId) public virtual override {... */\n    tag_8:\n      tag_42\n      tag_51\n      calldatasize\n      0x04\n      tag_52\n      jump\t// in\n    tag_51:\n      tag_53\n      jump\t// in\n        /* \"MY MainNFT/My_NFT.sol\":34837:35093  function tokenOfOwnerByIndex(address owner, uint256 index) public view virtual override returns (uint256) {... */\n    tag_9:\n      tag_46\n      tag_55\n      calldatasize\n      0x04\n      tag_44\n      jump\t// in\n    tag_55:\n      tag_56\n      jump\t// in\n        /* \"MY MainNFT/My_NFT.sol\":24439:24590  function safeTransferFrom(address from, address to, uint256 tokenId) public virtual override {... */\n    tag_10:\n      tag_42\n      tag_59\n      calldatasize\n      0x04\n      tag_52\n      jump\t// in\n    tag_59:\n      tag_60\n      jump\t// in\n        /* \"MY MainNFT/My_NFT.sol\":35359:35592  function tokenByIndex(uint256 index) public view virtual override returns (uint256) {... */\n    tag_11:\n      tag_46\n      tag_62\n      calldatasize\n      0x04\n      tag_38\n      jump\t// in\n    tag_62:\n      tag_63\n      jump\t// in\n        /* \"MY MainNFT/My_NFT.sol\":21407:21646  function ownerOf(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_12:\n      tag_36\n      tag_66\n      calldatasize\n      0x04\n      tag_38\n      jump\t// in\n    tag_66:\n      tag_67\n      jump\t// in\n        /* \"MY MainNFT/My_NFT.sol\":21137:21345  function balanceOf(address owner) public view virtual override returns (uint256) {... */\n    tag_13:\n      tag_46\n      tag_70\n      calldatasize\n      0x04\n      tag_71\n      jump\t// in\n    tag_70:\n      tag_72\n      jump\t// in\n        /* \"MY MainNFT/My_NFT.sol\":44323:44471  function renounceOwnership() public virtual onlyOwner {... */\n    tag_14:\n      tag_42\n      tag_75\n      jump\t// in\n        /* \"MY MainNFT/My_NFT.sol\":43672:43759  function owner() public view virtual returns (address) {... */\n    tag_15:\n        /* \"MY MainNFT/My_NFT.sol\":43745:43751  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x0b))\n        /* \"MY MainNFT/My_NFT.sol\":43672:43759  function owner() public view virtual returns (address) {... */\n      jump(tag_36)\n        /* \"MY MainNFT/My_NFT.sol\":21882:21986  function symbol() public view virtual override returns (string memory) {... */\n    tag_16:\n      tag_32\n      tag_80\n      jump\t// in\n        /* \"MY MainNFT/My_NFT.sol\":23466:23761  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_17:\n      tag_42\n      tag_83\n      calldatasize\n      0x04\n      tag_84\n      jump\t// in\n    tag_83:\n      tag_85\n      jump\t// in\n        /* \"MY MainNFT/My_NFT.sol\":24661:24946  function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory _data) public virtual override {... */\n    tag_18:\n      tag_42\n      tag_87\n      calldatasize\n      0x04\n      tag_88\n      jump\t// in\n    tag_87:\n      tag_89\n      jump\t// in\n        /* \"MY MainNFT/My_NFT.sol\":47159:47314  function tokenURI(uint256 tokenId) public view override(ERC721, ERC721URIStorage) returns (string memory) {... */\n    tag_19:\n      tag_32\n      tag_91\n      calldatasize\n      0x04\n      tag_38\n      jump\t// in\n    tag_91:\n      tag_92\n      jump\t// in\n        /* \"MY MainNFT/My_NFT.sol\":46539:46839  function safeMint(address to, string memory tokenURI) public onlyOwner returns(uint256 tokenId) {... */\n    tag_20:\n      tag_46\n      tag_95\n      calldatasize\n      0x04\n      tag_96\n      jump\t// in\n    tag_95:\n      tag_97\n      jump\t// in\n        /* \"MY MainNFT/My_NFT.sol\":23832:23996  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n    tag_21:\n      tag_26\n      tag_100\n      calldatasize\n      0x04\n      tag_101\n      jump\t// in\n    tag_100:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"MY MainNFT/My_NFT.sol\":23953:23978  _operatorApprovals[owner] */\n      swap2\n      dup3\n      and\n        /* \"MY MainNFT/My_NFT.sol\":23929:23933  bool */\n      0x00\n        /* \"MY MainNFT/My_NFT.sol\":23953:23978  _operatorApprovals[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"MY MainNFT/My_NFT.sol\":23953:23971  _operatorApprovals */\n      0x05\n        /* \"MY MainNFT/My_NFT.sol\":23953:23978  _operatorApprovals[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"MY MainNFT/My_NFT.sol\":23953:23988  _operatorApprovals[owner][operator] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"MY MainNFT/My_NFT.sol\":23832:23996  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n      jump\n        /* \"MY MainNFT/My_NFT.sol\":44626:44870  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_22:\n      tag_42\n      tag_105\n      calldatasize\n      0x04\n      tag_71\n      jump\t// in\n    tag_105:\n      tag_106\n      jump\t// in\n        /* \"MY MainNFT/My_NFT.sol\":47322:47493  function supportsInterface(bytes4 interfaceId) public view override(ERC721, ERC721Enumerable) returns (bool) {... */\n    tag_29:\n        /* \"MY MainNFT/My_NFT.sol\":47425:47429  bool */\n      0x00\n        /* \"MY MainNFT/My_NFT.sol\":47449:47485  super.supportsInterface(interfaceId) */\n      tag_108\n        /* \"MY MainNFT/My_NFT.sol\":47473:47484  interfaceId */\n      dup3\n        /* \"MY MainNFT/My_NFT.sol\":47449:47472  super.supportsInterface */\n      tag_109\n        /* \"MY MainNFT/My_NFT.sol\":47449:47485  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_108:\n        /* \"MY MainNFT/My_NFT.sol\":47442:47485  return super.supportsInterface(interfaceId) */\n      swap3\n        /* \"MY MainNFT/My_NFT.sol\":47322:47493  function supportsInterface(bytes4 interfaceId) public view override(ERC721, ERC721Enumerable) returns (bool) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"MY MainNFT/My_NFT.sol\":21713:21813  function name() public view virtual override returns (string memory) {... */\n    tag_33:\n        /* \"MY MainNFT/My_NFT.sol\":21767:21780  string memory */\n      0x60\n        /* \"MY MainNFT/My_NFT.sol\":21800:21805  _name */\n      0x00\n        /* \"MY MainNFT/My_NFT.sol\":21793:21805  return _name */\n      dup1\n      sload\n      tag_111\n      swap1\n      tag_112\n      jump\t// in\n    tag_111:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_113\n      swap1\n      tag_112\n      jump\t// in\n    tag_113:\n      dup1\n      iszero\n      tag_114\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_115\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_114)\n    tag_115:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_116:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_116\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_114:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"MY MainNFT/My_NFT.sol\":21713:21813  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"MY MainNFT/My_NFT.sol\":23173:23394  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_39:\n        /* \"MY MainNFT/My_NFT.sol\":23249:23256  address */\n      0x00\n        /* \"MY MainNFT/My_NFT.sol\":23277:23293  _exists(tokenId) */\n      tag_118\n        /* \"MY MainNFT/My_NFT.sol\":23285:23292  tokenId */\n      dup3\n        /* \"MY MainNFT/My_NFT.sol\":23277:23284  _exists */\n      tag_119\n        /* \"MY MainNFT/My_NFT.sol\":23277:23293  _exists(tokenId) */\n      jump\t// in\n    tag_118:\n        /* \"MY MainNFT/My_NFT.sol\":23269:23342  require(_exists(tokenId), \"ERC721: approved query for nonexistent token\") */\n      tag_120\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6056:6058   */\n      0x20\n        /* \"MY MainNFT/My_NFT.sol\":23269:23342  require(_exists(tokenId), \"ERC721: approved query for nonexistent token\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6038:6059   */\n      mstore\n        /* \"#utility.yul\":6095:6097   */\n      0x2c\n        /* \"#utility.yul\":6075:6093   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6068:6098   */\n      mstore\n        /* \"#utility.yul\":6134:6168   */\n      0x4552433732313a20617070726f76656420717565727920666f72206e6f6e6578\n        /* \"#utility.yul\":6114:6132   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6107:6169   */\n      mstore\n      shl(0xa1, 0x34b9ba32b73a103a37b5b2b7)\n        /* \"#utility.yul\":6185:6203   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":6178:6220   */\n      mstore\n        /* \"#utility.yul\":6237:6256   */\n      0x84\n      add\n        /* \"MY MainNFT/My_NFT.sol\":23269:23342  require(_exists(tokenId), \"ERC721: approved query for nonexistent token\") */\n    tag_121:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_120:\n      pop\n        /* \"MY MainNFT/My_NFT.sol\":23362:23386  _tokenApprovals[tokenId] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"MY MainNFT/My_NFT.sol\":23362:23377  _tokenApprovals */\n      0x04\n        /* \"MY MainNFT/My_NFT.sol\":23362:23386  _tokenApprovals[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"MY MainNFT/My_NFT.sol\":23173:23394  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n      jump\t// out\n        /* \"MY MainNFT/My_NFT.sol\":22710:23107  function approve(address to, uint256 tokenId) public virtual override {... */\n    tag_45:\n        /* \"MY MainNFT/My_NFT.sol\":22791:22804  address owner */\n      0x00\n        /* \"MY MainNFT/My_NFT.sol\":22807:22830  ERC721.ownerOf(tokenId) */\n      tag_124\n        /* \"MY MainNFT/My_NFT.sol\":22822:22829  tokenId */\n      dup3\n        /* \"MY MainNFT/My_NFT.sol\":22807:22821  ERC721.ownerOf */\n      tag_67\n        /* \"MY MainNFT/My_NFT.sol\":22807:22830  ERC721.ownerOf(tokenId) */\n      jump\t// in\n    tag_124:\n        /* \"MY MainNFT/My_NFT.sol\":22791:22830  address owner = ERC721.ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"MY MainNFT/My_NFT.sol\":22855:22860  owner */\n      dup1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"MY MainNFT/My_NFT.sol\":22849:22860  to != owner */\n      and\n        /* \"MY MainNFT/My_NFT.sol\":22849:22851  to */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"MY MainNFT/My_NFT.sol\":22849:22860  to != owner */\n      and\n      sub\n        /* \"MY MainNFT/My_NFT.sol\":22841:22898  require(to != owner, \"ERC721: approval to current owner\") */\n      tag_125\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6469:6471   */\n      0x20\n        /* \"MY MainNFT/My_NFT.sol\":22841:22898  require(to != owner, \"ERC721: approval to current owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6451:6472   */\n      mstore\n        /* \"#utility.yul\":6508:6510   */\n      0x21\n        /* \"#utility.yul\":6488:6506   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6481:6511   */\n      mstore\n        /* \"#utility.yul\":6547:6581   */\n      0x4552433732313a20617070726f76616c20746f2063757272656e74206f776e65\n        /* \"#utility.yul\":6527:6545   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6520:6582   */\n      mstore\n      shl(0xf9, 0x39)\n        /* \"#utility.yul\":6598:6616   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":6591:6622   */\n      mstore\n        /* \"#utility.yul\":6639:6658   */\n      0x84\n      add\n        /* \"MY MainNFT/My_NFT.sol\":22841:22898  require(to != owner, \"ERC721: approval to current owner\") */\n      tag_121\n        /* \"#utility.yul\":6267:6664   */\n      jump\n        /* \"MY MainNFT/My_NFT.sol\":22841:22898  require(to != owner, \"ERC721: approval to current owner\") */\n    tag_125:\n        /* \"MY MainNFT/My_NFT.sol\":16135:16145  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"MY MainNFT/My_NFT.sol\":22919:22940  _msgSender() == owner */\n      dup3\n      and\n      eq\n      dup1\n        /* \"MY MainNFT/My_NFT.sol\":22919:22981  _msgSender() == owner || isApprovedForAll(owner, _msgSender()) */\n      tag_131\n      jumpi\n      pop\n        /* \"MY MainNFT/My_NFT.sol\":22944:22981  isApprovedForAll(owner, _msgSender()) */\n      tag_131\n        /* \"MY MainNFT/My_NFT.sol\":22961:22966  owner */\n      dup2\n        /* \"MY MainNFT/My_NFT.sol\":16135:16145  msg.sender */\n      caller\n        /* \"MY MainNFT/My_NFT.sol\":23832:23996  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n      tag_100\n      jump\t// in\n        /* \"MY MainNFT/My_NFT.sol\":22944:22981  isApprovedForAll(owner, _msgSender()) */\n    tag_131:\n        /* \"MY MainNFT/My_NFT.sol\":22911:23065  require(_msgSender() == owner || isApprovedForAll(owner, _msgSender()),... */\n      tag_133\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6871:6873   */\n      0x20\n        /* \"MY MainNFT/My_NFT.sol\":22911:23065  require(_msgSender() == owner || isApprovedForAll(owner, _msgSender()),... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6853:6874   */\n      mstore\n        /* \"#utility.yul\":6910:6912   */\n      0x38\n        /* \"#utility.yul\":6890:6908   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6883:6913   */\n      mstore\n        /* \"#utility.yul\":6949:6983   */\n      0x4552433732313a20617070726f76652063616c6c6572206973206e6f74206f77\n        /* \"#utility.yul\":6929:6947   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6922:6984   */\n      mstore\n        /* \"#utility.yul\":7020:7046   */\n      0x6e6572206e6f7220617070726f76656420666f7220616c6c0000000000000000\n        /* \"#utility.yul\":7000:7018   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":6993:7047   */\n      mstore\n        /* \"#utility.yul\":7064:7083   */\n      0x84\n      add\n        /* \"MY MainNFT/My_NFT.sol\":22911:23065  require(_msgSender() == owner || isApprovedForAll(owner, _msgSender()),... */\n      tag_121\n        /* \"#utility.yul\":6669:7089   */\n      jump\n        /* \"MY MainNFT/My_NFT.sol\":22911:23065  require(_msgSender() == owner || isApprovedForAll(owner, _msgSender()),... */\n    tag_133:\n        /* \"MY MainNFT/My_NFT.sol\":23078:23099  _approve(to, tokenId) */\n      tag_136\n        /* \"MY MainNFT/My_NFT.sol\":23087:23089  to */\n      dup4\n        /* \"MY MainNFT/My_NFT.sol\":23091:23098  tokenId */\n      dup4\n        /* \"MY MainNFT/My_NFT.sol\":23078:23086  _approve */\n      tag_137\n        /* \"MY MainNFT/My_NFT.sol\":23078:23099  _approve(to, tokenId) */\n      jump\t// in\n    tag_136:\n        /* \"MY MainNFT/My_NFT.sol\":22780:23107  {... */\n      pop\n        /* \"MY MainNFT/My_NFT.sol\":22710:23107  function approve(address to, uint256 tokenId) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"MY MainNFT/My_NFT.sol\":24063:24368  function transferFrom(address from, address to, uint256 tokenId) public virtual override {... */\n    tag_53:\n        /* \"MY MainNFT/My_NFT.sol\":24224:24265  _isApprovedOrOwner(_msgSender(), tokenId) */\n      tag_140\n        /* \"MY MainNFT/My_NFT.sol\":16135:16145  msg.sender */\n      caller\n        /* \"MY MainNFT/My_NFT.sol\":24257:24264  tokenId */\n      dup3\n        /* \"MY MainNFT/My_NFT.sol\":24224:24242  _isApprovedOrOwner */\n      tag_142\n        /* \"MY MainNFT/My_NFT.sol\":24224:24265  _isApprovedOrOwner(_msgSender(), tokenId) */\n      jump\t// in\n    tag_140:\n        /* \"MY MainNFT/My_NFT.sol\":24216:24319  require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: transfer caller is not owner nor approved\") */\n      tag_143\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_121\n      swap1\n      tag_145\n      jump\t// in\n    tag_143:\n        /* \"MY MainNFT/My_NFT.sol\":24332:24360  _transfer(from, to, tokenId) */\n      tag_136\n        /* \"MY MainNFT/My_NFT.sol\":24342:24346  from */\n      dup4\n        /* \"MY MainNFT/My_NFT.sol\":24348:24350  to */\n      dup4\n        /* \"MY MainNFT/My_NFT.sol\":24352:24359  tokenId */\n      dup4\n        /* \"MY MainNFT/My_NFT.sol\":24332:24341  _transfer */\n      tag_147\n        /* \"MY MainNFT/My_NFT.sol\":24332:24360  _transfer(from, to, tokenId) */\n      jump\t// in\n        /* \"MY MainNFT/My_NFT.sol\":34837:35093  function tokenOfOwnerByIndex(address owner, uint256 index) public view virtual override returns (uint256) {... */\n    tag_56:\n        /* \"MY MainNFT/My_NFT.sol\":34934:34941  uint256 */\n      0x00\n        /* \"MY MainNFT/My_NFT.sol\":34970:34993  ERC721.balanceOf(owner) */\n      tag_149\n        /* \"MY MainNFT/My_NFT.sol\":34987:34992  owner */\n      dup4\n        /* \"MY MainNFT/My_NFT.sol\":34970:34986  ERC721.balanceOf */\n      tag_72\n        /* \"MY MainNFT/My_NFT.sol\":34970:34993  ERC721.balanceOf(owner) */\n      jump\t// in\n    tag_149:\n        /* \"MY MainNFT/My_NFT.sol\":34962:34967  index */\n      dup3\n        /* \"MY MainNFT/My_NFT.sol\":34962:34993  index < ERC721.balanceOf(owner) */\n      lt\n        /* \"MY MainNFT/My_NFT.sol\":34954:35041  require(index < ERC721.balanceOf(owner), \"ERC721Enumerable: owner index out of bounds\") */\n      tag_150\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7714:7716   */\n      0x20\n        /* \"MY MainNFT/My_NFT.sol\":34954:35041  require(index < ERC721.balanceOf(owner), \"ERC721Enumerable: owner index out of bounds\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7696:7717   */\n      mstore\n        /* \"#utility.yul\":7753:7755   */\n      0x2b\n        /* \"#utility.yul\":7733:7751   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7726:7756   */\n      mstore\n        /* \"#utility.yul\":7792:7826   */\n      0x455243373231456e756d657261626c653a206f776e657220696e646578206f75\n        /* \"#utility.yul\":7772:7790   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7765:7827   */\n      mstore\n      shl(0xa8, 0x74206f6620626f756e6473)\n        /* \"#utility.yul\":7843:7861   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":7836:7877   */\n      mstore\n        /* \"#utility.yul\":7894:7913   */\n      0x84\n      add\n        /* \"MY MainNFT/My_NFT.sol\":34954:35041  require(index < ERC721.balanceOf(owner), \"ERC721Enumerable: owner index out of bounds\") */\n      tag_121\n        /* \"#utility.yul\":7512:7919   */\n      jump\n        /* \"MY MainNFT/My_NFT.sol\":34954:35041  require(index < ERC721.balanceOf(owner), \"ERC721Enumerable: owner index out of bounds\") */\n    tag_150:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"MY MainNFT/My_NFT.sol\":35059:35078  _ownedTokens[owner] */\n      swap2\n      swap1\n      swap2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"MY MainNFT/My_NFT.sol\":35059:35071  _ownedTokens */\n      0x06\n        /* \"MY MainNFT/My_NFT.sol\":35059:35078  _ownedTokens[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"MY MainNFT/My_NFT.sol\":35059:35085  _ownedTokens[owner][index] */\n      swap4\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"MY MainNFT/My_NFT.sol\":34837:35093  function tokenOfOwnerByIndex(address owner, uint256 index) public view virtual override returns (uint256) {... */\n      jump\t// out\n        /* \"MY MainNFT/My_NFT.sol\":24439:24590  function safeTransferFrom(address from, address to, uint256 tokenId) public virtual override {... */\n    tag_60:\n        /* \"MY MainNFT/My_NFT.sol\":24543:24582  safeTransferFrom(from, to, tokenId, \"\") */\n      tag_136\n        /* \"MY MainNFT/My_NFT.sol\":24560:24564  from */\n      dup4\n        /* \"MY MainNFT/My_NFT.sol\":24566:24568  to */\n      dup4\n        /* \"MY MainNFT/My_NFT.sol\":24570:24577  tokenId */\n      dup4\n        /* \"MY MainNFT/My_NFT.sol\":24543:24582  safeTransferFrom(from, to, tokenId, \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"MY MainNFT/My_NFT.sol\":24543:24559  safeTransferFrom */\n      tag_89\n        /* \"MY MainNFT/My_NFT.sol\":24543:24582  safeTransferFrom(from, to, tokenId, \"\") */\n      jump\t// in\n        /* \"MY MainNFT/My_NFT.sol\":35359:35592  function tokenByIndex(uint256 index) public view virtual override returns (uint256) {... */\n    tag_63:\n        /* \"MY MainNFT/My_NFT.sol\":35434:35441  uint256 */\n      0x00\n        /* \"MY MainNFT/My_NFT.sol\":35470:35500  ERC721Enumerable.totalSupply() */\n      tag_156\n        /* \"MY MainNFT/My_NFT.sol\":35257:35267  _allTokens */\n      0x08\n        /* \"MY MainNFT/My_NFT.sol\":35257:35274  _allTokens.length */\n      sload\n      swap1\n        /* \"MY MainNFT/My_NFT.sol\":35169:35282  function totalSupply() public view virtual override returns (uint256) {... */\n      jump\n        /* \"MY MainNFT/My_NFT.sol\":35470:35500  ERC721Enumerable.totalSupply() */\n    tag_156:\n        /* \"MY MainNFT/My_NFT.sol\":35462:35467  index */\n      dup3\n        /* \"MY MainNFT/My_NFT.sol\":35462:35500  index < ERC721Enumerable.totalSupply() */\n      lt\n        /* \"MY MainNFT/My_NFT.sol\":35454:35549  require(index < ERC721Enumerable.totalSupply(), \"ERC721Enumerable: global index out of bounds\") */\n      tag_157\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8126:8128   */\n      0x20\n        /* \"MY MainNFT/My_NFT.sol\":35454:35549  require(index < ERC721Enumerable.totalSupply(), \"ERC721Enumerable: global index out of bounds\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8108:8129   */\n      mstore\n        /* \"#utility.yul\":8165:8167   */\n      0x2c\n        /* \"#utility.yul\":8145:8163   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8138:8168   */\n      mstore\n        /* \"#utility.yul\":8204:8238   */\n      0x455243373231456e756d657261626c653a20676c6f62616c20696e646578206f\n        /* \"#utility.yul\":8184:8202   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8177:8239   */\n      mstore\n      shl(0xa0, 0x7574206f6620626f756e6473)\n        /* \"#utility.yul\":8255:8273   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":8248:8290   */\n      mstore\n        /* \"#utility.yul\":8307:8326   */\n      0x84\n      add\n        /* \"MY MainNFT/My_NFT.sol\":35454:35549  require(index < ERC721Enumerable.totalSupply(), \"ERC721Enumerable: global index out of bounds\") */\n      tag_121\n        /* \"#utility.yul\":7924:8332   */\n      jump\n        /* \"MY MainNFT/My_NFT.sol\":35454:35549  require(index < ERC721Enumerable.totalSupply(), \"ERC721Enumerable: global index out of bounds\") */\n    tag_157:\n        /* \"MY MainNFT/My_NFT.sol\":35567:35577  _allTokens */\n      0x08\n        /* \"MY MainNFT/My_NFT.sol\":35578:35583  index */\n      dup3\n        /* \"MY MainNFT/My_NFT.sol\":35567:35584  _allTokens[index] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_161\n      jumpi\n      tag_161\n      tag_162\n      jump\t// in\n    tag_161:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      sload\n        /* \"MY MainNFT/My_NFT.sol\":35560:35584  return _allTokens[index] */\n      swap1\n      pop\n        /* \"MY MainNFT/My_NFT.sol\":35359:35592  function tokenByIndex(uint256 index) public view virtual override returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"MY MainNFT/My_NFT.sol\":21407:21646  function ownerOf(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_67:\n        /* \"MY MainNFT/My_NFT.sol\":21479:21486  address */\n      0x00\n        /* \"MY MainNFT/My_NFT.sol\":21515:21531  _owners[tokenId] */\n      dup2\n      dup2\n      mstore\n        /* \"MY MainNFT/My_NFT.sol\":21515:21522  _owners */\n      0x02\n        /* \"MY MainNFT/My_NFT.sol\":21515:21531  _owners[tokenId] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup1\n        /* \"MY MainNFT/My_NFT.sol\":21542:21615  require(owner != address(0), \"ERC721: owner query for nonexistent token\") */\n      tag_108\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8671:8673   */\n      0x20\n        /* \"MY MainNFT/My_NFT.sol\":21542:21615  require(owner != address(0), \"ERC721: owner query for nonexistent token\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8653:8674   */\n      mstore\n        /* \"#utility.yul\":8710:8712   */\n      0x29\n        /* \"#utility.yul\":8690:8708   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8683:8713   */\n      mstore\n        /* \"#utility.yul\":8749:8783   */\n      0x4552433732313a206f776e657220717565727920666f72206e6f6e6578697374\n        /* \"#utility.yul\":8729:8747   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8722:8784   */\n      mstore\n      shl(0xb9, 0x32b73a103a37b5b2b7)\n        /* \"#utility.yul\":8800:8818   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":8793:8832   */\n      mstore\n        /* \"#utility.yul\":8849:8868   */\n      0x84\n      add\n        /* \"MY MainNFT/My_NFT.sol\":21542:21615  require(owner != address(0), \"ERC721: owner query for nonexistent token\") */\n      tag_121\n        /* \"#utility.yul\":8469:8874   */\n      jump\n        /* \"MY MainNFT/My_NFT.sol\":21137:21345  function balanceOf(address owner) public view virtual override returns (uint256) {... */\n    tag_72:\n        /* \"MY MainNFT/My_NFT.sol\":21209:21216  uint256 */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"MY MainNFT/My_NFT.sol\":21237:21256  owner != address(0) */\n      dup3\n      and\n        /* \"MY MainNFT/My_NFT.sol\":21229:21303  require(owner != address(0), \"ERC721: balance query for the zero address\") */\n      tag_169\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9081:9083   */\n      0x20\n        /* \"MY MainNFT/My_NFT.sol\":21229:21303  require(owner != address(0), \"ERC721: balance query for the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9063:9084   */\n      mstore\n        /* \"#utility.yul\":9120:9122   */\n      0x2a\n        /* \"#utility.yul\":9100:9118   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9093:9123   */\n      mstore\n        /* \"#utility.yul\":9159:9193   */\n      0x4552433732313a2062616c616e636520717565727920666f7220746865207a65\n        /* \"#utility.yul\":9139:9157   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9132:9194   */\n      mstore\n      shl(0xb0, 0x726f2061646472657373)\n        /* \"#utility.yul\":9210:9228   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":9203:9243   */\n      mstore\n        /* \"#utility.yul\":9260:9279   */\n      0x84\n      add\n        /* \"MY MainNFT/My_NFT.sol\":21229:21303  require(owner != address(0), \"ERC721: balance query for the zero address\") */\n      tag_121\n        /* \"#utility.yul\":8879:9285   */\n      jump\n        /* \"MY MainNFT/My_NFT.sol\":21229:21303  require(owner != address(0), \"ERC721: balance query for the zero address\") */\n    tag_169:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"MY MainNFT/My_NFT.sol\":21321:21337  _balances[owner] */\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"MY MainNFT/My_NFT.sol\":21321:21330  _balances */\n      0x03\n        /* \"MY MainNFT/My_NFT.sol\":21321:21337  _balances[owner] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"MY MainNFT/My_NFT.sol\":21137:21345  function balanceOf(address owner) public view virtual override returns (uint256) {... */\n      jump\t// out\n        /* \"MY MainNFT/My_NFT.sol\":44323:44471  function renounceOwnership() public virtual onlyOwner {... */\n    tag_75:\n        /* \"MY MainNFT/My_NFT.sol\":43745:43751  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x0b))\n        /* \"MY MainNFT/My_NFT.sol\":16135:16145  msg.sender */\n      caller\n        /* \"MY MainNFT/My_NFT.sol\":43892:43915  owner() == _msgSender() */\n      eq\n        /* \"MY MainNFT/My_NFT.sol\":43884:43952  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_175\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_121\n      swap1\n      tag_177\n      jump\t// in\n    tag_175:\n        /* \"MY MainNFT/My_NFT.sol\":44414:44420  _owner */\n      sload(0x0b)\n        /* \"MY MainNFT/My_NFT.sol\":44393:44433  OwnershipTransferred(_owner, address(0)) */\n      mload(0x40)\n        /* \"MY MainNFT/My_NFT.sol\":44430:44431  0 */\n      0x00\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"MY MainNFT/My_NFT.sol\":44414:44420  _owner */\n      and\n      swap1\n        /* \"MY MainNFT/My_NFT.sol\":44393:44433  OwnershipTransferred(_owner, address(0)) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"MY MainNFT/My_NFT.sol\":44430:44431  0 */\n      dup4\n      swap1\n        /* \"MY MainNFT/My_NFT.sol\":44393:44433  OwnershipTransferred(_owner, address(0)) */\n      log3\n        /* \"MY MainNFT/My_NFT.sol\":44444:44450  _owner */\n      0x0b\n        /* \"MY MainNFT/My_NFT.sol\":44444:44463  _owner = address(0) */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      swap1\n      sstore\n        /* \"MY MainNFT/My_NFT.sol\":44323:44471  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"MY MainNFT/My_NFT.sol\":21882:21986  function symbol() public view virtual override returns (string memory) {... */\n    tag_80:\n        /* \"MY MainNFT/My_NFT.sol\":21938:21951  string memory */\n      0x60\n        /* \"MY MainNFT/My_NFT.sol\":21971:21978  _symbol */\n      0x01\n        /* \"MY MainNFT/My_NFT.sol\":21964:21978  return _symbol */\n      dup1\n      sload\n      tag_111\n      swap1\n      tag_112\n      jump\t// in\n        /* \"MY MainNFT/My_NFT.sol\":23466:23761  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_85:\n        /* \"MY MainNFT/My_NFT.sol\":16135:16145  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"MY MainNFT/My_NFT.sol\":23569:23593  operator != _msgSender() */\n      dup4\n      and\n      sub\n        /* \"MY MainNFT/My_NFT.sol\":23561:23623  require(operator != _msgSender(), \"ERC721: approve to caller\") */\n      tag_188\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9853:9855   */\n      0x20\n        /* \"MY MainNFT/My_NFT.sol\":23561:23623  require(operator != _msgSender(), \"ERC721: approve to caller\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9835:9856   */\n      mstore\n        /* \"#utility.yul\":9892:9894   */\n      0x19\n        /* \"#utility.yul\":9872:9890   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9865:9895   */\n      mstore\n        /* \"#utility.yul\":9931:9958   */\n      0x4552433732313a20617070726f766520746f2063616c6c657200000000000000\n        /* \"#utility.yul\":9911:9929   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9904:9959   */\n      mstore\n        /* \"#utility.yul\":9976:9994   */\n      0x64\n      add\n        /* \"MY MainNFT/My_NFT.sol\":23561:23623  require(operator != _msgSender(), \"ERC721: approve to caller\") */\n      tag_121\n        /* \"#utility.yul\":9651:10000   */\n      jump\n        /* \"MY MainNFT/My_NFT.sol\":23561:23623  require(operator != _msgSender(), \"ERC721: approve to caller\") */\n    tag_188:\n        /* \"MY MainNFT/My_NFT.sol\":16135:16145  msg.sender */\n      caller\n        /* \"MY MainNFT/My_NFT.sol\":23636:23668  _operatorApprovals[_msgSender()] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"MY MainNFT/My_NFT.sol\":23636:23654  _operatorApprovals */\n      0x05\n        /* \"MY MainNFT/My_NFT.sol\":23636:23668  _operatorApprovals[_msgSender()] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"MY MainNFT/My_NFT.sol\":23636:23678  _operatorApprovals[_msgSender()][operator] */\n      dup8\n      and\n      dup1\n      dup6\n      mstore\n      swap1\n      dup4\n      mstore\n      swap3\n      dup2\n      swap1\n      keccak256\n        /* \"MY MainNFT/My_NFT.sol\":23636:23689  _operatorApprovals[_msgSender()][operator] = approved */\n      dup1\n      sload\n      not(0xff)\n      and\n      dup7\n      iszero\n      iszero\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"MY MainNFT/My_NFT.sol\":23705:23753  ApprovalForAll(_msgSender(), operator, approved) */\n      swap1\n      mload\n        /* \"#utility.yul\":540:581   */\n      swap1\n      dup2\n      mstore\n        /* \"MY MainNFT/My_NFT.sol\":23636:23678  _operatorApprovals[_msgSender()][operator] */\n      swap2\n      swap3\n        /* \"MY MainNFT/My_NFT.sol\":16135:16145  msg.sender */\n      swap2\n        /* \"MY MainNFT/My_NFT.sol\":23705:23753  ApprovalForAll(_msgSender(), operator, approved) */\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n      swap2\n        /* \"#utility.yul\":513:531   */\n      add\n        /* \"MY MainNFT/My_NFT.sol\":23705:23753  ApprovalForAll(_msgSender(), operator, approved) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"MY MainNFT/My_NFT.sol\":23466:23761  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"MY MainNFT/My_NFT.sol\":24661:24946  function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory _data) public virtual override {... */\n    tag_89:\n        /* \"MY MainNFT/My_NFT.sol\":24793:24834  _isApprovedOrOwner(_msgSender(), tokenId) */\n      tag_195\n        /* \"MY MainNFT/My_NFT.sol\":16135:16145  msg.sender */\n      caller\n        /* \"MY MainNFT/My_NFT.sol\":24826:24833  tokenId */\n      dup4\n        /* \"MY MainNFT/My_NFT.sol\":24793:24811  _isApprovedOrOwner */\n      tag_142\n        /* \"MY MainNFT/My_NFT.sol\":24793:24834  _isApprovedOrOwner(_msgSender(), tokenId) */\n      jump\t// in\n    tag_195:\n        /* \"MY MainNFT/My_NFT.sol\":24785:24888  require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: transfer caller is not owner nor approved\") */\n      tag_197\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_121\n      swap1\n      tag_145\n      jump\t// in\n    tag_197:\n        /* \"MY MainNFT/My_NFT.sol\":24899:24938  _safeTransfer(from, to, tokenId, _data) */\n      tag_199\n        /* \"MY MainNFT/My_NFT.sol\":24913:24917  from */\n      dup5\n        /* \"MY MainNFT/My_NFT.sol\":24919:24921  to */\n      dup5\n        /* \"MY MainNFT/My_NFT.sol\":24923:24930  tokenId */\n      dup5\n        /* \"MY MainNFT/My_NFT.sol\":24932:24937  _data */\n      dup5\n        /* \"MY MainNFT/My_NFT.sol\":24899:24912  _safeTransfer */\n      tag_200\n        /* \"MY MainNFT/My_NFT.sol\":24899:24938  _safeTransfer(from, to, tokenId, _data) */\n      jump\t// in\n    tag_199:\n        /* \"MY MainNFT/My_NFT.sol\":24661:24946  function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory _data) public virtual override {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"MY MainNFT/My_NFT.sol\":47159:47314  function tokenURI(uint256 tokenId) public view override(ERC721, ERC721URIStorage) returns (string memory) {... */\n    tag_92:\n        /* \"MY MainNFT/My_NFT.sol\":47250:47263  string memory */\n      0x60\n        /* \"MY MainNFT/My_NFT.sol\":47283:47306  super.tokenURI(tokenId) */\n      tag_108\n        /* \"MY MainNFT/My_NFT.sol\":47298:47305  tokenId */\n      dup3\n        /* \"MY MainNFT/My_NFT.sol\":47283:47297  super.tokenURI */\n      tag_203\n        /* \"MY MainNFT/My_NFT.sol\":47283:47306  super.tokenURI(tokenId) */\n      jump\t// in\n        /* \"MY MainNFT/My_NFT.sol\":46539:46839  function safeMint(address to, string memory tokenURI) public onlyOwner returns(uint256 tokenId) {... */\n    tag_97:\n        /* \"MY MainNFT/My_NFT.sol\":43745:43751  _owner */\n      sload(0x0b)\n        /* \"MY MainNFT/My_NFT.sol\":46618:46633  uint256 tokenId */\n      0x00\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"MY MainNFT/My_NFT.sol\":43745:43751  _owner */\n      and\n        /* \"MY MainNFT/My_NFT.sol\":16135:16145  msg.sender */\n      caller\n        /* \"MY MainNFT/My_NFT.sol\":43892:43915  owner() == _msgSender() */\n      eq\n        /* \"MY MainNFT/My_NFT.sol\":43884:43952  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_207\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_121\n      swap1\n      tag_177\n      jump\t// in\n    tag_207:\n        /* \"MY MainNFT/My_NFT.sol\":46646:46673  _tokenIdCounter.increment() */\n      tag_210\n        /* \"MY MainNFT/My_NFT.sol\":46646:46661  _tokenIdCounter */\n      0x0c\n        /* \"MY MainNFT/My_NFT.sol\":45911:45930  counter._value += 1 */\n      dup1\n      sload\n        /* \"MY MainNFT/My_NFT.sol\":45929:45930  1 */\n      0x01\n        /* \"MY MainNFT/My_NFT.sol\":45911:45930  counter._value += 1 */\n      add\n      swap1\n      sstore\n        /* \"MY MainNFT/My_NFT.sol\":45822:45949  function increment(Counter storage counter) internal {... */\n      jump\n        /* \"MY MainNFT/My_NFT.sol\":46646:46673  _tokenIdCounter.increment() */\n    tag_210:\n        /* \"MY MainNFT/My_NFT.sol\":46684:46700  uint256 _current */\n      0x00\n        /* \"MY MainNFT/My_NFT.sol\":46703:46728  _tokenIdCounter.current() */\n      tag_212\n        /* \"MY MainNFT/My_NFT.sol\":46703:46718  _tokenIdCounter */\n      0x0c\n        /* \"MY MainNFT/My_NFT.sol\":45792:45806  counter._value */\n      sload\n      swap1\n        /* \"MY MainNFT/My_NFT.sol\":45700:45814  function current(Counter storage counter) internal view returns (uint256) {... */\n      jump\n        /* \"MY MainNFT/My_NFT.sol\":46703:46728  _tokenIdCounter.current() */\n    tag_212:\n        /* \"MY MainNFT/My_NFT.sol\":46684:46728  uint256 _current = _tokenIdCounter.current() */\n      swap1\n      pop\n        /* \"MY MainNFT/My_NFT.sol\":46739:46762  _safeMint(to, _current) */\n      tag_214\n        /* \"MY MainNFT/My_NFT.sol\":46749:46751  to */\n      dup5\n        /* \"MY MainNFT/My_NFT.sol\":46753:46761  _current */\n      dup3\n        /* \"MY MainNFT/My_NFT.sol\":46739:46748  _safeMint */\n      tag_215\n        /* \"MY MainNFT/My_NFT.sol\":46739:46762  _safeMint(to, _current) */\n      jump\t// in\n    tag_214:\n        /* \"MY MainNFT/My_NFT.sol\":46773:46805  _setTokenURI(_current, tokenURI) */\n      tag_216\n        /* \"MY MainNFT/My_NFT.sol\":46786:46794  _current */\n      dup2\n        /* \"MY MainNFT/My_NFT.sol\":46796:46804  tokenURI */\n      dup5\n        /* \"MY MainNFT/My_NFT.sol\":46773:46785  _setTokenURI */\n      tag_217\n        /* \"MY MainNFT/My_NFT.sol\":46773:46805  _setTokenURI(_current, tokenURI) */\n      jump\t// in\n    tag_216:\n        /* \"MY MainNFT/My_NFT.sol\":46823:46831  _current */\n      swap4\n        /* \"MY MainNFT/My_NFT.sol\":46539:46839  function safeMint(address to, string memory tokenURI) public onlyOwner returns(uint256 tokenId) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"MY MainNFT/My_NFT.sol\":44626:44870  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_106:\n        /* \"MY MainNFT/My_NFT.sol\":43745:43751  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x0b))\n        /* \"MY MainNFT/My_NFT.sol\":16135:16145  msg.sender */\n      caller\n        /* \"MY MainNFT/My_NFT.sol\":43892:43915  owner() == _msgSender() */\n      eq\n        /* \"MY MainNFT/My_NFT.sol\":43884:43952  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_222\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_121\n      swap1\n      tag_177\n      jump\t// in\n    tag_222:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"MY MainNFT/My_NFT.sol\":44715:44737  newOwner != address(0) */\n      dup2\n      and\n        /* \"MY MainNFT/My_NFT.sol\":44707:44780  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_225\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10207:10209   */\n      0x20\n        /* \"MY MainNFT/My_NFT.sol\":44707:44780  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10189:10210   */\n      mstore\n        /* \"#utility.yul\":10246:10248   */\n      0x26\n        /* \"#utility.yul\":10226:10244   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10219:10249   */\n      mstore\n        /* \"#utility.yul\":10285:10319   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":10265:10283   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10258:10320   */\n      mstore\n      shl(0xd0, 0x646472657373)\n        /* \"#utility.yul\":10336:10354   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":10329:10365   */\n      mstore\n        /* \"#utility.yul\":10382:10401   */\n      0x84\n      add\n        /* \"MY MainNFT/My_NFT.sol\":44707:44780  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_121\n        /* \"#utility.yul\":10005:10407   */\n      jump\n        /* \"MY MainNFT/My_NFT.sol\":44707:44780  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n    tag_225:\n        /* \"MY MainNFT/My_NFT.sol\":44817:44823  _owner */\n      sload(0x0b)\n        /* \"MY MainNFT/My_NFT.sol\":44796:44834  OwnershipTransferred(_owner, newOwner) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      dup1\n      dup5\n      and\n      swap3\n        /* \"MY MainNFT/My_NFT.sol\":44817:44823  _owner */\n      and\n      swap1\n        /* \"MY MainNFT/My_NFT.sol\":44796:44834  OwnershipTransferred(_owner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"MY MainNFT/My_NFT.sol\":44817:44823  _owner */\n      0x00\n      swap1\n        /* \"MY MainNFT/My_NFT.sol\":44796:44834  OwnershipTransferred(_owner, newOwner) */\n      log3\n        /* \"MY MainNFT/My_NFT.sol\":44845:44851  _owner */\n      0x0b\n        /* \"MY MainNFT/My_NFT.sol\":44845:44862  _owner = newOwner */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"MY MainNFT/My_NFT.sol\":44626:44870  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      jump\t// out\n        /* \"MY MainNFT/My_NFT.sol\":34516:34753  function supportsInterface(bytes4 interfaceId) public view virtual override(IERC165, ERC721) returns (bool) {... */\n    tag_109:\n        /* \"MY MainNFT/My_NFT.sol\":34618:34622  bool */\n      0x00\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"MY MainNFT/My_NFT.sol\":34642:34692  interfaceId == type(IERC721Enumerable).interfaceId */\n      dup3\n      and\n      shl(0xe0, 0x780e9d63)\n      eq\n      dup1\n        /* \"MY MainNFT/My_NFT.sol\":34642:34745  interfaceId == type(IERC721Enumerable).interfaceId... */\n      tag_108\n      jumpi\n      pop\n        /* \"MY MainNFT/My_NFT.sol\":34709:34745  super.supportsInterface(interfaceId) */\n      tag_108\n        /* \"MY MainNFT/My_NFT.sol\":34733:34744  interfaceId */\n      dup3\n        /* \"MY MainNFT/My_NFT.sol\":34709:34732  super.supportsInterface */\n      tag_231\n        /* \"MY MainNFT/My_NFT.sol\":34709:34745  super.supportsInterface(interfaceId) */\n      jump\t// in\n        /* \"MY MainNFT/My_NFT.sol\":26413:26540  function _exists(uint256 tokenId) internal view virtual returns (bool) {... */\n    tag_119:\n        /* \"MY MainNFT/My_NFT.sol\":26478:26482  bool */\n      0x00\n        /* \"MY MainNFT/My_NFT.sol\":26502:26518  _owners[tokenId] */\n      swap1\n      dup2\n      mstore\n        /* \"MY MainNFT/My_NFT.sol\":26502:26509  _owners */\n      0x02\n        /* \"MY MainNFT/My_NFT.sol\":26502:26518  _owners[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"MY MainNFT/My_NFT.sol\":26502:26532  _owners[tokenId] != address(0) */\n      iszero\n      iszero\n      swap1\n        /* \"MY MainNFT/My_NFT.sol\":26413:26540  function _exists(uint256 tokenId) internal view virtual returns (bool) {... */\n      jump\t// out\n        /* \"MY MainNFT/My_NFT.sol\":30290:30464  function _approve(address to, uint256 tokenId) internal virtual {... */\n    tag_137:\n        /* \"MY MainNFT/My_NFT.sol\":30365:30389  _tokenApprovals[tokenId] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"MY MainNFT/My_NFT.sol\":30365:30380  _tokenApprovals */\n      0x04\n        /* \"MY MainNFT/My_NFT.sol\":30365:30389  _tokenApprovals[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"MY MainNFT/My_NFT.sol\":30365:30394  _tokenApprovals[tokenId] = to */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup5\n      and\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"MY MainNFT/My_NFT.sol\":30365:30389  _tokenApprovals[tokenId] */\n      dup2\n      swap1\n        /* \"MY MainNFT/My_NFT.sol\":30419:30442  ERC721.ownerOf(tokenId) */\n      tag_235\n        /* \"MY MainNFT/My_NFT.sol\":30365:30389  _tokenApprovals[tokenId] */\n      dup3\n        /* \"MY MainNFT/My_NFT.sol\":30419:30433  ERC721.ownerOf */\n      tag_67\n        /* \"MY MainNFT/My_NFT.sol\":30419:30442  ERC721.ownerOf(tokenId) */\n      jump\t// in\n    tag_235:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"MY MainNFT/My_NFT.sol\":30410:30456  Approval(ERC721.ownerOf(tokenId), to, tokenId) */\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"MY MainNFT/My_NFT.sol\":30290:30464  function _approve(address to, uint256 tokenId) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"MY MainNFT/My_NFT.sol\":26707:27055  function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {... */\n    tag_142:\n        /* \"MY MainNFT/My_NFT.sol\":26800:26804  bool */\n      0x00\n        /* \"MY MainNFT/My_NFT.sol\":26825:26841  _exists(tokenId) */\n      tag_237\n        /* \"MY MainNFT/My_NFT.sol\":26833:26840  tokenId */\n      dup3\n        /* \"MY MainNFT/My_NFT.sol\":26825:26832  _exists */\n      tag_119\n        /* \"MY MainNFT/My_NFT.sol\":26825:26841  _exists(tokenId) */\n      jump\t// in\n    tag_237:\n        /* \"MY MainNFT/My_NFT.sol\":26817:26890  require(_exists(tokenId), \"ERC721: operator query for nonexistent token\") */\n      tag_238\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10614:10616   */\n      0x20\n        /* \"MY MainNFT/My_NFT.sol\":26817:26890  require(_exists(tokenId), \"ERC721: operator query for nonexistent token\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10596:10617   */\n      mstore\n        /* \"#utility.yul\":10653:10655   */\n      0x2c\n        /* \"#utility.yul\":10633:10651   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10626:10656   */\n      mstore\n        /* \"#utility.yul\":10692:10726   */\n      0x4552433732313a206f70657261746f7220717565727920666f72206e6f6e6578\n        /* \"#utility.yul\":10672:10690   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10665:10727   */\n      mstore\n      shl(0xa1, 0x34b9ba32b73a103a37b5b2b7)\n        /* \"#utility.yul\":10743:10761   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":10736:10778   */\n      mstore\n        /* \"#utility.yul\":10795:10814   */\n      0x84\n      add\n        /* \"MY MainNFT/My_NFT.sol\":26817:26890  require(_exists(tokenId), \"ERC721: operator query for nonexistent token\") */\n      tag_121\n        /* \"#utility.yul\":10412:10820   */\n      jump\n        /* \"MY MainNFT/My_NFT.sol\":26817:26890  require(_exists(tokenId), \"ERC721: operator query for nonexistent token\") */\n    tag_238:\n        /* \"MY MainNFT/My_NFT.sol\":26901:26914  address owner */\n      0x00\n        /* \"MY MainNFT/My_NFT.sol\":26917:26940  ERC721.ownerOf(tokenId) */\n      tag_241\n        /* \"MY MainNFT/My_NFT.sol\":26932:26939  tokenId */\n      dup4\n        /* \"MY MainNFT/My_NFT.sol\":26917:26931  ERC721.ownerOf */\n      tag_67\n        /* \"MY MainNFT/My_NFT.sol\":26917:26940  ERC721.ownerOf(tokenId) */\n      jump\t// in\n    tag_241:\n        /* \"MY MainNFT/My_NFT.sol\":26901:26940  address owner = ERC721.ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"MY MainNFT/My_NFT.sol\":26970:26975  owner */\n      dup1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"MY MainNFT/My_NFT.sol\":26959:26975  spender == owner */\n      and\n        /* \"MY MainNFT/My_NFT.sol\":26959:26966  spender */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"MY MainNFT/My_NFT.sol\":26959:26975  spender == owner */\n      and\n      eq\n        /* \"MY MainNFT/My_NFT.sol\":26959:27010  spender == owner || getApproved(tokenId) == spender */\n      dup1\n      tag_242\n      jumpi\n      pop\n        /* \"MY MainNFT/My_NFT.sol\":27003:27010  spender */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"MY MainNFT/My_NFT.sol\":26979:27010  getApproved(tokenId) == spender */\n      and\n        /* \"MY MainNFT/My_NFT.sol\":26979:26999  getApproved(tokenId) */\n      tag_243\n        /* \"MY MainNFT/My_NFT.sol\":26991:26998  tokenId */\n      dup5\n        /* \"MY MainNFT/My_NFT.sol\":26979:26990  getApproved */\n      tag_39\n        /* \"MY MainNFT/My_NFT.sol\":26979:26999  getApproved(tokenId) */\n      jump\t// in\n    tag_243:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"MY MainNFT/My_NFT.sol\":26979:27010  getApproved(tokenId) == spender */\n      and\n      eq\n        /* \"MY MainNFT/My_NFT.sol\":26959:27010  spender == owner || getApproved(tokenId) == spender */\n    tag_242:\n        /* \"MY MainNFT/My_NFT.sol\":26959:27046  spender == owner || getApproved(tokenId) == spender || isApprovedForAll(owner, spender) */\n      dup1\n      tag_245\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"MY MainNFT/My_NFT.sol\":23953:23978  _operatorApprovals[owner] */\n      dup1\n      dup3\n      and\n        /* \"MY MainNFT/My_NFT.sol\":23929:23933  bool */\n      0x00\n        /* \"MY MainNFT/My_NFT.sol\":23953:23978  _operatorApprovals[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"MY MainNFT/My_NFT.sol\":23953:23971  _operatorApprovals */\n      0x05\n        /* \"MY MainNFT/My_NFT.sol\":23953:23978  _operatorApprovals[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"MY MainNFT/My_NFT.sol\":23953:23988  _operatorApprovals[owner][operator] */\n      swap4\n      dup9\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n      sload\n      0xff\n      and\n        /* \"MY MainNFT/My_NFT.sol\":27014:27046  isApprovedForAll(owner, spender) */\n    tag_245:\n        /* \"MY MainNFT/My_NFT.sol\":26951:27047  return (spender == owner || getApproved(tokenId) == spender || isApprovedForAll(owner, spender)) */\n      swap5\n        /* \"MY MainNFT/My_NFT.sol\":26707:27055  function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"MY MainNFT/My_NFT.sol\":29628:30172  function _transfer(address from, address to, uint256 tokenId) internal virtual {... */\n    tag_147:\n        /* \"MY MainNFT/My_NFT.sol\":29753:29757  from */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"MY MainNFT/My_NFT.sol\":29726:29757  ERC721.ownerOf(tokenId) == from */\n      and\n        /* \"MY MainNFT/My_NFT.sol\":29726:29749  ERC721.ownerOf(tokenId) */\n      tag_247\n        /* \"MY MainNFT/My_NFT.sol\":29741:29748  tokenId */\n      dup3\n        /* \"MY MainNFT/My_NFT.sol\":29726:29740  ERC721.ownerOf */\n      tag_67\n        /* \"MY MainNFT/My_NFT.sol\":29726:29749  ERC721.ownerOf(tokenId) */\n      jump\t// in\n    tag_247:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"MY MainNFT/My_NFT.sol\":29726:29757  ERC721.ownerOf(tokenId) == from */\n      and\n      eq\n        /* \"MY MainNFT/My_NFT.sol\":29718:29803  require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer of token that is not own\") */\n      tag_248\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":11027:11029   */\n      0x20\n        /* \"MY MainNFT/My_NFT.sol\":29718:29803  require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer of token that is not own\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11009:11030   */\n      mstore\n        /* \"#utility.yul\":11066:11068   */\n      0x29\n        /* \"#utility.yul\":11046:11064   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11039:11069   */\n      mstore\n        /* \"#utility.yul\":11105:11139   */\n      0x4552433732313a207472616e73666572206f6620746f6b656e20746861742069\n        /* \"#utility.yul\":11085:11103   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11078:11140   */\n      mstore\n      shl(0xb9, 0x39903737ba1037bbb7)\n        /* \"#utility.yul\":11156:11174   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":11149:11188   */\n      mstore\n        /* \"#utility.yul\":11205:11224   */\n      0x84\n      add\n        /* \"MY MainNFT/My_NFT.sol\":29718:29803  require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer of token that is not own\") */\n      tag_121\n        /* \"#utility.yul\":10825:11230   */\n      jump\n        /* \"MY MainNFT/My_NFT.sol\":29718:29803  require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer of token that is not own\") */\n    tag_248:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"MY MainNFT/My_NFT.sol\":29822:29838  to != address(0) */\n      dup3\n      and\n        /* \"MY MainNFT/My_NFT.sol\":29814:29879  require(to != address(0), \"ERC721: transfer to the zero address\") */\n      tag_251\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":11437:11439   */\n      0x20\n        /* \"MY MainNFT/My_NFT.sol\":29814:29879  require(to != address(0), \"ERC721: transfer to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11419:11440   */\n      mstore\n        /* \"#utility.yul\":11476:11478   */\n      0x24\n        /* \"#utility.yul\":11456:11474   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":11449:11479   */\n      mstore\n        /* \"#utility.yul\":11515:11549   */\n      0x4552433732313a207472616e7366657220746f20746865207a65726f20616464\n        /* \"#utility.yul\":11495:11513   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11488:11550   */\n      mstore\n      shl(0xe0, 0x72657373)\n        /* \"#utility.yul\":11566:11584   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":11559:11593   */\n      mstore\n        /* \"#utility.yul\":11610:11629   */\n      0x84\n      add\n        /* \"MY MainNFT/My_NFT.sol\":29814:29879  require(to != address(0), \"ERC721: transfer to the zero address\") */\n      tag_121\n        /* \"#utility.yul\":11235:11635   */\n      jump\n        /* \"MY MainNFT/My_NFT.sol\":29814:29879  require(to != address(0), \"ERC721: transfer to the zero address\") */\n    tag_251:\n        /* \"MY MainNFT/My_NFT.sol\":29892:29931  _beforeTokenTransfer(from, to, tokenId) */\n      tag_254\n        /* \"MY MainNFT/My_NFT.sol\":29913:29917  from */\n      dup4\n        /* \"MY MainNFT/My_NFT.sol\":29919:29921  to */\n      dup4\n        /* \"MY MainNFT/My_NFT.sol\":29923:29930  tokenId */\n      dup4\n        /* \"MY MainNFT/My_NFT.sol\":29892:29912  _beforeTokenTransfer */\n      tag_255\n        /* \"MY MainNFT/My_NFT.sol\":29892:29931  _beforeTokenTransfer(from, to, tokenId) */\n      jump\t// in\n    tag_254:\n        /* \"MY MainNFT/My_NFT.sol\":29996:30025  _approve(address(0), tokenId) */\n      tag_256\n        /* \"MY MainNFT/My_NFT.sol\":30013:30014  0 */\n      0x00\n        /* \"MY MainNFT/My_NFT.sol\":30017:30024  tokenId */\n      dup3\n        /* \"MY MainNFT/My_NFT.sol\":29996:30004  _approve */\n      tag_137\n        /* \"MY MainNFT/My_NFT.sol\":29996:30025  _approve(address(0), tokenId) */\n      jump\t// in\n    tag_256:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"MY MainNFT/My_NFT.sol\":30038:30053  _balances[from] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"MY MainNFT/My_NFT.sol\":30038:30047  _balances */\n      0x03\n        /* \"MY MainNFT/My_NFT.sol\":30038:30053  _balances[from] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"MY MainNFT/My_NFT.sol\":30038:30058  _balances[from] -= 1 */\n      dup1\n      sload\n        /* \"MY MainNFT/My_NFT.sol\":30057:30058  1 */\n      0x01\n      swap3\n        /* \"MY MainNFT/My_NFT.sol\":30038:30053  _balances[from] */\n      swap1\n        /* \"MY MainNFT/My_NFT.sol\":30038:30058  _balances[from] -= 1 */\n      tag_257\n      swap1\n        /* \"MY MainNFT/My_NFT.sol\":30057:30058  1 */\n      dup5\n      swap1\n        /* \"MY MainNFT/My_NFT.sol\":30038:30058  _balances[from] -= 1 */\n      tag_258\n      jump\t// in\n    tag_257:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"MY MainNFT/My_NFT.sol\":30069:30082  _balances[to] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"MY MainNFT/My_NFT.sol\":30069:30078  _balances */\n      0x03\n        /* \"MY MainNFT/My_NFT.sol\":30069:30082  _balances[to] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"MY MainNFT/My_NFT.sol\":30069:30087  _balances[to] += 1 */\n      dup1\n      sload\n        /* \"MY MainNFT/My_NFT.sol\":30086:30087  1 */\n      0x01\n      swap3\n        /* \"MY MainNFT/My_NFT.sol\":30069:30082  _balances[to] */\n      swap1\n        /* \"MY MainNFT/My_NFT.sol\":30069:30087  _balances[to] += 1 */\n      tag_259\n      swap1\n        /* \"MY MainNFT/My_NFT.sol\":30086:30087  1 */\n      dup5\n      swap1\n        /* \"MY MainNFT/My_NFT.sol\":30069:30087  _balances[to] += 1 */\n      tag_260\n      jump\t// in\n    tag_259:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"MY MainNFT/My_NFT.sol\":30098:30114  _owners[tokenId] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"MY MainNFT/My_NFT.sol\":30098:30105  _owners */\n      0x02\n        /* \"MY MainNFT/My_NFT.sol\":30098:30114  _owners[tokenId] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"MY MainNFT/My_NFT.sol\":30098:30119  _owners[tokenId] = to */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup7\n      dup2\n      and\n      swap2\n      dup3\n      or\n      swap1\n      swap3\n      sstore\n        /* \"MY MainNFT/My_NFT.sol\":30137:30164  Transfer(from, to, tokenId) */\n      swap2\n      mload\n        /* \"MY MainNFT/My_NFT.sol\":30098:30114  _owners[tokenId] */\n      dup5\n      swap4\n        /* \"MY MainNFT/My_NFT.sol\":30137:30164  Transfer(from, to, tokenId) */\n      swap2\n      dup8\n      and\n      swap2\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap2\n      log4\n        /* \"MY MainNFT/My_NFT.sol\":29628:30172  function _transfer(address from, address to, uint256 tokenId) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"MY MainNFT/My_NFT.sol\":25828:26100  function _safeTransfer(address from, address to, uint256 tokenId, bytes memory _data) internal virtual {... */\n    tag_200:\n        /* \"MY MainNFT/My_NFT.sol\":25942:25970  _transfer(from, to, tokenId) */\n      tag_262\n        /* \"MY MainNFT/My_NFT.sol\":25952:25956  from */\n      dup5\n        /* \"MY MainNFT/My_NFT.sol\":25958:25960  to */\n      dup5\n        /* \"MY MainNFT/My_NFT.sol\":25962:25969  tokenId */\n      dup5\n        /* \"MY MainNFT/My_NFT.sol\":25942:25951  _transfer */\n      tag_147\n        /* \"MY MainNFT/My_NFT.sol\":25942:25970  _transfer(from, to, tokenId) */\n      jump\t// in\n    tag_262:\n        /* \"MY MainNFT/My_NFT.sol\":25989:26037  _checkOnERC721Received(from, to, tokenId, _data) */\n      tag_263\n        /* \"MY MainNFT/My_NFT.sol\":26012:26016  from */\n      dup5\n        /* \"MY MainNFT/My_NFT.sol\":26018:26020  to */\n      dup5\n        /* \"MY MainNFT/My_NFT.sol\":26022:26029  tokenId */\n      dup5\n        /* \"MY MainNFT/My_NFT.sol\":26031:26036  _data */\n      dup5\n        /* \"MY MainNFT/My_NFT.sol\":25989:26011  _checkOnERC721Received */\n      tag_264\n        /* \"MY MainNFT/My_NFT.sol\":25989:26037  _checkOnERC721Received(from, to, tokenId, _data) */\n      jump\t// in\n    tag_263:\n        /* \"MY MainNFT/My_NFT.sol\":25981:26092  require(_checkOnERC721Received(from, to, tokenId, _data), \"ERC721: transfer to non ERC721Receiver implementer\") */\n      tag_199\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_121\n      swap1\n      tag_267\n      jump\t// in\n        /* \"MY MainNFT/My_NFT.sol\":41078:41757  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_203:\n        /* \"MY MainNFT/My_NFT.sol\":41151:41164  string memory */\n      0x60\n        /* \"MY MainNFT/My_NFT.sol\":41185:41201  _exists(tokenId) */\n      tag_269\n        /* \"MY MainNFT/My_NFT.sol\":41193:41200  tokenId */\n      dup3\n        /* \"MY MainNFT/My_NFT.sol\":41185:41192  _exists */\n      tag_119\n        /* \"MY MainNFT/My_NFT.sol\":41185:41201  _exists(tokenId) */\n      jump\t// in\n    tag_269:\n        /* \"MY MainNFT/My_NFT.sol\":41177:41255  require(_exists(tokenId), \"ERC721URIStorage: URI query for nonexistent token\") */\n      tag_270\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12656:12658   */\n      0x20\n        /* \"MY MainNFT/My_NFT.sol\":41177:41255  require(_exists(tokenId), \"ERC721URIStorage: URI query for nonexistent token\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12638:12659   */\n      mstore\n        /* \"#utility.yul\":12695:12697   */\n      0x31\n        /* \"#utility.yul\":12675:12693   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12668:12698   */\n      mstore\n        /* \"#utility.yul\":12734:12768   */\n      0x45524337323155524953746f726167653a2055524920717565727920666f7220\n        /* \"#utility.yul\":12714:12732   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12707:12769   */\n      mstore\n      shl(0x79, 0x3737b732bc34b9ba32b73a103a37b5b2b7)\n        /* \"#utility.yul\":12785:12803   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":12778:12825   */\n      mstore\n        /* \"#utility.yul\":12842:12861   */\n      0x84\n      add\n        /* \"MY MainNFT/My_NFT.sol\":41177:41255  require(_exists(tokenId), \"ERC721URIStorage: URI query for nonexistent token\") */\n      tag_121\n        /* \"#utility.yul\":12454:12867   */\n      jump\n        /* \"MY MainNFT/My_NFT.sol\":41177:41255  require(_exists(tokenId), \"ERC721URIStorage: URI query for nonexistent token\") */\n    tag_270:\n        /* \"MY MainNFT/My_NFT.sol\":41268:41291  string memory _tokenURI */\n      0x00\n        /* \"MY MainNFT/My_NFT.sol\":41294:41313  _tokenURIs[tokenId] */\n      dup3\n      dup2\n      mstore\n        /* \"MY MainNFT/My_NFT.sol\":41294:41304  _tokenURIs */\n      0x0a\n        /* \"MY MainNFT/My_NFT.sol\":41294:41313  _tokenURIs[tokenId] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"MY MainNFT/My_NFT.sol\":41268:41313  string memory _tokenURI = _tokenURIs[tokenId] */\n      dup1\n      sload\n      tag_273\n      swap1\n      tag_112\n      jump\t// in\n    tag_273:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_274\n      swap1\n      tag_112\n      jump\t// in\n    tag_274:\n      dup1\n      iszero\n      tag_275\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_276\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_275)\n    tag_276:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_277:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_277\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_275:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"MY MainNFT/My_NFT.sol\":41324:41342  string memory base */\n      0x00\n        /* \"MY MainNFT/My_NFT.sol\":41345:41355  _baseURI() */\n      tag_278\n        /* \"MY MainNFT/My_NFT.sol\":22631:22640  return \"\" */\n      0x40\n      dup1\n      mload\n      0x20\n      dup2\n      add\n      swap1\n      swap2\n      mstore\n      0x00\n      dup2\n      mstore\n      swap1\n        /* \"MY MainNFT/My_NFT.sol\":22554:22648  function _baseURI() internal view virtual returns (string memory) {... */\n      jump\n        /* \"MY MainNFT/My_NFT.sol\":41345:41355  _baseURI() */\n    tag_278:\n        /* \"MY MainNFT/My_NFT.sol\":41324:41355  string memory base = _baseURI() */\n      swap1\n      pop\n        /* \"MY MainNFT/My_NFT.sol\":41437:41441  base */\n      dup1\n        /* \"MY MainNFT/My_NFT.sol\":41431:41449  bytes(base).length */\n      mload\n        /* \"MY MainNFT/My_NFT.sol\":41453:41454  0 */\n      0x00\n        /* \"MY MainNFT/My_NFT.sol\":41431:41454  bytes(base).length == 0 */\n      sub\n        /* \"MY MainNFT/My_NFT.sol\":41427:41499  if (bytes(base).length == 0) {... */\n      tag_280\n      jumpi\n      pop\n        /* \"MY MainNFT/My_NFT.sol\":41478:41487  _tokenURI */\n      swap3\n        /* \"MY MainNFT/My_NFT.sol\":41078:41757  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"MY MainNFT/My_NFT.sol\":41427:41499  if (bytes(base).length == 0) {... */\n    tag_280:\n        /* \"MY MainNFT/My_NFT.sol\":41603:41626  bytes(_tokenURI).length */\n      dup2\n      mload\n        /* \"MY MainNFT/My_NFT.sol\":41603:41630  bytes(_tokenURI).length > 0 */\n      iszero\n        /* \"MY MainNFT/My_NFT.sol\":41599:41707  if (bytes(_tokenURI).length > 0) {... */\n      tag_281\n      jumpi\n        /* \"MY MainNFT/My_NFT.sol\":41678:41682  base */\n      dup1\n        /* \"MY MainNFT/My_NFT.sol\":41684:41693  _tokenURI */\n      dup3\n        /* \"MY MainNFT/My_NFT.sol\":41661:41694  abi.encodePacked(base, _tokenURI) */\n      add(0x20, mload(0x40))\n      tag_282\n      swap3\n      swap2\n      swap1\n      tag_283\n      jump\t// in\n    tag_282:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"MY MainNFT/My_NFT.sol\":41647:41695  return string(abi.encodePacked(base, _tokenURI)) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"MY MainNFT/My_NFT.sol\":41078:41757  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"MY MainNFT/My_NFT.sol\":41599:41707  if (bytes(_tokenURI).length > 0) {... */\n    tag_281:\n        /* \"MY MainNFT/My_NFT.sol\":41726:41749  super.tokenURI(tokenId) */\n      tag_245\n        /* \"MY MainNFT/My_NFT.sol\":41741:41748  tokenId */\n      dup5\n        /* \"MY MainNFT/My_NFT.sol\":41726:41740  super.tokenURI */\n      tag_285\n        /* \"MY MainNFT/My_NFT.sol\":41726:41749  super.tokenURI(tokenId) */\n      jump\t// in\n        /* \"MY MainNFT/My_NFT.sol\":27397:27507  function _safeMint(address to, uint256 tokenId) internal virtual {... */\n    tag_215:\n        /* \"MY MainNFT/My_NFT.sol\":27473:27499  _safeMint(to, tokenId, \"\") */\n      tag_289\n        /* \"MY MainNFT/My_NFT.sol\":27483:27485  to */\n      dup3\n        /* \"MY MainNFT/My_NFT.sol\":27487:27494  tokenId */\n      dup3\n        /* \"MY MainNFT/My_NFT.sol\":27473:27499  _safeMint(to, tokenId, \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"MY MainNFT/My_NFT.sol\":27473:27482  _safeMint */\n      tag_290\n        /* \"MY MainNFT/My_NFT.sol\":27473:27499  _safeMint(to, tokenId, \"\") */\n      jump\t// in\n    tag_289:\n        /* \"MY MainNFT/My_NFT.sol\":27397:27507  function _safeMint(address to, uint256 tokenId) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"MY MainNFT/My_NFT.sol\":41913:42130  function _setTokenURI(uint256 tokenId, string memory _tokenURI) internal virtual {... */\n    tag_217:\n        /* \"MY MainNFT/My_NFT.sol\":42013:42029  _exists(tokenId) */\n      tag_292\n        /* \"MY MainNFT/My_NFT.sol\":42021:42028  tokenId */\n      dup3\n        /* \"MY MainNFT/My_NFT.sol\":42013:42020  _exists */\n      tag_119\n        /* \"MY MainNFT/My_NFT.sol\":42013:42029  _exists(tokenId) */\n      jump\t// in\n    tag_292:\n        /* \"MY MainNFT/My_NFT.sol\":42005:42080  require(_exists(tokenId), \"ERC721URIStorage: URI set of nonexistent token\") */\n      tag_293\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":13575:13577   */\n      0x20\n        /* \"MY MainNFT/My_NFT.sol\":42005:42080  require(_exists(tokenId), \"ERC721URIStorage: URI set of nonexistent token\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13557:13578   */\n      mstore\n        /* \"#utility.yul\":13614:13616   */\n      0x2e\n        /* \"#utility.yul\":13594:13612   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13587:13617   */\n      mstore\n        /* \"#utility.yul\":13653:13687   */\n      0x45524337323155524953746f726167653a2055524920736574206f66206e6f6e\n        /* \"#utility.yul\":13633:13651   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13626:13688   */\n      mstore\n      shl(0x91, 0x32bc34b9ba32b73a103a37b5b2b7)\n        /* \"#utility.yul\":13704:13722   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":13697:13741   */\n      mstore\n        /* \"#utility.yul\":13758:13777   */\n      0x84\n      add\n        /* \"MY MainNFT/My_NFT.sol\":42005:42080  require(_exists(tokenId), \"ERC721URIStorage: URI set of nonexistent token\") */\n      tag_121\n        /* \"#utility.yul\":13373:13783   */\n      jump\n        /* \"MY MainNFT/My_NFT.sol\":42005:42080  require(_exists(tokenId), \"ERC721URIStorage: URI set of nonexistent token\") */\n    tag_293:\n        /* \"MY MainNFT/My_NFT.sol\":42091:42110  _tokenURIs[tokenId] */\n      0x00\n      dup3\n      dup2\n      mstore\n        /* \"MY MainNFT/My_NFT.sol\":42091:42101  _tokenURIs */\n      0x0a\n        /* \"MY MainNFT/My_NFT.sol\":42091:42110  _tokenURIs[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"MY MainNFT/My_NFT.sol\":42091:42122  _tokenURIs[tokenId] = _tokenURI */\n      tag_136\n        /* \"MY MainNFT/My_NFT.sol\":42113:42122  _tokenURI */\n      dup3\n        /* \"MY MainNFT/My_NFT.sol\":42091:42110  _tokenURIs[tokenId] */\n      dup3\n        /* \"MY MainNFT/My_NFT.sol\":42091:42122  _tokenURIs[tokenId] = _tokenURI */\n      tag_297\n      jump\t// in\n        /* \"MY MainNFT/My_NFT.sol\":20781:21073  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_231:\n        /* \"MY MainNFT/My_NFT.sol\":20883:20887  bool */\n      0x00\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"MY MainNFT/My_NFT.sol\":20907:20947  interfaceId == type(IERC721).interfaceId */\n      dup3\n      and\n      shl(0xe0, 0x80ac58cd)\n      eq\n      dup1\n        /* \"MY MainNFT/My_NFT.sol\":20907:21012  interfaceId == type(IERC721).interfaceId... */\n      tag_299\n      jumpi\n      pop\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"MY MainNFT/My_NFT.sol\":20964:21012  interfaceId == type(IERC721Metadata).interfaceId */\n      dup3\n      and\n      shl(0xe0, 0x5b5e139f)\n      eq\n        /* \"MY MainNFT/My_NFT.sol\":20907:21012  interfaceId == type(IERC721).interfaceId... */\n    tag_299:\n        /* \"MY MainNFT/My_NFT.sol\":20907:21065  interfaceId == type(IERC721).interfaceId... */\n      dup1\n      tag_108\n      jumpi\n      pop\n      shl(0xe0, 0x01ffc9a7)\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"MY MainNFT/My_NFT.sol\":19384:19424  interfaceId == type(IERC165).interfaceId */\n      dup4\n      and\n      eq\n        /* \"MY MainNFT/My_NFT.sol\":21029:21065  super.supportsInterface(interfaceId) */\n      tag_108\n        /* \"MY MainNFT/My_NFT.sol\":19275:19432  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      jump\n        /* \"MY MainNFT/My_NFT.sol\":46847:47028  function _beforeTokenTransfer(address from, address to, uint256 tokenId) internal override(ERC721, ERC721Enumerable) {... */\n    tag_255:\n        /* \"MY MainNFT/My_NFT.sol\":46975:47020  super._beforeTokenTransfer(from, to, tokenId) */\n      tag_136\n        /* \"MY MainNFT/My_NFT.sol\":47002:47006  from */\n      dup4\n        /* \"MY MainNFT/My_NFT.sol\":47008:47010  to */\n      dup4\n        /* \"MY MainNFT/My_NFT.sol\":47012:47019  tokenId */\n      dup4\n        /* \"MY MainNFT/My_NFT.sol\":46975:47001  super._beforeTokenTransfer */\n      tag_305\n        /* \"MY MainNFT/My_NFT.sol\":46975:47020  super._beforeTokenTransfer(from, to, tokenId) */\n      jump\t// in\n        /* \"MY MainNFT/My_NFT.sol\":31029:31872  function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory _data)... */\n    tag_264:\n        /* \"MY MainNFT/My_NFT.sol\":31150:31154  bool */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"MY MainNFT/My_NFT.sol\":31176:31189  to.isContract */\n      dup5\n      and\n        /* \"MY MainNFT/My_NFT.sol\":8533:8553  extcodesize(account) */\n      extcodesize\n        /* \"MY MainNFT/My_NFT.sol\":8572:8580  size > 0 */\n      iszero\n        /* \"MY MainNFT/My_NFT.sol\":31172:31865  if (to.isContract()) {... */\n      tag_309\n      jumpi\n        /* \"MY MainNFT/My_NFT.sol\":31212:31284  IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, _data) */\n      mload(0x40)\n      shl(0xe1, 0x0a85bd01)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"MY MainNFT/My_NFT.sol\":31212:31248  IERC721Receiver(to).onERC721Received */\n      dup6\n      and\n      swap1\n      0x150b7a02\n      swap1\n        /* \"MY MainNFT/My_NFT.sol\":31212:31284  IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, _data) */\n      tag_311\n      swap1\n        /* \"MY MainNFT/My_NFT.sol\":16135:16145  msg.sender */\n      caller\n      swap1\n        /* \"MY MainNFT/My_NFT.sol\":31263:31267  from */\n      dup10\n      swap1\n        /* \"MY MainNFT/My_NFT.sol\":31269:31276  tokenId */\n      dup9\n      swap1\n        /* \"MY MainNFT/My_NFT.sol\":31278:31283  _data */\n      dup9\n      swap1\n        /* \"MY MainNFT/My_NFT.sol\":31212:31284  IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, _data) */\n      0x04\n      add\n      tag_312\n      jump\t// in\n    tag_311:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_313\n      jumpi\n      pop\n      0x40\n      dup1\n      mload\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      tag_314\n      swap2\n      dup2\n      add\n      swap1\n      tag_315\n      jump\t// in\n    tag_314:\n      0x01\n    tag_313:\n        /* \"MY MainNFT/My_NFT.sol\":31208:31810  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, _data) returns (bytes4 retval) {... */\n      tag_316\n      jumpi\n      returndatasize\n      dup1\n      dup1\n      iszero\n      tag_321\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_320)\n    tag_321:\n      0x60\n      swap2\n      pop\n    tag_320:\n      pop\n        /* \"MY MainNFT/My_NFT.sol\":31458:31464  reason */\n      dup1\n        /* \"MY MainNFT/My_NFT.sol\":31458:31471  reason.length */\n      mload\n        /* \"MY MainNFT/My_NFT.sol\":31475:31476  0 */\n      0x00\n        /* \"MY MainNFT/My_NFT.sol\":31458:31476  reason.length == 0 */\n      sub\n        /* \"MY MainNFT/My_NFT.sol\":31454:31795  if (reason.length == 0) {... */\n      tag_322\n      jumpi\n        /* \"MY MainNFT/My_NFT.sol\":31501:31561  revert(\"ERC721: transfer to non ERC721Receiver implementer\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_121\n      swap1\n      tag_267\n      jump\t// in\n        /* \"MY MainNFT/My_NFT.sol\":31454:31795  if (reason.length == 0) {... */\n    tag_322:\n        /* \"MY MainNFT/My_NFT.sol\":31745:31751  reason */\n      dup1\n        /* \"MY MainNFT/My_NFT.sol\":31739:31752  mload(reason) */\n      mload\n        /* \"MY MainNFT/My_NFT.sol\":31730:31736  reason */\n      dup2\n        /* \"MY MainNFT/My_NFT.sol\":31726:31728  32 */\n      0x20\n        /* \"MY MainNFT/My_NFT.sol\":31722:31737  add(32, reason) */\n      add\n        /* \"MY MainNFT/My_NFT.sol\":31715:31753  revert(add(32, reason), mload(reason)) */\n      revert\n        /* \"MY MainNFT/My_NFT.sol\":31208:31810  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, _data) returns (bytes4 retval) {... */\n    tag_316:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"MY MainNFT/My_NFT.sol\":31335:31390  retval == IERC721Receiver(to).onERC721Received.selector */\n      and\n      shl(0xe1, 0x0a85bd01)\n      eq\n      swap1\n      pop\n        /* \"MY MainNFT/My_NFT.sol\":31328:31390  return retval == IERC721Receiver(to).onERC721Received.selector */\n      jump(tag_245)\n        /* \"MY MainNFT/My_NFT.sol\":31172:31865  if (to.isContract()) {... */\n    tag_309:\n      pop\n        /* \"MY MainNFT/My_NFT.sol\":31849:31853  true */\n      0x01\n        /* \"MY MainNFT/My_NFT.sol\":31029:31872  function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory _data)... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"MY MainNFT/My_NFT.sol\":22057:22417  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_285:\n        /* \"MY MainNFT/My_NFT.sol\":22130:22143  string memory */\n      0x60\n        /* \"MY MainNFT/My_NFT.sol\":22164:22180  _exists(tokenId) */\n      tag_329\n        /* \"MY MainNFT/My_NFT.sol\":22172:22179  tokenId */\n      dup3\n        /* \"MY MainNFT/My_NFT.sol\":22164:22171  _exists */\n      tag_119\n        /* \"MY MainNFT/My_NFT.sol\":22164:22180  _exists(tokenId) */\n      jump\t// in\n    tag_329:\n        /* \"MY MainNFT/My_NFT.sol\":22156:22232  require(_exists(tokenId), \"ERC721Metadata: URI query for nonexistent token\") */\n      tag_330\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":16942:16944   */\n      0x20\n        /* \"MY MainNFT/My_NFT.sol\":22156:22232  require(_exists(tokenId), \"ERC721Metadata: URI query for nonexistent token\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":16924:16945   */\n      mstore\n        /* \"#utility.yul\":16981:16983   */\n      0x2f\n        /* \"#utility.yul\":16961:16979   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":16954:16984   */\n      mstore\n        /* \"#utility.yul\":17020:17054   */\n      0x4552433732314d657461646174613a2055524920717565727920666f72206e6f\n        /* \"#utility.yul\":17000:17018   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":16993:17055   */\n      mstore\n      shl(0x89, 0x3732bc34b9ba32b73a103a37b5b2b7)\n        /* \"#utility.yul\":17071:17089   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":17064:17109   */\n      mstore\n        /* \"#utility.yul\":17126:17145   */\n      0x84\n      add\n        /* \"MY MainNFT/My_NFT.sol\":22156:22232  require(_exists(tokenId), \"ERC721Metadata: URI query for nonexistent token\") */\n      tag_121\n        /* \"#utility.yul\":16740:17151   */\n      jump\n        /* \"MY MainNFT/My_NFT.sol\":22156:22232  require(_exists(tokenId), \"ERC721Metadata: URI query for nonexistent token\") */\n    tag_330:\n        /* \"MY MainNFT/My_NFT.sol\":22245:22266  string memory baseURI */\n      0x00\n        /* \"MY MainNFT/My_NFT.sol\":22269:22279  _baseURI() */\n      tag_333\n        /* \"MY MainNFT/My_NFT.sol\":22631:22640  return \"\" */\n      0x40\n      dup1\n      mload\n      0x20\n      dup2\n      add\n      swap1\n      swap2\n      mstore\n      0x00\n      dup2\n      mstore\n      swap1\n        /* \"MY MainNFT/My_NFT.sol\":22554:22648  function _baseURI() internal view virtual returns (string memory) {... */\n      jump\n        /* \"MY MainNFT/My_NFT.sol\":22269:22279  _baseURI() */\n    tag_333:\n        /* \"MY MainNFT/My_NFT.sol\":22245:22279  string memory baseURI = _baseURI() */\n      swap1\n      pop\n        /* \"MY MainNFT/My_NFT.sol\":22321:22322  0 */\n      0x00\n        /* \"MY MainNFT/My_NFT.sol\":22303:22310  baseURI */\n      dup2\n        /* \"MY MainNFT/My_NFT.sol\":22297:22318  bytes(baseURI).length */\n      mload\n        /* \"MY MainNFT/My_NFT.sol\":22297:22322  bytes(baseURI).length > 0 */\n      gt\n        /* \"MY MainNFT/My_NFT.sol\":22297:22409  bytes(baseURI).length > 0... */\n      tag_334\n      jumpi\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      jump(tag_216)\n    tag_334:\n        /* \"MY MainNFT/My_NFT.sol\":22362:22369  baseURI */\n      dup1\n        /* \"MY MainNFT/My_NFT.sol\":22371:22389  tokenId.toString() */\n      tag_336\n        /* \"MY MainNFT/My_NFT.sol\":22371:22378  tokenId */\n      dup5\n        /* \"MY MainNFT/My_NFT.sol\":22371:22387  tokenId.toString */\n      tag_337\n        /* \"MY MainNFT/My_NFT.sol\":22371:22389  tokenId.toString() */\n      jump\t// in\n    tag_336:\n        /* \"MY MainNFT/My_NFT.sol\":22345:22390  abi.encodePacked(baseURI, tokenId.toString()) */\n      add(0x20, mload(0x40))\n      tag_338\n      swap3\n      swap2\n      swap1\n      tag_283\n      jump\t// in\n    tag_338:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"MY MainNFT/My_NFT.sol\":22290:22409  return bytes(baseURI).length > 0... */\n      swap4\n        /* \"MY MainNFT/My_NFT.sol\":22057:22417  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"MY MainNFT/My_NFT.sol\":27734:27984  function _safeMint(address to, uint256 tokenId, bytes memory _data) internal virtual {... */\n    tag_290:\n        /* \"MY MainNFT/My_NFT.sol\":27830:27848  _mint(to, tokenId) */\n      tag_340\n        /* \"MY MainNFT/My_NFT.sol\":27836:27838  to */\n      dup4\n        /* \"MY MainNFT/My_NFT.sol\":27840:27847  tokenId */\n      dup4\n        /* \"MY MainNFT/My_NFT.sol\":27830:27835  _mint */\n      tag_341\n        /* \"MY MainNFT/My_NFT.sol\":27830:27848  _mint(to, tokenId) */\n      jump\t// in\n    tag_340:\n        /* \"MY MainNFT/My_NFT.sol\":27867:27921  _checkOnERC721Received(address(0), to, tokenId, _data) */\n      tag_342\n        /* \"MY MainNFT/My_NFT.sol\":27898:27899  0 */\n      0x00\n        /* \"MY MainNFT/My_NFT.sol\":27902:27904  to */\n      dup5\n        /* \"MY MainNFT/My_NFT.sol\":27906:27913  tokenId */\n      dup5\n        /* \"MY MainNFT/My_NFT.sol\":27915:27920  _data */\n      dup5\n        /* \"MY MainNFT/My_NFT.sol\":27867:27889  _checkOnERC721Received */\n      tag_264\n        /* \"MY MainNFT/My_NFT.sol\":27867:27921  _checkOnERC721Received(address(0), to, tokenId, _data) */\n      jump\t// in\n    tag_342:\n        /* \"MY MainNFT/My_NFT.sol\":27859:27976  require(_checkOnERC721Received(address(0), to, tokenId, _data), \"ERC721: transfer to non ERC721Receiver implementer\") */\n      tag_136\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_121\n      swap1\n      tag_267\n      jump\t// in\n        /* \"MY MainNFT/My_NFT.sol\":36205:36760  function _beforeTokenTransfer(address from, address to, uint256 tokenId) internal virtual override {... */\n    tag_305:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"MY MainNFT/My_NFT.sol\":36377:36395  from == address(0) */\n      dup4\n      and\n        /* \"MY MainNFT/My_NFT.sol\":36373:36560  if (from == address(0)) {... */\n      tag_349\n      jumpi\n        /* \"MY MainNFT/My_NFT.sol\":36412:36452  _addTokenToAllTokensEnumeration(tokenId) */\n      tag_350\n        /* \"MY MainNFT/My_NFT.sol\":36444:36451  tokenId */\n      dup2\n        /* \"MY MainNFT/My_NFT.sol\":37587:37597  _allTokens */\n      0x08\n        /* \"MY MainNFT/My_NFT.sol\":37587:37604  _allTokens.length */\n      dup1\n      sload\n        /* \"MY MainNFT/My_NFT.sol\":37560:37584  _allTokensIndex[tokenId] */\n      0x00\n      dup4\n      dup2\n      mstore\n        /* \"MY MainNFT/My_NFT.sol\":37560:37575  _allTokensIndex */\n      0x09\n        /* \"MY MainNFT/My_NFT.sol\":37560:37584  _allTokensIndex[tokenId] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"MY MainNFT/My_NFT.sol\":37560:37604  _allTokensIndex[tokenId] = _allTokens.length */\n      dup3\n      swap1\n      sstore\n        /* \"MY MainNFT/My_NFT.sol\":37615:37639  _allTokens.push(tokenId) */\n      0x01\n      dup3\n      add\n      dup4\n      sstore\n      swap2\n      swap1\n      swap2\n      mstore\n      0xf3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee3\n      add\n      sstore\n        /* \"MY MainNFT/My_NFT.sol\":37483:37647  function _addTokenToAllTokensEnumeration(uint256 tokenId) private {... */\n      jump\n        /* \"MY MainNFT/My_NFT.sol\":36412:36452  _addTokenToAllTokensEnumeration(tokenId) */\n    tag_350:\n        /* \"MY MainNFT/My_NFT.sol\":36373:36560  if (from == address(0)) {... */\n      jump(tag_354)\n    tag_349:\n        /* \"MY MainNFT/My_NFT.sol\":36482:36484  to */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"MY MainNFT/My_NFT.sol\":36474:36484  from != to */\n      and\n        /* \"MY MainNFT/My_NFT.sol\":36474:36478  from */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"MY MainNFT/My_NFT.sol\":36474:36484  from != to */\n      and\n      eq\n        /* \"MY MainNFT/My_NFT.sol\":36470:36560  if (from != to) {... */\n      tag_354\n      jumpi\n        /* \"MY MainNFT/My_NFT.sol\":36501:36548  _removeTokenFromOwnerEnumeration(from, tokenId) */\n      tag_354\n        /* \"MY MainNFT/My_NFT.sol\":36534:36538  from */\n      dup4\n        /* \"MY MainNFT/My_NFT.sol\":36540:36547  tokenId */\n      dup3\n        /* \"MY MainNFT/My_NFT.sol\":36501:36533  _removeTokenFromOwnerEnumeration */\n      tag_355\n        /* \"MY MainNFT/My_NFT.sol\":36501:36548  _removeTokenFromOwnerEnumeration(from, tokenId) */\n      jump\t// in\n    tag_354:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"MY MainNFT/My_NFT.sol\":36574:36590  to == address(0) */\n      dup3\n      and\n        /* \"MY MainNFT/My_NFT.sol\":36570:36753  if (to == address(0)) {... */\n      tag_356\n      jumpi\n        /* \"MY MainNFT/My_NFT.sol\":36607:36652  _removeTokenFromAllTokensEnumeration(tokenId) */\n      tag_136\n        /* \"MY MainNFT/My_NFT.sol\":36644:36651  tokenId */\n      dup2\n        /* \"MY MainNFT/My_NFT.sol\":36607:36643  _removeTokenFromAllTokensEnumeration */\n      tag_358\n        /* \"MY MainNFT/My_NFT.sol\":36607:36652  _removeTokenFromAllTokensEnumeration(tokenId) */\n      jump\t// in\n        /* \"MY MainNFT/My_NFT.sol\":36570:36753  if (to == address(0)) {... */\n    tag_356:\n        /* \"MY MainNFT/My_NFT.sol\":36680:36684  from */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"MY MainNFT/My_NFT.sol\":36674:36684  to != from */\n      and\n        /* \"MY MainNFT/My_NFT.sol\":36674:36676  to */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"MY MainNFT/My_NFT.sol\":36674:36684  to != from */\n      and\n      eq\n        /* \"MY MainNFT/My_NFT.sol\":36670:36753  if (to != from) {... */\n      tag_136\n      jumpi\n        /* \"MY MainNFT/My_NFT.sol\":36701:36741  _addTokenToOwnerEnumeration(to, tokenId) */\n      tag_136\n        /* \"MY MainNFT/My_NFT.sol\":36729:36731  to */\n      dup3\n        /* \"MY MainNFT/My_NFT.sol\":36733:36740  tokenId */\n      dup3\n        /* \"MY MainNFT/My_NFT.sol\":36701:36728  _addTokenToOwnerEnumeration */\n      tag_362\n        /* \"MY MainNFT/My_NFT.sol\":36701:36741  _addTokenToOwnerEnumeration(to, tokenId) */\n      jump\t// in\n        /* \"MY MainNFT/My_NFT.sol\":16716:17439  function toString(uint256 value) internal pure returns (string memory) {... */\n    tag_337:\n        /* \"MY MainNFT/My_NFT.sol\":16772:16785  string memory */\n      0x60\n        /* \"MY MainNFT/My_NFT.sol\":16993:16998  value */\n      dup2\n        /* \"MY MainNFT/My_NFT.sol\":17002:17003  0 */\n      0x00\n        /* \"MY MainNFT/My_NFT.sol\":16993:17003  value == 0 */\n      sub\n        /* \"MY MainNFT/My_NFT.sol\":16989:17042  if (value == 0) {... */\n      tag_365\n      jumpi\n      pop\n      pop\n        /* \"MY MainNFT/My_NFT.sol\":17020:17030  return \"0\" */\n      0x40\n      dup1\n      mload\n      dup1\n      dup3\n      add\n      swap1\n      swap2\n      mstore\n      0x01\n      dup2\n      mstore\n      shl(0xfc, 0x03)\n      0x20\n      dup3\n      add\n      mstore\n      swap1\n        /* \"MY MainNFT/My_NFT.sol\":16716:17439  function toString(uint256 value) internal pure returns (string memory) {... */\n      jump\t// out\n        /* \"MY MainNFT/My_NFT.sol\":16989:17042  if (value == 0) {... */\n    tag_365:\n        /* \"MY MainNFT/My_NFT.sol\":17067:17072  value */\n      dup2\n        /* \"MY MainNFT/My_NFT.sol\":17052:17064  uint256 temp */\n      0x00\n        /* \"MY MainNFT/My_NFT.sol\":17108:17186  while (temp != 0) {... */\n    tag_366:\n        /* \"MY MainNFT/My_NFT.sol\":17115:17124  temp != 0 */\n      dup2\n      iszero\n        /* \"MY MainNFT/My_NFT.sol\":17108:17186  while (temp != 0) {... */\n      tag_367\n      jumpi\n        /* \"MY MainNFT/My_NFT.sol\":17141:17149  digits++ */\n      dup1\n      tag_368\n      dup2\n      tag_369\n      jump\t// in\n    tag_368:\n      swap2\n      pop\n        /* \"MY MainNFT/My_NFT.sol\":17164:17174  temp /= 10 */\n      tag_370\n      swap1\n      pop\n        /* \"MY MainNFT/My_NFT.sol\":17172:17174  10 */\n      0x0a\n        /* \"MY MainNFT/My_NFT.sol\":17164:17174  temp /= 10 */\n      dup4\n      tag_371\n      jump\t// in\n    tag_370:\n      swap2\n      pop\n        /* \"MY MainNFT/My_NFT.sol\":17108:17186  while (temp != 0) {... */\n      jump(tag_366)\n    tag_367:\n        /* \"MY MainNFT/My_NFT.sol\":17196:17215  bytes memory buffer */\n      0x00\n        /* \"MY MainNFT/My_NFT.sol\":17228:17234  digits */\n      dup2\n        /* \"MY MainNFT/My_NFT.sol\":17218:17235  new bytes(digits) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_373\n      jumpi\n      tag_373\n      tag_374\n      jump\t// in\n    tag_373:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_375\n      jumpi\n      0x20\n      dup3\n      add\n      dup2\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_375:\n      pop\n        /* \"MY MainNFT/My_NFT.sol\":17196:17235  bytes memory buffer = new bytes(digits) */\n      swap1\n      pop\n        /* \"MY MainNFT/My_NFT.sol\":17246:17400  while (value != 0) {... */\n    tag_376:\n        /* \"MY MainNFT/My_NFT.sol\":17253:17263  value != 0 */\n      dup5\n      iszero\n        /* \"MY MainNFT/My_NFT.sol\":17246:17400  while (value != 0) {... */\n      tag_245\n      jumpi\n        /* \"MY MainNFT/My_NFT.sol\":17280:17291  digits -= 1 */\n      tag_378\n        /* \"MY MainNFT/My_NFT.sol\":17290:17291  1 */\n      0x01\n        /* \"MY MainNFT/My_NFT.sol\":17280:17291  digits -= 1 */\n      dup4\n      tag_258\n      jump\t// in\n    tag_378:\n      swap2\n      pop\n        /* \"MY MainNFT/My_NFT.sol\":17349:17359  value % 10 */\n      tag_379\n        /* \"MY MainNFT/My_NFT.sol\":17357:17359  10 */\n      0x0a\n        /* \"MY MainNFT/My_NFT.sol\":17349:17354  value */\n      dup7\n        /* \"MY MainNFT/My_NFT.sol\":17349:17359  value % 10 */\n      tag_380\n      jump\t// in\n    tag_379:\n        /* \"MY MainNFT/My_NFT.sol\":17336:17360  48 + uint256(value % 10) */\n      tag_381\n      swap1\n        /* \"MY MainNFT/My_NFT.sol\":17336:17338  48 */\n      0x30\n        /* \"MY MainNFT/My_NFT.sol\":17336:17360  48 + uint256(value % 10) */\n      tag_260\n      jump\t// in\n    tag_381:\n        /* \"MY MainNFT/My_NFT.sol\":17323:17362  bytes1(uint8(48 + uint256(value % 10))) */\n      0xf8\n      shl\n        /* \"MY MainNFT/My_NFT.sol\":17306:17312  buffer */\n      dup2\n        /* \"MY MainNFT/My_NFT.sol\":17313:17319  digits */\n      dup4\n        /* \"MY MainNFT/My_NFT.sol\":17306:17320  buffer[digits] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_383\n      jumpi\n      tag_383\n      tag_162\n      jump\t// in\n    tag_383:\n      0x20\n      add\n      add\n        /* \"MY MainNFT/My_NFT.sol\":17306:17362  buffer[digits] = bytes1(uint8(48 + uint256(value % 10))) */\n      swap1\n      not(sub(shl(0xf8, 0x01), 0x01))\n      and\n      swap1\n      dup2\n      0x00\n      byte\n      swap1\n      mstore8\n      pop\n        /* \"MY MainNFT/My_NFT.sol\":17377:17388  value /= 10 */\n      tag_384\n        /* \"MY MainNFT/My_NFT.sol\":17386:17388  10 */\n      0x0a\n        /* \"MY MainNFT/My_NFT.sol\":17377:17388  value /= 10 */\n      dup7\n      tag_371\n      jump\t// in\n    tag_384:\n      swap5\n      pop\n        /* \"MY MainNFT/My_NFT.sol\":17246:17400  while (value != 0) {... */\n      jump(tag_376)\n        /* \"MY MainNFT/My_NFT.sol\":28320:28702  function _mint(address to, uint256 tokenId) internal virtual {... */\n    tag_341:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"MY MainNFT/My_NFT.sol\":28400:28416  to != address(0) */\n      dup3\n      and\n        /* \"MY MainNFT/My_NFT.sol\":28392:28453  require(to != address(0), \"ERC721: mint to the zero address\") */\n      tag_386\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":17872:17874   */\n      0x20\n        /* \"MY MainNFT/My_NFT.sol\":28392:28453  require(to != address(0), \"ERC721: mint to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":17854:17875   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":17891:17909   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":17884:17914   */\n      mstore\n        /* \"#utility.yul\":17950:17984   */\n      0x4552433732313a206d696e7420746f20746865207a65726f2061646472657373\n        /* \"#utility.yul\":17930:17948   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":17923:17985   */\n      mstore\n        /* \"#utility.yul\":18002:18020   */\n      0x64\n      add\n        /* \"MY MainNFT/My_NFT.sol\":28392:28453  require(to != address(0), \"ERC721: mint to the zero address\") */\n      tag_121\n        /* \"#utility.yul\":17670:18026   */\n      jump\n        /* \"MY MainNFT/My_NFT.sol\":28392:28453  require(to != address(0), \"ERC721: mint to the zero address\") */\n    tag_386:\n        /* \"MY MainNFT/My_NFT.sol\":28473:28489  _exists(tokenId) */\n      tag_389\n        /* \"MY MainNFT/My_NFT.sol\":28481:28488  tokenId */\n      dup2\n        /* \"MY MainNFT/My_NFT.sol\":28473:28480  _exists */\n      tag_119\n        /* \"MY MainNFT/My_NFT.sol\":28473:28489  _exists(tokenId) */\n      jump\t// in\n    tag_389:\n        /* \"MY MainNFT/My_NFT.sol\":28472:28489  !_exists(tokenId) */\n      iszero\n        /* \"MY MainNFT/My_NFT.sol\":28464:28522  require(!_exists(tokenId), \"ERC721: token already minted\") */\n      tag_390\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":18233:18235   */\n      0x20\n        /* \"MY MainNFT/My_NFT.sol\":28464:28522  require(!_exists(tokenId), \"ERC721: token already minted\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":18215:18236   */\n      mstore\n        /* \"#utility.yul\":18272:18274   */\n      0x1c\n        /* \"#utility.yul\":18252:18270   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":18245:18275   */\n      mstore\n        /* \"#utility.yul\":18311:18341   */\n      0x4552433732313a20746f6b656e20616c7265616479206d696e74656400000000\n        /* \"#utility.yul\":18291:18309   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":18284:18342   */\n      mstore\n        /* \"#utility.yul\":18359:18377   */\n      0x64\n      add\n        /* \"MY MainNFT/My_NFT.sol\":28464:28522  require(!_exists(tokenId), \"ERC721: token already minted\") */\n      tag_121\n        /* \"#utility.yul\":18031:18383   */\n      jump\n        /* \"MY MainNFT/My_NFT.sol\":28464:28522  require(!_exists(tokenId), \"ERC721: token already minted\") */\n    tag_390:\n        /* \"MY MainNFT/My_NFT.sol\":28535:28580  _beforeTokenTransfer(address(0), to, tokenId) */\n      tag_393\n        /* \"MY MainNFT/My_NFT.sol\":28564:28565  0 */\n      0x00\n        /* \"MY MainNFT/My_NFT.sol\":28568:28570  to */\n      dup4\n        /* \"MY MainNFT/My_NFT.sol\":28572:28579  tokenId */\n      dup4\n        /* \"MY MainNFT/My_NFT.sol\":28535:28555  _beforeTokenTransfer */\n      tag_255\n        /* \"MY MainNFT/My_NFT.sol\":28535:28580  _beforeTokenTransfer(address(0), to, tokenId) */\n      jump\t// in\n    tag_393:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"MY MainNFT/My_NFT.sol\":28593:28606  _balances[to] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"MY MainNFT/My_NFT.sol\":28593:28602  _balances */\n      0x03\n        /* \"MY MainNFT/My_NFT.sol\":28593:28606  _balances[to] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"MY MainNFT/My_NFT.sol\":28593:28611  _balances[to] += 1 */\n      dup1\n      sload\n        /* \"MY MainNFT/My_NFT.sol\":28610:28611  1 */\n      0x01\n      swap3\n        /* \"MY MainNFT/My_NFT.sol\":28593:28606  _balances[to] */\n      swap1\n        /* \"MY MainNFT/My_NFT.sol\":28593:28611  _balances[to] += 1 */\n      tag_394\n      swap1\n        /* \"MY MainNFT/My_NFT.sol\":28610:28611  1 */\n      dup5\n      swap1\n        /* \"MY MainNFT/My_NFT.sol\":28593:28611  _balances[to] += 1 */\n      tag_260\n      jump\t// in\n    tag_394:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"MY MainNFT/My_NFT.sol\":28622:28638  _owners[tokenId] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"MY MainNFT/My_NFT.sol\":28622:28629  _owners */\n      0x02\n        /* \"MY MainNFT/My_NFT.sol\":28622:28638  _owners[tokenId] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"MY MainNFT/My_NFT.sol\":28622:28643  _owners[tokenId] = to */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup7\n      and\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"MY MainNFT/My_NFT.sol\":28661:28694  Transfer(address(0), to, tokenId) */\n      swap1\n      mload\n        /* \"MY MainNFT/My_NFT.sol\":28622:28638  _owners[tokenId] */\n      dup4\n      swap3\n      swap1\n        /* \"MY MainNFT/My_NFT.sol\":28661:28694  Transfer(address(0), to, tokenId) */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap1\n        /* \"MY MainNFT/My_NFT.sol\":28622:28638  _owners[tokenId] */\n      dup3\n      swap1\n        /* \"MY MainNFT/My_NFT.sol\":28661:28694  Transfer(address(0), to, tokenId) */\n      log4\n        /* \"MY MainNFT/My_NFT.sol\":28320:28702  function _mint(address to, uint256 tokenId) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"MY MainNFT/My_NFT.sol\":38274:39262  function _removeTokenFromOwnerEnumeration(address from, uint256 tokenId) private {... */\n    tag_355:\n        /* \"MY MainNFT/My_NFT.sol\":38540:38562  uint256 lastTokenIndex */\n      0x00\n        /* \"MY MainNFT/My_NFT.sol\":38590:38591  1 */\n      0x01\n        /* \"MY MainNFT/My_NFT.sol\":38565:38587  ERC721.balanceOf(from) */\n      tag_399\n        /* \"MY MainNFT/My_NFT.sol\":38582:38586  from */\n      dup5\n        /* \"MY MainNFT/My_NFT.sol\":38565:38581  ERC721.balanceOf */\n      tag_72\n        /* \"MY MainNFT/My_NFT.sol\":38565:38587  ERC721.balanceOf(from) */\n      jump\t// in\n    tag_399:\n        /* \"MY MainNFT/My_NFT.sol\":38565:38591  ERC721.balanceOf(from) - 1 */\n      tag_400\n      swap2\n      swap1\n      tag_258\n      jump\t// in\n    tag_400:\n        /* \"MY MainNFT/My_NFT.sol\":38602:38620  uint256 tokenIndex */\n      0x00\n        /* \"MY MainNFT/My_NFT.sol\":38623:38649  _ownedTokensIndex[tokenId] */\n      dup4\n      dup2\n      mstore\n        /* \"MY MainNFT/My_NFT.sol\":38623:38640  _ownedTokensIndex */\n      0x07\n        /* \"MY MainNFT/My_NFT.sol\":38623:38649  _ownedTokensIndex[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"MY MainNFT/My_NFT.sol\":38540:38591  uint256 lastTokenIndex = ERC721.balanceOf(from) - 1 */\n      swap1\n      swap2\n      pop\n        /* \"MY MainNFT/My_NFT.sol\":38756:38784  tokenIndex != lastTokenIndex */\n      dup1\n      dup3\n      eq\n        /* \"MY MainNFT/My_NFT.sol\":38752:39080  if (tokenIndex != lastTokenIndex) {... */\n      tag_401\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"MY MainNFT/My_NFT.sol\":38823:38841  _ownedTokens[from] */\n      dup5\n      and\n        /* \"MY MainNFT/My_NFT.sol\":38801:38820  uint256 lastTokenId */\n      0x00\n        /* \"MY MainNFT/My_NFT.sol\":38823:38841  _ownedTokens[from] */\n      swap1\n      dup2\n      mstore\n        /* \"MY MainNFT/My_NFT.sol\":38823:38835  _ownedTokens */\n      0x06\n        /* \"MY MainNFT/My_NFT.sol\":38823:38841  _ownedTokens[from] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"MY MainNFT/My_NFT.sol\":38823:38857  _ownedTokens[from][lastTokenIndex] */\n      dup6\n      dup5\n      mstore\n      dup3\n      mstore\n      dup1\n      dup4\n      keccak256\n      sload\n        /* \"MY MainNFT/My_NFT.sol\":38874:38904  _ownedTokens[from][tokenIndex] */\n      dup5\n      dup5\n      mstore\n      dup2\n      dup5\n      keccak256\n        /* \"MY MainNFT/My_NFT.sol\":38874:38918  _ownedTokens[from][tokenIndex] = lastTokenId */\n      dup2\n      swap1\n      sstore\n        /* \"MY MainNFT/My_NFT.sol\":38991:39021  _ownedTokensIndex[lastTokenId] */\n      dup4\n      mstore\n        /* \"MY MainNFT/My_NFT.sol\":38991:39008  _ownedTokensIndex */\n      0x07\n        /* \"MY MainNFT/My_NFT.sol\":38991:39021  _ownedTokensIndex[lastTokenId] */\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"MY MainNFT/My_NFT.sol\":38991:39034  _ownedTokensIndex[lastTokenId] = tokenIndex */\n      dup2\n      swap1\n      sstore\n        /* \"MY MainNFT/My_NFT.sol\":38752:39080  if (tokenIndex != lastTokenIndex) {... */\n    tag_401:\n      pop\n        /* \"MY MainNFT/My_NFT.sol\":39176:39202  _ownedTokensIndex[tokenId] */\n      0x00\n      swap2\n      dup3\n      mstore\n        /* \"MY MainNFT/My_NFT.sol\":39176:39193  _ownedTokensIndex */\n      0x07\n        /* \"MY MainNFT/My_NFT.sol\":39176:39202  _ownedTokensIndex[tokenId] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n        /* \"MY MainNFT/My_NFT.sol\":39169:39202  delete _ownedTokensIndex[tokenId] */\n      dup5\n      swap1\n      sstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"MY MainNFT/My_NFT.sol\":39220:39238  _ownedTokens[from] */\n      swap1\n      swap5\n      and\n      dup4\n      mstore\n        /* \"MY MainNFT/My_NFT.sol\":39220:39232  _ownedTokens */\n      0x06\n        /* \"MY MainNFT/My_NFT.sol\":39220:39238  _ownedTokens[from] */\n      dup2\n      mstore\n      dup4\n      dup4\n      keccak256\n        /* \"MY MainNFT/My_NFT.sol\":39220:39254  _ownedTokens[from][lastTokenIndex] */\n      swap2\n      dup4\n      mstore\n      mstore\n      swap1\n      dup2\n      keccak256\n        /* \"MY MainNFT/My_NFT.sol\":39213:39254  delete _ownedTokens[from][lastTokenIndex] */\n      sstore\n        /* \"MY MainNFT/My_NFT.sol\":38274:39262  function _removeTokenFromOwnerEnumeration(address from, uint256 tokenId) private {... */\n      jump\t// out\n        /* \"MY MainNFT/My_NFT.sol\":39557:40636  function _removeTokenFromAllTokensEnumeration(uint256 tokenId) private {... */\n    tag_358:\n        /* \"MY MainNFT/My_NFT.sol\":39835:39845  _allTokens */\n      0x08\n        /* \"MY MainNFT/My_NFT.sol\":39835:39852  _allTokens.length */\n      sload\n        /* \"MY MainNFT/My_NFT.sol\":39810:39832  uint256 lastTokenIndex */\n      0x00\n      swap1\n        /* \"MY MainNFT/My_NFT.sol\":39835:39856  _allTokens.length - 1 */\n      tag_403\n      swap1\n        /* \"MY MainNFT/My_NFT.sol\":39855:39856  1 */\n      0x01\n      swap1\n        /* \"MY MainNFT/My_NFT.sol\":39835:39856  _allTokens.length - 1 */\n      tag_258\n      jump\t// in\n    tag_403:\n        /* \"MY MainNFT/My_NFT.sol\":39867:39885  uint256 tokenIndex */\n      0x00\n        /* \"MY MainNFT/My_NFT.sol\":39888:39912  _allTokensIndex[tokenId] */\n      dup4\n      dup2\n      mstore\n        /* \"MY MainNFT/My_NFT.sol\":39888:39903  _allTokensIndex */\n      0x09\n        /* \"MY MainNFT/My_NFT.sol\":39888:39912  _allTokensIndex[tokenId] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"MY MainNFT/My_NFT.sol\":40261:40271  _allTokens */\n      0x08\n        /* \"MY MainNFT/My_NFT.sol\":40261:40287  _allTokens[lastTokenIndex] */\n      dup1\n      sload\n        /* \"MY MainNFT/My_NFT.sol\":39810:39856  uint256 lastTokenIndex = _allTokens.length - 1 */\n      swap4\n      swap5\n      pop\n        /* \"MY MainNFT/My_NFT.sol\":39888:39912  _allTokensIndex[tokenId] */\n      swap1\n      swap3\n        /* \"MY MainNFT/My_NFT.sol\":39810:39856  uint256 lastTokenIndex = _allTokens.length - 1 */\n      dup5\n      swap1\n        /* \"MY MainNFT/My_NFT.sol\":40261:40287  _allTokens[lastTokenIndex] */\n      dup2\n      lt\n      tag_405\n      jumpi\n      tag_405\n      tag_162\n      jump\t// in\n    tag_405:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      sload\n        /* \"MY MainNFT/My_NFT.sol\":40239:40287  uint256 lastTokenId = _allTokens[lastTokenIndex] */\n      swap1\n      pop\n        /* \"MY MainNFT/My_NFT.sol\":40325:40336  lastTokenId */\n      dup1\n        /* \"MY MainNFT/My_NFT.sol\":40300:40310  _allTokens */\n      0x08\n        /* \"MY MainNFT/My_NFT.sol\":40311:40321  tokenIndex */\n      dup4\n        /* \"MY MainNFT/My_NFT.sol\":40300:40322  _allTokens[tokenIndex] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_408\n      jumpi\n      tag_408\n      tag_162\n      jump\t// in\n    tag_408:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      keccak256\n      swap1\n      swap2\n      add\n        /* \"MY MainNFT/My_NFT.sol\":40300:40336  _allTokens[tokenIndex] = lastTokenId */\n      swap3\n      swap1\n      swap3\n      sstore\n        /* \"MY MainNFT/My_NFT.sol\":40405:40433  _allTokensIndex[lastTokenId] */\n      dup3\n      dup2\n      mstore\n        /* \"MY MainNFT/My_NFT.sol\":40405:40420  _allTokensIndex */\n      0x09\n        /* \"MY MainNFT/My_NFT.sol\":40405:40433  _allTokensIndex[lastTokenId] */\n      swap1\n      swap2\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"MY MainNFT/My_NFT.sol\":40405:40446  _allTokensIndex[lastTokenId] = tokenIndex */\n      dup5\n      swap1\n      sstore\n        /* \"MY MainNFT/My_NFT.sol\":40577:40601  _allTokensIndex[tokenId] */\n      dup6\n      dup3\n      mstore\n      dup2\n      keccak256\n        /* \"MY MainNFT/My_NFT.sol\":40570:40601  delete _allTokensIndex[tokenId] */\n      sstore\n        /* \"MY MainNFT/My_NFT.sol\":40612:40622  _allTokens */\n      0x08\n        /* \"MY MainNFT/My_NFT.sol\":40612:40628  _allTokens.pop() */\n      dup1\n      sload\n      dup1\n      tag_411\n      jumpi\n      tag_411\n      tag_412\n      jump\t// in\n    tag_411:\n      0x01\n      swap1\n      sub\n      dup2\n      dup2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      sstore\n      swap1\n      sstore\n        /* \"MY MainNFT/My_NFT.sol\":39628:40636  {... */\n      pop\n      pop\n      pop\n        /* \"MY MainNFT/My_NFT.sol\":39557:40636  function _removeTokenFromAllTokensEnumeration(uint256 tokenId) private {... */\n      pop\n      jump\t// out\n        /* \"MY MainNFT/My_NFT.sol\":37061:37282  function _addTokenToOwnerEnumeration(address to, uint256 tokenId) private {... */\n    tag_362:\n        /* \"MY MainNFT/My_NFT.sol\":37146:37160  uint256 length */\n      0x00\n        /* \"MY MainNFT/My_NFT.sol\":37163:37183  ERC721.balanceOf(to) */\n      tag_415\n        /* \"MY MainNFT/My_NFT.sol\":37180:37182  to */\n      dup4\n        /* \"MY MainNFT/My_NFT.sol\":37163:37179  ERC721.balanceOf */\n      tag_72\n        /* \"MY MainNFT/My_NFT.sol\":37163:37183  ERC721.balanceOf(to) */\n      jump\t// in\n    tag_415:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"MY MainNFT/My_NFT.sol\":37194:37210  _ownedTokens[to] */\n      swap1\n      swap4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"MY MainNFT/My_NFT.sol\":37194:37206  _ownedTokens */\n      0x06\n        /* \"MY MainNFT/My_NFT.sol\":37194:37210  _ownedTokens[to] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"MY MainNFT/My_NFT.sol\":37194:37218  _ownedTokens[to][length] */\n      dup7\n      dup5\n      mstore\n      dup3\n      mstore\n      dup1\n      dup4\n      keccak256\n        /* \"MY MainNFT/My_NFT.sol\":37194:37228  _ownedTokens[to][length] = tokenId */\n      dup6\n      swap1\n      sstore\n        /* \"MY MainNFT/My_NFT.sol\":37239:37265  _ownedTokensIndex[tokenId] */\n      swap4\n      dup3\n      mstore\n        /* \"MY MainNFT/My_NFT.sol\":37239:37256  _ownedTokensIndex */\n      0x07\n        /* \"MY MainNFT/My_NFT.sol\":37239:37265  _ownedTokensIndex[tokenId] */\n      swap1\n      mstore\n      swap2\n      swap1\n      swap2\n      keccak256\n        /* \"MY MainNFT/My_NFT.sol\":37239:37274  _ownedTokensIndex[tokenId] = length */\n      swap2\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"MY MainNFT/My_NFT.sol\":37061:37282  function _addTokenToOwnerEnumeration(address to, uint256 tokenId) private {... */\n      jump\t// out\n        /* \"#utility.yul\":14:145   */\n    tag_416:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"#utility.yul\":88:120   */\n      dup2\n      and\n        /* \"#utility.yul\":78:121   */\n      dup2\n      eq\n        /* \"#utility.yul\":68:139   */\n      tag_428\n      jumpi\n        /* \"#utility.yul\":135:136   */\n      0x00\n        /* \"#utility.yul\":132:133   */\n      dup1\n        /* \"#utility.yul\":125:137   */\n      revert\n        /* \"#utility.yul\":68:139   */\n    tag_428:\n        /* \"#utility.yul\":14:145   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":150:395   */\n    tag_28:\n        /* \"#utility.yul\":208:214   */\n      0x00\n        /* \"#utility.yul\":261:263   */\n      0x20\n        /* \"#utility.yul\":249:258   */\n      dup3\n        /* \"#utility.yul\":240:247   */\n      dup5\n        /* \"#utility.yul\":236:259   */\n      sub\n        /* \"#utility.yul\":232:264   */\n      slt\n        /* \"#utility.yul\":229:281   */\n      iszero\n      tag_430\n      jumpi\n        /* \"#utility.yul\":277:278   */\n      0x00\n        /* \"#utility.yul\":274:275   */\n      dup1\n        /* \"#utility.yul\":267:279   */\n      revert\n        /* \"#utility.yul\":229:281   */\n    tag_430:\n        /* \"#utility.yul\":316:325   */\n      dup2\n        /* \"#utility.yul\":303:326   */\n      calldataload\n        /* \"#utility.yul\":335:365   */\n      tag_216\n        /* \"#utility.yul\":359:364   */\n      dup2\n        /* \"#utility.yul\":335:365   */\n      tag_416\n      jump\t// in\n        /* \"#utility.yul\":592:842   */\n    tag_417:\n        /* \"#utility.yul\":677:678   */\n      0x00\n        /* \"#utility.yul\":687:800   */\n    tag_434:\n        /* \"#utility.yul\":701:707   */\n      dup4\n        /* \"#utility.yul\":698:699   */\n      dup2\n        /* \"#utility.yul\":695:708   */\n      lt\n        /* \"#utility.yul\":687:800   */\n      iszero\n      tag_436\n      jumpi\n        /* \"#utility.yul\":777:788   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":771:789   */\n      mload\n        /* \"#utility.yul\":758:769   */\n      dup4\n      dup3\n      add\n        /* \"#utility.yul\":751:790   */\n      mstore\n        /* \"#utility.yul\":723:725   */\n      0x20\n        /* \"#utility.yul\":716:726   */\n      add\n        /* \"#utility.yul\":687:800   */\n      jump(tag_434)\n    tag_436:\n      pop\n      pop\n        /* \"#utility.yul\":834:835   */\n      0x00\n        /* \"#utility.yul\":816:832   */\n      swap2\n      add\n        /* \"#utility.yul\":809:836   */\n      mstore\n        /* \"#utility.yul\":592:842   */\n      jump\t// out\n        /* \"#utility.yul\":847:1118   */\n    tag_418:\n        /* \"#utility.yul\":889:892   */\n      0x00\n        /* \"#utility.yul\":927:932   */\n      dup2\n        /* \"#utility.yul\":921:933   */\n      mload\n        /* \"#utility.yul\":954:960   */\n      dup1\n        /* \"#utility.yul\":949:952   */\n      dup5\n        /* \"#utility.yul\":942:961   */\n      mstore\n        /* \"#utility.yul\":970:1046   */\n      tag_438\n        /* \"#utility.yul\":1039:1045   */\n      dup2\n        /* \"#utility.yul\":1032:1036   */\n      0x20\n        /* \"#utility.yul\":1027:1030   */\n      dup7\n        /* \"#utility.yul\":1023:1037   */\n      add\n        /* \"#utility.yul\":1016:1020   */\n      0x20\n        /* \"#utility.yul\":1009:1014   */\n      dup7\n        /* \"#utility.yul\":1005:1021   */\n      add\n        /* \"#utility.yul\":970:1046   */\n      tag_417\n      jump\t// in\n    tag_438:\n        /* \"#utility.yul\":1100:1102   */\n      0x1f\n        /* \"#utility.yul\":1079:1094   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":1075:1104   */\n      and\n        /* \"#utility.yul\":1066:1105   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":1107:1111   */\n      0x20\n        /* \"#utility.yul\":1062:1112   */\n      add\n      swap3\n        /* \"#utility.yul\":847:1118   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1123:1343   */\n    tag_35:\n        /* \"#utility.yul\":1272:1274   */\n      0x20\n        /* \"#utility.yul\":1261:1270   */\n      dup2\n        /* \"#utility.yul\":1254:1275   */\n      mstore\n        /* \"#utility.yul\":1235:1239   */\n      0x00\n        /* \"#utility.yul\":1292:1337   */\n      tag_216\n        /* \"#utility.yul\":1333:1335   */\n      0x20\n        /* \"#utility.yul\":1322:1331   */\n      dup4\n        /* \"#utility.yul\":1318:1336   */\n      add\n        /* \"#utility.yul\":1310:1316   */\n      dup5\n        /* \"#utility.yul\":1292:1337   */\n      tag_418\n      jump\t// in\n        /* \"#utility.yul\":1348:1528   */\n    tag_38:\n        /* \"#utility.yul\":1407:1413   */\n      0x00\n        /* \"#utility.yul\":1460:1462   */\n      0x20\n        /* \"#utility.yul\":1448:1457   */\n      dup3\n        /* \"#utility.yul\":1439:1446   */\n      dup5\n        /* \"#utility.yul\":1435:1458   */\n      sub\n        /* \"#utility.yul\":1431:1463   */\n      slt\n        /* \"#utility.yul\":1428:1480   */\n      iszero\n      tag_442\n      jumpi\n        /* \"#utility.yul\":1476:1477   */\n      0x00\n        /* \"#utility.yul\":1473:1474   */\n      dup1\n        /* \"#utility.yul\":1466:1478   */\n      revert\n        /* \"#utility.yul\":1428:1480   */\n    tag_442:\n      pop\n        /* \"#utility.yul\":1499:1522   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":1348:1528   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1741:1914   */\n    tag_419:\n        /* \"#utility.yul\":1809:1829   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1858:1889   */\n      dup2\n      and\n        /* \"#utility.yul\":1848:1890   */\n      dup2\n      eq\n        /* \"#utility.yul\":1838:1908   */\n      tag_445\n      jumpi\n        /* \"#utility.yul\":1904:1905   */\n      0x00\n        /* \"#utility.yul\":1901:1902   */\n      dup1\n        /* \"#utility.yul\":1894:1906   */\n      revert\n        /* \"#utility.yul\":1838:1908   */\n    tag_445:\n        /* \"#utility.yul\":1741:1914   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1919:2173   */\n    tag_44:\n        /* \"#utility.yul\":1987:1993   */\n      0x00\n        /* \"#utility.yul\":1995:2001   */\n      dup1\n        /* \"#utility.yul\":2048:2050   */\n      0x40\n        /* \"#utility.yul\":2036:2045   */\n      dup4\n        /* \"#utility.yul\":2027:2034   */\n      dup6\n        /* \"#utility.yul\":2023:2046   */\n      sub\n        /* \"#utility.yul\":2019:2051   */\n      slt\n        /* \"#utility.yul\":2016:2068   */\n      iszero\n      tag_447\n      jumpi\n        /* \"#utility.yul\":2064:2065   */\n      0x00\n        /* \"#utility.yul\":2061:2062   */\n      dup1\n        /* \"#utility.yul\":2054:2066   */\n      revert\n        /* \"#utility.yul\":2016:2068   */\n    tag_447:\n        /* \"#utility.yul\":2087:2116   */\n      tag_448\n        /* \"#utility.yul\":2106:2115   */\n      dup4\n        /* \"#utility.yul\":2087:2116   */\n      tag_419\n      jump\t// in\n    tag_448:\n        /* \"#utility.yul\":2077:2116   */\n      swap5\n        /* \"#utility.yul\":2163:2165   */\n      0x20\n        /* \"#utility.yul\":2148:2166   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":2135:2167   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1919:2173   */\n      jump\t// out\n        /* \"#utility.yul\":2360:2688   */\n    tag_52:\n        /* \"#utility.yul\":2437:2443   */\n      0x00\n        /* \"#utility.yul\":2445:2451   */\n      dup1\n        /* \"#utility.yul\":2453:2459   */\n      0x00\n        /* \"#utility.yul\":2506:2508   */\n      0x60\n        /* \"#utility.yul\":2494:2503   */\n      dup5\n        /* \"#utility.yul\":2485:2492   */\n      dup7\n        /* \"#utility.yul\":2481:2504   */\n      sub\n        /* \"#utility.yul\":2477:2509   */\n      slt\n        /* \"#utility.yul\":2474:2526   */\n      iszero\n      tag_451\n      jumpi\n        /* \"#utility.yul\":2522:2523   */\n      0x00\n        /* \"#utility.yul\":2519:2520   */\n      dup1\n        /* \"#utility.yul\":2512:2524   */\n      revert\n        /* \"#utility.yul\":2474:2526   */\n    tag_451:\n        /* \"#utility.yul\":2545:2574   */\n      tag_452\n        /* \"#utility.yul\":2564:2573   */\n      dup5\n        /* \"#utility.yul\":2545:2574   */\n      tag_419\n      jump\t// in\n    tag_452:\n        /* \"#utility.yul\":2535:2574   */\n      swap3\n      pop\n        /* \"#utility.yul\":2593:2631   */\n      tag_453\n        /* \"#utility.yul\":2627:2629   */\n      0x20\n        /* \"#utility.yul\":2616:2625   */\n      dup6\n        /* \"#utility.yul\":2612:2630   */\n      add\n        /* \"#utility.yul\":2593:2631   */\n      tag_419\n      jump\t// in\n    tag_453:\n        /* \"#utility.yul\":2583:2631   */\n      swap2\n      pop\n        /* \"#utility.yul\":2678:2680   */\n      0x40\n        /* \"#utility.yul\":2667:2676   */\n      dup5\n        /* \"#utility.yul\":2663:2681   */\n      add\n        /* \"#utility.yul\":2650:2682   */\n      calldataload\n        /* \"#utility.yul\":2640:2682   */\n      swap1\n      pop\n        /* \"#utility.yul\":2360:2688   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":2693:2879   */\n    tag_71:\n        /* \"#utility.yul\":2752:2758   */\n      0x00\n        /* \"#utility.yul\":2805:2807   */\n      0x20\n        /* \"#utility.yul\":2793:2802   */\n      dup3\n        /* \"#utility.yul\":2784:2791   */\n      dup5\n        /* \"#utility.yul\":2780:2803   */\n      sub\n        /* \"#utility.yul\":2776:2808   */\n      slt\n        /* \"#utility.yul\":2773:2825   */\n      iszero\n      tag_455\n      jumpi\n        /* \"#utility.yul\":2821:2822   */\n      0x00\n        /* \"#utility.yul\":2818:2819   */\n      dup1\n        /* \"#utility.yul\":2811:2823   */\n      revert\n        /* \"#utility.yul\":2773:2825   */\n    tag_455:\n        /* \"#utility.yul\":2844:2873   */\n      tag_216\n        /* \"#utility.yul\":2863:2872   */\n      dup3\n        /* \"#utility.yul\":2844:2873   */\n      tag_419\n      jump\t// in\n        /* \"#utility.yul\":2884:3231   */\n    tag_84:\n        /* \"#utility.yul\":2949:2955   */\n      0x00\n        /* \"#utility.yul\":2957:2963   */\n      dup1\n        /* \"#utility.yul\":3010:3012   */\n      0x40\n        /* \"#utility.yul\":2998:3007   */\n      dup4\n        /* \"#utility.yul\":2989:2996   */\n      dup6\n        /* \"#utility.yul\":2985:3008   */\n      sub\n        /* \"#utility.yul\":2981:3013   */\n      slt\n        /* \"#utility.yul\":2978:3030   */\n      iszero\n      tag_458\n      jumpi\n        /* \"#utility.yul\":3026:3027   */\n      0x00\n        /* \"#utility.yul\":3023:3024   */\n      dup1\n        /* \"#utility.yul\":3016:3028   */\n      revert\n        /* \"#utility.yul\":2978:3030   */\n    tag_458:\n        /* \"#utility.yul\":3049:3078   */\n      tag_459\n        /* \"#utility.yul\":3068:3077   */\n      dup4\n        /* \"#utility.yul\":3049:3078   */\n      tag_419\n      jump\t// in\n    tag_459:\n        /* \"#utility.yul\":3039:3078   */\n      swap2\n      pop\n        /* \"#utility.yul\":3128:3130   */\n      0x20\n        /* \"#utility.yul\":3117:3126   */\n      dup4\n        /* \"#utility.yul\":3113:3131   */\n      add\n        /* \"#utility.yul\":3100:3132   */\n      calldataload\n        /* \"#utility.yul\":3175:3180   */\n      dup1\n        /* \"#utility.yul\":3168:3181   */\n      iszero\n        /* \"#utility.yul\":3161:3182   */\n      iszero\n        /* \"#utility.yul\":3154:3159   */\n      dup2\n        /* \"#utility.yul\":3151:3183   */\n      eq\n        /* \"#utility.yul\":3141:3201   */\n      tag_460\n      jumpi\n        /* \"#utility.yul\":3197:3198   */\n      0x00\n        /* \"#utility.yul\":3194:3195   */\n      dup1\n        /* \"#utility.yul\":3187:3199   */\n      revert\n        /* \"#utility.yul\":3141:3201   */\n    tag_460:\n        /* \"#utility.yul\":3220:3225   */\n      dup1\n        /* \"#utility.yul\":3210:3225   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":2884:3231   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3236:3363   */\n    tag_374:\n        /* \"#utility.yul\":3297:3307   */\n      0x4e487b71\n        /* \"#utility.yul\":3292:3295   */\n      0xe0\n        /* \"#utility.yul\":3288:3308   */\n      shl\n        /* \"#utility.yul\":3285:3286   */\n      0x00\n        /* \"#utility.yul\":3278:3309   */\n      mstore\n        /* \"#utility.yul\":3328:3332   */\n      0x41\n        /* \"#utility.yul\":3325:3326   */\n      0x04\n        /* \"#utility.yul\":3318:3333   */\n      mstore\n        /* \"#utility.yul\":3352:3356   */\n      0x24\n        /* \"#utility.yul\":3349:3350   */\n      0x00\n        /* \"#utility.yul\":3342:3357   */\n      revert\n        /* \"#utility.yul\":3368:3999   */\n    tag_420:\n        /* \"#utility.yul\":3432:3437   */\n      0x00\n        /* \"#utility.yul\":3462:3480   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3503:3505   */\n      dup1\n        /* \"#utility.yul\":3495:3501   */\n      dup5\n        /* \"#utility.yul\":3492:3506   */\n      gt\n        /* \"#utility.yul\":3489:3529   */\n      iszero\n      tag_464\n      jumpi\n        /* \"#utility.yul\":3509:3527   */\n      tag_464\n      tag_374\n      jump\t// in\n    tag_464:\n        /* \"#utility.yul\":3584:3586   */\n      0x40\n        /* \"#utility.yul\":3578:3587   */\n      mload\n        /* \"#utility.yul\":3552:3554   */\n      0x1f\n        /* \"#utility.yul\":3638:3653   */\n      dup6\n      add\n      not(0x1f)\n        /* \"#utility.yul\":3634:3658   */\n      swap1\n      dup2\n      and\n        /* \"#utility.yul\":3660:3662   */\n      0x3f\n        /* \"#utility.yul\":3630:3663   */\n      add\n        /* \"#utility.yul\":3626:3668   */\n      and\n        /* \"#utility.yul\":3614:3669   */\n      dup2\n      add\n      swap1\n        /* \"#utility.yul\":3684:3702   */\n      dup3\n      dup3\n      gt\n        /* \"#utility.yul\":3704:3726   */\n      dup2\n      dup4\n      lt\n        /* \"#utility.yul\":3681:3727   */\n      or\n        /* \"#utility.yul\":3678:3750   */\n      iszero\n      tag_466\n      jumpi\n        /* \"#utility.yul\":3730:3748   */\n      tag_466\n      tag_374\n      jump\t// in\n    tag_466:\n        /* \"#utility.yul\":3770:3780   */\n      dup2\n        /* \"#utility.yul\":3766:3768   */\n      0x40\n        /* \"#utility.yul\":3759:3781   */\n      mstore\n        /* \"#utility.yul\":3799:3805   */\n      dup1\n        /* \"#utility.yul\":3790:3805   */\n      swap4\n      pop\n        /* \"#utility.yul\":3829:3835   */\n      dup6\n        /* \"#utility.yul\":3821:3827   */\n      dup2\n        /* \"#utility.yul\":3814:3836   */\n      mstore\n        /* \"#utility.yul\":3869:3872   */\n      dup7\n        /* \"#utility.yul\":3860:3866   */\n      dup7\n        /* \"#utility.yul\":3855:3858   */\n      dup7\n        /* \"#utility.yul\":3851:3867   */\n      add\n        /* \"#utility.yul\":3848:3873   */\n      gt\n        /* \"#utility.yul\":3845:3890   */\n      iszero\n      tag_467\n      jumpi\n        /* \"#utility.yul\":3886:3887   */\n      0x00\n        /* \"#utility.yul\":3883:3884   */\n      dup1\n        /* \"#utility.yul\":3876:3888   */\n      revert\n        /* \"#utility.yul\":3845:3890   */\n    tag_467:\n        /* \"#utility.yul\":3936:3942   */\n      dup6\n        /* \"#utility.yul\":3931:3934   */\n      dup6\n        /* \"#utility.yul\":3924:3928   */\n      0x20\n        /* \"#utility.yul\":3916:3922   */\n      dup4\n        /* \"#utility.yul\":3912:3929   */\n      add\n        /* \"#utility.yul\":3899:3943   */\n      calldatacopy\n        /* \"#utility.yul\":3991:3992   */\n      0x00\n        /* \"#utility.yul\":3984:3988   */\n      0x20\n        /* \"#utility.yul\":3975:3981   */\n      dup8\n        /* \"#utility.yul\":3967:3973   */\n      dup4\n        /* \"#utility.yul\":3963:3982   */\n      add\n        /* \"#utility.yul\":3959:3989   */\n      add\n        /* \"#utility.yul\":3952:3993   */\n      mstore\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":3368:3999   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4004:4670   */\n    tag_88:\n        /* \"#utility.yul\":4099:4105   */\n      0x00\n        /* \"#utility.yul\":4107:4113   */\n      dup1\n        /* \"#utility.yul\":4115:4121   */\n      0x00\n        /* \"#utility.yul\":4123:4129   */\n      dup1\n        /* \"#utility.yul\":4176:4179   */\n      0x80\n        /* \"#utility.yul\":4164:4173   */\n      dup6\n        /* \"#utility.yul\":4155:4162   */\n      dup8\n        /* \"#utility.yul\":4151:4174   */\n      sub\n        /* \"#utility.yul\":4147:4180   */\n      slt\n        /* \"#utility.yul\":4144:4197   */\n      iszero\n      tag_469\n      jumpi\n        /* \"#utility.yul\":4193:4194   */\n      0x00\n        /* \"#utility.yul\":4190:4191   */\n      dup1\n        /* \"#utility.yul\":4183:4195   */\n      revert\n        /* \"#utility.yul\":4144:4197   */\n    tag_469:\n        /* \"#utility.yul\":4216:4245   */\n      tag_470\n        /* \"#utility.yul\":4235:4244   */\n      dup6\n        /* \"#utility.yul\":4216:4245   */\n      tag_419\n      jump\t// in\n    tag_470:\n        /* \"#utility.yul\":4206:4245   */\n      swap4\n      pop\n        /* \"#utility.yul\":4264:4302   */\n      tag_471\n        /* \"#utility.yul\":4298:4300   */\n      0x20\n        /* \"#utility.yul\":4287:4296   */\n      dup7\n        /* \"#utility.yul\":4283:4301   */\n      add\n        /* \"#utility.yul\":4264:4302   */\n      tag_419\n      jump\t// in\n    tag_471:\n        /* \"#utility.yul\":4254:4302   */\n      swap3\n      pop\n        /* \"#utility.yul\":4349:4351   */\n      0x40\n        /* \"#utility.yul\":4338:4347   */\n      dup6\n        /* \"#utility.yul\":4334:4352   */\n      add\n        /* \"#utility.yul\":4321:4353   */\n      calldataload\n        /* \"#utility.yul\":4311:4353   */\n      swap2\n      pop\n        /* \"#utility.yul\":4404:4406   */\n      0x60\n        /* \"#utility.yul\":4393:4402   */\n      dup6\n        /* \"#utility.yul\":4389:4407   */\n      add\n        /* \"#utility.yul\":4376:4408   */\n      calldataload\n        /* \"#utility.yul\":4431:4449   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4423:4429   */\n      dup2\n        /* \"#utility.yul\":4420:4450   */\n      gt\n        /* \"#utility.yul\":4417:4467   */\n      iszero\n      tag_472\n      jumpi\n        /* \"#utility.yul\":4463:4464   */\n      0x00\n        /* \"#utility.yul\":4460:4461   */\n      dup1\n        /* \"#utility.yul\":4453:4465   */\n      revert\n        /* \"#utility.yul\":4417:4467   */\n    tag_472:\n        /* \"#utility.yul\":4486:4508   */\n      dup6\n      add\n        /* \"#utility.yul\":4539:4543   */\n      0x1f\n        /* \"#utility.yul\":4531:4544   */\n      dup2\n      add\n        /* \"#utility.yul\":4527:4554   */\n      dup8\n      sgt\n        /* \"#utility.yul\":4517:4572   */\n      tag_473\n      jumpi\n        /* \"#utility.yul\":4568:4569   */\n      0x00\n        /* \"#utility.yul\":4565:4566   */\n      dup1\n        /* \"#utility.yul\":4558:4570   */\n      revert\n        /* \"#utility.yul\":4517:4572   */\n    tag_473:\n        /* \"#utility.yul\":4591:4664   */\n      tag_474\n        /* \"#utility.yul\":4656:4663   */\n      dup8\n        /* \"#utility.yul\":4651:4653   */\n      dup3\n        /* \"#utility.yul\":4638:4654   */\n      calldataload\n        /* \"#utility.yul\":4633:4635   */\n      0x20\n        /* \"#utility.yul\":4629:4631   */\n      dup5\n        /* \"#utility.yul\":4625:4636   */\n      add\n        /* \"#utility.yul\":4591:4664   */\n      tag_420\n      jump\t// in\n    tag_474:\n        /* \"#utility.yul\":4581:4664   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":4004:4670   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4675:5199   */\n    tag_96:\n        /* \"#utility.yul\":4753:4759   */\n      0x00\n        /* \"#utility.yul\":4761:4767   */\n      dup1\n        /* \"#utility.yul\":4814:4816   */\n      0x40\n        /* \"#utility.yul\":4802:4811   */\n      dup4\n        /* \"#utility.yul\":4793:4800   */\n      dup6\n        /* \"#utility.yul\":4789:4812   */\n      sub\n        /* \"#utility.yul\":4785:4817   */\n      slt\n        /* \"#utility.yul\":4782:4834   */\n      iszero\n      tag_476\n      jumpi\n        /* \"#utility.yul\":4830:4831   */\n      0x00\n        /* \"#utility.yul\":4827:4828   */\n      dup1\n        /* \"#utility.yul\":4820:4832   */\n      revert\n        /* \"#utility.yul\":4782:4834   */\n    tag_476:\n        /* \"#utility.yul\":4853:4882   */\n      tag_477\n        /* \"#utility.yul\":4872:4881   */\n      dup4\n        /* \"#utility.yul\":4853:4882   */\n      tag_419\n      jump\t// in\n    tag_477:\n        /* \"#utility.yul\":4843:4882   */\n      swap2\n      pop\n        /* \"#utility.yul\":4933:4935   */\n      0x20\n        /* \"#utility.yul\":4922:4931   */\n      dup4\n        /* \"#utility.yul\":4918:4936   */\n      add\n        /* \"#utility.yul\":4905:4937   */\n      calldataload\n        /* \"#utility.yul\":4960:4978   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4952:4958   */\n      dup2\n        /* \"#utility.yul\":4949:4979   */\n      gt\n        /* \"#utility.yul\":4946:4996   */\n      iszero\n      tag_478\n      jumpi\n        /* \"#utility.yul\":4992:4993   */\n      0x00\n        /* \"#utility.yul\":4989:4990   */\n      dup1\n        /* \"#utility.yul\":4982:4994   */\n      revert\n        /* \"#utility.yul\":4946:4996   */\n    tag_478:\n        /* \"#utility.yul\":5015:5037   */\n      dup4\n      add\n        /* \"#utility.yul\":5068:5072   */\n      0x1f\n        /* \"#utility.yul\":5060:5073   */\n      dup2\n      add\n        /* \"#utility.yul\":5056:5083   */\n      dup6\n      sgt\n        /* \"#utility.yul\":5046:5101   */\n      tag_479\n      jumpi\n        /* \"#utility.yul\":5097:5098   */\n      0x00\n        /* \"#utility.yul\":5094:5095   */\n      dup1\n        /* \"#utility.yul\":5087:5099   */\n      revert\n        /* \"#utility.yul\":5046:5101   */\n    tag_479:\n        /* \"#utility.yul\":5120:5193   */\n      tag_480\n        /* \"#utility.yul\":5185:5192   */\n      dup6\n        /* \"#utility.yul\":5180:5182   */\n      dup3\n        /* \"#utility.yul\":5167:5183   */\n      calldataload\n        /* \"#utility.yul\":5162:5164   */\n      0x20\n        /* \"#utility.yul\":5158:5160   */\n      dup5\n        /* \"#utility.yul\":5154:5165   */\n      add\n        /* \"#utility.yul\":5120:5193   */\n      tag_420\n      jump\t// in\n    tag_480:\n        /* \"#utility.yul\":5110:5193   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":4675:5199   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5204:5464   */\n    tag_101:\n        /* \"#utility.yul\":5272:5278   */\n      0x00\n        /* \"#utility.yul\":5280:5286   */\n      dup1\n        /* \"#utility.yul\":5333:5335   */\n      0x40\n        /* \"#utility.yul\":5321:5330   */\n      dup4\n        /* \"#utility.yul\":5312:5319   */\n      dup6\n        /* \"#utility.yul\":5308:5331   */\n      sub\n        /* \"#utility.yul\":5304:5336   */\n      slt\n        /* \"#utility.yul\":5301:5353   */\n      iszero\n      tag_482\n      jumpi\n        /* \"#utility.yul\":5349:5350   */\n      0x00\n        /* \"#utility.yul\":5346:5347   */\n      dup1\n        /* \"#utility.yul\":5339:5351   */\n      revert\n        /* \"#utility.yul\":5301:5353   */\n    tag_482:\n        /* \"#utility.yul\":5372:5401   */\n      tag_483\n        /* \"#utility.yul\":5391:5400   */\n      dup4\n        /* \"#utility.yul\":5372:5401   */\n      tag_419\n      jump\t// in\n    tag_483:\n        /* \"#utility.yul\":5362:5401   */\n      swap2\n      pop\n        /* \"#utility.yul\":5420:5458   */\n      tag_484\n        /* \"#utility.yul\":5454:5456   */\n      0x20\n        /* \"#utility.yul\":5443:5452   */\n      dup5\n        /* \"#utility.yul\":5439:5457   */\n      add\n        /* \"#utility.yul\":5420:5458   */\n      tag_419\n      jump\t// in\n    tag_484:\n        /* \"#utility.yul\":5410:5458   */\n      swap1\n      pop\n        /* \"#utility.yul\":5204:5464   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5469:5849   */\n    tag_112:\n        /* \"#utility.yul\":5548:5549   */\n      0x01\n        /* \"#utility.yul\":5544:5556   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":5591:5603   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":5612:5673   */\n      tag_486\n      jumpi\n        /* \"#utility.yul\":5666:5670   */\n      0x7f\n        /* \"#utility.yul\":5658:5664   */\n      dup3\n        /* \"#utility.yul\":5654:5671   */\n      and\n        /* \"#utility.yul\":5644:5671   */\n      swap2\n      pop\n        /* \"#utility.yul\":5612:5673   */\n    tag_486:\n        /* \"#utility.yul\":5719:5721   */\n      0x20\n        /* \"#utility.yul\":5711:5717   */\n      dup3\n        /* \"#utility.yul\":5708:5722   */\n      lt\n        /* \"#utility.yul\":5688:5706   */\n      dup2\n        /* \"#utility.yul\":5685:5723   */\n      sub\n        /* \"#utility.yul\":5682:5843   */\n      tag_487\n      jumpi\n        /* \"#utility.yul\":5765:5775   */\n      0x4e487b71\n        /* \"#utility.yul\":5760:5763   */\n      0xe0\n        /* \"#utility.yul\":5756:5776   */\n      shl\n        /* \"#utility.yul\":5753:5754   */\n      0x00\n        /* \"#utility.yul\":5746:5777   */\n      mstore\n        /* \"#utility.yul\":5800:5804   */\n      0x22\n        /* \"#utility.yul\":5797:5798   */\n      0x04\n        /* \"#utility.yul\":5790:5805   */\n      mstore\n        /* \"#utility.yul\":5828:5832   */\n      0x24\n        /* \"#utility.yul\":5825:5826   */\n      0x00\n        /* \"#utility.yul\":5818:5833   */\n      revert\n        /* \"#utility.yul\":5682:5843   */\n    tag_487:\n      pop\n        /* \"#utility.yul\":5469:5849   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7094:7507   */\n    tag_145:\n        /* \"#utility.yul\":7296:7298   */\n      0x20\n        /* \"#utility.yul\":7278:7299   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":7335:7337   */\n      0x31\n        /* \"#utility.yul\":7315:7333   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":7308:7338   */\n      mstore\n        /* \"#utility.yul\":7374:7408   */\n      0x4552433732313a207472616e736665722063616c6c6572206973206e6f74206f\n        /* \"#utility.yul\":7369:7371   */\n      0x40\n        /* \"#utility.yul\":7354:7372   */\n      dup3\n      add\n        /* \"#utility.yul\":7347:7409   */\n      mstore\n      shl(0x7a, 0x1ddb995c881b9bdc88185c1c1c9bdd9959)\n        /* \"#utility.yul\":7440:7442   */\n      0x60\n        /* \"#utility.yul\":7425:7443   */\n      dup3\n      add\n        /* \"#utility.yul\":7418:7465   */\n      mstore\n        /* \"#utility.yul\":7497:7500   */\n      0x80\n        /* \"#utility.yul\":7482:7501   */\n      add\n      swap1\n        /* \"#utility.yul\":7094:7507   */\n      jump\t// out\n        /* \"#utility.yul\":8337:8464   */\n    tag_162:\n        /* \"#utility.yul\":8398:8408   */\n      0x4e487b71\n        /* \"#utility.yul\":8393:8396   */\n      0xe0\n        /* \"#utility.yul\":8389:8409   */\n      shl\n        /* \"#utility.yul\":8386:8387   */\n      0x00\n        /* \"#utility.yul\":8379:8410   */\n      mstore\n        /* \"#utility.yul\":8429:8433   */\n      0x32\n        /* \"#utility.yul\":8426:8427   */\n      0x04\n        /* \"#utility.yul\":8419:8434   */\n      mstore\n        /* \"#utility.yul\":8453:8457   */\n      0x24\n        /* \"#utility.yul\":8450:8451   */\n      0x00\n        /* \"#utility.yul\":8443:8458   */\n      revert\n        /* \"#utility.yul\":9290:9646   */\n    tag_177:\n        /* \"#utility.yul\":9492:9494   */\n      0x20\n        /* \"#utility.yul\":9474:9495   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":9511:9529   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":9504:9534   */\n      mstore\n        /* \"#utility.yul\":9570:9604   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":9565:9567   */\n      0x40\n        /* \"#utility.yul\":9550:9568   */\n      dup3\n      add\n        /* \"#utility.yul\":9543:9605   */\n      mstore\n        /* \"#utility.yul\":9637:9639   */\n      0x60\n        /* \"#utility.yul\":9622:9640   */\n      add\n      swap1\n        /* \"#utility.yul\":9290:9646   */\n      jump\t// out\n        /* \"#utility.yul\":11640:11767   */\n    tag_421:\n        /* \"#utility.yul\":11701:11711   */\n      0x4e487b71\n        /* \"#utility.yul\":11696:11699   */\n      0xe0\n        /* \"#utility.yul\":11692:11712   */\n      shl\n        /* \"#utility.yul\":11689:11690   */\n      0x00\n        /* \"#utility.yul\":11682:11713   */\n      mstore\n        /* \"#utility.yul\":11732:11736   */\n      0x11\n        /* \"#utility.yul\":11729:11730   */\n      0x04\n        /* \"#utility.yul\":11722:11737   */\n      mstore\n        /* \"#utility.yul\":11756:11760   */\n      0x24\n        /* \"#utility.yul\":11753:11754   */\n      0x00\n        /* \"#utility.yul\":11746:11761   */\n      revert\n        /* \"#utility.yul\":11772:11900   */\n    tag_258:\n        /* \"#utility.yul\":11839:11848   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":11860:11871   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":11857:11894   */\n      iszero\n      tag_108\n      jumpi\n        /* \"#utility.yul\":11874:11892   */\n      tag_108\n      tag_421\n      jump\t// in\n        /* \"#utility.yul\":11905:12030   */\n    tag_260:\n        /* \"#utility.yul\":11970:11979   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":11991:12001   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":11988:12024   */\n      iszero\n      tag_108\n      jumpi\n        /* \"#utility.yul\":12004:12022   */\n      tag_108\n      tag_421\n      jump\t// in\n        /* \"#utility.yul\":12035:12449   */\n    tag_267:\n        /* \"#utility.yul\":12237:12239   */\n      0x20\n        /* \"#utility.yul\":12219:12240   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":12276:12278   */\n      0x32\n        /* \"#utility.yul\":12256:12274   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":12249:12279   */\n      mstore\n        /* \"#utility.yul\":12315:12349   */\n      0x4552433732313a207472616e7366657220746f206e6f6e204552433732315265\n        /* \"#utility.yul\":12310:12312   */\n      0x40\n        /* \"#utility.yul\":12295:12313   */\n      dup3\n      add\n        /* \"#utility.yul\":12288:12350   */\n      mstore\n      shl(0x71, 0x31b2b4bb32b91034b6b83632b6b2b73a32b9)\n        /* \"#utility.yul\":12381:12383   */\n      0x60\n        /* \"#utility.yul\":12366:12384   */\n      dup3\n      add\n        /* \"#utility.yul\":12359:12407   */\n      mstore\n        /* \"#utility.yul\":12439:12442   */\n      0x80\n        /* \"#utility.yul\":12424:12443   */\n      add\n      swap1\n        /* \"#utility.yul\":12035:12449   */\n      jump\t// out\n        /* \"#utility.yul\":12872:13368   */\n    tag_283:\n        /* \"#utility.yul\":13051:13054   */\n      0x00\n        /* \"#utility.yul\":13089:13095   */\n      dup4\n        /* \"#utility.yul\":13083:13096   */\n      mload\n        /* \"#utility.yul\":13105:13171   */\n      tag_513\n        /* \"#utility.yul\":13164:13170   */\n      dup2\n        /* \"#utility.yul\":13159:13162   */\n      dup5\n        /* \"#utility.yul\":13152:13156   */\n      0x20\n        /* \"#utility.yul\":13144:13150   */\n      dup9\n        /* \"#utility.yul\":13140:13157   */\n      add\n        /* \"#utility.yul\":13105:13171   */\n      tag_417\n      jump\t// in\n    tag_513:\n        /* \"#utility.yul\":13234:13247   */\n      dup4\n      mload\n        /* \"#utility.yul\":13193:13209   */\n      swap1\n      dup4\n      add\n      swap1\n        /* \"#utility.yul\":13256:13326   */\n      tag_514\n        /* \"#utility.yul\":13234:13247   */\n      dup2\n        /* \"#utility.yul\":13193:13209   */\n      dup4\n        /* \"#utility.yul\":13303:13307   */\n      0x20\n        /* \"#utility.yul\":13291:13308   */\n      dup9\n      add\n        /* \"#utility.yul\":13256:13326   */\n      tag_417\n      jump\t// in\n    tag_514:\n        /* \"#utility.yul\":13342:13362   */\n      add\n      swap5\n        /* \"#utility.yul\":12872:13368   */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13914:14459   */\n    tag_423:\n        /* \"#utility.yul\":14016:14018   */\n      0x1f\n        /* \"#utility.yul\":14011:14014   */\n      dup3\n        /* \"#utility.yul\":14008:14019   */\n      gt\n        /* \"#utility.yul\":14005:14453   */\n      iszero\n      tag_136\n      jumpi\n        /* \"#utility.yul\":14052:14053   */\n      0x00\n        /* \"#utility.yul\":14077:14082   */\n      dup2\n        /* \"#utility.yul\":14073:14075   */\n      dup2\n        /* \"#utility.yul\":14066:14083   */\n      mstore\n        /* \"#utility.yul\":14122:14126   */\n      0x20\n        /* \"#utility.yul\":14118:14120   */\n      dup2\n        /* \"#utility.yul\":14108:14127   */\n      keccak256\n        /* \"#utility.yul\":14192:14194   */\n      0x1f\n        /* \"#utility.yul\":14180:14190   */\n      dup6\n        /* \"#utility.yul\":14176:14195   */\n      add\n        /* \"#utility.yul\":14173:14174   */\n      0x05\n        /* \"#utility.yul\":14169:14196   */\n      shr\n        /* \"#utility.yul\":14163:14167   */\n      dup2\n        /* \"#utility.yul\":14159:14197   */\n      add\n        /* \"#utility.yul\":14228:14232   */\n      0x20\n        /* \"#utility.yul\":14216:14226   */\n      dup7\n        /* \"#utility.yul\":14213:14233   */\n      lt\n        /* \"#utility.yul\":14210:14257   */\n      iszero\n      tag_519\n      jumpi\n      pop\n        /* \"#utility.yul\":14251:14255   */\n      dup1\n        /* \"#utility.yul\":14210:14257   */\n    tag_519:\n        /* \"#utility.yul\":14306:14308   */\n      0x1f\n        /* \"#utility.yul\":14301:14304   */\n      dup6\n        /* \"#utility.yul\":14297:14309   */\n      add\n        /* \"#utility.yul\":14294:14295   */\n      0x05\n        /* \"#utility.yul\":14290:14310   */\n      shr\n        /* \"#utility.yul\":14284:14288   */\n      dup3\n        /* \"#utility.yul\":14280:14311   */\n      add\n        /* \"#utility.yul\":14270:14311   */\n      swap2\n      pop\n        /* \"#utility.yul\":14361:14443   */\n    tag_520:\n        /* \"#utility.yul\":14379:14381   */\n      dup2\n        /* \"#utility.yul\":14372:14377   */\n      dup2\n        /* \"#utility.yul\":14369:14382   */\n      lt\n        /* \"#utility.yul\":14361:14443   */\n      iszero\n      tag_522\n      jumpi\n        /* \"#utility.yul\":14424:14441   */\n      dup3\n      dup2\n      sstore\n        /* \"#utility.yul\":14405:14406   */\n      0x01\n        /* \"#utility.yul\":14394:14407   */\n      add\n        /* \"#utility.yul\":14361:14443   */\n      jump(tag_520)\n    tag_522:\n        /* \"#utility.yul\":14365:14368   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":13914:14459   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14635:15987   */\n    tag_297:\n        /* \"#utility.yul\":14761:14764   */\n      dup2\n        /* \"#utility.yul\":14755:14765   */\n      mload\n        /* \"#utility.yul\":14788:14806   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":14780:14786   */\n      dup2\n        /* \"#utility.yul\":14777:14807   */\n      gt\n        /* \"#utility.yul\":14774:14830   */\n      iszero\n      tag_526\n      jumpi\n        /* \"#utility.yul\":14810:14828   */\n      tag_526\n      tag_374\n      jump\t// in\n    tag_526:\n        /* \"#utility.yul\":14839:14936   */\n      tag_527\n        /* \"#utility.yul\":14929:14935   */\n      dup2\n        /* \"#utility.yul\":14889:14927   */\n      tag_528\n        /* \"#utility.yul\":14921:14925   */\n      dup5\n        /* \"#utility.yul\":14915:14926   */\n      sload\n        /* \"#utility.yul\":14889:14927   */\n      tag_112\n      jump\t// in\n    tag_528:\n        /* \"#utility.yul\":14883:14887   */\n      dup5\n        /* \"#utility.yul\":14839:14936   */\n      tag_423\n      jump\t// in\n    tag_527:\n        /* \"#utility.yul\":14991:14995   */\n      0x20\n      dup1\n        /* \"#utility.yul\":15055:15057   */\n      0x1f\n        /* \"#utility.yul\":15044:15058   */\n      dup4\n      gt\n        /* \"#utility.yul\":15072:15073   */\n      0x01\n        /* \"#utility.yul\":15067:15730   */\n      dup2\n      eq\n      tag_530\n      jumpi\n        /* \"#utility.yul\":15774:15775   */\n      0x00\n        /* \"#utility.yul\":15791:15797   */\n      dup5\n        /* \"#utility.yul\":15788:15877   */\n      iszero\n      tag_531\n      jumpi\n      pop\n        /* \"#utility.yul\":15843:15862   */\n      dup6\n      dup4\n      add\n        /* \"#utility.yul\":15837:15863   */\n      mload\n        /* \"#utility.yul\":15788:15877   */\n    tag_531:\n      not(0x00)\n        /* \"#utility.yul\":14592:14593   */\n      0x03\n        /* \"#utility.yul\":14588:14599   */\n      dup7\n      swap1\n      shl\n        /* \"#utility.yul\":14584:14608   */\n      shr\n        /* \"#utility.yul\":14580:14609   */\n      not\n        /* \"#utility.yul\":14570:14610   */\n      and\n        /* \"#utility.yul\":14616:14617   */\n      0x01\n        /* \"#utility.yul\":14612:14623   */\n      dup6\n      swap1\n      shl\n        /* \"#utility.yul\":14567:14624   */\n      or\n        /* \"#utility.yul\":15890:15971   */\n      dup6\n      sstore\n        /* \"#utility.yul\":15037:15981   */\n      jump(tag_522)\n        /* \"#utility.yul\":15067:15730   */\n    tag_530:\n        /* \"#utility.yul\":13861:13862   */\n      0x00\n        /* \"#utility.yul\":13854:13868   */\n      dup6\n      dup2\n      mstore\n        /* \"#utility.yul\":13898:13902   */\n      0x20\n        /* \"#utility.yul\":13885:13903   */\n      dup2\n      keccak256\n      not(0x1f)\n        /* \"#utility.yul\":15103:15123   */\n      dup7\n      and\n      swap2\n        /* \"#utility.yul\":15221:15457   */\n    tag_534:\n        /* \"#utility.yul\":15235:15242   */\n      dup3\n        /* \"#utility.yul\":15232:15233   */\n      dup2\n        /* \"#utility.yul\":15229:15243   */\n      lt\n        /* \"#utility.yul\":15221:15457   */\n      iszero\n      tag_536\n      jumpi\n        /* \"#utility.yul\":15324:15343   */\n      dup9\n      dup7\n      add\n        /* \"#utility.yul\":15318:15344   */\n      mload\n        /* \"#utility.yul\":15303:15345   */\n      dup3\n      sstore\n        /* \"#utility.yul\":15416:15443   */\n      swap5\n      dup5\n      add\n      swap5\n        /* \"#utility.yul\":15384:15385   */\n      0x01\n        /* \"#utility.yul\":15372:15386   */\n      swap1\n      swap2\n      add\n      swap1\n        /* \"#utility.yul\":15251:15270   */\n      dup5\n      add\n        /* \"#utility.yul\":15221:15457   */\n      jump(tag_534)\n    tag_536:\n        /* \"#utility.yul\":15225:15228   */\n      pop\n        /* \"#utility.yul\":15485:15491   */\n      dup6\n        /* \"#utility.yul\":15476:15483   */\n      dup3\n        /* \"#utility.yul\":15473:15492   */\n      lt\n        /* \"#utility.yul\":15470:15671   */\n      iszero\n      tag_537\n      jumpi\n        /* \"#utility.yul\":15546:15565   */\n      dup8\n      dup6\n      add\n        /* \"#utility.yul\":15540:15566   */\n      mload\n      not(0x00)\n        /* \"#utility.yul\":15629:15630   */\n      0x03\n        /* \"#utility.yul\":15625:15639   */\n      dup9\n      swap1\n      shl\n        /* \"#utility.yul\":15641:15644   */\n      0xf8\n        /* \"#utility.yul\":15621:15645   */\n      and\n        /* \"#utility.yul\":15617:15654   */\n      shr\n        /* \"#utility.yul\":15613:15655   */\n      not\n        /* \"#utility.yul\":15598:15656   */\n      and\n        /* \"#utility.yul\":15583:15657   */\n      dup2\n      sstore\n        /* \"#utility.yul\":15470:15671   */\n    tag_537:\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":15717:15718   */\n      0x01\n        /* \"#utility.yul\":15701:15715   */\n      swap1\n      dup2\n      shl\n        /* \"#utility.yul\":15697:15719   */\n      add\n        /* \"#utility.yul\":15684:15720   */\n      swap1\n      sstore\n      pop\n        /* \"#utility.yul\":14635:15987   */\n      jump\t// out\n        /* \"#utility.yul\":15992:16481   */\n    tag_312:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":16261:16276   */\n      dup6\n      dup2\n      and\n        /* \"#utility.yul\":16243:16277   */\n      dup3\n      mstore\n        /* \"#utility.yul\":16313:16328   */\n      dup5\n      and\n        /* \"#utility.yul\":16308:16310   */\n      0x20\n        /* \"#utility.yul\":16293:16311   */\n      dup3\n      add\n        /* \"#utility.yul\":16286:16329   */\n      mstore\n        /* \"#utility.yul\":16360:16362   */\n      0x40\n        /* \"#utility.yul\":16345:16363   */\n      dup2\n      add\n        /* \"#utility.yul\":16338:16372   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":16408:16411   */\n      0x80\n        /* \"#utility.yul\":16403:16405   */\n      0x60\n        /* \"#utility.yul\":16388:16406   */\n      dup3\n      add\n        /* \"#utility.yul\":16381:16412   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":16186:16190   */\n      0x00\n      swap1\n        /* \"#utility.yul\":16429:16475   */\n      tag_539\n      swap1\n        /* \"#utility.yul\":16455:16474   */\n      dup4\n      add\n        /* \"#utility.yul\":16447:16453   */\n      dup5\n        /* \"#utility.yul\":16429:16475   */\n      tag_418\n      jump\t// in\n    tag_539:\n        /* \"#utility.yul\":16421:16475   */\n      swap7\n        /* \"#utility.yul\":15992:16481   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16486:16735   */\n    tag_315:\n        /* \"#utility.yul\":16555:16561   */\n      0x00\n        /* \"#utility.yul\":16608:16610   */\n      0x20\n        /* \"#utility.yul\":16596:16605   */\n      dup3\n        /* \"#utility.yul\":16587:16594   */\n      dup5\n        /* \"#utility.yul\":16583:16606   */\n      sub\n        /* \"#utility.yul\":16579:16611   */\n      slt\n        /* \"#utility.yul\":16576:16628   */\n      iszero\n      tag_541\n      jumpi\n        /* \"#utility.yul\":16624:16625   */\n      0x00\n        /* \"#utility.yul\":16621:16622   */\n      dup1\n        /* \"#utility.yul\":16614:16626   */\n      revert\n        /* \"#utility.yul\":16576:16628   */\n    tag_541:\n        /* \"#utility.yul\":16656:16665   */\n      dup2\n        /* \"#utility.yul\":16650:16666   */\n      mload\n        /* \"#utility.yul\":16675:16705   */\n      tag_216\n        /* \"#utility.yul\":16699:16704   */\n      dup2\n        /* \"#utility.yul\":16675:16705   */\n      tag_416\n      jump\t// in\n        /* \"#utility.yul\":17156:17291   */\n    tag_369:\n        /* \"#utility.yul\":17195:17198   */\n      0x00\n        /* \"#utility.yul\":17216:17233   */\n      0x01\n      dup3\n      add\n        /* \"#utility.yul\":17213:17256   */\n      tag_546\n      jumpi\n        /* \"#utility.yul\":17236:17254   */\n      tag_546\n      tag_421\n      jump\t// in\n    tag_546:\n      pop\n        /* \"#utility.yul\":17283:17284   */\n      0x01\n        /* \"#utility.yul\":17272:17285   */\n      add\n      swap1\n        /* \"#utility.yul\":17156:17291   */\n      jump\t// out\n        /* \"#utility.yul\":17296:17423   */\n    tag_425:\n        /* \"#utility.yul\":17357:17367   */\n      0x4e487b71\n        /* \"#utility.yul\":17352:17355   */\n      0xe0\n        /* \"#utility.yul\":17348:17368   */\n      shl\n        /* \"#utility.yul\":17345:17346   */\n      0x00\n        /* \"#utility.yul\":17338:17369   */\n      mstore\n        /* \"#utility.yul\":17388:17392   */\n      0x12\n        /* \"#utility.yul\":17385:17386   */\n      0x04\n        /* \"#utility.yul\":17378:17393   */\n      mstore\n        /* \"#utility.yul\":17412:17416   */\n      0x24\n        /* \"#utility.yul\":17409:17410   */\n      0x00\n        /* \"#utility.yul\":17402:17417   */\n      revert\n        /* \"#utility.yul\":17428:17548   */\n    tag_371:\n        /* \"#utility.yul\":17468:17469   */\n      0x00\n        /* \"#utility.yul\":17494:17495   */\n      dup3\n        /* \"#utility.yul\":17484:17519   */\n      tag_550\n      jumpi\n        /* \"#utility.yul\":17499:17517   */\n      tag_550\n      tag_425\n      jump\t// in\n    tag_550:\n      pop\n        /* \"#utility.yul\":17533:17542   */\n      div\n      swap1\n        /* \"#utility.yul\":17428:17548   */\n      jump\t// out\n        /* \"#utility.yul\":17553:17665   */\n    tag_380:\n        /* \"#utility.yul\":17585:17586   */\n      0x00\n        /* \"#utility.yul\":17611:17612   */\n      dup3\n        /* \"#utility.yul\":17601:17636   */\n      tag_553\n      jumpi\n        /* \"#utility.yul\":17616:17634   */\n      tag_553\n      tag_425\n      jump\t// in\n    tag_553:\n      pop\n        /* \"#utility.yul\":17650:17659   */\n      mod\n      swap1\n        /* \"#utility.yul\":17553:17665   */\n      jump\t// out\n        /* \"#utility.yul\":18388:18515   */\n    tag_412:\n        /* \"#utility.yul\":18449:18459   */\n      0x4e487b71\n        /* \"#utility.yul\":18444:18447   */\n      0xe0\n        /* \"#utility.yul\":18440:18460   */\n      shl\n        /* \"#utility.yul\":18437:18438   */\n      0x00\n        /* \"#utility.yul\":18430:18461   */\n      mstore\n        /* \"#utility.yul\":18480:18484   */\n      0x31\n        /* \"#utility.yul\":18477:18478   */\n      0x04\n        /* \"#utility.yul\":18470:18485   */\n      mstore\n        /* \"#utility.yul\":18504:18508   */\n      0x24\n        /* \"#utility.yul\":18501:18502   */\n      0x00\n        /* \"#utility.yul\":18494:18509   */\n      revert\n\n    auxdata: 0xa2646970667358221220c7eea0940fa2e5a0049d323b8ed803f789bbdac64704431945968dd35a0f1f4164736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_2042": {
									"entryPoint": null,
									"id": 2042,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_2204": {
									"entryPoint": null,
									"id": 2204,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_763": {
									"entryPoint": null,
									"id": 763,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_472": {
									"entryPoint": 190,
									"id": 472,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_string_fromMemory": {
									"entryPoint": 216,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory": {
									"entryPoint": 391,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 557,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 640,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 497,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 194,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:4144:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "46:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "63:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "70:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "75:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "56:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "56:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "103:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "106:4:1",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "96:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "96:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "127:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "130:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "120:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "120:15:1"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "210:776:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "259:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "268:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "271:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "261:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "261:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "261:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "238:6:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "246:4:1",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "234:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "234:17:1"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "253:3:1"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "230:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "230:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "223:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "223:35:1"
															},
															"nodeType": "YulIf",
															"src": "220:55:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "284:23:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "300:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "294:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "294:13:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "288:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "316:28:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "334:2:1",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "338:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "330:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "330:10:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "342:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "326:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "326:18:1"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "320:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "367:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "369:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "369:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "369:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "359:2:1"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "363:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "356:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "356:10:1"
															},
															"nodeType": "YulIf",
															"src": "353:36:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "398:17:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "412:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "408:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "408:7:1"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "402:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "424:23:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "444:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "438:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "438:9:1"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "428:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "456:71:1",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "478:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_1",
																										"nodeType": "YulIdentifier",
																										"src": "502:2:1"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "506:4:1",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "498:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "498:13:1"
																							},
																							{
																								"name": "_3",
																								"nodeType": "YulIdentifier",
																								"src": "513:2:1"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "494:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "494:22:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "518:2:1",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "490:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "490:31:1"
																			},
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "523:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "486:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "486:40:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "474:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "474:53:1"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "460:10:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "586:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "588:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "588:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "588:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "545:10:1"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "557:2:1"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "542:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "542:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "565:10:1"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "577:6:1"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "562:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "562:22:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "539:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "539:46:1"
															},
															"nodeType": "YulIf",
															"src": "536:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "624:2:1",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "628:10:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "617:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "617:22:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "617:22:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "655:6:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "663:2:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "648:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "648:18:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "648:18:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "675:14:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "685:4:1",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "679:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "735:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "744:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "747:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "737:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "737:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "737:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "712:6:1"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "720:2:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "708:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "708:15:1"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "725:2:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "704:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "704:24:1"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "730:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "701:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "701:33:1"
															},
															"nodeType": "YulIf",
															"src": "698:53:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "760:10:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "769:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "764:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "825:87:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "854:6:1"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "862:1:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "850:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "850:14:1"
																						},
																						{
																							"name": "_4",
																							"nodeType": "YulIdentifier",
																							"src": "866:2:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "846:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "846:23:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "offset",
																											"nodeType": "YulIdentifier",
																											"src": "885:6:1"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "893:1:1"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "881:3:1"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "881:14:1"
																								},
																								{
																									"name": "_4",
																									"nodeType": "YulIdentifier",
																									"src": "897:2:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "877:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "877:23:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "871:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "871:30:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "839:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "839:63:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "839:63:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "790:1:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "793:2:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "787:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "787:9:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "797:19:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "799:15:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "808:1:1"
																				},
																				{
																					"name": "_4",
																					"nodeType": "YulIdentifier",
																					"src": "811:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "804:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "804:10:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "799:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "783:3:1",
																"statements": []
															},
															"src": "779:133:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nodeType": "YulIdentifier",
																						"src": "936:6:1"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "944:2:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "932:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "932:15:1"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "949:2:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "928:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "928:24:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "954:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "921:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "921:35:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "921:35:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "965:15:1",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "974:6:1"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "965:5:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_string_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "184:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "192:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "200:5:1",
														"type": ""
													}
												],
												"src": "146:840:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1109:444:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1155:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1164:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1167:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1157:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1157:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1157:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1130:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1139:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1126:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1126:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1151:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1122:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1122:32:1"
															},
															"nodeType": "YulIf",
															"src": "1119:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1180:30:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1200:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1194:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1194:16:1"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "1184:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1219:28:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1237:2:1",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1241:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1233:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1233:10:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1245:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "1229:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1229:18:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1223:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1274:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1283:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1286:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1276:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1276:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1276:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1262:6:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1270:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1259:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1259:14:1"
															},
															"nodeType": "YulIf",
															"src": "1256:34:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1299:71:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1342:9:1"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1353:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1338:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1338:22:1"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1362:7:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1309:28:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1309:61:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1299:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1379:41:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1405:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1416:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1401:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1401:18:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1395:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1395:25:1"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "1383:8:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1449:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1458:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1461:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1451:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1451:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1451:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "1435:8:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1445:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1432:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1432:16:1"
															},
															"nodeType": "YulIf",
															"src": "1429:36:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1474:73:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1517:9:1"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "1528:8:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1513:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1513:24:1"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1539:7:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1484:28:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1484:63:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1474:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1067:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1078:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1090:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1098:6:1",
														"type": ""
													}
												],
												"src": "991:562:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1613:325:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1623:22:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1637:1:1",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1640:4:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "1633:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1633:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1623:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1654:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1684:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1690:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1680:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1680:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "1658:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1731:31:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1733:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "1747:6:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1755:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "1743:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1743:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1733:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1711:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1704:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1704:26:1"
															},
															"nodeType": "YulIf",
															"src": "1701:61:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1821:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1842:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1849:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1854:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "1845:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1845:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1835:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1835:31:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1835:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1886:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1889:4:1",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1879:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1879:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1879:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1914:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1917:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1907:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1907:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1907:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1777:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1800:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1808:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1797:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1797:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "1774:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1774:38:1"
															},
															"nodeType": "YulIf",
															"src": "1771:161:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1593:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1602:6:1",
														"type": ""
													}
												],
												"src": "1558:380:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1999:65:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2016:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "2019:3:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2009:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2009:14:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2009:14:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2032:26:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2050:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2053:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "2040:9:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2040:18:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "2032:4:1"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "1982:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1990:4:1",
														"type": ""
													}
												],
												"src": "1943:121:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2150:464:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2183:425:1",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2197:11:1",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "2207:1:1",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nodeType": "YulTypedName",
																				"src": "2201:2:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "2228:2:1"
																				},
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "2232:5:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2221:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2221:17:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2221:17:1"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2251:31:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "2273:2:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2277:4:1",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nodeType": "YulIdentifier",
																				"src": "2263:9:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2263:19:1"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nodeType": "YulTypedName",
																				"src": "2255:4:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2295:57:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nodeType": "YulIdentifier",
																					"src": "2318:4:1"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2328:1:1",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nodeType": "YulIdentifier",
																									"src": "2335:10:1"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "2347:2:1",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2331:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2331:19:1"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nodeType": "YulIdentifier",
																						"src": "2324:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2324:27:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2314:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2314:38:1"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nodeType": "YulTypedName",
																				"src": "2299:11:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "2389:23:1",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "2391:19:1",
																					"value": {
																						"name": "data",
																						"nodeType": "YulIdentifier",
																						"src": "2406:4:1"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nodeType": "YulIdentifier",
																							"src": "2391:11:1"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nodeType": "YulIdentifier",
																					"src": "2371:10:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2383:4:1",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "2368:2:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2368:20:1"
																		},
																		"nodeType": "YulIf",
																		"src": "2365:47:1"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2425:41:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nodeType": "YulIdentifier",
																					"src": "2439:4:1"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2449:1:1",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nodeType": "YulIdentifier",
																									"src": "2456:3:1"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "2461:2:1",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2452:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2452:12:1"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nodeType": "YulIdentifier",
																						"src": "2445:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2445:20:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2435:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2435:31:1"
																		},
																		"variables": [
																			{
																				"name": "_2",
																				"nodeType": "YulTypedName",
																				"src": "2429:2:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2479:24:1",
																		"value": {
																			"name": "deleteStart",
																			"nodeType": "YulIdentifier",
																			"src": "2492:11:1"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nodeType": "YulTypedName",
																				"src": "2483:5:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "2577:21:1",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nodeType": "YulIdentifier",
																								"src": "2586:5:1"
																							},
																							{
																								"name": "_1",
																								"nodeType": "YulIdentifier",
																								"src": "2593:2:1"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nodeType": "YulIdentifier",
																							"src": "2579:6:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2579:17:1"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "2579:17:1"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "2527:5:1"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "2534:2:1"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "2524:2:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2524:13:1"
																		},
																		"nodeType": "YulForLoop",
																		"post": {
																			"nodeType": "YulBlock",
																			"src": "2538:26:1",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "2540:22:1",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nodeType": "YulIdentifier",
																								"src": "2553:5:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2560:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "2549:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2549:13:1"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nodeType": "YulIdentifier",
																							"src": "2540:5:1"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nodeType": "YulBlock",
																			"src": "2520:3:1",
																			"statements": []
																		},
																		"src": "2516:82:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "2166:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2171:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2163:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2163:11:1"
															},
															"nodeType": "YulIf",
															"src": "2160:448:1"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2122:5:1",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "2129:3:1",
														"type": ""
													},
													{
														"name": "startIndex",
														"nodeType": "YulTypedName",
														"src": "2134:10:1",
														"type": ""
													}
												],
												"src": "2069:545:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2704:81:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2714:65:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nodeType": "YulIdentifier",
																				"src": "2729:4:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "2747:1:1",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nodeType": "YulIdentifier",
																										"src": "2750:3:1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "2743:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2743:11:1"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "2760:1:1",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nodeType": "YulIdentifier",
																									"src": "2756:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2756:6:1"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nodeType": "YulIdentifier",
																							"src": "2739:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2739:24:1"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "2735:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2735:29:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2725:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2725:40:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2771:1:1",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nodeType": "YulIdentifier",
																				"src": "2774:3:1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "2767:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2767:11:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "2722:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2722:57:1"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nodeType": "YulIdentifier",
																	"src": "2714:4:1"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "2681:4:1",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "2687:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nodeType": "YulTypedName",
														"src": "2695:4:1",
														"type": ""
													}
												],
												"src": "2619:166:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2886:1256:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2896:24:1",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "2916:3:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2910:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2910:10:1"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nodeType": "YulTypedName",
																	"src": "2900:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2963:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "2965:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2965:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2965:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "2935:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2951:2:1",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2955:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "2947:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2947:10:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2959:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2943:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2943:18:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2932:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2932:30:1"
															},
															"nodeType": "YulIf",
															"src": "2929:56:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "3038:4:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nodeType": "YulIdentifier",
																						"src": "3076:4:1"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nodeType": "YulIdentifier",
																					"src": "3070:5:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3070:11:1"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nodeType": "YulIdentifier",
																			"src": "3044:25:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3044:38:1"
																	},
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "3084:6:1"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nodeType": "YulIdentifier",
																	"src": "2994:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2994:97:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2994:97:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3100:18:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3117:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulTypedName",
																	"src": "3104:9:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3127:23:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3146:4:1",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "srcOffset_1",
																	"nodeType": "YulTypedName",
																	"src": "3131:11:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3159:24:1",
															"value": {
																"name": "srcOffset_1",
																"nodeType": "YulIdentifier",
																"src": "3172:11:1"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulIdentifier",
																	"src": "3159:9:1"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3229:656:1",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "3243:35:1",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "3262:6:1"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "3274:2:1",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "3270:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3270:7:1"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "3258:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3258:20:1"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nodeType": "YulTypedName",
																						"src": "3247:7:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "3291:49:1",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "3335:4:1"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nodeType": "YulIdentifier",
																						"src": "3305:29:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3305:35:1"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nodeType": "YulTypedName",
																						"src": "3295:6:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "3353:10:1",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3362:1:1",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "3357:1:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "3440:172:1",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "3465:6:1"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nodeType": "YulIdentifier",
																														"src": "3483:3:1"
																													},
																													{
																														"name": "srcOffset",
																														"nodeType": "YulIdentifier",
																														"src": "3488:9:1"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nodeType": "YulIdentifier",
																													"src": "3479:3:1"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "3479:19:1"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "3473:5:1"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "3473:26:1"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "3458:6:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3458:42:1"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "3458:42:1"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "3517:24:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "3531:6:1"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "3539:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "3527:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3527:14:1"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nodeType": "YulIdentifier",
																									"src": "3517:6:1"
																								}
																							]
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "3558:40:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nodeType": "YulIdentifier",
																										"src": "3575:9:1"
																									},
																									{
																										"name": "srcOffset_1",
																										"nodeType": "YulIdentifier",
																										"src": "3586:11:1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "3571:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3571:27:1"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nodeType": "YulIdentifier",
																									"src": "3558:9:1"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "3387:1:1"
																						},
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "3390:7:1"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "3384:2:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3384:14:1"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "3399:28:1",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "3401:24:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "3410:1:1"
																									},
																									{
																										"name": "srcOffset_1",
																										"nodeType": "YulIdentifier",
																										"src": "3413:11:1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "3406:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3406:19:1"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "3401:1:1"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "3380:3:1",
																					"statements": []
																				},
																				"src": "3376:236:1"
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "3660:166:1",
																					"statements": [
																						{
																							"nodeType": "YulVariableDeclaration",
																							"src": "3678:43:1",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "3705:3:1"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "3710:9:1"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "3701:3:1"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "3701:19:1"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "3695:5:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3695:26:1"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nodeType": "YulTypedName",
																									"src": "3682:9:1",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "3745:6:1"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nodeType": "YulIdentifier",
																												"src": "3757:9:1"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nodeType": "YulLiteral",
																																				"src": "3784:1:1",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nodeType": "YulIdentifier",
																																				"src": "3787:6:1"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nodeType": "YulIdentifier",
																																			"src": "3780:3:1"
																																		},
																																		"nodeType": "YulFunctionCall",
																																		"src": "3780:14:1"
																																	},
																																	{
																																		"kind": "number",
																																		"nodeType": "YulLiteral",
																																		"src": "3796:3:1",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nodeType": "YulIdentifier",
																																	"src": "3776:3:1"
																																},
																																"nodeType": "YulFunctionCall",
																																"src": "3776:24:1"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nodeType": "YulLiteral",
																																		"src": "3806:1:1",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nodeType": "YulIdentifier",
																																	"src": "3802:3:1"
																																},
																																"nodeType": "YulFunctionCall",
																																"src": "3802:6:1"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nodeType": "YulIdentifier",
																															"src": "3772:3:1"
																														},
																														"nodeType": "YulFunctionCall",
																														"src": "3772:37:1"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nodeType": "YulIdentifier",
																													"src": "3768:3:1"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "3768:42:1"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nodeType": "YulIdentifier",
																											"src": "3753:3:1"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "3753:58:1"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "3738:6:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3738:74:1"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "3738:74:1"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "3631:7:1"
																						},
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "3640:6:1"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "3628:2:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3628:19:1"
																				},
																				"nodeType": "YulIf",
																				"src": "3625:201:1"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "3846:4:1"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "3860:1:1",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nodeType": "YulIdentifier",
																											"src": "3863:6:1"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nodeType": "YulIdentifier",
																										"src": "3856:3:1"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "3856:14:1"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "3872:1:1",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "3852:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3852:22:1"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "3839:6:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3839:36:1"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "3839:36:1"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "3222:663:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3227:1:1",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3902:234:1",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "3916:14:1",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3929:1:1",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nodeType": "YulTypedName",
																						"src": "3920:5:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "3965:67:1",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "3983:35:1",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "4002:3:1"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "4007:9:1"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "3998:3:1"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "3998:19:1"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "3992:5:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3992:26:1"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "3983:5:1"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nodeType": "YulIdentifier",
																					"src": "3946:6:1"
																				},
																				"nodeType": "YulIf",
																				"src": "3943:89:1"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "4052:4:1"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "4111:5:1"
																								},
																								{
																									"name": "newLen",
																									"nodeType": "YulIdentifier",
																									"src": "4118:6:1"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nodeType": "YulIdentifier",
																								"src": "4058:52:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "4058:67:1"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "4045:6:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4045:81:1"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "4045:81:1"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "3894:242:1",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "3202:6:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3210:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3199:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3199:14:1"
															},
															"nodeType": "YulSwitch",
															"src": "3192:944:1"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "2871:4:1",
														"type": ""
													},
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "2877:3:1",
														"type": ""
													}
												],
												"src": "2790:1352:1"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        let _4 := 0x20\n        if gt(add(add(offset, _1), _4), end) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _1) { i := add(i, _4) }\n        {\n            mstore(add(add(memPtr, i), _4), mload(add(add(offset, i), _4)))\n        }\n        mstore(add(add(memPtr, _1), _4), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b506040516200211638038062002116833981016040819052620000349162000187565b8181600062000044838262000280565b50600162000053828262000280565b505050600062000068620000be60201b60201c565b600b80546001600160a01b0319166001600160a01b038316908117909155604051919250906000907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a35050506200034c565b3390565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620000ea57600080fd5b81516001600160401b0380821115620001075762000107620000c2565b604051601f8301601f19908116603f01168101908282118183101715620001325762000132620000c2565b816040528381526020925086838588010111156200014f57600080fd5b600091505b8382101562000173578582018301518183018401529082019062000154565b600093810190920192909252949350505050565b600080604083850312156200019b57600080fd5b82516001600160401b0380821115620001b357600080fd5b620001c186838701620000d8565b93506020850151915080821115620001d857600080fd5b50620001e785828601620000d8565b9150509250929050565b600181811c908216806200020657607f821691505b6020821081036200022757634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200027b57600081815260208120601f850160051c81016020861015620002565750805b601f850160051c820191505b81811015620002775782815560010162000262565b5050505b505050565b81516001600160401b038111156200029c576200029c620000c2565b620002b481620002ad8454620001f1565b846200022d565b602080601f831160018114620002ec5760008415620002d35750858301515b600019600386901b1c1916600185901b17855562000277565b600085815260208120601f198616915b828110156200031d57888601518255948401946001909101908401620002fc565b50858210156200033c5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b611dba806200035c6000396000f3fe608060405234801561001057600080fd5b506004361061012c5760003560e01c806370a08231116100ad578063b88d4fde11610071578063b88d4fde14610266578063c87b56dd14610279578063d204c45e1461028c578063e985e9c51461029f578063f2fde38b146102db57600080fd5b806370a082311461021f578063715018a6146102325780638da5cb5b1461023a57806395d89b411461024b578063a22cb4651461025357600080fd5b806323b872dd116100f457806323b872dd146101c05780632f745c59146101d357806342842e0e146101e65780634f6ccce7146101f95780636352211e1461020c57600080fd5b806301ffc9a71461013157806306fdde0314610159578063081812fc1461016e578063095ea7b31461019957806318160ddd146101ae575b600080fd5b61014461013f36600461170d565b6102ee565b60405190151581526020015b60405180910390f35b6101616102ff565b604051610150919061177a565b61018161017c36600461178d565b610391565b6040516001600160a01b039091168152602001610150565b6101ac6101a73660046117c2565b61041e565b005b6008545b604051908152602001610150565b6101ac6101ce3660046117ec565b610533565b6101b26101e13660046117c2565b610564565b6101ac6101f43660046117ec565b6105fa565b6101b261020736600461178d565b610615565b61018161021a36600461178d565b6106a8565b6101b261022d366004611828565b61071f565b6101ac6107a6565b600b546001600160a01b0316610181565b61016161081a565b6101ac610261366004611843565b610829565b6101ac61027436600461190b565b6108ed565b61016161028736600461178d565b610925565b6101b261029a366004611987565b610930565b6101446102ad3660046119e9565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b6101ac6102e9366004611828565b610993565b60006102f982610a7e565b92915050565b60606000805461030e90611a1c565b80601f016020809104026020016040519081016040528092919081815260200182805461033a90611a1c565b80156103875780601f1061035c57610100808354040283529160200191610387565b820191906000526020600020905b81548152906001019060200180831161036a57829003601f168201915b5050505050905090565b600061039c82610aa3565b6104025760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b6000610429826106a8565b9050806001600160a01b0316836001600160a01b0316036104965760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084016103f9565b336001600160a01b03821614806104b257506104b281336102ad565b6105245760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c000000000000000060648201526084016103f9565b61052e8383610ac0565b505050565b61053d3382610b2e565b6105595760405162461bcd60e51b81526004016103f990611a56565b61052e838383610c18565b600061056f8361071f565b82106105d15760405162461bcd60e51b815260206004820152602b60248201527f455243373231456e756d657261626c653a206f776e657220696e646578206f7560448201526a74206f6620626f756e647360a81b60648201526084016103f9565b506001600160a01b03919091166000908152600660209081526040808320938352929052205490565b61052e838383604051806020016040528060008152506108ed565b600061062060085490565b82106106835760405162461bcd60e51b815260206004820152602c60248201527f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60448201526b7574206f6620626f756e647360a01b60648201526084016103f9565b6008828154811061069657610696611aa7565b90600052602060002001549050919050565b6000818152600260205260408120546001600160a01b0316806102f95760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b60648201526084016103f9565b60006001600160a01b03821661078a5760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b60648201526084016103f9565b506001600160a01b031660009081526003602052604090205490565b600b546001600160a01b031633146107d05760405162461bcd60e51b81526004016103f990611abd565b600b546040516000916001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600b80546001600160a01b0319169055565b60606001805461030e90611a1c565b336001600160a01b038316036108815760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c65720000000000000060448201526064016103f9565b3360008181526005602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b6108f73383610b2e565b6109135760405162461bcd60e51b81526004016103f990611a56565b61091f84848484610dc3565b50505050565b60606102f982610df6565b600b546000906001600160a01b0316331461095d5760405162461bcd60e51b81526004016103f990611abd565b61096b600c80546001019055565b6000610976600c5490565b90506109828482610f64565b61098c8184610f82565b9392505050565b600b546001600160a01b031633146109bd5760405162461bcd60e51b81526004016103f990611abd565b6001600160a01b038116610a225760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016103f9565b600b546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600b80546001600160a01b0319166001600160a01b0392909216919091179055565b60006001600160e01b0319821663780e9d6360e01b14806102f957506102f982611006565b6000908152600260205260409020546001600160a01b0316151590565b600081815260046020526040902080546001600160a01b0319166001600160a01b0384169081179091558190610af5826106a8565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000610b3982610aa3565b610b9a5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084016103f9565b6000610ba5836106a8565b9050806001600160a01b0316846001600160a01b03161480610be05750836001600160a01b0316610bd584610391565b6001600160a01b0316145b80610c1057506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b949350505050565b826001600160a01b0316610c2b826106a8565b6001600160a01b031614610c935760405162461bcd60e51b815260206004820152602960248201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960448201526839903737ba1037bbb760b91b60648201526084016103f9565b6001600160a01b038216610cf55760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b60648201526084016103f9565b610d00838383611056565b610d0b600082610ac0565b6001600160a01b0383166000908152600360205260408120805460019290610d34908490611b08565b90915550506001600160a01b0382166000908152600360205260408120805460019290610d62908490611b1b565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b610dce848484610c18565b610dda84848484611061565b61091f5760405162461bcd60e51b81526004016103f990611b2e565b6060610e0182610aa3565b610e675760405162461bcd60e51b815260206004820152603160248201527f45524337323155524953746f726167653a2055524920717565727920666f72206044820152703737b732bc34b9ba32b73a103a37b5b2b760791b60648201526084016103f9565b6000828152600a602052604081208054610e8090611a1c565b80601f0160208091040260200160405190810160405280929190818152602001828054610eac90611a1c565b8015610ef95780601f10610ece57610100808354040283529160200191610ef9565b820191906000526020600020905b815481529060010190602001808311610edc57829003601f168201915b505050505090506000610f1760408051602081019091526000815290565b90508051600003610f29575092915050565b815115610f5b578082604051602001610f43929190611b80565b60405160208183030381529060405292505050919050565b610c1084611162565b610f7e828260405180602001604052806000815250611239565b5050565b610f8b82610aa3565b610fee5760405162461bcd60e51b815260206004820152602e60248201527f45524337323155524953746f726167653a2055524920736574206f66206e6f6e60448201526d32bc34b9ba32b73a103a37b5b2b760911b60648201526084016103f9565b6000828152600a6020526040902061052e8282611bfd565b60006001600160e01b031982166380ac58cd60e01b148061103757506001600160e01b03198216635b5e139f60e01b145b806102f957506301ffc9a760e01b6001600160e01b03198316146102f9565b61052e83838361126c565b60006001600160a01b0384163b1561115757604051630a85bd0160e11b81526001600160a01b0385169063150b7a02906110a5903390899088908890600401611cbd565b6020604051808303816000875af19250505080156110e0575060408051601f3d908101601f191682019092526110dd91810190611cfa565b60015b61113d573d80801561110e576040519150601f19603f3d011682016040523d82523d6000602084013e611113565b606091505b5080516000036111355760405162461bcd60e51b81526004016103f990611b2e565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610c10565b506001949350505050565b606061116d82610aa3565b6111d15760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b60648201526084016103f9565b60006111e860408051602081019091526000815290565b90506000815111611208576040518060200160405280600081525061098c565b8061121284611324565b604051602001611223929190611b80565b6040516020818303038152906040529392505050565b6112438383611425565b6112506000848484611061565b61052e5760405162461bcd60e51b81526004016103f990611b2e565b6001600160a01b0383166112c7576112c281600880546000838152600960205260408120829055600182018355919091527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30155565b6112ea565b816001600160a01b0316836001600160a01b0316146112ea576112ea8382611564565b6001600160a01b0382166113015761052e81611601565b826001600160a01b0316826001600160a01b03161461052e5761052e82826116b0565b60608160000361134b5750506040805180820190915260018152600360fc1b602082015290565b8160005b8115611375578061135f81611d17565b915061136e9050600a83611d46565b915061134f565b60008167ffffffffffffffff8111156113905761139061187f565b6040519080825280601f01601f1916602001820160405280156113ba576020820181803683370190505b5090505b8415610c10576113cf600183611b08565b91506113dc600a86611d5a565b6113e7906030611b1b565b60f81b8183815181106113fc576113fc611aa7565b60200101906001600160f81b031916908160001a90535061141e600a86611d46565b94506113be565b6001600160a01b03821661147b5760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f206164647265737360448201526064016103f9565b61148481610aa3565b156114d15760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016103f9565b6114dd60008383611056565b6001600160a01b0382166000908152600360205260408120805460019290611506908490611b1b565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b600060016115718461071f565b61157b9190611b08565b6000838152600760205260409020549091508082146115ce576001600160a01b03841660009081526006602090815260408083208584528252808320548484528184208190558352600790915290208190555b5060009182526007602090815260408084208490556001600160a01b039094168352600681528383209183525290812055565b60085460009061161390600190611b08565b6000838152600960205260408120546008805493945090928490811061163b5761163b611aa7565b90600052602060002001549050806008838154811061165c5761165c611aa7565b600091825260208083209091019290925582815260099091526040808220849055858252812055600880548061169457611694611d6e565b6001900381819060005260206000200160009055905550505050565b60006116bb8361071f565b6001600160a01b039093166000908152600660209081526040808320868452825280832085905593825260079052919091209190915550565b6001600160e01b03198116811461170a57600080fd5b50565b60006020828403121561171f57600080fd5b813561098c816116f4565b60005b8381101561174557818101518382015260200161172d565b50506000910152565b6000815180845261176681602086016020860161172a565b601f01601f19169290920160200192915050565b60208152600061098c602083018461174e565b60006020828403121561179f57600080fd5b5035919050565b80356001600160a01b03811681146117bd57600080fd5b919050565b600080604083850312156117d557600080fd5b6117de836117a6565b946020939093013593505050565b60008060006060848603121561180157600080fd5b61180a846117a6565b9250611818602085016117a6565b9150604084013590509250925092565b60006020828403121561183a57600080fd5b61098c826117a6565b6000806040838503121561185657600080fd5b61185f836117a6565b91506020830135801515811461187457600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff808411156118b0576118b061187f565b604051601f8501601f19908116603f011681019082821181831017156118d8576118d861187f565b816040528093508581528686860111156118f157600080fd5b858560208301376000602087830101525050509392505050565b6000806000806080858703121561192157600080fd5b61192a856117a6565b9350611938602086016117a6565b925060408501359150606085013567ffffffffffffffff81111561195b57600080fd5b8501601f8101871361196c57600080fd5b61197b87823560208401611895565b91505092959194509250565b6000806040838503121561199a57600080fd5b6119a3836117a6565b9150602083013567ffffffffffffffff8111156119bf57600080fd5b8301601f810185136119d057600080fd5b6119df85823560208401611895565b9150509250929050565b600080604083850312156119fc57600080fd5b611a05836117a6565b9150611a13602084016117a6565b90509250929050565b600181811c90821680611a3057607f821691505b602082108103611a5057634e487b7160e01b600052602260045260246000fd5b50919050565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052601160045260246000fd5b818103818111156102f9576102f9611af2565b808201808211156102f9576102f9611af2565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b60008351611b9281846020880161172a565b835190830190611ba681836020880161172a565b01949350505050565b601f82111561052e57600081815260208120601f850160051c81016020861015611bd65750805b601f850160051c820191505b81811015611bf557828155600101611be2565b505050505050565b815167ffffffffffffffff811115611c1757611c1761187f565b611c2b81611c258454611a1c565b84611baf565b602080601f831160018114611c605760008415611c485750858301515b600019600386901b1c1916600185901b178555611bf5565b600085815260208120601f198616915b82811015611c8f57888601518255948401946001909101908401611c70565b5085821015611cad5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090611cf09083018461174e565b9695505050505050565b600060208284031215611d0c57600080fd5b815161098c816116f4565b600060018201611d2957611d29611af2565b5060010190565b634e487b7160e01b600052601260045260246000fd5b600082611d5557611d55611d30565b500490565b600082611d6957611d69611d30565b500690565b634e487b7160e01b600052603160045260246000fdfea2646970667358221220c7eea0940fa2e5a0049d323b8ed803f789bbdac64704431945968dd35a0f1f4164736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x2116 CODESIZE SUB DUP1 PUSH3 0x2116 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x187 JUMP JUMPDEST DUP2 DUP2 PUSH1 0x0 PUSH3 0x44 DUP4 DUP3 PUSH3 0x280 JUMP JUMPDEST POP PUSH1 0x1 PUSH3 0x53 DUP3 DUP3 PUSH3 0x280 JUMP JUMPDEST POP POP POP PUSH1 0x0 PUSH3 0x68 PUSH3 0xBE PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0xB DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP3 POP SWAP1 PUSH1 0x0 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP3 SWAP1 LOG3 POP POP POP PUSH3 0x34C JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0xEA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x107 JUMPI PUSH3 0x107 PUSH3 0xC2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0x132 JUMPI PUSH3 0x132 PUSH3 0xC2 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE PUSH1 0x20 SWAP3 POP DUP7 DUP4 DUP6 DUP9 ADD ADD GT ISZERO PUSH3 0x14F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 POP JUMPDEST DUP4 DUP3 LT ISZERO PUSH3 0x173 JUMPI DUP6 DUP3 ADD DUP4 ADD MLOAD DUP2 DUP4 ADD DUP5 ADD MSTORE SWAP1 DUP3 ADD SWAP1 PUSH3 0x154 JUMP JUMPDEST PUSH1 0x0 SWAP4 DUP2 ADD SWAP1 SWAP3 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x19B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x1B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x1C1 DUP7 DUP4 DUP8 ADD PUSH3 0xD8 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x1D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x1E7 DUP6 DUP3 DUP7 ADD PUSH3 0xD8 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x206 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x227 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x27B JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH3 0x256 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x277 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x262 JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x29C JUMPI PUSH3 0x29C PUSH3 0xC2 JUMP JUMPDEST PUSH3 0x2B4 DUP2 PUSH3 0x2AD DUP5 SLOAD PUSH3 0x1F1 JUMP JUMPDEST DUP5 PUSH3 0x22D JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x2EC JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x2D3 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0x277 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x31D JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x2FC JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x33C JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x1DBA DUP1 PUSH3 0x35C PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x12C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xB88D4FDE GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x266 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x279 JUMPI DUP1 PUSH4 0xD204C45E EQ PUSH2 0x28C JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x29F JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x21F JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x232 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x23A JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x24B JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x253 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1C0 JUMPI DUP1 PUSH4 0x2F745C59 EQ PUSH2 0x1D3 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x1E6 JUMPI DUP1 PUSH4 0x4F6CCCE7 EQ PUSH2 0x1F9 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x20C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x159 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x16E JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x199 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1AE JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x144 PUSH2 0x13F CALLDATASIZE PUSH1 0x4 PUSH2 0x170D JUMP JUMPDEST PUSH2 0x2EE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x161 PUSH2 0x2FF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x150 SWAP2 SWAP1 PUSH2 0x177A JUMP JUMPDEST PUSH2 0x181 PUSH2 0x17C CALLDATASIZE PUSH1 0x4 PUSH2 0x178D JUMP JUMPDEST PUSH2 0x391 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x150 JUMP JUMPDEST PUSH2 0x1AC PUSH2 0x1A7 CALLDATASIZE PUSH1 0x4 PUSH2 0x17C2 JUMP JUMPDEST PUSH2 0x41E JUMP JUMPDEST STOP JUMPDEST PUSH1 0x8 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x150 JUMP JUMPDEST PUSH2 0x1AC PUSH2 0x1CE CALLDATASIZE PUSH1 0x4 PUSH2 0x17EC JUMP JUMPDEST PUSH2 0x533 JUMP JUMPDEST PUSH2 0x1B2 PUSH2 0x1E1 CALLDATASIZE PUSH1 0x4 PUSH2 0x17C2 JUMP JUMPDEST PUSH2 0x564 JUMP JUMPDEST PUSH2 0x1AC PUSH2 0x1F4 CALLDATASIZE PUSH1 0x4 PUSH2 0x17EC JUMP JUMPDEST PUSH2 0x5FA JUMP JUMPDEST PUSH2 0x1B2 PUSH2 0x207 CALLDATASIZE PUSH1 0x4 PUSH2 0x178D JUMP JUMPDEST PUSH2 0x615 JUMP JUMPDEST PUSH2 0x181 PUSH2 0x21A CALLDATASIZE PUSH1 0x4 PUSH2 0x178D JUMP JUMPDEST PUSH2 0x6A8 JUMP JUMPDEST PUSH2 0x1B2 PUSH2 0x22D CALLDATASIZE PUSH1 0x4 PUSH2 0x1828 JUMP JUMPDEST PUSH2 0x71F JUMP JUMPDEST PUSH2 0x1AC PUSH2 0x7A6 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x181 JUMP JUMPDEST PUSH2 0x161 PUSH2 0x81A JUMP JUMPDEST PUSH2 0x1AC PUSH2 0x261 CALLDATASIZE PUSH1 0x4 PUSH2 0x1843 JUMP JUMPDEST PUSH2 0x829 JUMP JUMPDEST PUSH2 0x1AC PUSH2 0x274 CALLDATASIZE PUSH1 0x4 PUSH2 0x190B JUMP JUMPDEST PUSH2 0x8ED JUMP JUMPDEST PUSH2 0x161 PUSH2 0x287 CALLDATASIZE PUSH1 0x4 PUSH2 0x178D JUMP JUMPDEST PUSH2 0x925 JUMP JUMPDEST PUSH2 0x1B2 PUSH2 0x29A CALLDATASIZE PUSH1 0x4 PUSH2 0x1987 JUMP JUMPDEST PUSH2 0x930 JUMP JUMPDEST PUSH2 0x144 PUSH2 0x2AD CALLDATASIZE PUSH1 0x4 PUSH2 0x19E9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x1AC PUSH2 0x2E9 CALLDATASIZE PUSH1 0x4 PUSH2 0x1828 JUMP JUMPDEST PUSH2 0x993 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F9 DUP3 PUSH2 0xA7E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x30E SWAP1 PUSH2 0x1A1C JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x33A SWAP1 PUSH2 0x1A1C JUMP JUMPDEST DUP1 ISZERO PUSH2 0x387 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x35C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x387 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x36A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x39C DUP3 PUSH2 0xAA3 JUMP JUMPDEST PUSH2 0x402 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76656420717565727920666F72206E6F6E6578 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x34B9BA32B73A103A37B5B2B7 PUSH1 0xA1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x429 DUP3 PUSH2 0x6A8 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x496 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3F9 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ DUP1 PUSH2 0x4B2 JUMPI POP PUSH2 0x4B2 DUP2 CALLER PUSH2 0x2AD JUMP JUMPDEST PUSH2 0x524 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F74206F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E6572206E6F7220617070726F76656420666F7220616C6C0000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3F9 JUMP JUMPDEST PUSH2 0x52E DUP4 DUP4 PUSH2 0xAC0 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x53D CALLER DUP3 PUSH2 0xB2E JUMP JUMPDEST PUSH2 0x559 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3F9 SWAP1 PUSH2 0x1A56 JUMP JUMPDEST PUSH2 0x52E DUP4 DUP4 DUP4 PUSH2 0xC18 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x56F DUP4 PUSH2 0x71F JUMP JUMPDEST DUP3 LT PUSH2 0x5D1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243373231456E756D657261626C653A206F776E657220696E646578206F75 PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x74206F6620626F756E6473 PUSH1 0xA8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3F9 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x52E DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x8ED JUMP JUMPDEST PUSH1 0x0 PUSH2 0x620 PUSH1 0x8 SLOAD SWAP1 JUMP JUMPDEST DUP3 LT PUSH2 0x683 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243373231456E756D657261626C653A20676C6F62616C20696E646578206F PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x7574206F6620626F756E6473 PUSH1 0xA0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3F9 JUMP JUMPDEST PUSH1 0x8 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x696 JUMPI PUSH2 0x696 PUSH2 0x1AA7 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x2F9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206F776E657220717565727920666F72206E6F6E6578697374 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x32B73A103A37B5B2B7 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3F9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x78A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A2062616C616E636520717565727920666F7220746865207A65 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x726F2061646472657373 PUSH1 0xB0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3F9 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x7D0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3F9 SWAP1 PUSH2 0x1ABD JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x40 MLOAD PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0xB DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x30E SWAP1 PUSH2 0x1A1C JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SUB PUSH2 0x881 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3F9 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD SWAP1 DUP2 MSTORE SWAP2 SWAP3 SWAP2 PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x8F7 CALLER DUP4 PUSH2 0xB2E JUMP JUMPDEST PUSH2 0x913 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3F9 SWAP1 PUSH2 0x1A56 JUMP JUMPDEST PUSH2 0x91F DUP5 DUP5 DUP5 DUP5 PUSH2 0xDC3 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x2F9 DUP3 PUSH2 0xDF6 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x95D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3F9 SWAP1 PUSH2 0x1ABD JUMP JUMPDEST PUSH2 0x96B PUSH1 0xC DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x976 PUSH1 0xC SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP PUSH2 0x982 DUP5 DUP3 PUSH2 0xF64 JUMP JUMPDEST PUSH2 0x98C DUP2 DUP5 PUSH2 0xF82 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x9BD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3F9 SWAP1 PUSH2 0x1ABD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xA22 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3F9 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND SWAP3 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 PUSH1 0xB DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x780E9D63 PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x2F9 JUMPI POP PUSH2 0x2F9 DUP3 PUSH2 0x1006 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH2 0xAF5 DUP3 PUSH2 0x6A8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB39 DUP3 PUSH2 0xAA3 JUMP JUMPDEST PUSH2 0xB9A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206F70657261746F7220717565727920666F72206E6F6E6578 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x34B9BA32B73A103A37B5B2B7 PUSH1 0xA1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3F9 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBA5 DUP4 PUSH2 0x6A8 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0xBE0 JUMPI POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xBD5 DUP5 PUSH2 0x391 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST DUP1 PUSH2 0xC10 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP9 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xC2B DUP3 PUSH2 0x6A8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xC93 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E73666572206F6620746F6B656E20746861742069 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x39903737BA1037BBB7 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3F9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xCF5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3F9 JUMP JUMPDEST PUSH2 0xD00 DUP4 DUP4 DUP4 PUSH2 0x1056 JUMP JUMPDEST PUSH2 0xD0B PUSH1 0x0 DUP3 PUSH2 0xAC0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0xD34 SWAP1 DUP5 SWAP1 PUSH2 0x1B08 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0xD62 SWAP1 DUP5 SWAP1 PUSH2 0x1B1B JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD DUP5 SWAP4 SWAP2 DUP8 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG4 POP POP POP JUMP JUMPDEST PUSH2 0xDCE DUP5 DUP5 DUP5 PUSH2 0xC18 JUMP JUMPDEST PUSH2 0xDDA DUP5 DUP5 DUP5 DUP5 PUSH2 0x1061 JUMP JUMPDEST PUSH2 0x91F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3F9 SWAP1 PUSH2 0x1B2E JUMP JUMPDEST PUSH1 0x60 PUSH2 0xE01 DUP3 PUSH2 0xAA3 JUMP JUMPDEST PUSH2 0xE67 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x31 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524337323155524953746F726167653A2055524920717565727920666F7220 PUSH1 0x44 DUP3 ADD MSTORE PUSH17 0x3737B732BC34B9BA32B73A103A37B5B2B7 PUSH1 0x79 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3F9 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH2 0xE80 SWAP1 PUSH2 0x1A1C JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xEAC SWAP1 PUSH2 0x1A1C JUMP JUMPDEST DUP1 ISZERO PUSH2 0xEF9 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xECE JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xEF9 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xEDC JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH1 0x0 PUSH2 0xF17 PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0xF29 JUMPI POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP2 MLOAD ISZERO PUSH2 0xF5B JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xF43 SWAP3 SWAP2 SWAP1 PUSH2 0x1B80 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC10 DUP5 PUSH2 0x1162 JUMP JUMPDEST PUSH2 0xF7E DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1239 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xF8B DUP3 PUSH2 0xAA3 JUMP JUMPDEST PUSH2 0xFEE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524337323155524953746F726167653A2055524920736574206F66206E6F6E PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x32BC34B9BA32B73A103A37B5B2B7 PUSH1 0x91 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3F9 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x52E DUP3 DUP3 PUSH2 0x1BFD JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x80AC58CD PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x1037 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5B5E139F PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x2F9 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ PUSH2 0x2F9 JUMP JUMPDEST PUSH2 0x52E DUP4 DUP4 DUP4 PUSH2 0x126C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x1157 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0x10A5 SWAP1 CALLER SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1CBD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x10E0 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x10DD SWAP2 DUP2 ADD SWAP1 PUSH2 0x1CFA JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x113D JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0x110E JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1113 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0x1135 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3F9 SWAP1 PUSH2 0x1B2E JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ SWAP1 POP PUSH2 0xC10 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x116D DUP3 PUSH2 0xAA3 JUMP JUMPDEST PUSH2 0x11D1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732314D657461646174613A2055524920717565727920666F72206E6F PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x3732BC34B9BA32B73A103A37B5B2B7 PUSH1 0x89 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3F9 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11E8 PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x1208 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x98C JUMP JUMPDEST DUP1 PUSH2 0x1212 DUP5 PUSH2 0x1324 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1223 SWAP3 SWAP2 SWAP1 PUSH2 0x1B80 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x1243 DUP4 DUP4 PUSH2 0x1425 JUMP JUMPDEST PUSH2 0x1250 PUSH1 0x0 DUP5 DUP5 DUP5 PUSH2 0x1061 JUMP JUMPDEST PUSH2 0x52E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3F9 SWAP1 PUSH2 0x1B2E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x12C7 JUMPI PUSH2 0x12C2 DUP2 PUSH1 0x8 DUP1 SLOAD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP3 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD DUP4 SSTORE SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xF3F7A9FE364FAAB93B216DA50A3214154F22A0A2B415B23A84C8169E8B636EE3 ADD SSTORE JUMP JUMPDEST PUSH2 0x12EA JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x12EA JUMPI PUSH2 0x12EA DUP4 DUP3 PUSH2 0x1564 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1301 JUMPI PUSH2 0x52E DUP2 PUSH2 0x1601 JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x52E JUMPI PUSH2 0x52E DUP3 DUP3 PUSH2 0x16B0 JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH1 0x0 SUB PUSH2 0x134B JUMPI POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x3 PUSH1 0xFC SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x0 JUMPDEST DUP2 ISZERO PUSH2 0x1375 JUMPI DUP1 PUSH2 0x135F DUP2 PUSH2 0x1D17 JUMP JUMPDEST SWAP2 POP PUSH2 0x136E SWAP1 POP PUSH1 0xA DUP4 PUSH2 0x1D46 JUMP JUMPDEST SWAP2 POP PUSH2 0x134F JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1390 JUMPI PUSH2 0x1390 PUSH2 0x187F JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x13BA JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP JUMPDEST DUP5 ISZERO PUSH2 0xC10 JUMPI PUSH2 0x13CF PUSH1 0x1 DUP4 PUSH2 0x1B08 JUMP JUMPDEST SWAP2 POP PUSH2 0x13DC PUSH1 0xA DUP7 PUSH2 0x1D5A JUMP JUMPDEST PUSH2 0x13E7 SWAP1 PUSH1 0x30 PUSH2 0x1B1B JUMP JUMPDEST PUSH1 0xF8 SHL DUP2 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x13FC JUMPI PUSH2 0x13FC PUSH2 0x1AA7 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH2 0x141E PUSH1 0xA DUP7 PUSH2 0x1D46 JUMP JUMPDEST SWAP5 POP PUSH2 0x13BE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x147B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206D696E7420746F20746865207A65726F2061646472657373 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3F9 JUMP JUMPDEST PUSH2 0x1484 DUP2 PUSH2 0xAA3 JUMP JUMPDEST ISZERO PUSH2 0x14D1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20746F6B656E20616C7265616479206D696E74656400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3F9 JUMP JUMPDEST PUSH2 0x14DD PUSH1 0x0 DUP4 DUP4 PUSH2 0x1056 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x1506 SWAP1 DUP5 SWAP1 PUSH2 0x1B1B JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD DUP4 SWAP3 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 DUP3 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH2 0x1571 DUP5 PUSH2 0x71F JUMP JUMPDEST PUSH2 0x157B SWAP2 SWAP1 PUSH2 0x1B08 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP1 DUP3 EQ PUSH2 0x15CE JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 SLOAD DUP5 DUP5 MSTORE DUP2 DUP5 KECCAK256 DUP2 SWAP1 SSTORE DUP4 MSTORE PUSH1 0x7 SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP2 SWAP1 SSTORE JUMPDEST POP PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP5 SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP5 AND DUP4 MSTORE PUSH1 0x6 DUP2 MSTORE DUP4 DUP4 KECCAK256 SWAP2 DUP4 MSTORE MSTORE SWAP1 DUP2 KECCAK256 SSTORE JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x0 SWAP1 PUSH2 0x1613 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x1B08 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x8 DUP1 SLOAD SWAP4 SWAP5 POP SWAP1 SWAP3 DUP5 SWAP1 DUP2 LT PUSH2 0x163B JUMPI PUSH2 0x163B PUSH2 0x1AA7 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 PUSH1 0x8 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x165C JUMPI PUSH2 0x165C PUSH2 0x1AA7 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SWAP3 SWAP1 SWAP3 SSTORE DUP3 DUP2 MSTORE PUSH1 0x9 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP5 SWAP1 SSTORE DUP6 DUP3 MSTORE DUP2 KECCAK256 SSTORE PUSH1 0x8 DUP1 SLOAD DUP1 PUSH2 0x1694 JUMPI PUSH2 0x1694 PUSH2 0x1D6E JUMP JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16BB DUP4 PUSH2 0x71F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP7 DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP6 SWAP1 SSTORE SWAP4 DUP3 MSTORE PUSH1 0x7 SWAP1 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x170A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x171F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x98C DUP2 PUSH2 0x16F4 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1745 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x172D JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x1766 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x172A JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x98C PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x174E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x179F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x17BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x17D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x17DE DUP4 PUSH2 0x17A6 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1801 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x180A DUP5 PUSH2 0x17A6 JUMP JUMPDEST SWAP3 POP PUSH2 0x1818 PUSH1 0x20 DUP6 ADD PUSH2 0x17A6 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x183A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x98C DUP3 PUSH2 0x17A6 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1856 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x185F DUP4 PUSH2 0x17A6 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1874 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP5 GT ISZERO PUSH2 0x18B0 JUMPI PUSH2 0x18B0 PUSH2 0x187F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP6 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x18D8 JUMPI PUSH2 0x18D8 PUSH2 0x187F JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP1 SWAP4 POP DUP6 DUP2 MSTORE DUP7 DUP7 DUP7 ADD GT ISZERO PUSH2 0x18F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 DUP6 PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP8 DUP4 ADD ADD MSTORE POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1921 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x192A DUP6 PUSH2 0x17A6 JUMP JUMPDEST SWAP4 POP PUSH2 0x1938 PUSH1 0x20 DUP7 ADD PUSH2 0x17A6 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x195B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 ADD PUSH1 0x1F DUP2 ADD DUP8 SGT PUSH2 0x196C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x197B DUP8 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x1895 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x199A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x19A3 DUP4 PUSH2 0x17A6 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x19BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x19D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x19DF DUP6 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x1895 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x19FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1A05 DUP4 PUSH2 0x17A6 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A13 PUSH1 0x20 DUP5 ADD PUSH2 0x17A6 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1A30 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1A50 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x31 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E736665722063616C6C6572206973206E6F74206F PUSH1 0x40 DUP3 ADD MSTORE PUSH17 0x1DDB995C881B9BDC88185C1C1C9BDD9959 PUSH1 0x7A SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x2F9 JUMPI PUSH2 0x2F9 PUSH2 0x1AF2 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x2F9 JUMPI PUSH2 0x2F9 PUSH2 0x1AF2 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x32 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x40 DUP3 ADD MSTORE PUSH18 0x31B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x71 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH2 0x1B92 DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0x172A JUMP JUMPDEST DUP4 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0x1BA6 DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0x172A JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x52E JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0x1BD6 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1BF5 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1BE2 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1C17 JUMPI PUSH2 0x1C17 PUSH2 0x187F JUMP JUMPDEST PUSH2 0x1C2B DUP2 PUSH2 0x1C25 DUP5 SLOAD PUSH2 0x1A1C JUMP JUMPDEST DUP5 PUSH2 0x1BAF JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x1C60 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x1C48 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x1BF5 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1C8F JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x1C70 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x1CAD JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x1CF0 SWAP1 DUP4 ADD DUP5 PUSH2 0x174E JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D0C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x98C DUP2 PUSH2 0x16F4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x1D29 JUMPI PUSH2 0x1D29 PUSH2 0x1AF2 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1D55 JUMPI PUSH2 0x1D55 PUSH2 0x1D30 JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1D69 JUMPI PUSH2 0x1D69 PUSH2 0x1D30 JUMP JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC7 0xEE LOG0 SWAP5 0xF LOG2 0xE5 LOG0 DIV SWAP14 ORIGIN EXTCODESIZE DUP15 0xD8 SUB 0xF7 DUP10 0xBB 0xDA 0xC6 SELFBALANCE DIV NUMBER NOT GASLIMIT SWAP7 DUP14 0xD3 GAS 0xF 0x1F COINBASE PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "46272:1224:0:-:0;;;46450:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;46513:5;46520:7;20660:5;:13;46513:5;20660;:13;:::i;:::-;-1:-1:-1;20684:7:0;:17;20694:7;20684;:17;:::i;:::-;;20592:117;;43463:17;43483:12;:10;;;:12;;:::i;:::-;43506:6;:18;;-1:-1:-1;;;;;;43506:18:0;-1:-1:-1;;;;;43506:18:0;;;;;;;;43540:43;;43506:18;;-1:-1:-1;43506:18:0;-1:-1:-1;;43540:43:0;;-1:-1:-1;;43540:43:0;43452:139;46450:81;;46272:1224;;16055:98;16135:10;;16055:98::o;14:127:1:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:840;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:1;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:1;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;954:1;932:15;;;928:24;;;921:35;;;;936:6;146:840;-1:-1:-1;;;;146:840:1:o;991:562::-;1090:6;1098;1151:2;1139:9;1130:7;1126:23;1122:32;1119:52;;;1167:1;1164;1157:12;1119:52;1194:16;;-1:-1:-1;;;;;1259:14:1;;;1256:34;;;1286:1;1283;1276:12;1256:34;1309:61;1362:7;1353:6;1342:9;1338:22;1309:61;:::i;:::-;1299:71;;1416:2;1405:9;1401:18;1395:25;1379:41;;1445:2;1435:8;1432:16;1429:36;;;1461:1;1458;1451:12;1429:36;;1484:63;1539:7;1528:8;1517:9;1513:24;1484:63;:::i;:::-;1474:73;;;991:562;;;;;:::o;1558:380::-;1637:1;1633:12;;;;1680;;;1701:61;;1755:4;1747:6;1743:17;1733:27;;1701:61;1808:2;1800:6;1797:14;1777:18;1774:38;1771:161;;1854:10;1849:3;1845:20;1842:1;1835:31;1889:4;1886:1;1879:15;1917:4;1914:1;1907:15;1771:161;;1558:380;;;:::o;2069:545::-;2171:2;2166:3;2163:11;2160:448;;;2207:1;2232:5;2228:2;2221:17;2277:4;2273:2;2263:19;2347:2;2335:10;2331:19;2328:1;2324:27;2318:4;2314:38;2383:4;2371:10;2368:20;2365:47;;;-1:-1:-1;2406:4:1;2365:47;2461:2;2456:3;2452:12;2449:1;2445:20;2439:4;2435:31;2425:41;;2516:82;2534:2;2527:5;2524:13;2516:82;;;2579:17;;;2560:1;2549:13;2516:82;;;2520:3;;;2160:448;2069:545;;;:::o;2790:1352::-;2910:10;;-1:-1:-1;;;;;2932:30:1;;2929:56;;;2965:18;;:::i;:::-;2994:97;3084:6;3044:38;3076:4;3070:11;3044:38;:::i;:::-;3038:4;2994:97;:::i;:::-;3146:4;;3210:2;3199:14;;3227:1;3222:663;;;;3929:1;3946:6;3943:89;;;-1:-1:-1;3998:19:1;;;3992:26;3943:89;-1:-1:-1;;2747:1:1;2743:11;;;2739:24;2735:29;2725:40;2771:1;2767:11;;;2722:57;4045:81;;3192:944;;3222:663;2016:1;2009:14;;;2053:4;2040:18;;-1:-1:-1;;3258:20:1;;;3376:236;3390:7;3387:1;3384:14;3376:236;;;3479:19;;;3473:26;3458:42;;3571:27;;;;3539:1;3527:14;;;;3406:19;;3376:236;;;3380:3;3640:6;3631:7;3628:19;3625:201;;;3701:19;;;3695:26;-1:-1:-1;;3784:1:1;3780:14;;;3796:3;3776:24;3772:37;3768:42;3753:58;3738:74;;3625:201;-1:-1:-1;;;;;3872:1:1;3856:14;;;3852:22;3839:36;;-1:-1:-1;2790:1352:1:o;:::-;46272:1224:0;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_addTokenToAllTokensEnumeration_1770": {
									"entryPoint": null,
									"id": 1770,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_addTokenToOwnerEnumeration_1750": {
									"entryPoint": 5808,
									"id": 1750,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_approve_1442": {
									"entryPoint": 2752,
									"id": 1442,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_baseURI_917": {
									"entryPoint": null,
									"id": 917,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_beforeTokenTransfer_1517": {
									"entryPoint": null,
									"id": 1517,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_1720": {
									"entryPoint": 4716,
									"id": 1720,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_2260": {
									"entryPoint": 4182,
									"id": 2260,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_checkOnERC721Received_1506": {
									"entryPoint": 4193,
									"id": 1506,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@_exists_1156": {
									"entryPoint": 2723,
									"id": 1156,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_isApprovedOrOwner_1197": {
									"entryPoint": 2862,
									"id": 1197,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_mint_1298": {
									"entryPoint": 5157,
									"id": 1298,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_472": {
									"entryPoint": null,
									"id": 472,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_removeTokenFromAllTokensEnumeration_1881": {
									"entryPoint": 5633,
									"id": 1881,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_removeTokenFromOwnerEnumeration_1833": {
									"entryPoint": 5476,
									"id": 1833,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_safeMint_1212": {
									"entryPoint": 3940,
									"id": 1212,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_safeMint_1241": {
									"entryPoint": 4665,
									"id": 1241,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_safeTransfer_1138": {
									"entryPoint": 3523,
									"id": 1138,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_setTokenURI_1977": {
									"entryPoint": 3970,
									"id": 1977,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transfer_1418": {
									"entryPoint": 3096,
									"id": 1418,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@approve_960": {
									"entryPoint": 1054,
									"id": 960,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@balanceOf_818": {
									"entryPoint": 1823,
									"id": 818,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@current_2133": {
									"entryPoint": null,
									"id": 2133,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getApproved_981": {
									"entryPoint": 913,
									"id": 981,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@increment_2147": {
									"entryPoint": null,
									"id": 2147,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@isApprovedForAll_1033": {
									"entryPoint": null,
									"id": 1033,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isContract_186": {
									"entryPoint": null,
									"id": 186,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@name_856": {
									"entryPoint": 767,
									"id": 856,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@ownerOf_846": {
									"entryPoint": 1704,
									"id": 846,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@owner_2051": {
									"entryPoint": null,
									"id": 2051,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_2087": {
									"entryPoint": 1958,
									"id": 2087,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeMint_2239": {
									"entryPoint": 2352,
									"id": 2239,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@safeTransferFrom_1079": {
									"entryPoint": 1530,
									"id": 1079,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@safeTransferFrom_1109": {
									"entryPoint": 2285,
									"id": 1109,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@setApprovalForAll_1015": {
									"entryPoint": 2089,
									"id": 1015,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_1594": {
									"entryPoint": 2686,
									"id": 1594,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_2307": {
									"entryPoint": 750,
									"id": 2307,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_707": {
									"entryPoint": null,
									"id": 707,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_794": {
									"entryPoint": 4102,
									"id": 794,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@symbol_866": {
									"entryPoint": 2074,
									"id": 866,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@toString_568": {
									"entryPoint": 4900,
									"id": 568,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@tokenByIndex_1656": {
									"entryPoint": 1557,
									"id": 1656,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@tokenOfOwnerByIndex_1622": {
									"entryPoint": 1380,
									"id": 1622,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@tokenURI_1955": {
									"entryPoint": 3574,
									"id": 1955,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@tokenURI_2291": {
									"entryPoint": 2341,
									"id": 2291,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@tokenURI_908": {
									"entryPoint": 4450,
									"id": 908,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@totalSupply_1633": {
									"entryPoint": null,
									"id": 1633,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_1060": {
									"entryPoint": 1331,
									"id": 1060,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@transferOwnership_2115": {
									"entryPoint": 2451,
									"id": 2115,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 6054,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_available_length_bytes": {
									"entryPoint": 6293,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 6184,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 6633,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 6124,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr": {
									"entryPoint": 6411,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 6211,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_string_memory_ptr": {
									"entryPoint": 6535,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 6082,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 5901,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 7418,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 6029,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_string": {
									"entryPoint": 5966,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 7040,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 7357,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6010,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1d7f5dcf03a65f41ee49b0ab593e3851cfbe3fd7da53b6cf4eddd83c7df5734c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6958,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8e9ed1638ba7e2d59e03d0957c9339381732ac84d73f65c86c45db1467eafa2a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6845,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a01073130a885d6c1c1af6ac75fc3b1c4f9403c235362962bbf528e2bd87d950__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6742,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d269a4e9f5820dcdb69ea21f528512eb9b927c8d846d48aa51c9219f461d4dcc__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 6939,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 7494,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 6920,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 7087,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 7165,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 5930,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 6684,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 7447,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mod_t_uint256": {
									"entryPoint": 7514,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 6898,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 7472,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x31": {
									"entryPoint": 7534,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 6823,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 6271,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_bytes4": {
									"entryPoint": 5876,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:18517:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "58:87:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "123:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "132:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "135:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "125:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "125:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "125:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "81:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "92:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "103:3:1",
																								"type": "",
																								"value": "224"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "108:10:1",
																								"type": "",
																								"value": "0xffffffff"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "99:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "99:20:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "88:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "88:32:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "78:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "78:43:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "71:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "71:51:1"
															},
															"nodeType": "YulIf",
															"src": "68:71:1"
														}
													]
												},
												"name": "validator_revert_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "47:5:1",
														"type": ""
													}
												],
												"src": "14:131:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "219:176:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "265:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "274:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "277:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "267:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "267:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "267:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "240:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "249:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "236:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "236:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "261:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "232:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "232:32:1"
															},
															"nodeType": "YulIf",
															"src": "229:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "290:36:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "316:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "303:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "303:23:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "294:5:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "359:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "335:23:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "335:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "335:30:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "374:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "384:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "374:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "185:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "196:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "208:6:1",
														"type": ""
													}
												],
												"src": "150:245:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "495:92:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "505:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "517:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "528:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "513:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "513:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "505:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "547:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "572:6:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "565:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "565:14:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "558:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "558:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "540:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "540:41:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "540:41:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "464:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "475:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "486:4:1",
														"type": ""
													}
												],
												"src": "400:187:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "658:184:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "668:10:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "677:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "672:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "737:63:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "762:3:1"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "767:1:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "758:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "758:11:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "781:3:1"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "786:1:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "777:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "777:11:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "771:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "771:18:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "751:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "751:39:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "751:39:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "698:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "701:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "695:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "695:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "709:19:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "711:15:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "720:1:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "723:2:1",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "716:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "716:10:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "711:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "691:3:1",
																"statements": []
															},
															"src": "687:113:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "820:3:1"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "825:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "816:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "816:16:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "834:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "809:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "809:27:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "809:27:1"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "636:3:1",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "641:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "646:6:1",
														"type": ""
													}
												],
												"src": "592:250:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "897:221:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "907:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "927:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "921:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "921:12:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "911:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "949:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "954:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "942:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "942:19:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "942:19:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1009:5:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1016:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1005:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1005:16:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "1027:3:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1032:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1023:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1023:14:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1039:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "970:34:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "970:76:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "970:76:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1055:57:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "1070:3:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "1083:6:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1091:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "1079:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1079:15:1"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1100:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "1096:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1096:7:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "1075:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1075:29:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1066:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1066:39:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1107:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1062:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1062:50:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1055:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_string",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "874:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "881:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "889:3:1",
														"type": ""
													}
												],
												"src": "847:271:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1244:99:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1261:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1272:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1254:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1254:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1254:21:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1284:53:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1310:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1322:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1333:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1318:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1318:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nodeType": "YulIdentifier",
																	"src": "1292:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1292:45:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1284:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1213:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1224:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1235:4:1",
														"type": ""
													}
												],
												"src": "1123:220:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1418:110:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1464:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1473:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1476:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1466:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1466:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1466:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1439:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1448:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1435:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1435:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1460:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1431:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1431:32:1"
															},
															"nodeType": "YulIf",
															"src": "1428:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1489:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1512:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1499:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1499:23:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1489:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1384:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1395:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1407:6:1",
														"type": ""
													}
												],
												"src": "1348:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1634:102:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1644:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1656:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1667:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1652:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1652:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1644:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1686:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1701:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1717:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1722:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "1713:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1713:11:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1726:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "1709:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1709:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1697:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1697:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1679:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1679:51:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1679:51:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1603:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1614:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1625:4:1",
														"type": ""
													}
												],
												"src": "1533:203:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1790:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1800:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1822:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1809:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1809:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1800:5:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1892:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1901:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1904:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1894:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1894:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1894:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1851:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1862:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1877:3:1",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1882:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "1873:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "1873:11:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1886:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "1869:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1869:19:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "1858:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1858:31:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1848:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1848:42:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1841:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1841:50:1"
															},
															"nodeType": "YulIf",
															"src": "1838:70:1"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1769:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1780:5:1",
														"type": ""
													}
												],
												"src": "1741:173:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2006:167:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2052:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2061:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2064:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2054:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2054:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2054:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2027:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2036:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2023:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2023:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2048:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2019:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2019:32:1"
															},
															"nodeType": "YulIf",
															"src": "2016:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2077:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2106:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2087:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2087:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2077:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2125:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2152:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2163:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2148:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2148:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2135:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2135:32:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2125:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1964:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1975:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1987:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1995:6:1",
														"type": ""
													}
												],
												"src": "1919:254:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2279:76:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2289:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2301:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2312:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2297:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2297:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2289:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2331:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2342:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2324:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2324:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2324:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2248:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2259:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2270:4:1",
														"type": ""
													}
												],
												"src": "2178:177:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2464:224:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2510:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2519:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2522:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2512:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2512:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2512:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2485:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2494:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2481:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2481:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2506:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2477:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2477:32:1"
															},
															"nodeType": "YulIf",
															"src": "2474:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2535:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2564:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2545:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2545:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2535:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2583:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2616:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2627:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2612:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2612:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2593:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2593:38:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2583:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2640:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2667:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2678:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2663:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2663:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2650:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2650:32:1"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "2640:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2414:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2425:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2437:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2445:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2453:6:1",
														"type": ""
													}
												],
												"src": "2360:328:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2763:116:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2809:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2818:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2821:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2811:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2811:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2811:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2784:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2793:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2780:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2780:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2805:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2776:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2776:32:1"
															},
															"nodeType": "YulIf",
															"src": "2773:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2834:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2863:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2844:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2844:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2834:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2729:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2740:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2752:6:1",
														"type": ""
													}
												],
												"src": "2693:186:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2968:263:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3014:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3023:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3026:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3016:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3016:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3016:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2989:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2998:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2985:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2985:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3010:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2981:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2981:32:1"
															},
															"nodeType": "YulIf",
															"src": "2978:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3039:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3068:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "3049:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3049:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3039:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3087:45:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3117:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3128:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3113:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3113:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3100:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3100:32:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "3091:5:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3185:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3194:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3197:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3187:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3187:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3187:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3154:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "3175:5:1"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "3168:6:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3168:13:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "3161:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3161:21:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "3151:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3151:32:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3144:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3144:40:1"
															},
															"nodeType": "YulIf",
															"src": "3141:60:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3210:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3220:5:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "3210:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2926:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2937:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2949:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2957:6:1",
														"type": ""
													}
												],
												"src": "2884:347:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3268:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3285:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3292:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3297:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "3288:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3288:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3278:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3278:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3278:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3325:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3328:4:1",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3318:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3318:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3318:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3349:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3352:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3342:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3342:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3342:15:1"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "3236:127:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3442:557:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3452:28:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3462:18:1",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "3456:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3507:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "3509:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3509:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3509:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3495:6:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3503:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3492:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3492:14:1"
															},
															"nodeType": "YulIf",
															"src": "3489:40:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3538:17:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3552:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "3548:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3548:7:1"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "3542:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3564:23:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3584:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3578:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3578:9:1"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "3568:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3596:73:1",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "3618:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "length",
																										"nodeType": "YulIdentifier",
																										"src": "3642:6:1"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "3650:2:1",
																										"type": "",
																										"value": "31"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "3638:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3638:15:1"
																							},
																							{
																								"name": "_2",
																								"nodeType": "YulIdentifier",
																								"src": "3655:2:1"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "3634:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3634:24:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3660:2:1",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3630:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3630:33:1"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "3665:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3626:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3626:42:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3614:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3614:55:1"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "3600:10:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3728:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "3730:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3730:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3730:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "3687:10:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "3699:2:1"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "3684:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3684:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "3707:10:1"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "3719:6:1"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "3704:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3704:22:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "3681:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3681:46:1"
															},
															"nodeType": "YulIf",
															"src": "3678:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3766:2:1",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "3770:10:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3759:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3759:22:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3759:22:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3790:15:1",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "3799:6:1"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "3790:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "3821:6:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3829:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3814:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3814:22:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3814:22:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3874:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3883:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3886:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3876:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3876:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3876:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "3855:3:1"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "3860:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3851:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3851:16:1"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "3869:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3848:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3848:25:1"
															},
															"nodeType": "YulIf",
															"src": "3845:45:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "3916:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3924:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3912:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3912:17:1"
																	},
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "3931:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3936:6:1"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "3899:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3899:44:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3899:44:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nodeType": "YulIdentifier",
																						"src": "3967:6:1"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "3975:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3963:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3963:19:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3984:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3959:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3959:30:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3991:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3952:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3952:41:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3952:41:1"
														}
													]
												},
												"name": "abi_decode_available_length_bytes",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "3411:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3416:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3424:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "3432:5:1",
														"type": ""
													}
												],
												"src": "3368:631:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4134:536:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4181:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4190:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4193:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4183:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4183:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4183:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4155:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4164:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4151:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4151:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4176:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4147:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4147:33:1"
															},
															"nodeType": "YulIf",
															"src": "4144:53:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4206:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4235:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "4216:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4216:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4206:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4254:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4287:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4298:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4283:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4283:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "4264:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4264:38:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "4254:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4311:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4338:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4349:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4334:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4334:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4321:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4321:32:1"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "4311:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4362:46:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4393:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4404:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4389:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4389:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4376:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4376:32:1"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "4366:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4451:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4460:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4463:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4453:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4453:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4453:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4423:6:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4431:18:1",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4420:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4420:30:1"
															},
															"nodeType": "YulIf",
															"src": "4417:50:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4476:32:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4490:9:1"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4501:6:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4486:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4486:22:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "4480:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4556:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4565:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4568:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4558:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4558:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4558:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "4535:2:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4539:4:1",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4531:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4531:13:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4546:7:1"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "4527:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4527:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4520:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4520:35:1"
															},
															"nodeType": "YulIf",
															"src": "4517:55:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4581:83:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "4629:2:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4633:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4625:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4625:11:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "4651:2:1"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "4638:12:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4638:16:1"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "4656:7:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "4591:33:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4591:73:1"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "4581:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4076:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4087:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4099:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4107:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "4115:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "4123:6:1",
														"type": ""
													}
												],
												"src": "4004:666:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4772:427:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4818:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4827:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4830:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4820:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4820:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4820:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4793:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4802:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4789:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4789:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4814:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4785:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4785:32:1"
															},
															"nodeType": "YulIf",
															"src": "4782:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4843:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4872:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "4853:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4853:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4843:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4891:46:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4922:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4933:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4918:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4918:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4905:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4905:32:1"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "4895:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4980:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4989:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4992:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4982:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4982:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4982:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4952:6:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4960:18:1",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4949:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4949:30:1"
															},
															"nodeType": "YulIf",
															"src": "4946:50:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5005:32:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5019:9:1"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "5030:6:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5015:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5015:22:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "5009:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5085:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5094:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5097:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5087:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5087:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5087:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "5064:2:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5068:4:1",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5060:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5060:13:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5075:7:1"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "5056:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5056:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5049:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5049:35:1"
															},
															"nodeType": "YulIf",
															"src": "5046:55:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5110:83:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "5158:2:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5162:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5154:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5154:11:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "5180:2:1"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "5167:12:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5167:16:1"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "5185:7:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "5120:33:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5120:73:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "5110:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4730:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4741:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4753:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4761:6:1",
														"type": ""
													}
												],
												"src": "4675:524:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5291:173:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5337:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5346:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5349:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5339:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5339:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5339:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5312:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5321:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5308:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5308:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5333:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5304:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5304:32:1"
															},
															"nodeType": "YulIf",
															"src": "5301:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5362:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5391:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "5372:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5372:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "5362:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5410:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5443:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5454:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5439:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5439:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "5420:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5420:38:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "5410:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5249:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5260:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5272:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5280:6:1",
														"type": ""
													}
												],
												"src": "5204:260:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5524:325:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5534:22:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5548:1:1",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "5551:4:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "5544:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5544:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "5534:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5565:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "5595:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5601:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "5591:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5591:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "5569:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5642:31:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "5644:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "5658:6:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5666:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "5654:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5654:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "5644:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "5622:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5615:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5615:26:1"
															},
															"nodeType": "YulIf",
															"src": "5612:61:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5732:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5753:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5760:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5765:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "5756:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5756:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5746:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5746:31:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5746:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5797:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5800:4:1",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5790:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5790:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5790:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5825:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5828:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5818:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5818:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5818:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "5688:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "5711:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5719:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "5708:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5708:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "5685:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5685:38:1"
															},
															"nodeType": "YulIf",
															"src": "5682:161:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "5504:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "5513:6:1",
														"type": ""
													}
												],
												"src": "5469:380:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6028:234:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6045:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6056:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6038:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6038:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6038:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6079:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6090:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6075:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6075:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6095:2:1",
																		"type": "",
																		"value": "44"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6068:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6068:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6068:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6118:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6129:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6114:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6114:18:1"
																	},
																	{
																		"hexValue": "4552433732313a20617070726f76656420717565727920666f72206e6f6e6578",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6134:34:1",
																		"type": "",
																		"value": "ERC721: approved query for nonex"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6107:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6107:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6107:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6189:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6200:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6185:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6185:18:1"
																	},
																	{
																		"hexValue": "697374656e7420746f6b656e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6205:14:1",
																		"type": "",
																		"value": "istent token"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6178:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6178:42:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6178:42:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6229:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6241:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6252:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6237:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6237:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6229:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6005:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6019:4:1",
														"type": ""
													}
												],
												"src": "5854:408:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6441:223:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6458:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6469:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6451:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6451:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6451:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6492:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6503:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6488:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6488:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6508:2:1",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6481:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6481:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6481:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6531:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6542:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6527:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6527:18:1"
																	},
																	{
																		"hexValue": "4552433732313a20617070726f76616c20746f2063757272656e74206f776e65",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6547:34:1",
																		"type": "",
																		"value": "ERC721: approval to current owne"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6520:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6520:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6520:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6602:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6613:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6598:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6598:18:1"
																	},
																	{
																		"hexValue": "72",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6618:3:1",
																		"type": "",
																		"value": "r"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6591:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6591:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6591:31:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6631:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6643:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6654:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6639:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6639:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6631:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6418:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6432:4:1",
														"type": ""
													}
												],
												"src": "6267:397:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6843:246:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6860:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6871:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6853:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6853:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6853:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6894:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6905:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6890:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6890:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6910:2:1",
																		"type": "",
																		"value": "56"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6883:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6883:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6883:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6933:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6944:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6929:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6929:18:1"
																	},
																	{
																		"hexValue": "4552433732313a20617070726f76652063616c6c6572206973206e6f74206f77",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6949:34:1",
																		"type": "",
																		"value": "ERC721: approve caller is not ow"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6922:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6922:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6922:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7004:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7015:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7000:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7000:18:1"
																	},
																	{
																		"hexValue": "6e6572206e6f7220617070726f76656420666f7220616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7020:26:1",
																		"type": "",
																		"value": "ner nor approved for all"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6993:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6993:54:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6993:54:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7056:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7068:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7079:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7064:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7064:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7056:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6820:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6834:4:1",
														"type": ""
													}
												],
												"src": "6669:420:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7268:239:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7285:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7296:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7278:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7278:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7278:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7319:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7330:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7315:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7315:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7335:2:1",
																		"type": "",
																		"value": "49"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7308:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7308:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7308:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7358:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7369:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7354:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7354:18:1"
																	},
																	{
																		"hexValue": "4552433732313a207472616e736665722063616c6c6572206973206e6f74206f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7374:34:1",
																		"type": "",
																		"value": "ERC721: transfer caller is not o"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7347:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7347:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7347:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7429:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7440:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7425:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7425:18:1"
																	},
																	{
																		"hexValue": "776e6572206e6f7220617070726f766564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7445:19:1",
																		"type": "",
																		"value": "wner nor approved"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7418:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7418:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7418:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7474:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7486:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7497:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7482:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7482:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7474:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7245:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7259:4:1",
														"type": ""
													}
												],
												"src": "7094:413:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7686:233:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7703:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7714:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7696:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7696:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7696:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7737:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7748:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7733:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7733:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7753:2:1",
																		"type": "",
																		"value": "43"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7726:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7726:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7726:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7776:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7787:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7772:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7772:18:1"
																	},
																	{
																		"hexValue": "455243373231456e756d657261626c653a206f776e657220696e646578206f75",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7792:34:1",
																		"type": "",
																		"value": "ERC721Enumerable: owner index ou"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7765:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7765:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7765:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7847:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7858:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7843:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7843:18:1"
																	},
																	{
																		"hexValue": "74206f6620626f756e6473",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7863:13:1",
																		"type": "",
																		"value": "t of bounds"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7836:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7836:41:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7836:41:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7886:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7898:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7909:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7894:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7894:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7886:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1d7f5dcf03a65f41ee49b0ab593e3851cfbe3fd7da53b6cf4eddd83c7df5734c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7663:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7677:4:1",
														"type": ""
													}
												],
												"src": "7512:407:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8098:234:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8115:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8126:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8108:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8108:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8108:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8149:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8160:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8145:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8145:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8165:2:1",
																		"type": "",
																		"value": "44"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8138:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8138:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8138:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8188:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8199:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8184:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8184:18:1"
																	},
																	{
																		"hexValue": "455243373231456e756d657261626c653a20676c6f62616c20696e646578206f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8204:34:1",
																		"type": "",
																		"value": "ERC721Enumerable: global index o"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8177:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8177:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8177:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8259:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8270:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8255:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8255:18:1"
																	},
																	{
																		"hexValue": "7574206f6620626f756e6473",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8275:14:1",
																		"type": "",
																		"value": "ut of bounds"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8248:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8248:42:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8248:42:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8299:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8311:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8322:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8307:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8307:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8299:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d269a4e9f5820dcdb69ea21f528512eb9b927c8d846d48aa51c9219f461d4dcc__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8075:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8089:4:1",
														"type": ""
													}
												],
												"src": "7924:408:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8369:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8386:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8393:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8398:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "8389:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8389:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8379:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8379:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8379:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8426:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8429:4:1",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8419:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8419:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8419:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8450:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8453:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "8443:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8443:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8443:15:1"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "8337:127:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8643:231:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8660:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8671:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8653:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8653:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8653:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8694:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8705:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8690:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8690:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8710:2:1",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8683:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8683:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8683:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8733:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8744:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8729:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8729:18:1"
																	},
																	{
																		"hexValue": "4552433732313a206f776e657220717565727920666f72206e6f6e6578697374",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8749:34:1",
																		"type": "",
																		"value": "ERC721: owner query for nonexist"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8722:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8722:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8722:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8804:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8815:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8800:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8800:18:1"
																	},
																	{
																		"hexValue": "656e7420746f6b656e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8820:11:1",
																		"type": "",
																		"value": "ent token"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8793:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8793:39:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8793:39:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8841:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8853:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8864:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8849:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8849:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8841:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8620:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8634:4:1",
														"type": ""
													}
												],
												"src": "8469:405:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9053:232:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9070:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9081:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9063:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9063:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9063:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9104:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9115:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9100:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9100:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9120:2:1",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9093:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9093:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9093:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9143:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9154:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9139:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9139:18:1"
																	},
																	{
																		"hexValue": "4552433732313a2062616c616e636520717565727920666f7220746865207a65",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9159:34:1",
																		"type": "",
																		"value": "ERC721: balance query for the ze"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9132:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9132:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9132:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9214:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9225:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9210:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9210:18:1"
																	},
																	{
																		"hexValue": "726f2061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9230:12:1",
																		"type": "",
																		"value": "ro address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9203:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9203:40:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9203:40:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9252:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9264:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9275:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9260:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9260:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9252:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9030:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9044:4:1",
														"type": ""
													}
												],
												"src": "8879:406:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9464:182:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9481:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9492:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9474:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9474:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9474:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9515:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9526:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9511:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9511:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9531:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9504:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9504:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9504:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9554:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9565:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9550:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9550:18:1"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9570:34:1",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9543:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9543:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9543:62:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9614:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9626:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9637:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9622:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9622:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9614:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9441:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9455:4:1",
														"type": ""
													}
												],
												"src": "9290:356:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9825:175:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9842:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9853:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9835:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9835:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9835:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9876:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9887:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9872:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9872:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9892:2:1",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9865:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9865:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9865:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9915:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9926:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9911:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9911:18:1"
																	},
																	{
																		"hexValue": "4552433732313a20617070726f766520746f2063616c6c6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9931:27:1",
																		"type": "",
																		"value": "ERC721: approve to caller"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9904:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9904:55:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9904:55:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9968:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9980:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9991:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9976:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9976:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9968:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9802:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9816:4:1",
														"type": ""
													}
												],
												"src": "9651:349:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10179:228:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10196:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10207:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10189:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10189:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10189:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10230:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10241:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10226:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10226:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10246:2:1",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10219:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10219:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10219:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10269:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10280:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10265:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10265:18:1"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10285:34:1",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10258:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10258:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10258:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10340:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10351:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10336:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10336:18:1"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10356:8:1",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10329:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10329:36:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10329:36:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10374:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10386:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10397:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10382:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10382:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10374:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10156:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10170:4:1",
														"type": ""
													}
												],
												"src": "10005:402:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10586:234:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10603:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10614:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10596:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10596:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10596:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10637:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10648:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10633:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10633:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10653:2:1",
																		"type": "",
																		"value": "44"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10626:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10626:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10626:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10676:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10687:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10672:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10672:18:1"
																	},
																	{
																		"hexValue": "4552433732313a206f70657261746f7220717565727920666f72206e6f6e6578",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10692:34:1",
																		"type": "",
																		"value": "ERC721: operator query for nonex"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10665:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10665:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10665:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10747:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10758:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10743:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10743:18:1"
																	},
																	{
																		"hexValue": "697374656e7420746f6b656e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10763:14:1",
																		"type": "",
																		"value": "istent token"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10736:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10736:42:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10736:42:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10787:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10799:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10810:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10795:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10795:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10787:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10563:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10577:4:1",
														"type": ""
													}
												],
												"src": "10412:408:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10999:231:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11016:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11027:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11009:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11009:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11009:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11050:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11061:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11046:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11046:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11066:2:1",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11039:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11039:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11039:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11089:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11100:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11085:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11085:18:1"
																	},
																	{
																		"hexValue": "4552433732313a207472616e73666572206f6620746f6b656e20746861742069",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11105:34:1",
																		"type": "",
																		"value": "ERC721: transfer of token that i"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11078:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11078:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11078:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11160:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11171:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11156:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11156:18:1"
																	},
																	{
																		"hexValue": "73206e6f74206f776e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11176:11:1",
																		"type": "",
																		"value": "s not own"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11149:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11149:39:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11149:39:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11197:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11209:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11220:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11205:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11205:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11197:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a01073130a885d6c1c1af6ac75fc3b1c4f9403c235362962bbf528e2bd87d950__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10976:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10990:4:1",
														"type": ""
													}
												],
												"src": "10825:405:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11409:226:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11426:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11437:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11419:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11419:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11419:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11460:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11471:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11456:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11456:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11476:2:1",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11449:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11449:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11449:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11499:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11510:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11495:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11495:18:1"
																	},
																	{
																		"hexValue": "4552433732313a207472616e7366657220746f20746865207a65726f20616464",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11515:34:1",
																		"type": "",
																		"value": "ERC721: transfer to the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11488:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11488:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11488:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11570:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11581:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11566:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11566:18:1"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11586:6:1",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11559:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11559:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11559:34:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11602:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11614:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11625:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11610:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11610:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11602:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11386:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11400:4:1",
														"type": ""
													}
												],
												"src": "11235:400:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11672:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11689:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11696:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11701:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "11692:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11692:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11682:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11682:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11682:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11729:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11732:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11722:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11722:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11722:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11753:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11756:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "11746:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11746:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11746:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "11640:127:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11821:79:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11831:17:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11843:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11846:1:1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "11839:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11839:9:1"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "11831:4:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11872:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "11874:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11874:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11874:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nodeType": "YulIdentifier",
																		"src": "11863:4:1"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11869:1:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "11860:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11860:11:1"
															},
															"nodeType": "YulIf",
															"src": "11857:37:1"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "11803:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "11806:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "11812:4:1",
														"type": ""
													}
												],
												"src": "11772:128:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11953:77:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11963:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11974:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11977:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11970:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11970:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "11963:3:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12002:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "12004:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12004:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12004:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11994:1:1"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "11997:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "11991:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11991:10:1"
															},
															"nodeType": "YulIf",
															"src": "11988:36:1"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "11936:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "11939:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "11945:3:1",
														"type": ""
													}
												],
												"src": "11905:125:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12209:240:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12226:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12237:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12219:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12219:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12219:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12260:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12271:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12256:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12256:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12276:2:1",
																		"type": "",
																		"value": "50"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12249:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12249:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12249:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12299:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12310:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12295:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12295:18:1"
																	},
																	{
																		"hexValue": "4552433732313a207472616e7366657220746f206e6f6e204552433732315265",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12315:34:1",
																		"type": "",
																		"value": "ERC721: transfer to non ERC721Re"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12288:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12288:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12288:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12370:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12381:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12366:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12366:18:1"
																	},
																	{
																		"hexValue": "63656976657220696d706c656d656e746572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12386:20:1",
																		"type": "",
																		"value": "ceiver implementer"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12359:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12359:48:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12359:48:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12416:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12428:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12439:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12424:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12424:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12416:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12186:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12200:4:1",
														"type": ""
													}
												],
												"src": "12035:414:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12628:239:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12645:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12656:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12638:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12638:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12638:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12679:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12690:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12675:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12675:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12695:2:1",
																		"type": "",
																		"value": "49"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12668:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12668:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12668:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12718:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12729:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12714:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12714:18:1"
																	},
																	{
																		"hexValue": "45524337323155524953746f726167653a2055524920717565727920666f7220",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12734:34:1",
																		"type": "",
																		"value": "ERC721URIStorage: URI query for "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12707:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12707:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12707:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12789:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12800:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12785:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12785:18:1"
																	},
																	{
																		"hexValue": "6e6f6e6578697374656e7420746f6b656e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12805:19:1",
																		"type": "",
																		"value": "nonexistent token"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12778:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12778:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12778:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12834:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12846:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12857:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12842:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12842:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12834:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8e9ed1638ba7e2d59e03d0957c9339381732ac84d73f65c86c45db1467eafa2a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12605:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12619:4:1",
														"type": ""
													}
												],
												"src": "12454:413:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13059:309:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "13069:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "13089:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "13083:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13083:13:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "13073:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "13144:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13152:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13140:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13140:17:1"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13159:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "13164:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "13105:34:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13105:66:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13105:66:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "13180:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13197:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "13202:6:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13193:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13193:16:1"
															},
															"variables": [
																{
																	"name": "end_1",
																	"nodeType": "YulTypedName",
																	"src": "13184:5:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "13218:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "13240:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "13234:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13234:13:1"
															},
															"variables": [
																{
																	"name": "length_1",
																	"nodeType": "YulTypedName",
																	"src": "13222:8:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "13295:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13303:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13291:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13291:17:1"
																	},
																	{
																		"name": "end_1",
																		"nodeType": "YulIdentifier",
																		"src": "13310:5:1"
																	},
																	{
																		"name": "length_1",
																		"nodeType": "YulIdentifier",
																		"src": "13317:8:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "13256:34:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13256:70:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13256:70:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13335:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "end_1",
																		"nodeType": "YulIdentifier",
																		"src": "13346:5:1"
																	},
																	{
																		"name": "length_1",
																		"nodeType": "YulIdentifier",
																		"src": "13353:8:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13342:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13342:20:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "13335:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13027:3:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "13032:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "13040:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "13051:3:1",
														"type": ""
													}
												],
												"src": "12872:496:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13547:236:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13564:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13575:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13557:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13557:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13557:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13598:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13609:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13594:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13594:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13614:2:1",
																		"type": "",
																		"value": "46"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13587:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13587:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13587:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13637:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13648:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13633:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13633:18:1"
																	},
																	{
																		"hexValue": "45524337323155524953746f726167653a2055524920736574206f66206e6f6e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13653:34:1",
																		"type": "",
																		"value": "ERC721URIStorage: URI set of non"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13626:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13626:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13626:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13708:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13719:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13704:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13704:18:1"
																	},
																	{
																		"hexValue": "6578697374656e7420746f6b656e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13724:16:1",
																		"type": "",
																		"value": "existent token"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13697:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13697:44:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13697:44:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13750:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13762:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13773:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13758:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13758:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13750:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13524:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13538:4:1",
														"type": ""
													}
												],
												"src": "13373:410:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13844:65:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13861:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "13864:3:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13854:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13854:14:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13854:14:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13877:26:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13895:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13898:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "13885:9:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13885:18:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "13877:4:1"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "13827:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "13835:4:1",
														"type": ""
													}
												],
												"src": "13788:121:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13995:464:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14028:425:1",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "14042:11:1",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "14052:1:1",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nodeType": "YulTypedName",
																				"src": "14046:2:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "14073:2:1"
																				},
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "14077:5:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "14066:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14066:17:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14066:17:1"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "14096:31:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "14118:2:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14122:4:1",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nodeType": "YulIdentifier",
																				"src": "14108:9:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14108:19:1"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nodeType": "YulTypedName",
																				"src": "14100:4:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "14140:57:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nodeType": "YulIdentifier",
																					"src": "14163:4:1"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "14173:1:1",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nodeType": "YulIdentifier",
																									"src": "14180:10:1"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "14192:2:1",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "14176:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "14176:19:1"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nodeType": "YulIdentifier",
																						"src": "14169:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "14169:27:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "14159:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14159:38:1"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nodeType": "YulTypedName",
																				"src": "14144:11:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "14234:23:1",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "14236:19:1",
																					"value": {
																						"name": "data",
																						"nodeType": "YulIdentifier",
																						"src": "14251:4:1"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nodeType": "YulIdentifier",
																							"src": "14236:11:1"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nodeType": "YulIdentifier",
																					"src": "14216:10:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14228:4:1",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "14213:2:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14213:20:1"
																		},
																		"nodeType": "YulIf",
																		"src": "14210:47:1"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "14270:41:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nodeType": "YulIdentifier",
																					"src": "14284:4:1"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "14294:1:1",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nodeType": "YulIdentifier",
																									"src": "14301:3:1"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "14306:2:1",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "14297:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "14297:12:1"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nodeType": "YulIdentifier",
																						"src": "14290:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "14290:20:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "14280:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14280:31:1"
																		},
																		"variables": [
																			{
																				"name": "_2",
																				"nodeType": "YulTypedName",
																				"src": "14274:2:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "14324:24:1",
																		"value": {
																			"name": "deleteStart",
																			"nodeType": "YulIdentifier",
																			"src": "14337:11:1"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nodeType": "YulTypedName",
																				"src": "14328:5:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "14422:21:1",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nodeType": "YulIdentifier",
																								"src": "14431:5:1"
																							},
																							{
																								"name": "_1",
																								"nodeType": "YulIdentifier",
																								"src": "14438:2:1"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nodeType": "YulIdentifier",
																							"src": "14424:6:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "14424:17:1"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "14424:17:1"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "14372:5:1"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "14379:2:1"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "14369:2:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14369:13:1"
																		},
																		"nodeType": "YulForLoop",
																		"post": {
																			"nodeType": "YulBlock",
																			"src": "14383:26:1",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "14385:22:1",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nodeType": "YulIdentifier",
																								"src": "14398:5:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "14405:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "14394:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "14394:13:1"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nodeType": "YulIdentifier",
																							"src": "14385:5:1"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nodeType": "YulBlock",
																			"src": "14365:3:1",
																			"statements": []
																		},
																		"src": "14361:82:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "14011:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14016:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "14008:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14008:11:1"
															},
															"nodeType": "YulIf",
															"src": "14005:448:1"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "13967:5:1",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "13974:3:1",
														"type": ""
													},
													{
														"name": "startIndex",
														"nodeType": "YulTypedName",
														"src": "13979:10:1",
														"type": ""
													}
												],
												"src": "13914:545:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14549:81:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14559:65:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nodeType": "YulIdentifier",
																				"src": "14574:4:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "14592:1:1",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nodeType": "YulIdentifier",
																										"src": "14595:3:1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "14588:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "14588:11:1"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "14605:1:1",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nodeType": "YulIdentifier",
																									"src": "14601:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "14601:6:1"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nodeType": "YulIdentifier",
																							"src": "14584:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "14584:24:1"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "14580:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14580:29:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "14570:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14570:40:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14616:1:1",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nodeType": "YulIdentifier",
																				"src": "14619:3:1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "14612:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14612:11:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "14567:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14567:57:1"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nodeType": "YulIdentifier",
																	"src": "14559:4:1"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "14526:4:1",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "14532:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nodeType": "YulTypedName",
														"src": "14540:4:1",
														"type": ""
													}
												],
												"src": "14464:166:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14731:1256:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14741:24:1",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "14761:3:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "14755:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14755:10:1"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nodeType": "YulTypedName",
																	"src": "14745:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14808:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "14810:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14810:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14810:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "14780:6:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14788:18:1",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "14777:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14777:30:1"
															},
															"nodeType": "YulIf",
															"src": "14774:56:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "14883:4:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nodeType": "YulIdentifier",
																						"src": "14921:4:1"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nodeType": "YulIdentifier",
																					"src": "14915:5:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14915:11:1"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nodeType": "YulIdentifier",
																			"src": "14889:25:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14889:38:1"
																	},
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "14929:6:1"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nodeType": "YulIdentifier",
																	"src": "14839:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14839:97:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14839:97:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14945:18:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "14962:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulTypedName",
																	"src": "14949:9:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14972:23:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "14991:4:1",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "srcOffset_1",
																	"nodeType": "YulTypedName",
																	"src": "14976:11:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "15004:24:1",
															"value": {
																"name": "srcOffset_1",
																"nodeType": "YulIdentifier",
																"src": "15017:11:1"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulIdentifier",
																	"src": "15004:9:1"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "15074:656:1",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "15088:35:1",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "15107:6:1"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "15119:2:1",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "15115:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "15115:7:1"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "15103:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "15103:20:1"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nodeType": "YulTypedName",
																						"src": "15092:7:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "15136:49:1",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "15180:4:1"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nodeType": "YulIdentifier",
																						"src": "15150:29:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "15150:35:1"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nodeType": "YulTypedName",
																						"src": "15140:6:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "15198:10:1",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "15207:1:1",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "15202:1:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "15285:172:1",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "15310:6:1"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nodeType": "YulIdentifier",
																														"src": "15328:3:1"
																													},
																													{
																														"name": "srcOffset",
																														"nodeType": "YulIdentifier",
																														"src": "15333:9:1"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nodeType": "YulIdentifier",
																													"src": "15324:3:1"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "15324:19:1"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "15318:5:1"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "15318:26:1"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "15303:6:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "15303:42:1"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "15303:42:1"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "15362:24:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "15376:6:1"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "15384:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "15372:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "15372:14:1"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nodeType": "YulIdentifier",
																									"src": "15362:6:1"
																								}
																							]
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "15403:40:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nodeType": "YulIdentifier",
																										"src": "15420:9:1"
																									},
																									{
																										"name": "srcOffset_1",
																										"nodeType": "YulIdentifier",
																										"src": "15431:11:1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "15416:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "15416:27:1"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nodeType": "YulIdentifier",
																									"src": "15403:9:1"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "15232:1:1"
																						},
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "15235:7:1"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "15229:2:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "15229:14:1"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "15244:28:1",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "15246:24:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "15255:1:1"
																									},
																									{
																										"name": "srcOffset_1",
																										"nodeType": "YulIdentifier",
																										"src": "15258:11:1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "15251:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "15251:19:1"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "15246:1:1"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "15225:3:1",
																					"statements": []
																				},
																				"src": "15221:236:1"
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "15505:166:1",
																					"statements": [
																						{
																							"nodeType": "YulVariableDeclaration",
																							"src": "15523:43:1",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "15550:3:1"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "15555:9:1"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "15546:3:1"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "15546:19:1"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "15540:5:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "15540:26:1"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nodeType": "YulTypedName",
																									"src": "15527:9:1",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "15590:6:1"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nodeType": "YulIdentifier",
																												"src": "15602:9:1"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nodeType": "YulLiteral",
																																				"src": "15629:1:1",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nodeType": "YulIdentifier",
																																				"src": "15632:6:1"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nodeType": "YulIdentifier",
																																			"src": "15625:3:1"
																																		},
																																		"nodeType": "YulFunctionCall",
																																		"src": "15625:14:1"
																																	},
																																	{
																																		"kind": "number",
																																		"nodeType": "YulLiteral",
																																		"src": "15641:3:1",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nodeType": "YulIdentifier",
																																	"src": "15621:3:1"
																																},
																																"nodeType": "YulFunctionCall",
																																"src": "15621:24:1"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nodeType": "YulLiteral",
																																		"src": "15651:1:1",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nodeType": "YulIdentifier",
																																	"src": "15647:3:1"
																																},
																																"nodeType": "YulFunctionCall",
																																"src": "15647:6:1"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nodeType": "YulIdentifier",
																															"src": "15617:3:1"
																														},
																														"nodeType": "YulFunctionCall",
																														"src": "15617:37:1"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nodeType": "YulIdentifier",
																													"src": "15613:3:1"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "15613:42:1"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nodeType": "YulIdentifier",
																											"src": "15598:3:1"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "15598:58:1"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "15583:6:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "15583:74:1"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "15583:74:1"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "15476:7:1"
																						},
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "15485:6:1"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "15473:2:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "15473:19:1"
																				},
																				"nodeType": "YulIf",
																				"src": "15470:201:1"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "15691:4:1"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "15705:1:1",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nodeType": "YulIdentifier",
																											"src": "15708:6:1"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nodeType": "YulIdentifier",
																										"src": "15701:3:1"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "15701:14:1"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "15717:1:1",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "15697:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "15697:22:1"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "15684:6:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "15684:36:1"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "15684:36:1"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "15067:663:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15072:1:1",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "15747:234:1",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "15761:14:1",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "15774:1:1",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nodeType": "YulTypedName",
																						"src": "15765:5:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "15810:67:1",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "15828:35:1",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "15847:3:1"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "15852:9:1"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "15843:3:1"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "15843:19:1"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "15837:5:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "15837:26:1"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "15828:5:1"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nodeType": "YulIdentifier",
																					"src": "15791:6:1"
																				},
																				"nodeType": "YulIf",
																				"src": "15788:89:1"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "15897:4:1"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "15956:5:1"
																								},
																								{
																									"name": "newLen",
																									"nodeType": "YulIdentifier",
																									"src": "15963:6:1"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nodeType": "YulIdentifier",
																								"src": "15903:52:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "15903:67:1"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "15890:6:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "15890:81:1"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "15890:81:1"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "15739:242:1",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "15047:6:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15055:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "15044:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15044:14:1"
															},
															"nodeType": "YulSwitch",
															"src": "15037:944:1"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "14716:4:1",
														"type": ""
													},
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "14722:3:1",
														"type": ""
													}
												],
												"src": "14635:1352:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16195:286:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "16205:29:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16223:3:1",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16228:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "16219:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16219:11:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16232:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "16215:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16215:19:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "16209:2:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16250:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "16265:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "16273:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "16261:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16261:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16243:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16243:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16243:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16297:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16308:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16293:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16293:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "16317:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "16325:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "16313:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16313:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16286:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16286:43:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16286:43:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16349:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16360:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16345:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16345:18:1"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "16365:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16338:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16338:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16338:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16392:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16403:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16388:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16388:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16408:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16381:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16381:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16381:31:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16421:54:1",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "16447:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16459:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16470:3:1",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16455:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16455:19:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nodeType": "YulIdentifier",
																	"src": "16429:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16429:46:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16421:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16140:9:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "16151:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "16159:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "16167:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "16175:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16186:4:1",
														"type": ""
													}
												],
												"src": "15992:489:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16566:169:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "16612:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "16621:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "16624:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "16614:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16614:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "16614:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "16587:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16596:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "16583:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16583:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16608:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "16579:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16579:32:1"
															},
															"nodeType": "YulIf",
															"src": "16576:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "16637:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16656:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "16650:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16650:16:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "16641:5:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "16699:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "16675:23:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16675:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16675:30:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16714:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "16724:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "16714:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16532:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "16543:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "16555:6:1",
														"type": ""
													}
												],
												"src": "16486:249:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16914:237:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16931:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16942:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16924:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16924:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16924:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16965:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16976:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16961:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16961:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16981:2:1",
																		"type": "",
																		"value": "47"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16954:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16954:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16954:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17004:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17015:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17000:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17000:18:1"
																	},
																	{
																		"hexValue": "4552433732314d657461646174613a2055524920717565727920666f72206e6f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17020:34:1",
																		"type": "",
																		"value": "ERC721Metadata: URI query for no"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16993:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16993:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16993:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17075:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17086:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17071:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17071:18:1"
																	},
																	{
																		"hexValue": "6e6578697374656e7420746f6b656e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17091:17:1",
																		"type": "",
																		"value": "nexistent token"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17064:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17064:45:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17064:45:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17118:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17130:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17141:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17126:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17126:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17118:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16891:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16905:4:1",
														"type": ""
													}
												],
												"src": "16740:411:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17203:88:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "17234:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "17236:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17236:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "17236:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "17219:5:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17230:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "17226:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17226:6:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "17216:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17216:17:1"
															},
															"nodeType": "YulIf",
															"src": "17213:43:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17265:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "17276:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17283:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17272:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17272:13:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "17265:3:1"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "17185:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "17195:3:1",
														"type": ""
													}
												],
												"src": "17156:135:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17328:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17345:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17352:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17357:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "17348:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17348:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17338:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17338:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17338:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17385:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17388:4:1",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17378:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17378:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17378:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17409:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17412:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "17402:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17402:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17402:15:1"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "17296:127:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17474:74:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "17497:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "17499:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17499:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "17499:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "17494:1:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "17487:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17487:9:1"
															},
															"nodeType": "YulIf",
															"src": "17484:35:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17528:14:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "17537:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "17540:1:1"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "17533:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17533:9:1"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "17528:1:1"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "17459:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "17462:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "17468:1:1",
														"type": ""
													}
												],
												"src": "17428:120:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17591:74:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "17614:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "17616:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17616:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "17616:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "17611:1:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "17604:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17604:9:1"
															},
															"nodeType": "YulIf",
															"src": "17601:35:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17645:14:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "17654:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "17657:1:1"
																	}
																],
																"functionName": {
																	"name": "mod",
																	"nodeType": "YulIdentifier",
																	"src": "17650:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17650:9:1"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "17645:1:1"
																}
															]
														}
													]
												},
												"name": "mod_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "17576:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "17579:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "17585:1:1",
														"type": ""
													}
												],
												"src": "17553:112:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17844:182:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17861:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17872:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17854:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17854:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17854:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17895:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17906:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17891:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17891:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17911:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17884:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17884:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17884:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17934:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17945:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17930:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17930:18:1"
																	},
																	{
																		"hexValue": "4552433732313a206d696e7420746f20746865207a65726f2061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17950:34:1",
																		"type": "",
																		"value": "ERC721: mint to the zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17923:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17923:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17923:62:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17994:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18006:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18017:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18002:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18002:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17994:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17821:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "17835:4:1",
														"type": ""
													}
												],
												"src": "17670:356:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18205:178:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18222:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18233:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18215:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18215:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18215:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18256:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18267:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18252:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18252:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18272:2:1",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18245:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18245:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18245:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18295:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18306:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18291:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18291:18:1"
																	},
																	{
																		"hexValue": "4552433732313a20746f6b656e20616c7265616479206d696e746564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "18311:30:1",
																		"type": "",
																		"value": "ERC721: token already minted"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18284:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18284:58:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18284:58:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18351:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18363:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18374:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18359:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18359:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18351:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "18182:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "18196:4:1",
														"type": ""
													}
												],
												"src": "18031:352:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18420:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18437:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18444:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18449:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "18440:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18440:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18430:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18430:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18430:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18477:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18480:4:1",
																		"type": "",
																		"value": "0x31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18470:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18470:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18470:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18501:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18504:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "18494:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18494:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18494:15:1"
														}
													]
												},
												"name": "panic_error_0x31",
												"nodeType": "YulFunctionDefinition",
												"src": "18388:127:1"
											}
										]
									},
									"contents": "{\n    { }\n    function validator_revert_bytes4(value)\n    {\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value1 := value\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_available_length_bytes(src, length, end) -> array\n    {\n        let _1 := 0xffffffffffffffff\n        if gt(length, _1) { panic_error_0x41() }\n        let _2 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(length, 31), _2), 63), _2))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        array := memPtr\n        mstore(memPtr, length)\n        if gt(add(src, length), end) { revert(0, 0) }\n        calldatacopy(add(memPtr, 0x20), src, length)\n        mstore(add(add(memPtr, length), 0x20), 0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        let offset := calldataload(add(headStart, 96))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let _1 := add(headStart, offset)\n        if iszero(slt(add(_1, 0x1f), dataEnd)) { revert(0, 0) }\n        value3 := abi_decode_available_length_bytes(add(_1, 32), calldataload(_1), dataEnd)\n    }\n    function abi_decode_tuple_t_addresst_string_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let offset := calldataload(add(headStart, 32))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let _1 := add(headStart, offset)\n        if iszero(slt(add(_1, 0x1f), dataEnd)) { revert(0, 0) }\n        value1 := abi_decode_available_length_bytes(add(_1, 32), calldataload(_1), dataEnd)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 44)\n        mstore(add(headStart, 64), \"ERC721: approved query for nonex\")\n        mstore(add(headStart, 96), \"istent token\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"ERC721: approval to current owne\")\n        mstore(add(headStart, 96), \"r\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 56)\n        mstore(add(headStart, 64), \"ERC721: approve caller is not ow\")\n        mstore(add(headStart, 96), \"ner nor approved for all\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 49)\n        mstore(add(headStart, 64), \"ERC721: transfer caller is not o\")\n        mstore(add(headStart, 96), \"wner nor approved\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_1d7f5dcf03a65f41ee49b0ab593e3851cfbe3fd7da53b6cf4eddd83c7df5734c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 43)\n        mstore(add(headStart, 64), \"ERC721Enumerable: owner index ou\")\n        mstore(add(headStart, 96), \"t of bounds\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_d269a4e9f5820dcdb69ea21f528512eb9b927c8d846d48aa51c9219f461d4dcc__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 44)\n        mstore(add(headStart, 64), \"ERC721Enumerable: global index o\")\n        mstore(add(headStart, 96), \"ut of bounds\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_stringliteral_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"ERC721: owner query for nonexist\")\n        mstore(add(headStart, 96), \"ent token\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"ERC721: balance query for the ze\")\n        mstore(add(headStart, 96), \"ro address\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"ERC721: approve to caller\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 44)\n        mstore(add(headStart, 64), \"ERC721: operator query for nonex\")\n        mstore(add(headStart, 96), \"istent token\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_a01073130a885d6c1c1af6ac75fc3b1c4f9403c235362962bbf528e2bd87d950__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"ERC721: transfer of token that i\")\n        mstore(add(headStart, 96), \"s not own\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC721: transfer to the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 50)\n        mstore(add(headStart, 64), \"ERC721: transfer to non ERC721Re\")\n        mstore(add(headStart, 96), \"ceiver implementer\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_8e9ed1638ba7e2d59e03d0957c9339381732ac84d73f65c86c45db1467eafa2a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 49)\n        mstore(add(headStart, 64), \"ERC721URIStorage: URI query for \")\n        mstore(add(headStart, 96), \"nonexistent token\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), pos, length)\n        let end_1 := add(pos, length)\n        let length_1 := mload(value1)\n        copy_memory_to_memory_with_cleanup(add(value1, 0x20), end_1, length_1)\n        end := add(end_1, length_1)\n    }\n    function abi_encode_tuple_t_stringliteral_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 46)\n        mstore(add(headStart, 64), \"ERC721URIStorage: URI set of non\")\n        mstore(add(headStart, 96), \"existent token\")\n        tail := add(headStart, 128)\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), 128)\n        tail := abi_encode_string(value3, add(headStart, 128))\n    }\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 47)\n        mstore(add(headStart, 64), \"ERC721Metadata: URI query for no\")\n        mstore(add(headStart, 96), \"nexistent token\")\n        tail := add(headStart, 128)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function panic_error_0x12()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y) { panic_error_0x12() }\n        r := div(x, y)\n    }\n    function mod_t_uint256(x, y) -> r\n    {\n        if iszero(y) { panic_error_0x12() }\n        r := mod(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"ERC721: mint to the zero address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"ERC721: token already minted\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x31()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x31)\n        revert(0, 0x24)\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061012c5760003560e01c806370a08231116100ad578063b88d4fde11610071578063b88d4fde14610266578063c87b56dd14610279578063d204c45e1461028c578063e985e9c51461029f578063f2fde38b146102db57600080fd5b806370a082311461021f578063715018a6146102325780638da5cb5b1461023a57806395d89b411461024b578063a22cb4651461025357600080fd5b806323b872dd116100f457806323b872dd146101c05780632f745c59146101d357806342842e0e146101e65780634f6ccce7146101f95780636352211e1461020c57600080fd5b806301ffc9a71461013157806306fdde0314610159578063081812fc1461016e578063095ea7b31461019957806318160ddd146101ae575b600080fd5b61014461013f36600461170d565b6102ee565b60405190151581526020015b60405180910390f35b6101616102ff565b604051610150919061177a565b61018161017c36600461178d565b610391565b6040516001600160a01b039091168152602001610150565b6101ac6101a73660046117c2565b61041e565b005b6008545b604051908152602001610150565b6101ac6101ce3660046117ec565b610533565b6101b26101e13660046117c2565b610564565b6101ac6101f43660046117ec565b6105fa565b6101b261020736600461178d565b610615565b61018161021a36600461178d565b6106a8565b6101b261022d366004611828565b61071f565b6101ac6107a6565b600b546001600160a01b0316610181565b61016161081a565b6101ac610261366004611843565b610829565b6101ac61027436600461190b565b6108ed565b61016161028736600461178d565b610925565b6101b261029a366004611987565b610930565b6101446102ad3660046119e9565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b6101ac6102e9366004611828565b610993565b60006102f982610a7e565b92915050565b60606000805461030e90611a1c565b80601f016020809104026020016040519081016040528092919081815260200182805461033a90611a1c565b80156103875780601f1061035c57610100808354040283529160200191610387565b820191906000526020600020905b81548152906001019060200180831161036a57829003601f168201915b5050505050905090565b600061039c82610aa3565b6104025760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b6000610429826106a8565b9050806001600160a01b0316836001600160a01b0316036104965760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084016103f9565b336001600160a01b03821614806104b257506104b281336102ad565b6105245760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c000000000000000060648201526084016103f9565b61052e8383610ac0565b505050565b61053d3382610b2e565b6105595760405162461bcd60e51b81526004016103f990611a56565b61052e838383610c18565b600061056f8361071f565b82106105d15760405162461bcd60e51b815260206004820152602b60248201527f455243373231456e756d657261626c653a206f776e657220696e646578206f7560448201526a74206f6620626f756e647360a81b60648201526084016103f9565b506001600160a01b03919091166000908152600660209081526040808320938352929052205490565b61052e838383604051806020016040528060008152506108ed565b600061062060085490565b82106106835760405162461bcd60e51b815260206004820152602c60248201527f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60448201526b7574206f6620626f756e647360a01b60648201526084016103f9565b6008828154811061069657610696611aa7565b90600052602060002001549050919050565b6000818152600260205260408120546001600160a01b0316806102f95760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b60648201526084016103f9565b60006001600160a01b03821661078a5760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b60648201526084016103f9565b506001600160a01b031660009081526003602052604090205490565b600b546001600160a01b031633146107d05760405162461bcd60e51b81526004016103f990611abd565b600b546040516000916001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600b80546001600160a01b0319169055565b60606001805461030e90611a1c565b336001600160a01b038316036108815760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c65720000000000000060448201526064016103f9565b3360008181526005602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b6108f73383610b2e565b6109135760405162461bcd60e51b81526004016103f990611a56565b61091f84848484610dc3565b50505050565b60606102f982610df6565b600b546000906001600160a01b0316331461095d5760405162461bcd60e51b81526004016103f990611abd565b61096b600c80546001019055565b6000610976600c5490565b90506109828482610f64565b61098c8184610f82565b9392505050565b600b546001600160a01b031633146109bd5760405162461bcd60e51b81526004016103f990611abd565b6001600160a01b038116610a225760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016103f9565b600b546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600b80546001600160a01b0319166001600160a01b0392909216919091179055565b60006001600160e01b0319821663780e9d6360e01b14806102f957506102f982611006565b6000908152600260205260409020546001600160a01b0316151590565b600081815260046020526040902080546001600160a01b0319166001600160a01b0384169081179091558190610af5826106a8565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000610b3982610aa3565b610b9a5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084016103f9565b6000610ba5836106a8565b9050806001600160a01b0316846001600160a01b03161480610be05750836001600160a01b0316610bd584610391565b6001600160a01b0316145b80610c1057506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b949350505050565b826001600160a01b0316610c2b826106a8565b6001600160a01b031614610c935760405162461bcd60e51b815260206004820152602960248201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960448201526839903737ba1037bbb760b91b60648201526084016103f9565b6001600160a01b038216610cf55760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b60648201526084016103f9565b610d00838383611056565b610d0b600082610ac0565b6001600160a01b0383166000908152600360205260408120805460019290610d34908490611b08565b90915550506001600160a01b0382166000908152600360205260408120805460019290610d62908490611b1b565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b610dce848484610c18565b610dda84848484611061565b61091f5760405162461bcd60e51b81526004016103f990611b2e565b6060610e0182610aa3565b610e675760405162461bcd60e51b815260206004820152603160248201527f45524337323155524953746f726167653a2055524920717565727920666f72206044820152703737b732bc34b9ba32b73a103a37b5b2b760791b60648201526084016103f9565b6000828152600a602052604081208054610e8090611a1c565b80601f0160208091040260200160405190810160405280929190818152602001828054610eac90611a1c565b8015610ef95780601f10610ece57610100808354040283529160200191610ef9565b820191906000526020600020905b815481529060010190602001808311610edc57829003601f168201915b505050505090506000610f1760408051602081019091526000815290565b90508051600003610f29575092915050565b815115610f5b578082604051602001610f43929190611b80565b60405160208183030381529060405292505050919050565b610c1084611162565b610f7e828260405180602001604052806000815250611239565b5050565b610f8b82610aa3565b610fee5760405162461bcd60e51b815260206004820152602e60248201527f45524337323155524953746f726167653a2055524920736574206f66206e6f6e60448201526d32bc34b9ba32b73a103a37b5b2b760911b60648201526084016103f9565b6000828152600a6020526040902061052e8282611bfd565b60006001600160e01b031982166380ac58cd60e01b148061103757506001600160e01b03198216635b5e139f60e01b145b806102f957506301ffc9a760e01b6001600160e01b03198316146102f9565b61052e83838361126c565b60006001600160a01b0384163b1561115757604051630a85bd0160e11b81526001600160a01b0385169063150b7a02906110a5903390899088908890600401611cbd565b6020604051808303816000875af19250505080156110e0575060408051601f3d908101601f191682019092526110dd91810190611cfa565b60015b61113d573d80801561110e576040519150601f19603f3d011682016040523d82523d6000602084013e611113565b606091505b5080516000036111355760405162461bcd60e51b81526004016103f990611b2e565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610c10565b506001949350505050565b606061116d82610aa3565b6111d15760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b60648201526084016103f9565b60006111e860408051602081019091526000815290565b90506000815111611208576040518060200160405280600081525061098c565b8061121284611324565b604051602001611223929190611b80565b6040516020818303038152906040529392505050565b6112438383611425565b6112506000848484611061565b61052e5760405162461bcd60e51b81526004016103f990611b2e565b6001600160a01b0383166112c7576112c281600880546000838152600960205260408120829055600182018355919091527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30155565b6112ea565b816001600160a01b0316836001600160a01b0316146112ea576112ea8382611564565b6001600160a01b0382166113015761052e81611601565b826001600160a01b0316826001600160a01b03161461052e5761052e82826116b0565b60608160000361134b5750506040805180820190915260018152600360fc1b602082015290565b8160005b8115611375578061135f81611d17565b915061136e9050600a83611d46565b915061134f565b60008167ffffffffffffffff8111156113905761139061187f565b6040519080825280601f01601f1916602001820160405280156113ba576020820181803683370190505b5090505b8415610c10576113cf600183611b08565b91506113dc600a86611d5a565b6113e7906030611b1b565b60f81b8183815181106113fc576113fc611aa7565b60200101906001600160f81b031916908160001a90535061141e600a86611d46565b94506113be565b6001600160a01b03821661147b5760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f206164647265737360448201526064016103f9565b61148481610aa3565b156114d15760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016103f9565b6114dd60008383611056565b6001600160a01b0382166000908152600360205260408120805460019290611506908490611b1b565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b600060016115718461071f565b61157b9190611b08565b6000838152600760205260409020549091508082146115ce576001600160a01b03841660009081526006602090815260408083208584528252808320548484528184208190558352600790915290208190555b5060009182526007602090815260408084208490556001600160a01b039094168352600681528383209183525290812055565b60085460009061161390600190611b08565b6000838152600960205260408120546008805493945090928490811061163b5761163b611aa7565b90600052602060002001549050806008838154811061165c5761165c611aa7565b600091825260208083209091019290925582815260099091526040808220849055858252812055600880548061169457611694611d6e565b6001900381819060005260206000200160009055905550505050565b60006116bb8361071f565b6001600160a01b039093166000908152600660209081526040808320868452825280832085905593825260079052919091209190915550565b6001600160e01b03198116811461170a57600080fd5b50565b60006020828403121561171f57600080fd5b813561098c816116f4565b60005b8381101561174557818101518382015260200161172d565b50506000910152565b6000815180845261176681602086016020860161172a565b601f01601f19169290920160200192915050565b60208152600061098c602083018461174e565b60006020828403121561179f57600080fd5b5035919050565b80356001600160a01b03811681146117bd57600080fd5b919050565b600080604083850312156117d557600080fd5b6117de836117a6565b946020939093013593505050565b60008060006060848603121561180157600080fd5b61180a846117a6565b9250611818602085016117a6565b9150604084013590509250925092565b60006020828403121561183a57600080fd5b61098c826117a6565b6000806040838503121561185657600080fd5b61185f836117a6565b91506020830135801515811461187457600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff808411156118b0576118b061187f565b604051601f8501601f19908116603f011681019082821181831017156118d8576118d861187f565b816040528093508581528686860111156118f157600080fd5b858560208301376000602087830101525050509392505050565b6000806000806080858703121561192157600080fd5b61192a856117a6565b9350611938602086016117a6565b925060408501359150606085013567ffffffffffffffff81111561195b57600080fd5b8501601f8101871361196c57600080fd5b61197b87823560208401611895565b91505092959194509250565b6000806040838503121561199a57600080fd5b6119a3836117a6565b9150602083013567ffffffffffffffff8111156119bf57600080fd5b8301601f810185136119d057600080fd5b6119df85823560208401611895565b9150509250929050565b600080604083850312156119fc57600080fd5b611a05836117a6565b9150611a13602084016117a6565b90509250929050565b600181811c90821680611a3057607f821691505b602082108103611a5057634e487b7160e01b600052602260045260246000fd5b50919050565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052601160045260246000fd5b818103818111156102f9576102f9611af2565b808201808211156102f9576102f9611af2565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b60008351611b9281846020880161172a565b835190830190611ba681836020880161172a565b01949350505050565b601f82111561052e57600081815260208120601f850160051c81016020861015611bd65750805b601f850160051c820191505b81811015611bf557828155600101611be2565b505050505050565b815167ffffffffffffffff811115611c1757611c1761187f565b611c2b81611c258454611a1c565b84611baf565b602080601f831160018114611c605760008415611c485750858301515b600019600386901b1c1916600185901b178555611bf5565b600085815260208120601f198616915b82811015611c8f57888601518255948401946001909101908401611c70565b5085821015611cad5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090611cf09083018461174e565b9695505050505050565b600060208284031215611d0c57600080fd5b815161098c816116f4565b600060018201611d2957611d29611af2565b5060010190565b634e487b7160e01b600052601260045260246000fd5b600082611d5557611d55611d30565b500490565b600082611d6957611d69611d30565b500690565b634e487b7160e01b600052603160045260246000fdfea2646970667358221220c7eea0940fa2e5a0049d323b8ed803f789bbdac64704431945968dd35a0f1f4164736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x12C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xB88D4FDE GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x266 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x279 JUMPI DUP1 PUSH4 0xD204C45E EQ PUSH2 0x28C JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x29F JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x21F JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x232 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x23A JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x24B JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x253 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1C0 JUMPI DUP1 PUSH4 0x2F745C59 EQ PUSH2 0x1D3 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x1E6 JUMPI DUP1 PUSH4 0x4F6CCCE7 EQ PUSH2 0x1F9 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x20C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x159 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x16E JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x199 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1AE JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x144 PUSH2 0x13F CALLDATASIZE PUSH1 0x4 PUSH2 0x170D JUMP JUMPDEST PUSH2 0x2EE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x161 PUSH2 0x2FF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x150 SWAP2 SWAP1 PUSH2 0x177A JUMP JUMPDEST PUSH2 0x181 PUSH2 0x17C CALLDATASIZE PUSH1 0x4 PUSH2 0x178D JUMP JUMPDEST PUSH2 0x391 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x150 JUMP JUMPDEST PUSH2 0x1AC PUSH2 0x1A7 CALLDATASIZE PUSH1 0x4 PUSH2 0x17C2 JUMP JUMPDEST PUSH2 0x41E JUMP JUMPDEST STOP JUMPDEST PUSH1 0x8 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x150 JUMP JUMPDEST PUSH2 0x1AC PUSH2 0x1CE CALLDATASIZE PUSH1 0x4 PUSH2 0x17EC JUMP JUMPDEST PUSH2 0x533 JUMP JUMPDEST PUSH2 0x1B2 PUSH2 0x1E1 CALLDATASIZE PUSH1 0x4 PUSH2 0x17C2 JUMP JUMPDEST PUSH2 0x564 JUMP JUMPDEST PUSH2 0x1AC PUSH2 0x1F4 CALLDATASIZE PUSH1 0x4 PUSH2 0x17EC JUMP JUMPDEST PUSH2 0x5FA JUMP JUMPDEST PUSH2 0x1B2 PUSH2 0x207 CALLDATASIZE PUSH1 0x4 PUSH2 0x178D JUMP JUMPDEST PUSH2 0x615 JUMP JUMPDEST PUSH2 0x181 PUSH2 0x21A CALLDATASIZE PUSH1 0x4 PUSH2 0x178D JUMP JUMPDEST PUSH2 0x6A8 JUMP JUMPDEST PUSH2 0x1B2 PUSH2 0x22D CALLDATASIZE PUSH1 0x4 PUSH2 0x1828 JUMP JUMPDEST PUSH2 0x71F JUMP JUMPDEST PUSH2 0x1AC PUSH2 0x7A6 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x181 JUMP JUMPDEST PUSH2 0x161 PUSH2 0x81A JUMP JUMPDEST PUSH2 0x1AC PUSH2 0x261 CALLDATASIZE PUSH1 0x4 PUSH2 0x1843 JUMP JUMPDEST PUSH2 0x829 JUMP JUMPDEST PUSH2 0x1AC PUSH2 0x274 CALLDATASIZE PUSH1 0x4 PUSH2 0x190B JUMP JUMPDEST PUSH2 0x8ED JUMP JUMPDEST PUSH2 0x161 PUSH2 0x287 CALLDATASIZE PUSH1 0x4 PUSH2 0x178D JUMP JUMPDEST PUSH2 0x925 JUMP JUMPDEST PUSH2 0x1B2 PUSH2 0x29A CALLDATASIZE PUSH1 0x4 PUSH2 0x1987 JUMP JUMPDEST PUSH2 0x930 JUMP JUMPDEST PUSH2 0x144 PUSH2 0x2AD CALLDATASIZE PUSH1 0x4 PUSH2 0x19E9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x1AC PUSH2 0x2E9 CALLDATASIZE PUSH1 0x4 PUSH2 0x1828 JUMP JUMPDEST PUSH2 0x993 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F9 DUP3 PUSH2 0xA7E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x30E SWAP1 PUSH2 0x1A1C JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x33A SWAP1 PUSH2 0x1A1C JUMP JUMPDEST DUP1 ISZERO PUSH2 0x387 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x35C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x387 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x36A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x39C DUP3 PUSH2 0xAA3 JUMP JUMPDEST PUSH2 0x402 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76656420717565727920666F72206E6F6E6578 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x34B9BA32B73A103A37B5B2B7 PUSH1 0xA1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x429 DUP3 PUSH2 0x6A8 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x496 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3F9 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ DUP1 PUSH2 0x4B2 JUMPI POP PUSH2 0x4B2 DUP2 CALLER PUSH2 0x2AD JUMP JUMPDEST PUSH2 0x524 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F74206F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E6572206E6F7220617070726F76656420666F7220616C6C0000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3F9 JUMP JUMPDEST PUSH2 0x52E DUP4 DUP4 PUSH2 0xAC0 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x53D CALLER DUP3 PUSH2 0xB2E JUMP JUMPDEST PUSH2 0x559 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3F9 SWAP1 PUSH2 0x1A56 JUMP JUMPDEST PUSH2 0x52E DUP4 DUP4 DUP4 PUSH2 0xC18 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x56F DUP4 PUSH2 0x71F JUMP JUMPDEST DUP3 LT PUSH2 0x5D1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243373231456E756D657261626C653A206F776E657220696E646578206F75 PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x74206F6620626F756E6473 PUSH1 0xA8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3F9 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x52E DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x8ED JUMP JUMPDEST PUSH1 0x0 PUSH2 0x620 PUSH1 0x8 SLOAD SWAP1 JUMP JUMPDEST DUP3 LT PUSH2 0x683 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243373231456E756D657261626C653A20676C6F62616C20696E646578206F PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x7574206F6620626F756E6473 PUSH1 0xA0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3F9 JUMP JUMPDEST PUSH1 0x8 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x696 JUMPI PUSH2 0x696 PUSH2 0x1AA7 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x2F9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206F776E657220717565727920666F72206E6F6E6578697374 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x32B73A103A37B5B2B7 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3F9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x78A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A2062616C616E636520717565727920666F7220746865207A65 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x726F2061646472657373 PUSH1 0xB0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3F9 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x7D0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3F9 SWAP1 PUSH2 0x1ABD JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x40 MLOAD PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0xB DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x30E SWAP1 PUSH2 0x1A1C JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SUB PUSH2 0x881 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3F9 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD SWAP1 DUP2 MSTORE SWAP2 SWAP3 SWAP2 PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x8F7 CALLER DUP4 PUSH2 0xB2E JUMP JUMPDEST PUSH2 0x913 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3F9 SWAP1 PUSH2 0x1A56 JUMP JUMPDEST PUSH2 0x91F DUP5 DUP5 DUP5 DUP5 PUSH2 0xDC3 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x2F9 DUP3 PUSH2 0xDF6 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x95D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3F9 SWAP1 PUSH2 0x1ABD JUMP JUMPDEST PUSH2 0x96B PUSH1 0xC DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x976 PUSH1 0xC SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP PUSH2 0x982 DUP5 DUP3 PUSH2 0xF64 JUMP JUMPDEST PUSH2 0x98C DUP2 DUP5 PUSH2 0xF82 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x9BD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3F9 SWAP1 PUSH2 0x1ABD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xA22 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3F9 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND SWAP3 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 PUSH1 0xB DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x780E9D63 PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x2F9 JUMPI POP PUSH2 0x2F9 DUP3 PUSH2 0x1006 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH2 0xAF5 DUP3 PUSH2 0x6A8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB39 DUP3 PUSH2 0xAA3 JUMP JUMPDEST PUSH2 0xB9A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206F70657261746F7220717565727920666F72206E6F6E6578 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x34B9BA32B73A103A37B5B2B7 PUSH1 0xA1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3F9 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBA5 DUP4 PUSH2 0x6A8 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0xBE0 JUMPI POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xBD5 DUP5 PUSH2 0x391 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST DUP1 PUSH2 0xC10 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP9 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xC2B DUP3 PUSH2 0x6A8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xC93 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E73666572206F6620746F6B656E20746861742069 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x39903737BA1037BBB7 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3F9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xCF5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3F9 JUMP JUMPDEST PUSH2 0xD00 DUP4 DUP4 DUP4 PUSH2 0x1056 JUMP JUMPDEST PUSH2 0xD0B PUSH1 0x0 DUP3 PUSH2 0xAC0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0xD34 SWAP1 DUP5 SWAP1 PUSH2 0x1B08 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0xD62 SWAP1 DUP5 SWAP1 PUSH2 0x1B1B JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD DUP5 SWAP4 SWAP2 DUP8 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG4 POP POP POP JUMP JUMPDEST PUSH2 0xDCE DUP5 DUP5 DUP5 PUSH2 0xC18 JUMP JUMPDEST PUSH2 0xDDA DUP5 DUP5 DUP5 DUP5 PUSH2 0x1061 JUMP JUMPDEST PUSH2 0x91F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3F9 SWAP1 PUSH2 0x1B2E JUMP JUMPDEST PUSH1 0x60 PUSH2 0xE01 DUP3 PUSH2 0xAA3 JUMP JUMPDEST PUSH2 0xE67 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x31 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524337323155524953746F726167653A2055524920717565727920666F7220 PUSH1 0x44 DUP3 ADD MSTORE PUSH17 0x3737B732BC34B9BA32B73A103A37B5B2B7 PUSH1 0x79 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3F9 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH2 0xE80 SWAP1 PUSH2 0x1A1C JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xEAC SWAP1 PUSH2 0x1A1C JUMP JUMPDEST DUP1 ISZERO PUSH2 0xEF9 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xECE JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xEF9 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xEDC JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH1 0x0 PUSH2 0xF17 PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0xF29 JUMPI POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP2 MLOAD ISZERO PUSH2 0xF5B JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xF43 SWAP3 SWAP2 SWAP1 PUSH2 0x1B80 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC10 DUP5 PUSH2 0x1162 JUMP JUMPDEST PUSH2 0xF7E DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1239 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xF8B DUP3 PUSH2 0xAA3 JUMP JUMPDEST PUSH2 0xFEE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524337323155524953746F726167653A2055524920736574206F66206E6F6E PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x32BC34B9BA32B73A103A37B5B2B7 PUSH1 0x91 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3F9 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x52E DUP3 DUP3 PUSH2 0x1BFD JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x80AC58CD PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x1037 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5B5E139F PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x2F9 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ PUSH2 0x2F9 JUMP JUMPDEST PUSH2 0x52E DUP4 DUP4 DUP4 PUSH2 0x126C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x1157 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0x10A5 SWAP1 CALLER SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1CBD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x10E0 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x10DD SWAP2 DUP2 ADD SWAP1 PUSH2 0x1CFA JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x113D JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0x110E JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1113 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0x1135 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3F9 SWAP1 PUSH2 0x1B2E JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ SWAP1 POP PUSH2 0xC10 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x116D DUP3 PUSH2 0xAA3 JUMP JUMPDEST PUSH2 0x11D1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732314D657461646174613A2055524920717565727920666F72206E6F PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x3732BC34B9BA32B73A103A37B5B2B7 PUSH1 0x89 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3F9 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11E8 PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x1208 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x98C JUMP JUMPDEST DUP1 PUSH2 0x1212 DUP5 PUSH2 0x1324 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1223 SWAP3 SWAP2 SWAP1 PUSH2 0x1B80 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x1243 DUP4 DUP4 PUSH2 0x1425 JUMP JUMPDEST PUSH2 0x1250 PUSH1 0x0 DUP5 DUP5 DUP5 PUSH2 0x1061 JUMP JUMPDEST PUSH2 0x52E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3F9 SWAP1 PUSH2 0x1B2E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x12C7 JUMPI PUSH2 0x12C2 DUP2 PUSH1 0x8 DUP1 SLOAD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP3 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD DUP4 SSTORE SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xF3F7A9FE364FAAB93B216DA50A3214154F22A0A2B415B23A84C8169E8B636EE3 ADD SSTORE JUMP JUMPDEST PUSH2 0x12EA JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x12EA JUMPI PUSH2 0x12EA DUP4 DUP3 PUSH2 0x1564 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1301 JUMPI PUSH2 0x52E DUP2 PUSH2 0x1601 JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x52E JUMPI PUSH2 0x52E DUP3 DUP3 PUSH2 0x16B0 JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH1 0x0 SUB PUSH2 0x134B JUMPI POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x3 PUSH1 0xFC SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x0 JUMPDEST DUP2 ISZERO PUSH2 0x1375 JUMPI DUP1 PUSH2 0x135F DUP2 PUSH2 0x1D17 JUMP JUMPDEST SWAP2 POP PUSH2 0x136E SWAP1 POP PUSH1 0xA DUP4 PUSH2 0x1D46 JUMP JUMPDEST SWAP2 POP PUSH2 0x134F JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1390 JUMPI PUSH2 0x1390 PUSH2 0x187F JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x13BA JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP JUMPDEST DUP5 ISZERO PUSH2 0xC10 JUMPI PUSH2 0x13CF PUSH1 0x1 DUP4 PUSH2 0x1B08 JUMP JUMPDEST SWAP2 POP PUSH2 0x13DC PUSH1 0xA DUP7 PUSH2 0x1D5A JUMP JUMPDEST PUSH2 0x13E7 SWAP1 PUSH1 0x30 PUSH2 0x1B1B JUMP JUMPDEST PUSH1 0xF8 SHL DUP2 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x13FC JUMPI PUSH2 0x13FC PUSH2 0x1AA7 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH2 0x141E PUSH1 0xA DUP7 PUSH2 0x1D46 JUMP JUMPDEST SWAP5 POP PUSH2 0x13BE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x147B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206D696E7420746F20746865207A65726F2061646472657373 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3F9 JUMP JUMPDEST PUSH2 0x1484 DUP2 PUSH2 0xAA3 JUMP JUMPDEST ISZERO PUSH2 0x14D1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20746F6B656E20616C7265616479206D696E74656400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3F9 JUMP JUMPDEST PUSH2 0x14DD PUSH1 0x0 DUP4 DUP4 PUSH2 0x1056 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x1506 SWAP1 DUP5 SWAP1 PUSH2 0x1B1B JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD DUP4 SWAP3 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 DUP3 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH2 0x1571 DUP5 PUSH2 0x71F JUMP JUMPDEST PUSH2 0x157B SWAP2 SWAP1 PUSH2 0x1B08 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP1 DUP3 EQ PUSH2 0x15CE JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 SLOAD DUP5 DUP5 MSTORE DUP2 DUP5 KECCAK256 DUP2 SWAP1 SSTORE DUP4 MSTORE PUSH1 0x7 SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP2 SWAP1 SSTORE JUMPDEST POP PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP5 SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP5 AND DUP4 MSTORE PUSH1 0x6 DUP2 MSTORE DUP4 DUP4 KECCAK256 SWAP2 DUP4 MSTORE MSTORE SWAP1 DUP2 KECCAK256 SSTORE JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x0 SWAP1 PUSH2 0x1613 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x1B08 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x8 DUP1 SLOAD SWAP4 SWAP5 POP SWAP1 SWAP3 DUP5 SWAP1 DUP2 LT PUSH2 0x163B JUMPI PUSH2 0x163B PUSH2 0x1AA7 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 PUSH1 0x8 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x165C JUMPI PUSH2 0x165C PUSH2 0x1AA7 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SWAP3 SWAP1 SWAP3 SSTORE DUP3 DUP2 MSTORE PUSH1 0x9 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP5 SWAP1 SSTORE DUP6 DUP3 MSTORE DUP2 KECCAK256 SSTORE PUSH1 0x8 DUP1 SLOAD DUP1 PUSH2 0x1694 JUMPI PUSH2 0x1694 PUSH2 0x1D6E JUMP JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16BB DUP4 PUSH2 0x71F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP7 DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP6 SWAP1 SSTORE SWAP4 DUP3 MSTORE PUSH1 0x7 SWAP1 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x170A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x171F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x98C DUP2 PUSH2 0x16F4 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1745 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x172D JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x1766 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x172A JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x98C PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x174E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x179F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x17BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x17D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x17DE DUP4 PUSH2 0x17A6 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1801 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x180A DUP5 PUSH2 0x17A6 JUMP JUMPDEST SWAP3 POP PUSH2 0x1818 PUSH1 0x20 DUP6 ADD PUSH2 0x17A6 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x183A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x98C DUP3 PUSH2 0x17A6 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1856 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x185F DUP4 PUSH2 0x17A6 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1874 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP5 GT ISZERO PUSH2 0x18B0 JUMPI PUSH2 0x18B0 PUSH2 0x187F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP6 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x18D8 JUMPI PUSH2 0x18D8 PUSH2 0x187F JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP1 SWAP4 POP DUP6 DUP2 MSTORE DUP7 DUP7 DUP7 ADD GT ISZERO PUSH2 0x18F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 DUP6 PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP8 DUP4 ADD ADD MSTORE POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1921 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x192A DUP6 PUSH2 0x17A6 JUMP JUMPDEST SWAP4 POP PUSH2 0x1938 PUSH1 0x20 DUP7 ADD PUSH2 0x17A6 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x195B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 ADD PUSH1 0x1F DUP2 ADD DUP8 SGT PUSH2 0x196C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x197B DUP8 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x1895 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x199A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x19A3 DUP4 PUSH2 0x17A6 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x19BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x19D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x19DF DUP6 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x1895 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x19FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1A05 DUP4 PUSH2 0x17A6 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A13 PUSH1 0x20 DUP5 ADD PUSH2 0x17A6 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1A30 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1A50 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x31 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E736665722063616C6C6572206973206E6F74206F PUSH1 0x40 DUP3 ADD MSTORE PUSH17 0x1DDB995C881B9BDC88185C1C1C9BDD9959 PUSH1 0x7A SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x2F9 JUMPI PUSH2 0x2F9 PUSH2 0x1AF2 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x2F9 JUMPI PUSH2 0x2F9 PUSH2 0x1AF2 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x32 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x40 DUP3 ADD MSTORE PUSH18 0x31B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x71 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH2 0x1B92 DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0x172A JUMP JUMPDEST DUP4 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0x1BA6 DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0x172A JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x52E JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0x1BD6 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1BF5 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1BE2 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1C17 JUMPI PUSH2 0x1C17 PUSH2 0x187F JUMP JUMPDEST PUSH2 0x1C2B DUP2 PUSH2 0x1C25 DUP5 SLOAD PUSH2 0x1A1C JUMP JUMPDEST DUP5 PUSH2 0x1BAF JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x1C60 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x1C48 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x1BF5 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1C8F JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x1C70 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x1CAD JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x1CF0 SWAP1 DUP4 ADD DUP5 PUSH2 0x174E JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D0C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x98C DUP2 PUSH2 0x16F4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x1D29 JUMPI PUSH2 0x1D29 PUSH2 0x1AF2 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1D55 JUMPI PUSH2 0x1D55 PUSH2 0x1D30 JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1D69 JUMPI PUSH2 0x1D69 PUSH2 0x1D30 JUMP JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC7 0xEE LOG0 SWAP5 0xF LOG2 0xE5 LOG0 DIV SWAP14 ORIGIN EXTCODESIZE DUP15 0xD8 SUB 0xF7 DUP10 0xBB 0xDA 0xC6 SELFBALANCE DIV NUMBER NOT GASLIMIT SWAP7 DUP14 0xD3 GAS 0xF 0x1F COINBASE PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "46272:1224:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;47322:171;;;;;;:::i;:::-;;:::i;:::-;;;565:14:1;;558:22;540:41;;528:2;513:18;47322:171:0;;;;;;;;21713:100;;;:::i;:::-;;;;;;;:::i;23173:221::-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;1697:32:1;;;1679:51;;1667:2;1652:18;23173:221:0;1533:203:1;22710:397:0;;;;;;:::i;:::-;;:::i;:::-;;35169:113;35257:10;:17;35169:113;;;2324:25:1;;;2312:2;2297:18;35169:113:0;2178:177:1;24063:305:0;;;;;;:::i;:::-;;:::i;34837:256::-;;;;;;:::i;:::-;;:::i;24439:151::-;;;;;;:::i;:::-;;:::i;35359:233::-;;;;;;:::i;:::-;;:::i;21407:239::-;;;;;;:::i;:::-;;:::i;21137:208::-;;;;;;:::i;:::-;;:::i;44323:148::-;;;:::i;43672:87::-;43745:6;;-1:-1:-1;;;;;43745:6:0;43672:87;;21882:104;;;:::i;23466:295::-;;;;;;:::i;:::-;;:::i;24661:285::-;;;;;;:::i;:::-;;:::i;47159:155::-;;;;;;:::i;:::-;;:::i;46539:300::-;;;;;;:::i;:::-;;:::i;23832:164::-;;;;;;:::i;:::-;-1:-1:-1;;;;;23953:25:0;;;23929:4;23953:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;23832:164;44626:244;;;;;;:::i;:::-;;:::i;47322:171::-;47425:4;47449:36;47473:11;47449:23;:36::i;:::-;47442:43;47322:171;-1:-1:-1;;47322:171:0:o;21713:100::-;21767:13;21800:5;21793:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21713:100;:::o;23173:221::-;23249:7;23277:16;23285:7;23277;:16::i;:::-;23269:73;;;;-1:-1:-1;;;23269:73:0;;6056:2:1;23269:73:0;;;6038:21:1;6095:2;6075:18;;;6068:30;6134:34;6114:18;;;6107:62;-1:-1:-1;;;6185:18:1;;;6178:42;6237:19;;23269:73:0;;;;;;;;;-1:-1:-1;23362:24:0;;;;:15;:24;;;;;;-1:-1:-1;;;;;23362:24:0;;23173:221::o;22710:397::-;22791:13;22807:23;22822:7;22807:14;:23::i;:::-;22791:39;;22855:5;-1:-1:-1;;;;;22849:11:0;:2;-1:-1:-1;;;;;22849:11:0;;22841:57;;;;-1:-1:-1;;;22841:57:0;;6469:2:1;22841:57:0;;;6451:21:1;6508:2;6488:18;;;6481:30;6547:34;6527:18;;;6520:62;-1:-1:-1;;;6598:18:1;;;6591:31;6639:19;;22841:57:0;6267:397:1;22841:57:0;16135:10;-1:-1:-1;;;;;22919:21:0;;;;:62;;-1:-1:-1;22944:37:0;22961:5;16135:10;23832:164;:::i;22944:37::-;22911:154;;;;-1:-1:-1;;;22911:154:0;;6871:2:1;22911:154:0;;;6853:21:1;6910:2;6890:18;;;6883:30;6949:34;6929:18;;;6922:62;7020:26;7000:18;;;6993:54;7064:19;;22911:154:0;6669:420:1;22911:154:0;23078:21;23087:2;23091:7;23078:8;:21::i;:::-;22780:327;22710:397;;:::o;24063:305::-;24224:41;16135:10;24257:7;24224:18;:41::i;:::-;24216:103;;;;-1:-1:-1;;;24216:103:0;;;;;;;:::i;:::-;24332:28;24342:4;24348:2;24352:7;24332:9;:28::i;34837:256::-;34934:7;34970:23;34987:5;34970:16;:23::i;:::-;34962:5;:31;34954:87;;;;-1:-1:-1;;;34954:87:0;;7714:2:1;34954:87:0;;;7696:21:1;7753:2;7733:18;;;7726:30;7792:34;7772:18;;;7765:62;-1:-1:-1;;;7843:18:1;;;7836:41;7894:19;;34954:87:0;7512:407:1;34954:87:0;-1:-1:-1;;;;;;35059:19:0;;;;;;;;:12;:19;;;;;;;;:26;;;;;;;;;34837:256::o;24439:151::-;24543:39;24560:4;24566:2;24570:7;24543:39;;;;;;;;;;;;:16;:39::i;35359:233::-;35434:7;35470:30;35257:10;:17;;35169:113;35470:30;35462:5;:38;35454:95;;;;-1:-1:-1;;;35454:95:0;;8126:2:1;35454:95:0;;;8108:21:1;8165:2;8145:18;;;8138:30;8204:34;8184:18;;;8177:62;-1:-1:-1;;;8255:18:1;;;8248:42;8307:19;;35454:95:0;7924:408:1;35454:95:0;35567:10;35578:5;35567:17;;;;;;;;:::i;:::-;;;;;;;;;35560:24;;35359:233;;;:::o;21407:239::-;21479:7;21515:16;;;:7;:16;;;;;;-1:-1:-1;;;;;21515:16:0;;21542:73;;;;-1:-1:-1;;;21542:73:0;;8671:2:1;21542:73:0;;;8653:21:1;8710:2;8690:18;;;8683:30;8749:34;8729:18;;;8722:62;-1:-1:-1;;;8800:18:1;;;8793:39;8849:19;;21542:73:0;8469:405:1;21137:208:0;21209:7;-1:-1:-1;;;;;21237:19:0;;21229:74;;;;-1:-1:-1;;;21229:74:0;;9081:2:1;21229:74:0;;;9063:21:1;9120:2;9100:18;;;9093:30;9159:34;9139:18;;;9132:62;-1:-1:-1;;;9210:18:1;;;9203:40;9260:19;;21229:74:0;8879:406:1;21229:74:0;-1:-1:-1;;;;;;21321:16:0;;;;;:9;:16;;;;;;;21137:208::o;44323:148::-;43745:6;;-1:-1:-1;;;;;43745:6:0;16135:10;43892:23;43884:68;;;;-1:-1:-1;;;43884:68:0;;;;;;;:::i;:::-;44414:6:::1;::::0;44393:40:::1;::::0;44430:1:::1;::::0;-1:-1:-1;;;;;44414:6:0::1;::::0;44393:40:::1;::::0;44430:1;;44393:40:::1;44444:6;:19:::0;;-1:-1:-1;;;;;;44444:19:0::1;::::0;;44323:148::o;21882:104::-;21938:13;21971:7;21964:14;;;;;:::i;23466:295::-;16135:10;-1:-1:-1;;;;;23569:24:0;;;23561:62;;;;-1:-1:-1;;;23561:62:0;;9853:2:1;23561:62:0;;;9835:21:1;9892:2;9872:18;;;9865:30;9931:27;9911:18;;;9904:55;9976:18;;23561:62:0;9651:349:1;23561:62:0;16135:10;23636:32;;;;:18;:32;;;;;;;;-1:-1:-1;;;;;23636:42:0;;;;;;;;;;;;:53;;-1:-1:-1;;23636:53:0;;;;;;;;;;23705:48;;540:41:1;;;23636:42:0;;16135:10;23705:48;;513:18:1;23705:48:0;;;;;;;23466:295;;:::o;24661:285::-;24793:41;16135:10;24826:7;24793:18;:41::i;:::-;24785:103;;;;-1:-1:-1;;;24785:103:0;;;;;;;:::i;:::-;24899:39;24913:4;24919:2;24923:7;24932:5;24899:13;:39::i;:::-;24661:285;;;;:::o;47159:155::-;47250:13;47283:23;47298:7;47283:14;:23::i;46539:300::-;43745:6;;46618:15;;-1:-1:-1;;;;;43745:6:0;16135:10;43892:23;43884:68;;;;-1:-1:-1;;;43884:68:0;;;;;;;:::i;:::-;46646:27:::1;:15;45911:19:::0;;45929:1;45911:19;;;45822:127;46646:27:::1;46684:16;46703:25;:15;45792:14:::0;;45700:114;46703:25:::1;46684:44;;46739:23;46749:2;46753:8;46739:9;:23::i;:::-;46773:32;46786:8;46796;46773:12;:32::i;:::-;46823:8:::0;46539:300;-1:-1:-1;;;46539:300:0:o;44626:244::-;43745:6;;-1:-1:-1;;;;;43745:6:0;16135:10;43892:23;43884:68;;;;-1:-1:-1;;;43884:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;44715:22:0;::::1;44707:73;;;::::0;-1:-1:-1;;;44707:73:0;;10207:2:1;44707:73:0::1;::::0;::::1;10189:21:1::0;10246:2;10226:18;;;10219:30;10285:34;10265:18;;;10258:62;-1:-1:-1;;;10336:18:1;;;10329:36;10382:19;;44707:73:0::1;10005:402:1::0;44707:73:0::1;44817:6;::::0;44796:38:::1;::::0;-1:-1:-1;;;;;44796:38:0;;::::1;::::0;44817:6:::1;::::0;44796:38:::1;::::0;44817:6:::1;::::0;44796:38:::1;44845:6;:17:::0;;-1:-1:-1;;;;;;44845:17:0::1;-1:-1:-1::0;;;;;44845:17:0;;;::::1;::::0;;;::::1;::::0;;44626:244::o;34516:237::-;34618:4;-1:-1:-1;;;;;;34642:50:0;;-1:-1:-1;;;34642:50:0;;:103;;;34709:36;34733:11;34709:23;:36::i;26413:127::-;26478:4;26502:16;;;:7;:16;;;;;;-1:-1:-1;;;;;26502:16:0;:30;;;26413:127::o;30290:174::-;30365:24;;;;:15;:24;;;;;:29;;-1:-1:-1;;;;;;30365:29:0;-1:-1:-1;;;;;30365:29:0;;;;;;;;:24;;30419:23;30365:24;30419:14;:23::i;:::-;-1:-1:-1;;;;;30410:46:0;;;;;;;;;;;30290:174;;:::o;26707:348::-;26800:4;26825:16;26833:7;26825;:16::i;:::-;26817:73;;;;-1:-1:-1;;;26817:73:0;;10614:2:1;26817:73:0;;;10596:21:1;10653:2;10633:18;;;10626:30;10692:34;10672:18;;;10665:62;-1:-1:-1;;;10743:18:1;;;10736:42;10795:19;;26817:73:0;10412:408:1;26817:73:0;26901:13;26917:23;26932:7;26917:14;:23::i;:::-;26901:39;;26970:5;-1:-1:-1;;;;;26959:16:0;:7;-1:-1:-1;;;;;26959:16:0;;:51;;;;27003:7;-1:-1:-1;;;;;26979:31:0;:20;26991:7;26979:11;:20::i;:::-;-1:-1:-1;;;;;26979:31:0;;26959:51;:87;;;-1:-1:-1;;;;;;23953:25:0;;;23929:4;23953:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;27014:32;26951:96;26707:348;-1:-1:-1;;;;26707:348:0:o;29628:544::-;29753:4;-1:-1:-1;;;;;29726:31:0;:23;29741:7;29726:14;:23::i;:::-;-1:-1:-1;;;;;29726:31:0;;29718:85;;;;-1:-1:-1;;;29718:85:0;;11027:2:1;29718:85:0;;;11009:21:1;11066:2;11046:18;;;11039:30;11105:34;11085:18;;;11078:62;-1:-1:-1;;;11156:18:1;;;11149:39;11205:19;;29718:85:0;10825:405:1;29718:85:0;-1:-1:-1;;;;;29822:16:0;;29814:65;;;;-1:-1:-1;;;29814:65:0;;11437:2:1;29814:65:0;;;11419:21:1;11476:2;11456:18;;;11449:30;11515:34;11495:18;;;11488:62;-1:-1:-1;;;11566:18:1;;;11559:34;11610:19;;29814:65:0;11235:400:1;29814:65:0;29892:39;29913:4;29919:2;29923:7;29892:20;:39::i;:::-;29996:29;30013:1;30017:7;29996:8;:29::i;:::-;-1:-1:-1;;;;;30038:15:0;;;;;;:9;:15;;;;;:20;;30057:1;;30038:15;:20;;30057:1;;30038:20;:::i;:::-;;;;-1:-1:-1;;;;;;;30069:13:0;;;;;;:9;:13;;;;;:18;;30086:1;;30069:13;:18;;30086:1;;30069:18;:::i;:::-;;;;-1:-1:-1;;30098:16:0;;;;:7;:16;;;;;;:21;;-1:-1:-1;;;;;;30098:21:0;-1:-1:-1;;;;;30098:21:0;;;;;;;;;30137:27;;30098:16;;30137:27;;;;;;;29628:544;;;:::o;25828:272::-;25942:28;25952:4;25958:2;25962:7;25942:9;:28::i;:::-;25989:48;26012:4;26018:2;26022:7;26031:5;25989:22;:48::i;:::-;25981:111;;;;-1:-1:-1;;;25981:111:0;;;;;;;:::i;41078:679::-;41151:13;41185:16;41193:7;41185;:16::i;:::-;41177:78;;;;-1:-1:-1;;;41177:78:0;;12656:2:1;41177:78:0;;;12638:21:1;12695:2;12675:18;;;12668:30;12734:34;12714:18;;;12707:62;-1:-1:-1;;;12785:18:1;;;12778:47;12842:19;;41177:78:0;12454:413:1;41177:78:0;41268:23;41294:19;;;:10;:19;;;;;41268:45;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;41324:18;41345:10;22631:9;;;;;;;;;-1:-1:-1;22631:9:0;;;22554:94;41345:10;41324:31;;41437:4;41431:18;41453:1;41431:23;41427:72;;-1:-1:-1;41478:9:0;41078:679;-1:-1:-1;;41078:679:0:o;41427:72::-;41603:23;;:27;41599:108;;41678:4;41684:9;41661:33;;;;;;;;;:::i;:::-;;;;;;;;;;;;;41647:48;;;;41078:679;;;:::o;41599:108::-;41726:23;41741:7;41726:14;:23::i;27397:110::-;27473:26;27483:2;27487:7;27473:26;;;;;;;;;;;;:9;:26::i;:::-;27397:110;;:::o;41913:217::-;42013:16;42021:7;42013;:16::i;:::-;42005:75;;;;-1:-1:-1;;;42005:75:0;;13575:2:1;42005:75:0;;;13557:21:1;13614:2;13594:18;;;13587:30;13653:34;13633:18;;;13626:62;-1:-1:-1;;;13704:18:1;;;13697:44;13758:19;;42005:75:0;13373:410:1;42005:75:0;42091:19;;;;:10;:19;;;;;:31;42113:9;42091:19;:31;:::i;20781:292::-;20883:4;-1:-1:-1;;;;;;20907:40:0;;-1:-1:-1;;;20907:40:0;;:105;;-1:-1:-1;;;;;;;20964:48:0;;-1:-1:-1;;;20964:48:0;20907:105;:158;;;-1:-1:-1;;;;;;;;;;19384:40:0;;;21029:36;19275:157;46847:181;46975:45;47002:4;47008:2;47012:7;46975:26;:45::i;31029:843::-;31150:4;-1:-1:-1;;;;;31176:13:0;;8533:20;8572:8;31172:693;;31212:72;;-1:-1:-1;;;31212:72:0;;-1:-1:-1;;;;;31212:36:0;;;;;:72;;16135:10;;31263:4;;31269:7;;31278:5;;31212:72;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;31212:72:0;;;;;;;;-1:-1:-1;;31212:72:0;;;;;;;;;;;;:::i;:::-;;;31208:602;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;31458:6;:13;31475:1;31458:18;31454:341;;31501:60;;-1:-1:-1;;;31501:60:0;;;;;;;:::i;31454:341::-;31745:6;31739:13;31730:6;31726:2;31722:15;31715:38;31208:602;-1:-1:-1;;;;;;31335:55:0;-1:-1:-1;;;31335:55:0;;-1:-1:-1;31328:62:0;;31172:693;-1:-1:-1;31849:4:0;31029:843;;;;;;:::o;22057:360::-;22130:13;22164:16;22172:7;22164;:16::i;:::-;22156:76;;;;-1:-1:-1;;;22156:76:0;;16942:2:1;22156:76:0;;;16924:21:1;16981:2;16961:18;;;16954:30;17020:34;17000:18;;;16993:62;-1:-1:-1;;;17071:18:1;;;17064:45;17126:19;;22156:76:0;16740:411:1;22156:76:0;22245:21;22269:10;22631:9;;;;;;;;;-1:-1:-1;22631:9:0;;;22554:94;22269:10;22245:34;;22321:1;22303:7;22297:21;:25;:112;;;;;;;;;;;;;;;;;22362:7;22371:18;:7;:16;:18::i;:::-;22345:45;;;;;;;;;:::i;:::-;;;;;;;;;;;;;22290:119;22057:360;-1:-1:-1;;;22057:360:0:o;27734:250::-;27830:18;27836:2;27840:7;27830:5;:18::i;:::-;27867:54;27898:1;27902:2;27906:7;27915:5;27867:22;:54::i;:::-;27859:117;;;;-1:-1:-1;;;27859:117:0;;;;;;;:::i;36205:555::-;-1:-1:-1;;;;;36377:18:0;;36373:187;;36412:40;36444:7;37587:10;:17;;37560:24;;;;:15;:24;;;;;:44;;;37615:24;;;;;;;;;;;;37483:164;36412:40;36373:187;;;36482:2;-1:-1:-1;;;;;36474:10:0;:4;-1:-1:-1;;;;;36474:10:0;;36470:90;;36501:47;36534:4;36540:7;36501:32;:47::i;:::-;-1:-1:-1;;;;;36574:16:0;;36570:183;;36607:45;36644:7;36607:36;:45::i;36570:183::-;36680:4;-1:-1:-1;;;;;36674:10:0;:2;-1:-1:-1;;;;;36674:10:0;;36670:83;;36701:40;36729:2;36733:7;36701:27;:40::i;16716:723::-;16772:13;16993:5;17002:1;16993:10;16989:53;;-1:-1:-1;;17020:10:0;;;;;;;;;;;;-1:-1:-1;;;17020:10:0;;;;;16716:723::o;16989:53::-;17067:5;17052:12;17108:78;17115:9;;17108:78;;17141:8;;;;:::i;:::-;;-1:-1:-1;17164:10:0;;-1:-1:-1;17172:2:0;17164:10;;:::i;:::-;;;17108:78;;;17196:19;17228:6;17218:17;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;17218:17:0;;17196:39;;17246:154;17253:10;;17246:154;;17280:11;17290:1;17280:11;;:::i;:::-;;-1:-1:-1;17349:10:0;17357:2;17349:5;:10;:::i;:::-;17336:24;;:2;:24;:::i;:::-;17323:39;;17306:6;17313;17306:14;;;;;;;;:::i;:::-;;;;:56;-1:-1:-1;;;;;17306:56:0;;;;;;;;-1:-1:-1;17377:11:0;17386:2;17377:11;;:::i;:::-;;;17246:154;;28320:382;-1:-1:-1;;;;;28400:16:0;;28392:61;;;;-1:-1:-1;;;28392:61:0;;17872:2:1;28392:61:0;;;17854:21:1;;;17891:18;;;17884:30;17950:34;17930:18;;;17923:62;18002:18;;28392:61:0;17670:356:1;28392:61:0;28473:16;28481:7;28473;:16::i;:::-;28472:17;28464:58;;;;-1:-1:-1;;;28464:58:0;;18233:2:1;28464:58:0;;;18215:21:1;18272:2;18252:18;;;18245:30;18311;18291:18;;;18284:58;18359:18;;28464:58:0;18031:352:1;28464:58:0;28535:45;28564:1;28568:2;28572:7;28535:20;:45::i;:::-;-1:-1:-1;;;;;28593:13:0;;;;;;:9;:13;;;;;:18;;28610:1;;28593:13;:18;;28610:1;;28593:18;:::i;:::-;;;;-1:-1:-1;;28622:16:0;;;;:7;:16;;;;;;:21;;-1:-1:-1;;;;;;28622:21:0;-1:-1:-1;;;;;28622:21:0;;;;;;;;28661:33;;28622:16;;;28661:33;;28622:16;;28661:33;28320:382;;:::o;38274:988::-;38540:22;38590:1;38565:22;38582:4;38565:16;:22::i;:::-;:26;;;;:::i;:::-;38602:18;38623:26;;;:17;:26;;;;;;38540:51;;-1:-1:-1;38756:28:0;;;38752:328;;-1:-1:-1;;;;;38823:18:0;;38801:19;38823:18;;;:12;:18;;;;;;;;:34;;;;;;;;;38874:30;;;;;;:44;;;38991:30;;:17;:30;;;;;:43;;;38752:328;-1:-1:-1;39176:26:0;;;;:17;:26;;;;;;;;39169:33;;;-1:-1:-1;;;;;39220:18:0;;;;;:12;:18;;;;;:34;;;;;;;39213:41;38274:988::o;39557:1079::-;39835:10;:17;39810:22;;39835:21;;39855:1;;39835:21;:::i;:::-;39867:18;39888:24;;;:15;:24;;;;;;40261:10;:26;;39810:46;;-1:-1:-1;39888:24:0;;39810:46;;40261:26;;;;;;:::i;:::-;;;;;;;;;40239:48;;40325:11;40300:10;40311;40300:22;;;;;;;;:::i;:::-;;;;;;;;;;;;:36;;;;40405:28;;;:15;:28;;;;;;;:41;;;40577:24;;;;;40570:31;40612:10;:16;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;39628:1008;;;39557:1079;:::o;37061:221::-;37146:14;37163:20;37180:2;37163:16;:20::i;:::-;-1:-1:-1;;;;;37194:16:0;;;;;;;:12;:16;;;;;;;;:24;;;;;;;;:34;;;37239:26;;;:17;:26;;;;;;:35;;;;-1:-1:-1;37061:221:0:o;14:131:1:-;-1:-1:-1;;;;;;88:32:1;;78:43;;68:71;;135:1;132;125:12;68:71;14:131;:::o;150:245::-;208:6;261:2;249:9;240:7;236:23;232:32;229:52;;;277:1;274;267:12;229:52;316:9;303:23;335:30;359:5;335:30;:::i;592:250::-;677:1;687:113;701:6;698:1;695:13;687:113;;;777:11;;;771:18;758:11;;;751:39;723:2;716:10;687:113;;;-1:-1:-1;;834:1:1;816:16;;809:27;592:250::o;847:271::-;889:3;927:5;921:12;954:6;949:3;942:19;970:76;1039:6;1032:4;1027:3;1023:14;1016:4;1009:5;1005:16;970:76;:::i;:::-;1100:2;1079:15;-1:-1:-1;;1075:29:1;1066:39;;;;1107:4;1062:50;;847:271;-1:-1:-1;;847:271:1:o;1123:220::-;1272:2;1261:9;1254:21;1235:4;1292:45;1333:2;1322:9;1318:18;1310:6;1292:45;:::i;1348:180::-;1407:6;1460:2;1448:9;1439:7;1435:23;1431:32;1428:52;;;1476:1;1473;1466:12;1428:52;-1:-1:-1;1499:23:1;;1348:180;-1:-1:-1;1348:180:1:o;1741:173::-;1809:20;;-1:-1:-1;;;;;1858:31:1;;1848:42;;1838:70;;1904:1;1901;1894:12;1838:70;1741:173;;;:::o;1919:254::-;1987:6;1995;2048:2;2036:9;2027:7;2023:23;2019:32;2016:52;;;2064:1;2061;2054:12;2016:52;2087:29;2106:9;2087:29;:::i;:::-;2077:39;2163:2;2148:18;;;;2135:32;;-1:-1:-1;;;1919:254:1:o;2360:328::-;2437:6;2445;2453;2506:2;2494:9;2485:7;2481:23;2477:32;2474:52;;;2522:1;2519;2512:12;2474:52;2545:29;2564:9;2545:29;:::i;:::-;2535:39;;2593:38;2627:2;2616:9;2612:18;2593:38;:::i;:::-;2583:48;;2678:2;2667:9;2663:18;2650:32;2640:42;;2360:328;;;;;:::o;2693:186::-;2752:6;2805:2;2793:9;2784:7;2780:23;2776:32;2773:52;;;2821:1;2818;2811:12;2773:52;2844:29;2863:9;2844:29;:::i;2884:347::-;2949:6;2957;3010:2;2998:9;2989:7;2985:23;2981:32;2978:52;;;3026:1;3023;3016:12;2978:52;3049:29;3068:9;3049:29;:::i;:::-;3039:39;;3128:2;3117:9;3113:18;3100:32;3175:5;3168:13;3161:21;3154:5;3151:32;3141:60;;3197:1;3194;3187:12;3141:60;3220:5;3210:15;;;2884:347;;;;;:::o;3236:127::-;3297:10;3292:3;3288:20;3285:1;3278:31;3328:4;3325:1;3318:15;3352:4;3349:1;3342:15;3368:631;3432:5;3462:18;3503:2;3495:6;3492:14;3489:40;;;3509:18;;:::i;:::-;3584:2;3578:9;3552:2;3638:15;;-1:-1:-1;;3634:24:1;;;3660:2;3630:33;3626:42;3614:55;;;3684:18;;;3704:22;;;3681:46;3678:72;;;3730:18;;:::i;:::-;3770:10;3766:2;3759:22;3799:6;3790:15;;3829:6;3821;3814:22;3869:3;3860:6;3855:3;3851:16;3848:25;3845:45;;;3886:1;3883;3876:12;3845:45;3936:6;3931:3;3924:4;3916:6;3912:17;3899:44;3991:1;3984:4;3975:6;3967;3963:19;3959:30;3952:41;;;;3368:631;;;;;:::o;4004:666::-;4099:6;4107;4115;4123;4176:3;4164:9;4155:7;4151:23;4147:33;4144:53;;;4193:1;4190;4183:12;4144:53;4216:29;4235:9;4216:29;:::i;:::-;4206:39;;4264:38;4298:2;4287:9;4283:18;4264:38;:::i;:::-;4254:48;;4349:2;4338:9;4334:18;4321:32;4311:42;;4404:2;4393:9;4389:18;4376:32;4431:18;4423:6;4420:30;4417:50;;;4463:1;4460;4453:12;4417:50;4486:22;;4539:4;4531:13;;4527:27;-1:-1:-1;4517:55:1;;4568:1;4565;4558:12;4517:55;4591:73;4656:7;4651:2;4638:16;4633:2;4629;4625:11;4591:73;:::i;:::-;4581:83;;;4004:666;;;;;;;:::o;4675:524::-;4753:6;4761;4814:2;4802:9;4793:7;4789:23;4785:32;4782:52;;;4830:1;4827;4820:12;4782:52;4853:29;4872:9;4853:29;:::i;:::-;4843:39;;4933:2;4922:9;4918:18;4905:32;4960:18;4952:6;4949:30;4946:50;;;4992:1;4989;4982:12;4946:50;5015:22;;5068:4;5060:13;;5056:27;-1:-1:-1;5046:55:1;;5097:1;5094;5087:12;5046:55;5120:73;5185:7;5180:2;5167:16;5162:2;5158;5154:11;5120:73;:::i;:::-;5110:83;;;4675:524;;;;;:::o;5204:260::-;5272:6;5280;5333:2;5321:9;5312:7;5308:23;5304:32;5301:52;;;5349:1;5346;5339:12;5301:52;5372:29;5391:9;5372:29;:::i;:::-;5362:39;;5420:38;5454:2;5443:9;5439:18;5420:38;:::i;:::-;5410:48;;5204:260;;;;;:::o;5469:380::-;5548:1;5544:12;;;;5591;;;5612:61;;5666:4;5658:6;5654:17;5644:27;;5612:61;5719:2;5711:6;5708:14;5688:18;5685:38;5682:161;;5765:10;5760:3;5756:20;5753:1;5746:31;5800:4;5797:1;5790:15;5828:4;5825:1;5818:15;5682:161;;5469:380;;;:::o;7094:413::-;7296:2;7278:21;;;7335:2;7315:18;;;7308:30;7374:34;7369:2;7354:18;;7347:62;-1:-1:-1;;;7440:2:1;7425:18;;7418:47;7497:3;7482:19;;7094:413::o;8337:127::-;8398:10;8393:3;8389:20;8386:1;8379:31;8429:4;8426:1;8419:15;8453:4;8450:1;8443:15;9290:356;9492:2;9474:21;;;9511:18;;;9504:30;9570:34;9565:2;9550:18;;9543:62;9637:2;9622:18;;9290:356::o;11640:127::-;11701:10;11696:3;11692:20;11689:1;11682:31;11732:4;11729:1;11722:15;11756:4;11753:1;11746:15;11772:128;11839:9;;;11860:11;;;11857:37;;;11874:18;;:::i;11905:125::-;11970:9;;;11991:10;;;11988:36;;;12004:18;;:::i;12035:414::-;12237:2;12219:21;;;12276:2;12256:18;;;12249:30;12315:34;12310:2;12295:18;;12288:62;-1:-1:-1;;;12381:2:1;12366:18;;12359:48;12439:3;12424:19;;12035:414::o;12872:496::-;13051:3;13089:6;13083:13;13105:66;13164:6;13159:3;13152:4;13144:6;13140:17;13105:66;:::i;:::-;13234:13;;13193:16;;;;13256:70;13234:13;13193:16;13303:4;13291:17;;13256:70;:::i;:::-;13342:20;;12872:496;-1:-1:-1;;;;12872:496:1:o;13914:545::-;14016:2;14011:3;14008:11;14005:448;;;14052:1;14077:5;14073:2;14066:17;14122:4;14118:2;14108:19;14192:2;14180:10;14176:19;14173:1;14169:27;14163:4;14159:38;14228:4;14216:10;14213:20;14210:47;;;-1:-1:-1;14251:4:1;14210:47;14306:2;14301:3;14297:12;14294:1;14290:20;14284:4;14280:31;14270:41;;14361:82;14379:2;14372:5;14369:13;14361:82;;;14424:17;;;14405:1;14394:13;14361:82;;;14365:3;;;13914:545;;;:::o;14635:1352::-;14761:3;14755:10;14788:18;14780:6;14777:30;14774:56;;;14810:18;;:::i;:::-;14839:97;14929:6;14889:38;14921:4;14915:11;14889:38;:::i;:::-;14883:4;14839:97;:::i;:::-;14991:4;;15055:2;15044:14;;15072:1;15067:663;;;;15774:1;15791:6;15788:89;;;-1:-1:-1;15843:19:1;;;15837:26;15788:89;-1:-1:-1;;14592:1:1;14588:11;;;14584:24;14580:29;14570:40;14616:1;14612:11;;;14567:57;15890:81;;15037:944;;15067:663;13861:1;13854:14;;;13898:4;13885:18;;-1:-1:-1;;15103:20:1;;;15221:236;15235:7;15232:1;15229:14;15221:236;;;15324:19;;;15318:26;15303:42;;15416:27;;;;15384:1;15372:14;;;;15251:19;;15221:236;;;15225:3;15485:6;15476:7;15473:19;15470:201;;;15546:19;;;15540:26;-1:-1:-1;;15629:1:1;15625:14;;;15641:3;15621:24;15617:37;15613:42;15598:58;15583:74;;15470:201;-1:-1:-1;;;;;15717:1:1;15701:14;;;15697:22;15684:36;;-1:-1:-1;14635:1352:1:o;15992:489::-;-1:-1:-1;;;;;16261:15:1;;;16243:34;;16313:15;;16308:2;16293:18;;16286:43;16360:2;16345:18;;16338:34;;;16408:3;16403:2;16388:18;;16381:31;;;16186:4;;16429:46;;16455:19;;16447:6;16429:46;:::i;:::-;16421:54;15992:489;-1:-1:-1;;;;;;15992:489:1:o;16486:249::-;16555:6;16608:2;16596:9;16587:7;16583:23;16579:32;16576:52;;;16624:1;16621;16614:12;16576:52;16656:9;16650:16;16675:30;16699:5;16675:30;:::i;17156:135::-;17195:3;17216:17;;;17213:43;;17236:18;;:::i;:::-;-1:-1:-1;17283:1:1;17272:13;;17156:135::o;17296:127::-;17357:10;17352:3;17348:20;17345:1;17338:31;17388:4;17385:1;17378:15;17412:4;17409:1;17402:15;17428:120;17468:1;17494;17484:35;;17499:18;;:::i;:::-;-1:-1:-1;17533:9:1;;17428:120::o;17553:112::-;17585:1;17611;17601:35;;17616:18;;:::i;:::-;-1:-1:-1;17650:9:1;;17553:112::o;18388:127::-;18449:10;18444:3;18440:20;18437:1;18430:31;18480:4;18477:1;18470:15;18504:4;18501:1;18494:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1522000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2612",
								"getApproved(uint256)": "4799",
								"isApprovedForAll(address,address)": "infinite",
								"name()": "infinite",
								"owner()": "2398",
								"ownerOf(uint256)": "2667",
								"renounceOwnership()": "30207",
								"safeMint(address,string)": "infinite",
								"safeTransferFrom(address,address,uint256)": "infinite",
								"safeTransferFrom(address,address,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "26736",
								"supportsInterface(bytes4)": "infinite",
								"symbol()": "infinite",
								"tokenByIndex(uint256)": "6804",
								"tokenOfOwnerByIndex(address,uint256)": "4975",
								"tokenURI(uint256)": "infinite",
								"totalSupply()": "2393",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "30510"
							},
							"internal": {
								"_beforeTokenTransfer(address,address,uint256)": "infinite",
								"_burn(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 46272,
									"end": 47496,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 46272,
									"end": 47496,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 46272,
									"end": 47496,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 46450,
									"end": 46531,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 46450,
									"end": 46531,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 46450,
									"end": 46531,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 46450,
									"end": 46531,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 46450,
									"end": 46531,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 46450,
									"end": 46531,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 46450,
									"end": 46531,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 46450,
									"end": 46531,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 46450,
									"end": 46531,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 46450,
									"end": 46531,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 46450,
									"end": 46531,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 46450,
									"end": 46531,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 46450,
									"end": 46531,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 46450,
									"end": 46531,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 46450,
									"end": 46531,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 46450,
									"end": 46531,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 46450,
									"end": 46531,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 46450,
									"end": 46531,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 46450,
									"end": 46531,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 46450,
									"end": 46531,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 46450,
									"end": 46531,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 46450,
									"end": 46531,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 46450,
									"end": 46531,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 46450,
									"end": 46531,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 46450,
									"end": 46531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 46450,
									"end": 46531,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 46450,
									"end": 46531,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 46450,
									"end": 46531,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 46450,
									"end": 46531,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 46450,
									"end": 46531,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 46450,
									"end": 46531,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 46450,
									"end": 46531,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 46513,
									"end": 46518,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 46520,
									"end": 46527,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 20660,
									"end": 20665,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 20660,
									"end": 20673,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 46513,
									"end": 46518,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 20660,
									"end": 20665,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 20660,
									"end": 20673,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 20660,
									"end": 20673,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 20660,
									"end": 20673,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 20660,
									"end": 20673,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 20684,
									"end": 20691,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 20684,
									"end": 20701,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 20694,
									"end": 20701,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 20684,
									"end": 20691,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 20684,
									"end": 20701,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 20684,
									"end": 20701,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 20684,
									"end": 20701,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 20684,
									"end": 20701,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 20684,
									"end": 20701,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 20592,
									"end": 20709,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 20592,
									"end": 20709,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 43463,
									"end": 43480,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 43483,
									"end": 43495,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 43483,
									"end": 43493,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 43483,
									"end": 43493,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 43483,
									"end": 43493,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 43483,
									"end": 43495,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 43483,
									"end": 43495,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 43483,
									"end": 43495,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 43483,
									"end": 43495,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 43483,
									"end": 43495,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 43506,
									"end": 43512,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 43506,
									"end": 43524,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 43506,
									"end": 43524,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 43506,
									"end": 43524,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 43506,
									"end": 43524,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 43506,
									"end": 43524,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 43506,
									"end": 43524,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 43506,
									"end": 43524,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 43506,
									"end": 43524,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 43506,
									"end": 43524,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 43506,
									"end": 43524,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 43506,
									"end": 43524,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 43540,
									"end": 43583,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 43540,
									"end": 43583,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 43506,
									"end": 43524,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 43506,
									"end": 43524,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 43506,
									"end": 43524,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP1",
									"source": -1
								},
								{
									"begin": 43540,
									"end": 43583,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 43540,
									"end": 43583,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP1",
									"source": -1
								},
								{
									"begin": 43540,
									"end": 43583,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 43452,
									"end": 43591,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 46450,
									"end": 46531,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 46450,
									"end": 46531,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 46272,
									"end": 47496,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 46272,
									"end": 47496,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 16055,
									"end": 16153,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 16055,
									"end": 16153,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 16135,
									"end": 16145,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 16135,
									"end": 16145,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 16055,
									"end": 16153,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 141,
									"name": "tag",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 14,
									"end": 141,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 75,
									"end": 85,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B71"
								},
								{
									"begin": 70,
									"end": 73,
									"name": "PUSH",
									"source": 1,
									"value": "E0"
								},
								{
									"begin": 66,
									"end": 86,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 63,
									"end": 64,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 87,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 106,
									"end": 110,
									"name": "PUSH",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 103,
									"end": 104,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 96,
									"end": 111,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 130,
									"end": 134,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 127,
									"end": 128,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 135,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 146,
									"end": 986,
									"name": "tag",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 146,
									"end": 986,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 200,
									"end": 205,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 253,
									"end": 256,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 246,
									"end": 250,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 238,
									"end": 244,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 234,
									"end": 251,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 230,
									"end": 257,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 220,
									"end": 275,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 220,
									"end": 275,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 271,
									"end": 272,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 268,
									"end": 269,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 261,
									"end": 273,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 220,
									"end": 275,
									"name": "tag",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 220,
									"end": 275,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 294,
									"end": 307,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 294,
									"end": 307,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 356,
									"end": 366,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 356,
									"end": 366,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 356,
									"end": 366,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 353,
									"end": 389,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 353,
									"end": 389,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 353,
									"end": 389,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 369,
									"end": 387,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 369,
									"end": 387,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 369,
									"end": 387,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 369,
									"end": 387,
									"name": "tag",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 369,
									"end": 387,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 444,
									"end": 446,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 438,
									"end": 447,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 412,
									"end": 414,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 498,
									"end": 511,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 498,
									"end": 511,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 494,
									"end": 516,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 494,
									"end": 516,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 494,
									"end": 516,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 518,
									"end": 520,
									"name": "PUSH",
									"source": 1,
									"value": "3F"
								},
								{
									"begin": 490,
									"end": 521,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 486,
									"end": 526,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 474,
									"end": 527,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 474,
									"end": 527,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 474,
									"end": 527,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 542,
									"end": 560,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 542,
									"end": 560,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 542,
									"end": 560,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 562,
									"end": 584,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 562,
									"end": 584,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 562,
									"end": 584,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 539,
									"end": 585,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 536,
									"end": 608,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 536,
									"end": 608,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 536,
									"end": 608,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 588,
									"end": 606,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 588,
									"end": 606,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 588,
									"end": 606,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 588,
									"end": 606,
									"name": "tag",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 588,
									"end": 606,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 628,
									"end": 638,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 624,
									"end": 626,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 617,
									"end": 639,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 663,
									"end": 665,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 655,
									"end": 661,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 648,
									"end": 666,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 685,
									"end": 689,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 675,
									"end": 689,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 675,
									"end": 689,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 730,
									"end": 733,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 725,
									"end": 727,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 720,
									"end": 722,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 712,
									"end": 718,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 708,
									"end": 723,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 704,
									"end": 728,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 701,
									"end": 734,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 698,
									"end": 751,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 698,
									"end": 751,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 698,
									"end": 751,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 747,
									"end": 748,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 744,
									"end": 745,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 737,
									"end": 749,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 698,
									"end": 751,
									"name": "tag",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 698,
									"end": 751,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 769,
									"end": 770,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 760,
									"end": 770,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 760,
									"end": 770,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 779,
									"end": 912,
									"name": "tag",
									"source": 1,
									"value": "32"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 793,
									"end": 795,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 790,
									"end": 791,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 787,
									"end": 796,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 779,
									"end": 912,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 779,
									"end": 912,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "34"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 881,
									"end": 895,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 881,
									"end": 895,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 881,
									"end": 895,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 877,
									"end": 900,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 877,
									"end": 900,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 871,
									"end": 901,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 850,
									"end": 864,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 850,
									"end": 864,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 850,
									"end": 864,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 846,
									"end": 869,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 846,
									"end": 869,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 839,
									"end": 902,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 804,
									"end": 814,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 804,
									"end": 814,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 804,
									"end": 814,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 804,
									"end": 814,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 779,
									"end": 912,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "32"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 779,
									"end": 912,
									"name": "tag",
									"source": 1,
									"value": "34"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 954,
									"end": 955,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 932,
									"end": 947,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 932,
									"end": 947,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 932,
									"end": 947,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 928,
									"end": 952,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 928,
									"end": 952,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 928,
									"end": 952,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 921,
									"end": 956,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 921,
									"end": 956,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 921,
									"end": 956,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 921,
									"end": 956,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 936,
									"end": 942,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 146,
									"end": 986,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 146,
									"end": 986,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 991,
									"end": 1553,
									"name": "tag",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 991,
									"end": 1553,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1090,
									"end": 1096,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1098,
									"end": 1104,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1151,
									"end": 1153,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1139,
									"end": 1148,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1130,
									"end": 1137,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1126,
									"end": 1149,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1122,
									"end": 1154,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 1119,
									"end": 1171,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1119,
									"end": 1171,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "36"
								},
								{
									"begin": 1119,
									"end": 1171,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1167,
									"end": 1168,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1164,
									"end": 1165,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1157,
									"end": 1169,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1119,
									"end": 1171,
									"name": "tag",
									"source": 1,
									"value": "36"
								},
								{
									"begin": 1119,
									"end": 1171,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1194,
									"end": 1210,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1194,
									"end": 1210,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1259,
									"end": 1273,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1259,
									"end": 1273,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1259,
									"end": 1273,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1256,
									"end": 1290,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1256,
									"end": 1290,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "37"
								},
								{
									"begin": 1256,
									"end": 1290,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1286,
									"end": 1287,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1283,
									"end": 1284,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1276,
									"end": 1288,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1256,
									"end": 1290,
									"name": "tag",
									"source": 1,
									"value": "37"
								},
								{
									"begin": 1256,
									"end": 1290,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1309,
									"end": 1370,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "38"
								},
								{
									"begin": 1362,
									"end": 1369,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 1353,
									"end": 1359,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1342,
									"end": 1351,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 1338,
									"end": 1360,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1309,
									"end": 1370,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 1309,
									"end": 1370,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1309,
									"end": 1370,
									"name": "tag",
									"source": 1,
									"value": "38"
								},
								{
									"begin": 1309,
									"end": 1370,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1299,
									"end": 1370,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 1299,
									"end": 1370,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1416,
									"end": 1418,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1405,
									"end": 1414,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1401,
									"end": 1419,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1395,
									"end": 1420,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1379,
									"end": 1420,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1379,
									"end": 1420,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1445,
									"end": 1447,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1435,
									"end": 1443,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1432,
									"end": 1448,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1429,
									"end": 1465,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1429,
									"end": 1465,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "39"
								},
								{
									"begin": 1429,
									"end": 1465,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1461,
									"end": 1462,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1458,
									"end": 1459,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1451,
									"end": 1463,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1429,
									"end": 1465,
									"name": "tag",
									"source": 1,
									"value": "39"
								},
								{
									"begin": 1429,
									"end": 1465,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1429,
									"end": 1465,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1484,
									"end": 1547,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1539,
									"end": 1546,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1528,
									"end": 1536,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1517,
									"end": 1526,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 1513,
									"end": 1537,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1484,
									"end": 1547,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 1484,
									"end": 1547,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1484,
									"end": 1547,
									"name": "tag",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1484,
									"end": 1547,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1474,
									"end": 1547,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1474,
									"end": 1547,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1474,
									"end": 1547,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 991,
									"end": 1553,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 991,
									"end": 1553,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 991,
									"end": 1553,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 991,
									"end": 1553,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 991,
									"end": 1553,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 991,
									"end": 1553,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1558,
									"end": 1938,
									"name": "tag",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 1558,
									"end": 1938,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1637,
									"end": 1638,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1633,
									"end": 1645,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1633,
									"end": 1645,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1633,
									"end": 1645,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 1633,
									"end": 1645,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1680,
									"end": 1692,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1680,
									"end": 1692,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1680,
									"end": 1692,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1701,
									"end": 1762,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "42"
								},
								{
									"begin": 1701,
									"end": 1762,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1755,
									"end": 1759,
									"name": "PUSH",
									"source": 1,
									"value": "7F"
								},
								{
									"begin": 1747,
									"end": 1753,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1743,
									"end": 1760,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1733,
									"end": 1760,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1733,
									"end": 1760,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1701,
									"end": 1762,
									"name": "tag",
									"source": 1,
									"value": "42"
								},
								{
									"begin": 1701,
									"end": 1762,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1808,
									"end": 1810,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1800,
									"end": 1806,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1797,
									"end": 1811,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 1777,
									"end": 1795,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1774,
									"end": 1812,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1771,
									"end": 1932,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "43"
								},
								{
									"begin": 1771,
									"end": 1932,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1854,
									"end": 1864,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B71"
								},
								{
									"begin": 1849,
									"end": 1852,
									"name": "PUSH",
									"source": 1,
									"value": "E0"
								},
								{
									"begin": 1845,
									"end": 1865,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 1842,
									"end": 1843,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1835,
									"end": 1866,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1889,
									"end": 1893,
									"name": "PUSH",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 1886,
									"end": 1887,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1879,
									"end": 1894,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1917,
									"end": 1921,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 1914,
									"end": 1915,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1907,
									"end": 1922,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1771,
									"end": 1932,
									"name": "tag",
									"source": 1,
									"value": "43"
								},
								{
									"begin": 1771,
									"end": 1932,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1771,
									"end": 1932,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1558,
									"end": 1938,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1558,
									"end": 1938,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1558,
									"end": 1938,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1558,
									"end": 1938,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2069,
									"end": 2614,
									"name": "tag",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 2069,
									"end": 2614,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2171,
									"end": 2173,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 2166,
									"end": 2169,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2163,
									"end": 2174,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 2160,
									"end": 2608,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2160,
									"end": 2608,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "46"
								},
								{
									"begin": 2160,
									"end": 2608,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2207,
									"end": 2208,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2232,
									"end": 2237,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2228,
									"end": 2230,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2221,
									"end": 2238,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2277,
									"end": 2281,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2273,
									"end": 2275,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2263,
									"end": 2282,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 2347,
									"end": 2349,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 2335,
									"end": 2345,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 2331,
									"end": 2350,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2328,
									"end": 2329,
									"name": "PUSH",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 2324,
									"end": 2351,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 2318,
									"end": 2322,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2314,
									"end": 2352,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2383,
									"end": 2387,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2371,
									"end": 2381,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 2368,
									"end": 2388,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 2365,
									"end": 2412,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2365,
									"end": 2412,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "47"
								},
								{
									"begin": 2365,
									"end": 2412,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2406,
									"end": 2410,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2365,
									"end": 2412,
									"name": "tag",
									"source": 1,
									"value": "47"
								},
								{
									"begin": 2365,
									"end": 2412,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2461,
									"end": 2463,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 2456,
									"end": 2459,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 2452,
									"end": 2464,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2449,
									"end": 2450,
									"name": "PUSH",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 2445,
									"end": 2465,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 2439,
									"end": 2443,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2435,
									"end": 2466,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2425,
									"end": 2466,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2425,
									"end": 2466,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "tag",
									"source": 1,
									"value": "48"
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2534,
									"end": 2536,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2527,
									"end": 2532,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2524,
									"end": 2537,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "50"
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2579,
									"end": 2596,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2579,
									"end": 2596,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2579,
									"end": 2596,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 2560,
									"end": 2561,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 2549,
									"end": 2562,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "48"
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "tag",
									"source": 1,
									"value": "50"
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2520,
									"end": 2523,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2520,
									"end": 2523,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2520,
									"end": 2523,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2160,
									"end": 2608,
									"name": "tag",
									"source": 1,
									"value": "46"
								},
								{
									"begin": 2160,
									"end": 2608,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2069,
									"end": 2614,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2069,
									"end": 2614,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2069,
									"end": 2614,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2069,
									"end": 2614,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2790,
									"end": 4142,
									"name": "tag",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 2790,
									"end": 4142,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2910,
									"end": 2920,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2910,
									"end": 2920,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2932,
									"end": 2962,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2932,
									"end": 2962,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 2929,
									"end": 2985,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2929,
									"end": 2985,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "54"
								},
								{
									"begin": 2929,
									"end": 2985,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2965,
									"end": 2983,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "54"
								},
								{
									"begin": 2965,
									"end": 2983,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 2965,
									"end": 2983,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2965,
									"end": 2983,
									"name": "tag",
									"source": 1,
									"value": "54"
								},
								{
									"begin": 2965,
									"end": 2983,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2994,
									"end": 3091,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "55"
								},
								{
									"begin": 3084,
									"end": 3090,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3044,
									"end": 3082,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "56"
								},
								{
									"begin": 3076,
									"end": 3080,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 3070,
									"end": 3081,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 3044,
									"end": 3082,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 3044,
									"end": 3082,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3044,
									"end": 3082,
									"name": "tag",
									"source": 1,
									"value": "56"
								},
								{
									"begin": 3044,
									"end": 3082,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3038,
									"end": 3042,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2994,
									"end": 3091,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 2994,
									"end": 3091,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2994,
									"end": 3091,
									"name": "tag",
									"source": 1,
									"value": "55"
								},
								{
									"begin": 2994,
									"end": 3091,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3146,
									"end": 3150,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 3146,
									"end": 3150,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 3210,
									"end": 3212,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 3199,
									"end": 3213,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 3199,
									"end": 3213,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 3227,
									"end": 3228,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 3222,
									"end": 3885,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3222,
									"end": 3885,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 3222,
									"end": 3885,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "58"
								},
								{
									"begin": 3222,
									"end": 3885,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 3929,
									"end": 3930,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3946,
									"end": 3952,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 3943,
									"end": 4032,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 3943,
									"end": 4032,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "59"
								},
								{
									"begin": 3943,
									"end": 4032,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3998,
									"end": 4017,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 3998,
									"end": 4017,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 3998,
									"end": 4017,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3992,
									"end": 4018,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 3943,
									"end": 4032,
									"name": "tag",
									"source": 1,
									"value": "59"
								},
								{
									"begin": 3943,
									"end": 4032,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2747,
									"end": 2748,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 2743,
									"end": 2754,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 2743,
									"end": 2754,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2743,
									"end": 2754,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 2739,
									"end": 2763,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 2735,
									"end": 2764,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 2725,
									"end": 2765,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2771,
									"end": 2772,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 2767,
									"end": 2778,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 2767,
									"end": 2778,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2767,
									"end": 2778,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 2722,
									"end": 2779,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 4045,
									"end": 4126,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 4045,
									"end": 4126,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 3192,
									"end": 4136,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "50"
								},
								{
									"begin": 3192,
									"end": 4136,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3222,
									"end": 3885,
									"name": "tag",
									"source": 1,
									"value": "58"
								},
								{
									"begin": 3222,
									"end": 3885,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2016,
									"end": 2017,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2009,
									"end": 2023,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 2009,
									"end": 2023,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2009,
									"end": 2023,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2053,
									"end": 2057,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2040,
									"end": 2058,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2040,
									"end": 2058,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3258,
									"end": 3278,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 3258,
									"end": 3278,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3258,
									"end": 3278,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "tag",
									"source": 1,
									"value": "62"
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3390,
									"end": 3397,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3387,
									"end": 3388,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3384,
									"end": 3398,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "64"
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 3479,
									"end": 3498,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 3479,
									"end": 3498,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 3479,
									"end": 3498,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3473,
									"end": 3499,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 3458,
									"end": 3500,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3458,
									"end": 3500,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 3571,
									"end": 3598,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 3571,
									"end": 3598,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 3571,
									"end": 3598,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3571,
									"end": 3598,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 3539,
									"end": 3540,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 3527,
									"end": 3541,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3527,
									"end": 3541,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3527,
									"end": 3541,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3527,
									"end": 3541,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3406,
									"end": 3425,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 3406,
									"end": 3425,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "62"
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "tag",
									"source": 1,
									"value": "64"
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3380,
									"end": 3383,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3640,
									"end": 3646,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 3631,
									"end": 3638,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3628,
									"end": 3647,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 3625,
									"end": 3826,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 3625,
									"end": 3826,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "65"
								},
								{
									"begin": 3625,
									"end": 3826,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 3701,
									"end": 3720,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 3701,
									"end": 3720,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 3701,
									"end": 3720,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3695,
									"end": 3721,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3784,
									"end": 3785,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 3780,
									"end": 3794,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 3780,
									"end": 3794,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3780,
									"end": 3794,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 3796,
									"end": 3799,
									"name": "PUSH",
									"source": 1,
									"value": "F8"
								},
								{
									"begin": 3776,
									"end": 3800,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3772,
									"end": 3809,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 3768,
									"end": 3810,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 3753,
									"end": 3811,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3738,
									"end": 3812,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3738,
									"end": 3812,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 3625,
									"end": 3826,
									"name": "tag",
									"source": 1,
									"value": "65"
								},
								{
									"begin": 3625,
									"end": 3826,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3872,
									"end": 3873,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 3856,
									"end": 3870,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3856,
									"end": 3870,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3856,
									"end": 3870,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 3852,
									"end": 3874,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3839,
									"end": 3875,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3839,
									"end": 3875,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2790,
									"end": 4142,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2790,
									"end": 4142,
									"name": "tag",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 2790,
									"end": 4142,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 46272,
									"end": 47496,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 46272,
									"end": 47496,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 46272,
									"end": 47496,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 46272,
									"end": 47496,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 46272,
									"end": 47496,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 46272,
									"end": 47496,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 46272,
									"end": 47496,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c7eea0940fa2e5a0049d323b8ed803f789bbdac64704431945968dd35a0f1f4164736f6c63430008120033",
									".code": [
										{
											"begin": 46272,
											"end": 47496,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 46272,
											"end": 47496,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 46272,
											"end": 47496,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 46272,
											"end": 47496,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 46272,
											"end": 47496,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 46272,
											"end": 47496,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 46272,
											"end": 47496,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 46272,
											"end": 47496,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 46272,
											"end": 47496,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 46272,
											"end": 47496,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 46272,
											"end": 47496,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 46272,
											"end": 47496,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 46272,
											"end": 47496,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46272,
											"end": 47496,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 46272,
											"end": 47496,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 46272,
											"end": 47496,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 46272,
											"end": 47496,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 46272,
											"end": 47496,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 46272,
											"end": 47496,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 46272,
											"end": 47496,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 46272,
											"end": 47496,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 46272,
											"end": 47496,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 46272,
											"end": 47496,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 46272,
											"end": 47496,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 46272,
											"end": 47496,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 46272,
											"end": 47496,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 46272,
											"end": 47496,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 46272,
											"end": 47496,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 46272,
											"end": 47496,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 46272,
											"end": 47496,
											"name": "PUSH",
											"source": 0,
											"value": "B88D4FDE"
										},
										{
											"begin": 46272,
											"end": 47496,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 46272,
											"end": 47496,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 46272,
											"end": 47496,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 46272,
											"end": 47496,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 46272,
											"end": 47496,
											"name": "PUSH",
											"source": 0,
											"value": "B88D4FDE"
										},
										{
											"begin": 46272,
											"end": 47496,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 46272,
											"end": 47496,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 46272,
											"end": 47496,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 46272,
											"end": 47496,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 46272,
											"end": 47496,
											"name": "PUSH",
											"source": 0,
											"value": "C87B56DD"
										},
										{
											"begin": 46272,
											"end": 47496,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 46272,
											"end": 47496,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 46272,
											"end": 47496,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 46272,
											"end": 47496,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 46272,
											"end": 47496,
											"name": "PUSH",
											"source": 0,
											"value": "D204C45E"
										},
										{
											"begin": 46272,
											"end": 47496,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 46272,
											"end": 47496,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 46272,
											"end": 47496,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 46272,
											"end": 47496,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 46272,
											"end": 47496,
											"name": "PUSH",
											"source": 0,
											"value": "E985E9C5"
										},
										{
											"begin": 46272,
											"end": 47496,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 46272,
											"end": 47496,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 46272,
											"end": 47496,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 46272,
											"end": 47496,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 46272,
											"end": 47496,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 46272,
											"end": 47496,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 46272,
											"end": 47496,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 46272,
											"end": 47496,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 46272,
											"end": 47496,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 46272,
											"end": 47496,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 46272,
											"end": 47496,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 46272,
											"end": 47496,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 46272,
											"end": 47496,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46272,
											"end": 47496,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 46272,
											"end": 47496,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 46272,
											"end": 47496,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 46272,
											"end": 47496,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 46272,
											"end": 47496,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 46272,
											"end": 47496,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 46272,
											"end": 47496,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 46272,
											"end": 47496,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 46272,
											"end": 47496,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 46272,
											"end": 47496,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 46272,
											"end": 47496,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 46272,
											"end": 47496,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 46272,
											"end": 47496,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 46272,
											"end": 47496,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 46272,
											"end": 47496,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 46272,
											"end": 47496,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 46272,
											"end": 47496,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 46272,
											"end": 47496,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 46272,
											"end": 47496,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 46272,
											"end": 47496,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 46272,
											"end": 47496,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 46272,
											"end": 47496,
											"name": "PUSH",
											"source": 0,
											"value": "A22CB465"
										},
										{
											"begin": 46272,
											"end": 47496,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 46272,
											"end": 47496,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 46272,
											"end": 47496,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 46272,
											"end": 47496,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 46272,
											"end": 47496,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 46272,
											"end": 47496,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 46272,
											"end": 47496,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 46272,
											"end": 47496,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46272,
											"end": 47496,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 46272,
											"end": 47496,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 46272,
											"end": 47496,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 46272,
											"end": 47496,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 46272,
											"end": 47496,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 46272,
											"end": 47496,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 46272,
											"end": 47496,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 46272,
											"end": 47496,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 46272,
											"end": 47496,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 46272,
											"end": 47496,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 46272,
											"end": 47496,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 46272,
											"end": 47496,
											"name": "PUSH",
											"source": 0,
											"value": "2F745C59"
										},
										{
											"begin": 46272,
											"end": 47496,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 46272,
											"end": 47496,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 46272,
											"end": 47496,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 46272,
											"end": 47496,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 46272,
											"end": 47496,
											"name": "PUSH",
											"source": 0,
											"value": "42842E0E"
										},
										{
											"begin": 46272,
											"end": 47496,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 46272,
											"end": 47496,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 46272,
											"end": 47496,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 46272,
											"end": 47496,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 46272,
											"end": 47496,
											"name": "PUSH",
											"source": 0,
											"value": "4F6CCCE7"
										},
										{
											"begin": 46272,
											"end": 47496,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 46272,
											"end": 47496,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 46272,
											"end": 47496,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 46272,
											"end": 47496,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 46272,
											"end": 47496,
											"name": "PUSH",
											"source": 0,
											"value": "6352211E"
										},
										{
											"begin": 46272,
											"end": 47496,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 46272,
											"end": 47496,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 46272,
											"end": 47496,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 46272,
											"end": 47496,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 46272,
											"end": 47496,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 46272,
											"end": 47496,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 46272,
											"end": 47496,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 46272,
											"end": 47496,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46272,
											"end": 47496,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 46272,
											"end": 47496,
											"name": "PUSH",
											"source": 0,
											"value": "1FFC9A7"
										},
										{
											"begin": 46272,
											"end": 47496,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 46272,
											"end": 47496,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 46272,
											"end": 47496,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 46272,
											"end": 47496,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 46272,
											"end": 47496,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 46272,
											"end": 47496,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 46272,
											"end": 47496,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 46272,
											"end": 47496,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 46272,
											"end": 47496,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 46272,
											"end": 47496,
											"name": "PUSH",
											"source": 0,
											"value": "81812FC"
										},
										{
											"begin": 46272,
											"end": 47496,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 46272,
											"end": 47496,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 46272,
											"end": 47496,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 46272,
											"end": 47496,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 46272,
											"end": 47496,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 46272,
											"end": 47496,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 46272,
											"end": 47496,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 46272,
											"end": 47496,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 46272,
											"end": 47496,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 46272,
											"end": 47496,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 46272,
											"end": 47496,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 46272,
											"end": 47496,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 46272,
											"end": 47496,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 46272,
											"end": 47496,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 46272,
											"end": 47496,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46272,
											"end": 47496,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 46272,
											"end": 47496,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 46272,
											"end": 47496,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 47322,
											"end": 47493,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 47322,
											"end": 47493,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47322,
											"end": 47493,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 47322,
											"end": 47493,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 47322,
											"end": 47493,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 47322,
											"end": 47493,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 47322,
											"end": 47493,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 47322,
											"end": 47493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 47322,
											"end": 47493,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 47322,
											"end": 47493,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47322,
											"end": 47493,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 47322,
											"end": 47493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 47322,
											"end": 47493,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 47322,
											"end": 47493,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47322,
											"end": 47493,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 47322,
											"end": 47493,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 565,
											"end": 579,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 565,
											"end": 579,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 558,
											"end": 580,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 540,
											"end": 581,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 540,
											"end": 581,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 528,
											"end": 530,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 513,
											"end": 531,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 47322,
											"end": 47493,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 47322,
											"end": 47493,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47322,
											"end": 47493,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 47322,
											"end": 47493,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 47322,
											"end": 47493,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 47322,
											"end": 47493,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 47322,
											"end": 47493,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 47322,
											"end": 47493,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47322,
											"end": 47493,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 21713,
											"end": 21813,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 21713,
											"end": 21813,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21713,
											"end": 21813,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 21713,
											"end": 21813,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 21713,
											"end": 21813,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21713,
											"end": 21813,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 21713,
											"end": 21813,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21713,
											"end": 21813,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21713,
											"end": 21813,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21713,
											"end": 21813,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 21713,
											"end": 21813,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21713,
											"end": 21813,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21713,
											"end": 21813,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 21713,
											"end": 21813,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23173,
											"end": 23394,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 23173,
											"end": 23394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23173,
											"end": 23394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 23173,
											"end": 23394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 23173,
											"end": 23394,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 23173,
											"end": 23394,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 23173,
											"end": 23394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 23173,
											"end": 23394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23173,
											"end": 23394,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 23173,
											"end": 23394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23173,
											"end": 23394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 23173,
											"end": 23394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23173,
											"end": 23394,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 23173,
											"end": 23394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23173,
											"end": 23394,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23173,
											"end": 23394,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1697,
											"end": 1729,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1697,
											"end": 1729,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1697,
											"end": 1729,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1679,
											"end": 1730,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1679,
											"end": 1730,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1667,
											"end": 1669,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1652,
											"end": 1670,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 23173,
											"end": 23394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 1533,
											"end": 1736,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 22710,
											"end": 23107,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 22710,
											"end": 23107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22710,
											"end": 23107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 22710,
											"end": 23107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 22710,
											"end": 23107,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 22710,
											"end": 23107,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 22710,
											"end": 23107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 22710,
											"end": 23107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22710,
											"end": 23107,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 22710,
											"end": 23107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22710,
											"end": 23107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 22710,
											"end": 23107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22710,
											"end": 23107,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 22710,
											"end": 23107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22710,
											"end": 23107,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 35169,
											"end": 35282,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 35169,
											"end": 35282,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35257,
											"end": 35267,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 35257,
											"end": 35274,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 35169,
											"end": 35282,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 35169,
											"end": 35282,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35169,
											"end": 35282,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35169,
											"end": 35282,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2324,
											"end": 2349,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2324,
											"end": 2349,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2324,
											"end": 2349,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2312,
											"end": 2314,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2297,
											"end": 2315,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 35169,
											"end": 35282,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 2178,
											"end": 2355,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 24063,
											"end": 24368,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 24063,
											"end": 24368,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24063,
											"end": 24368,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 24063,
											"end": 24368,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 24063,
											"end": 24368,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 24063,
											"end": 24368,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 24063,
											"end": 24368,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 24063,
											"end": 24368,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24063,
											"end": 24368,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 24063,
											"end": 24368,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24063,
											"end": 24368,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 24063,
											"end": 24368,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34837,
											"end": 35093,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 34837,
											"end": 35093,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34837,
											"end": 35093,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 34837,
											"end": 35093,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 34837,
											"end": 35093,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 34837,
											"end": 35093,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 34837,
											"end": 35093,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 34837,
											"end": 35093,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34837,
											"end": 35093,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 34837,
											"end": 35093,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34837,
											"end": 35093,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 34837,
											"end": 35093,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24439,
											"end": 24590,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 24439,
											"end": 24590,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24439,
											"end": 24590,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 24439,
											"end": 24590,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 24439,
											"end": 24590,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 24439,
											"end": 24590,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 24439,
											"end": 24590,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 24439,
											"end": 24590,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24439,
											"end": 24590,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 24439,
											"end": 24590,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24439,
											"end": 24590,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 24439,
											"end": 24590,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35359,
											"end": 35592,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 35359,
											"end": 35592,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35359,
											"end": 35592,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 35359,
											"end": 35592,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 35359,
											"end": 35592,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 35359,
											"end": 35592,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 35359,
											"end": 35592,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 35359,
											"end": 35592,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35359,
											"end": 35592,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 35359,
											"end": 35592,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35359,
											"end": 35592,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 35359,
											"end": 35592,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21407,
											"end": 21646,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 21407,
											"end": 21646,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21407,
											"end": 21646,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 21407,
											"end": 21646,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 21407,
											"end": 21646,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 21407,
											"end": 21646,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 21407,
											"end": 21646,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 21407,
											"end": 21646,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21407,
											"end": 21646,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 21407,
											"end": 21646,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21407,
											"end": 21646,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 21407,
											"end": 21646,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21137,
											"end": 21345,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 21137,
											"end": 21345,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21137,
											"end": 21345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 21137,
											"end": 21345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 21137,
											"end": 21345,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 21137,
											"end": 21345,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 21137,
											"end": 21345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 21137,
											"end": 21345,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21137,
											"end": 21345,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 21137,
											"end": 21345,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21137,
											"end": 21345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 21137,
											"end": 21345,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 44323,
											"end": 44471,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 44323,
											"end": 44471,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44323,
											"end": 44471,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 44323,
											"end": 44471,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 44323,
											"end": 44471,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43672,
											"end": 43759,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 43672,
											"end": 43759,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43745,
											"end": 43751,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 43745,
											"end": 43751,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 43745,
											"end": 43751,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 43672,
											"end": 43759,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 43672,
											"end": 43759,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21882,
											"end": 21986,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 21882,
											"end": 21986,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21882,
											"end": 21986,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 21882,
											"end": 21986,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 21882,
											"end": 21986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23466,
											"end": 23761,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 23466,
											"end": 23761,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23466,
											"end": 23761,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 23466,
											"end": 23761,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 23466,
											"end": 23761,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 23466,
											"end": 23761,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 23466,
											"end": 23761,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 23466,
											"end": 23761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23466,
											"end": 23761,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 23466,
											"end": 23761,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23466,
											"end": 23761,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 23466,
											"end": 23761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24661,
											"end": 24946,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 24661,
											"end": 24946,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24661,
											"end": 24946,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 24661,
											"end": 24946,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 24661,
											"end": 24946,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 24661,
											"end": 24946,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 24661,
											"end": 24946,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 24661,
											"end": 24946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24661,
											"end": 24946,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 24661,
											"end": 24946,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24661,
											"end": 24946,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 24661,
											"end": 24946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 47159,
											"end": 47314,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 47159,
											"end": 47314,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47159,
											"end": 47314,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 47159,
											"end": 47314,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 47159,
											"end": 47314,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 47159,
											"end": 47314,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 47159,
											"end": 47314,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 47159,
											"end": 47314,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 47159,
											"end": 47314,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 47159,
											"end": 47314,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47159,
											"end": 47314,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 47159,
											"end": 47314,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 46539,
											"end": 46839,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 46539,
											"end": 46839,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46539,
											"end": 46839,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 46539,
											"end": 46839,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 46539,
											"end": 46839,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 46539,
											"end": 46839,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 46539,
											"end": 46839,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 46539,
											"end": 46839,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 46539,
											"end": 46839,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 46539,
											"end": 46839,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46539,
											"end": 46839,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 46539,
											"end": 46839,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23832,
											"end": 23996,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 23832,
											"end": 23996,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23832,
											"end": 23996,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 23832,
											"end": 23996,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 23832,
											"end": 23996,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 23832,
											"end": 23996,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 23832,
											"end": 23996,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 23832,
											"end": 23996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23832,
											"end": 23996,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 23832,
											"end": 23996,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 23953,
											"end": 23978,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23953,
											"end": 23978,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23953,
											"end": 23978,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23929,
											"end": 23933,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23953,
											"end": 23978,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23953,
											"end": 23978,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23953,
											"end": 23978,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23953,
											"end": 23971,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 23953,
											"end": 23978,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23953,
											"end": 23978,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23953,
											"end": 23978,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23953,
											"end": 23978,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23953,
											"end": 23978,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23953,
											"end": 23978,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23953,
											"end": 23978,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 23953,
											"end": 23978,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 23953,
											"end": 23988,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 23953,
											"end": 23988,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23953,
											"end": 23988,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 23953,
											"end": 23988,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23953,
											"end": 23988,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23953,
											"end": 23988,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23953,
											"end": 23988,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23953,
											"end": 23988,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23953,
											"end": 23988,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23953,
											"end": 23988,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23953,
											"end": 23988,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 23953,
											"end": 23988,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23953,
											"end": 23988,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 23953,
											"end": 23988,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23953,
											"end": 23988,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23832,
											"end": 23996,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 44626,
											"end": 44870,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 44626,
											"end": 44870,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44626,
											"end": 44870,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 44626,
											"end": 44870,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 44626,
											"end": 44870,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 44626,
											"end": 44870,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 44626,
											"end": 44870,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 44626,
											"end": 44870,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 44626,
											"end": 44870,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 44626,
											"end": 44870,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44626,
											"end": 44870,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 44626,
											"end": 44870,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 47322,
											"end": 47493,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 47322,
											"end": 47493,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47425,
											"end": 47429,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 47449,
											"end": 47485,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 47473,
											"end": 47484,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 47449,
											"end": 47472,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 47449,
											"end": 47485,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 47449,
											"end": 47485,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 47449,
											"end": 47485,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47442,
											"end": 47485,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 47322,
											"end": 47493,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 47322,
											"end": 47493,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21713,
											"end": 21813,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 21713,
											"end": 21813,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21767,
											"end": 21780,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 21800,
											"end": 21805,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21793,
											"end": 21805,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21793,
											"end": 21805,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 21793,
											"end": 21805,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 21793,
											"end": 21805,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21793,
											"end": 21805,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 21793,
											"end": 21805,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21793,
											"end": 21805,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 21793,
											"end": 21805,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21793,
											"end": 21805,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21793,
											"end": 21805,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 21793,
											"end": 21805,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21793,
											"end": 21805,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 21793,
											"end": 21805,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21793,
											"end": 21805,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21793,
											"end": 21805,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 21793,
											"end": 21805,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 21793,
											"end": 21805,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 21793,
											"end": 21805,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21793,
											"end": 21805,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21793,
											"end": 21805,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21793,
											"end": 21805,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21793,
											"end": 21805,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21793,
											"end": 21805,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21793,
											"end": 21805,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21793,
											"end": 21805,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21793,
											"end": 21805,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21793,
											"end": 21805,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 21793,
											"end": 21805,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21793,
											"end": 21805,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21793,
											"end": 21805,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21793,
											"end": 21805,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21793,
											"end": 21805,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21793,
											"end": 21805,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 21793,
											"end": 21805,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21793,
											"end": 21805,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21793,
											"end": 21805,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21793,
											"end": 21805,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 21793,
											"end": 21805,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 21793,
											"end": 21805,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21793,
											"end": 21805,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 21793,
											"end": 21805,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21793,
											"end": 21805,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 21793,
											"end": 21805,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21793,
											"end": 21805,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21793,
											"end": 21805,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 21793,
											"end": 21805,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 21793,
											"end": 21805,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21793,
											"end": 21805,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21793,
											"end": 21805,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 21793,
											"end": 21805,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 21793,
											"end": 21805,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 21793,
											"end": 21805,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21793,
											"end": 21805,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 21793,
											"end": 21805,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21793,
											"end": 21805,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 21793,
											"end": 21805,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 21793,
											"end": 21805,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 21793,
											"end": 21805,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 21793,
											"end": 21805,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 21793,
											"end": 21805,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21793,
											"end": 21805,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21793,
											"end": 21805,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 21793,
											"end": 21805,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21793,
											"end": 21805,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21793,
											"end": 21805,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 21793,
											"end": 21805,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21793,
											"end": 21805,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 21793,
											"end": 21805,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21793,
											"end": 21805,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21793,
											"end": 21805,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21793,
											"end": 21805,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21793,
											"end": 21805,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21793,
											"end": 21805,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21793,
											"end": 21805,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21793,
											"end": 21805,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 21793,
											"end": 21805,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21793,
											"end": 21805,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 21793,
											"end": 21805,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21793,
											"end": 21805,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 21793,
											"end": 21805,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21793,
											"end": 21805,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21793,
											"end": 21805,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 21793,
											"end": 21805,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21793,
											"end": 21805,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21793,
											"end": 21805,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21793,
											"end": 21805,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 21793,
											"end": 21805,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21793,
											"end": 21805,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21793,
											"end": 21805,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 21793,
											"end": 21805,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21793,
											"end": 21805,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21793,
											"end": 21805,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 21793,
											"end": 21805,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 21793,
											"end": 21805,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 21793,
											"end": 21805,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21793,
											"end": 21805,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21793,
											"end": 21805,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21793,
											"end": 21805,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 21793,
											"end": 21805,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 21793,
											"end": 21805,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21793,
											"end": 21805,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21793,
											"end": 21805,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21793,
											"end": 21805,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21793,
											"end": 21805,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 21793,
											"end": 21805,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21793,
											"end": 21805,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21793,
											"end": 21805,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21793,
											"end": 21805,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21793,
											"end": 21805,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21793,
											"end": 21805,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21793,
											"end": 21805,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21793,
											"end": 21805,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21713,
											"end": 21813,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21713,
											"end": 21813,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23173,
											"end": 23394,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 23173,
											"end": 23394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23249,
											"end": 23256,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23277,
											"end": 23293,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 23285,
											"end": 23292,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23277,
											"end": 23284,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 23277,
											"end": 23293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23277,
											"end": 23293,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 23277,
											"end": 23293,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23269,
											"end": 23342,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 23269,
											"end": 23342,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23269,
											"end": 23342,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23269,
											"end": 23342,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 23269,
											"end": 23342,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23269,
											"end": 23342,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6056,
											"end": 6058,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 23269,
											"end": 23342,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 23269,
											"end": 23342,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23269,
											"end": 23342,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6038,
											"end": 6059,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6095,
											"end": 6097,
											"name": "PUSH",
											"source": 1,
											"value": "2C"
										},
										{
											"begin": 6075,
											"end": 6093,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 6075,
											"end": 6093,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6075,
											"end": 6093,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6068,
											"end": 6098,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6134,
											"end": 6168,
											"name": "PUSH",
											"source": 1,
											"value": "4552433732313A20617070726F76656420717565727920666F72206E6F6E6578"
										},
										{
											"begin": 6114,
											"end": 6132,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 6114,
											"end": 6132,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6114,
											"end": 6132,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6107,
											"end": 6169,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "34B9BA32B73A103A37B5B2B7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6185,
											"end": 6203,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 6185,
											"end": 6203,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6185,
											"end": 6203,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6178,
											"end": 6220,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6237,
											"end": 6256,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 6237,
											"end": 6256,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 23269,
											"end": 23342,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 23269,
											"end": 23342,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23269,
											"end": 23342,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23269,
											"end": 23342,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23269,
											"end": 23342,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23269,
											"end": 23342,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23269,
											"end": 23342,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 23269,
											"end": 23342,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23269,
											"end": 23342,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 23269,
											"end": 23342,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 23269,
											"end": 23342,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 23362,
											"end": 23386,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23362,
											"end": 23386,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23362,
											"end": 23386,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23362,
											"end": 23386,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23362,
											"end": 23377,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 23362,
											"end": 23386,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23362,
											"end": 23386,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23362,
											"end": 23386,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23362,
											"end": 23386,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23362,
											"end": 23386,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 23362,
											"end": 23386,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 23362,
											"end": 23386,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23362,
											"end": 23386,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23173,
											"end": 23394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22710,
											"end": 23107,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 22710,
											"end": 23107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22791,
											"end": 22804,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22807,
											"end": 22830,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 22822,
											"end": 22829,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 22807,
											"end": 22821,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 22807,
											"end": 22830,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22807,
											"end": 22830,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 22807,
											"end": 22830,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22791,
											"end": 22830,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22791,
											"end": 22830,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22855,
											"end": 22860,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 22849,
											"end": 22860,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22849,
											"end": 22851,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 22849,
											"end": 22860,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22849,
											"end": 22860,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 22841,
											"end": 22898,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 22841,
											"end": 22898,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22841,
											"end": 22898,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22841,
											"end": 22898,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 22841,
											"end": 22898,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22841,
											"end": 22898,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6469,
											"end": 6471,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 22841,
											"end": 22898,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 22841,
											"end": 22898,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 22841,
											"end": 22898,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6451,
											"end": 6472,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6508,
											"end": 6510,
											"name": "PUSH",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 6488,
											"end": 6506,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 6488,
											"end": 6506,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6488,
											"end": 6506,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6481,
											"end": 6511,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6547,
											"end": 6581,
											"name": "PUSH",
											"source": 1,
											"value": "4552433732313A20617070726F76616C20746F2063757272656E74206F776E65"
										},
										{
											"begin": 6527,
											"end": 6545,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 6527,
											"end": 6545,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6527,
											"end": 6545,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6520,
											"end": 6582,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "39"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6598,
											"end": 6616,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 6598,
											"end": 6616,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6598,
											"end": 6616,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6591,
											"end": 6622,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6639,
											"end": 6658,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 6639,
											"end": 6658,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 22841,
											"end": 22898,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 6267,
											"end": 6664,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 22841,
											"end": 22898,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 22841,
											"end": 22898,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16135,
											"end": 16145,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 22919,
											"end": 22940,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 22919,
											"end": 22940,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22919,
											"end": 22940,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22919,
											"end": 22940,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22919,
											"end": 22981,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 22919,
											"end": 22981,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 22944,
											"end": 22981,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 22961,
											"end": 22966,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16135,
											"end": 16145,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 23832,
											"end": 23996,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 23832,
											"end": 23996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22944,
											"end": 22981,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 22944,
											"end": 22981,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22911,
											"end": 23065,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 22911,
											"end": 23065,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22911,
											"end": 23065,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22911,
											"end": 23065,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 22911,
											"end": 23065,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22911,
											"end": 23065,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6871,
											"end": 6873,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 22911,
											"end": 23065,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 22911,
											"end": 23065,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 22911,
											"end": 23065,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6853,
											"end": 6874,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6910,
											"end": 6912,
											"name": "PUSH",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 6890,
											"end": 6908,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 6890,
											"end": 6908,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6890,
											"end": 6908,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6883,
											"end": 6913,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6949,
											"end": 6983,
											"name": "PUSH",
											"source": 1,
											"value": "4552433732313A20617070726F76652063616C6C6572206973206E6F74206F77"
										},
										{
											"begin": 6929,
											"end": 6947,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 6929,
											"end": 6947,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6929,
											"end": 6947,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6922,
											"end": 6984,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7020,
											"end": 7046,
											"name": "PUSH",
											"source": 1,
											"value": "6E6572206E6F7220617070726F76656420666F7220616C6C0000000000000000"
										},
										{
											"begin": 7000,
											"end": 7018,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 7000,
											"end": 7018,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7000,
											"end": 7018,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6993,
											"end": 7047,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7064,
											"end": 7083,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 7064,
											"end": 7083,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 22911,
											"end": 23065,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 6669,
											"end": 7089,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 22911,
											"end": 23065,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 22911,
											"end": 23065,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23078,
											"end": 23099,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 23087,
											"end": 23089,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 23091,
											"end": 23098,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 23078,
											"end": 23086,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 23078,
											"end": 23099,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23078,
											"end": 23099,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 23078,
											"end": 23099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22780,
											"end": 23107,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22710,
											"end": 23107,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22710,
											"end": 23107,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22710,
											"end": 23107,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24063,
											"end": 24368,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 24063,
											"end": 24368,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24224,
											"end": 24265,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 16135,
											"end": 16145,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 24257,
											"end": 24264,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24224,
											"end": 24242,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 24224,
											"end": 24265,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24224,
											"end": 24265,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 24224,
											"end": 24265,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24216,
											"end": 24319,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 24216,
											"end": 24319,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24216,
											"end": 24319,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24216,
											"end": 24319,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 24216,
											"end": 24319,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24216,
											"end": 24319,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24216,
											"end": 24319,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 24216,
											"end": 24319,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24216,
											"end": 24319,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 24216,
											"end": 24319,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24216,
											"end": 24319,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 24216,
											"end": 24319,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24216,
											"end": 24319,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 24216,
											"end": 24319,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24332,
											"end": 24360,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 24342,
											"end": 24346,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 24348,
											"end": 24350,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 24352,
											"end": 24359,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 24332,
											"end": 24341,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 24332,
											"end": 24360,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34837,
											"end": 35093,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 34837,
											"end": 35093,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34934,
											"end": 34941,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34970,
											"end": 34993,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 34987,
											"end": 34992,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 34970,
											"end": 34986,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 34970,
											"end": 34993,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34970,
											"end": 34993,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 34970,
											"end": 34993,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34962,
											"end": 34967,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 34962,
											"end": 34993,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 34954,
											"end": 35041,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 34954,
											"end": 35041,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34954,
											"end": 35041,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34954,
											"end": 35041,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 34954,
											"end": 35041,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34954,
											"end": 35041,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7714,
											"end": 7716,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 34954,
											"end": 35041,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 34954,
											"end": 35041,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 34954,
											"end": 35041,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7696,
											"end": 7717,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7753,
											"end": 7755,
											"name": "PUSH",
											"source": 1,
											"value": "2B"
										},
										{
											"begin": 7733,
											"end": 7751,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 7733,
											"end": 7751,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7733,
											"end": 7751,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7726,
											"end": 7756,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7792,
											"end": 7826,
											"name": "PUSH",
											"source": 1,
											"value": "455243373231456E756D657261626C653A206F776E657220696E646578206F75"
										},
										{
											"begin": 7772,
											"end": 7790,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 7772,
											"end": 7790,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7772,
											"end": 7790,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7765,
											"end": 7827,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "74206F6620626F756E6473"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7843,
											"end": 7861,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 7843,
											"end": 7861,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7843,
											"end": 7861,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7836,
											"end": 7877,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7894,
											"end": 7913,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 7894,
											"end": 7913,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 34954,
											"end": 35041,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 7512,
											"end": 7919,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 34954,
											"end": 35041,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 34954,
											"end": 35041,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 35059,
											"end": 35078,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35059,
											"end": 35078,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35059,
											"end": 35078,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35059,
											"end": 35078,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35059,
											"end": 35078,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35059,
											"end": 35078,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35059,
											"end": 35078,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35059,
											"end": 35078,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35059,
											"end": 35071,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 35059,
											"end": 35078,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 35059,
											"end": 35078,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35059,
											"end": 35078,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35059,
											"end": 35078,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35059,
											"end": 35078,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35059,
											"end": 35078,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35059,
											"end": 35078,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 35059,
											"end": 35078,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 35059,
											"end": 35085,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 35059,
											"end": 35085,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 35059,
											"end": 35085,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35059,
											"end": 35085,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 35059,
											"end": 35085,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35059,
											"end": 35085,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35059,
											"end": 35085,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 35059,
											"end": 35085,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 35059,
											"end": 35085,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34837,
											"end": 35093,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24439,
											"end": 24590,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 24439,
											"end": 24590,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24543,
											"end": 24582,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 24560,
											"end": 24564,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 24566,
											"end": 24568,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 24570,
											"end": 24577,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 24543,
											"end": 24582,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24543,
											"end": 24582,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24543,
											"end": 24582,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24543,
											"end": 24582,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24543,
											"end": 24582,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24543,
											"end": 24582,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24543,
											"end": 24582,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24543,
											"end": 24582,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24543,
											"end": 24582,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24543,
											"end": 24582,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24543,
											"end": 24582,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24543,
											"end": 24582,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24543,
											"end": 24559,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 24543,
											"end": 24582,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35359,
											"end": 35592,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 35359,
											"end": 35592,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35434,
											"end": 35441,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35470,
											"end": 35500,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 35257,
											"end": 35267,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 35257,
											"end": 35274,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 35257,
											"end": 35274,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35169,
											"end": 35282,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35470,
											"end": 35500,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 35470,
											"end": 35500,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35462,
											"end": 35467,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 35462,
											"end": 35500,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 35454,
											"end": 35549,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 35454,
											"end": 35549,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 35454,
											"end": 35549,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35454,
											"end": 35549,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 35454,
											"end": 35549,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35454,
											"end": 35549,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8126,
											"end": 8128,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 35454,
											"end": 35549,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 35454,
											"end": 35549,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 35454,
											"end": 35549,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8108,
											"end": 8129,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8165,
											"end": 8167,
											"name": "PUSH",
											"source": 1,
											"value": "2C"
										},
										{
											"begin": 8145,
											"end": 8163,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 8145,
											"end": 8163,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8145,
											"end": 8163,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8138,
											"end": 8168,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8204,
											"end": 8238,
											"name": "PUSH",
											"source": 1,
											"value": "455243373231456E756D657261626C653A20676C6F62616C20696E646578206F"
										},
										{
											"begin": 8184,
											"end": 8202,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 8184,
											"end": 8202,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8184,
											"end": 8202,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8177,
											"end": 8239,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7574206F6620626F756E6473"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8255,
											"end": 8273,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 8255,
											"end": 8273,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8255,
											"end": 8273,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8248,
											"end": 8290,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8307,
											"end": 8326,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 8307,
											"end": 8326,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 35454,
											"end": 35549,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 7924,
											"end": 8332,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 35454,
											"end": 35549,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 35454,
											"end": 35549,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35567,
											"end": 35577,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 35578,
											"end": 35583,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 35567,
											"end": 35584,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35567,
											"end": 35584,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 35567,
											"end": 35584,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35567,
											"end": 35584,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 35567,
											"end": 35584,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 35567,
											"end": 35584,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 35567,
											"end": 35584,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 35567,
											"end": 35584,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 35567,
											"end": 35584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35567,
											"end": 35584,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 35567,
											"end": 35584,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35567,
											"end": 35584,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35567,
											"end": 35584,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35567,
											"end": 35584,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35567,
											"end": 35584,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 35567,
											"end": 35584,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35567,
											"end": 35584,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 35567,
											"end": 35584,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35567,
											"end": 35584,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 35560,
											"end": 35584,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35560,
											"end": 35584,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35359,
											"end": 35592,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35359,
											"end": 35592,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35359,
											"end": 35592,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35359,
											"end": 35592,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21407,
											"end": 21646,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 21407,
											"end": 21646,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21479,
											"end": 21486,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21515,
											"end": 21531,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21515,
											"end": 21531,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21515,
											"end": 21531,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21515,
											"end": 21522,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 21515,
											"end": 21531,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 21515,
											"end": 21531,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21515,
											"end": 21531,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21515,
											"end": 21531,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21515,
											"end": 21531,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 21515,
											"end": 21531,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 21515,
											"end": 21531,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21515,
											"end": 21531,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21542,
											"end": 21615,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 21542,
											"end": 21615,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21542,
											"end": 21615,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21542,
											"end": 21615,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 21542,
											"end": 21615,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21542,
											"end": 21615,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8671,
											"end": 8673,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 21542,
											"end": 21615,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 21542,
											"end": 21615,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21542,
											"end": 21615,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8653,
											"end": 8674,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8710,
											"end": 8712,
											"name": "PUSH",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 8690,
											"end": 8708,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 8690,
											"end": 8708,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8690,
											"end": 8708,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8683,
											"end": 8713,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8749,
											"end": 8783,
											"name": "PUSH",
											"source": 1,
											"value": "4552433732313A206F776E657220717565727920666F72206E6F6E6578697374"
										},
										{
											"begin": 8729,
											"end": 8747,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 8729,
											"end": 8747,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8729,
											"end": 8747,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8722,
											"end": 8784,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "32B73A103A37B5B2B7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8800,
											"end": 8818,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 8800,
											"end": 8818,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8800,
											"end": 8818,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8793,
											"end": 8832,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8849,
											"end": 8868,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 8849,
											"end": 8868,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 21542,
											"end": 21615,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 8469,
											"end": 8874,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 21137,
											"end": 21345,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 21137,
											"end": 21345,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21209,
											"end": 21216,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 21237,
											"end": 21256,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21237,
											"end": 21256,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21229,
											"end": 21303,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 21229,
											"end": 21303,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21229,
											"end": 21303,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21229,
											"end": 21303,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 21229,
											"end": 21303,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21229,
											"end": 21303,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9081,
											"end": 9083,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 21229,
											"end": 21303,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 21229,
											"end": 21303,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21229,
											"end": 21303,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9063,
											"end": 9084,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9120,
											"end": 9122,
											"name": "PUSH",
											"source": 1,
											"value": "2A"
										},
										{
											"begin": 9100,
											"end": 9118,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 9100,
											"end": 9118,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9100,
											"end": 9118,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9093,
											"end": 9123,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9159,
											"end": 9193,
											"name": "PUSH",
											"source": 1,
											"value": "4552433732313A2062616C616E636520717565727920666F7220746865207A65"
										},
										{
											"begin": 9139,
											"end": 9157,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 9139,
											"end": 9157,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9139,
											"end": 9157,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9132,
											"end": 9194,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "726F2061646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9210,
											"end": 9228,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 9210,
											"end": 9228,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9210,
											"end": 9228,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9203,
											"end": 9243,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9260,
											"end": 9279,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 9260,
											"end": 9279,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 21229,
											"end": 21303,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 8879,
											"end": 9285,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 21229,
											"end": 21303,
											"name": "tag",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 21229,
											"end": 21303,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 21321,
											"end": 21337,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21321,
											"end": 21337,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21321,
											"end": 21337,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21321,
											"end": 21337,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21321,
											"end": 21337,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21321,
											"end": 21330,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 21321,
											"end": 21337,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 21321,
											"end": 21337,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21321,
											"end": 21337,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21321,
											"end": 21337,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21321,
											"end": 21337,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 21321,
											"end": 21337,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 21321,
											"end": 21337,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21137,
											"end": 21345,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 44323,
											"end": 44471,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 44323,
											"end": 44471,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43745,
											"end": 43751,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 43745,
											"end": 43751,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 43745,
											"end": 43751,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16135,
											"end": 16145,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 43892,
											"end": 43915,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 43884,
											"end": 43952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 43884,
											"end": 43952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 43884,
											"end": 43952,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 43884,
											"end": 43952,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 43884,
											"end": 43952,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43884,
											"end": 43952,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43884,
											"end": 43952,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 43884,
											"end": 43952,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43884,
											"end": 43952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 43884,
											"end": 43952,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43884,
											"end": 43952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 43884,
											"end": 43952,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43884,
											"end": 43952,
											"name": "tag",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 43884,
											"end": 43952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44414,
											"end": 44420,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 44414,
											"end": 44420,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 44393,
											"end": 44433,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 44393,
											"end": 44433,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 44430,
											"end": 44431,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 44430,
											"end": 44431,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 44414,
											"end": 44420,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 44414,
											"end": 44420,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44393,
											"end": 44433,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 44393,
											"end": 44433,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44430,
											"end": 44431,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 44430,
											"end": 44431,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44393,
											"end": 44433,
											"modifierDepth": 1,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 44444,
											"end": 44450,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 44444,
											"end": 44463,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44444,
											"end": 44463,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 44444,
											"end": 44463,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 44444,
											"end": 44463,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44444,
											"end": 44463,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 44323,
											"end": 44471,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21882,
											"end": 21986,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 21882,
											"end": 21986,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21938,
											"end": 21951,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 21971,
											"end": 21978,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 21964,
											"end": 21978,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21964,
											"end": 21978,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 21964,
											"end": 21978,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 21964,
											"end": 21978,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21964,
											"end": 21978,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 21964,
											"end": 21978,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23466,
											"end": 23761,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 23466,
											"end": 23761,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16135,
											"end": 16145,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 23569,
											"end": 23593,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 23569,
											"end": 23593,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23569,
											"end": 23593,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 23561,
											"end": 23623,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 23561,
											"end": 23623,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23561,
											"end": 23623,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23561,
											"end": 23623,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 23561,
											"end": 23623,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23561,
											"end": 23623,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9853,
											"end": 9855,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 23561,
											"end": 23623,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 23561,
											"end": 23623,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23561,
											"end": 23623,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9835,
											"end": 9856,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9892,
											"end": 9894,
											"name": "PUSH",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 9872,
											"end": 9890,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 9872,
											"end": 9890,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9872,
											"end": 9890,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9865,
											"end": 9895,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9931,
											"end": 9958,
											"name": "PUSH",
											"source": 1,
											"value": "4552433732313A20617070726F766520746F2063616C6C657200000000000000"
										},
										{
											"begin": 9911,
											"end": 9929,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 9911,
											"end": 9929,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9911,
											"end": 9929,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9904,
											"end": 9959,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9976,
											"end": 9994,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 9976,
											"end": 9994,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 23561,
											"end": 23623,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 9651,
											"end": 10000,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 23561,
											"end": 23623,
											"name": "tag",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 23561,
											"end": 23623,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16135,
											"end": 16145,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 23636,
											"end": 23668,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23636,
											"end": 23668,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23636,
											"end": 23668,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23636,
											"end": 23668,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23636,
											"end": 23654,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 23636,
											"end": 23668,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23636,
											"end": 23668,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23636,
											"end": 23668,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23636,
											"end": 23668,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23636,
											"end": 23668,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23636,
											"end": 23668,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23636,
											"end": 23668,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 23636,
											"end": 23668,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 23636,
											"end": 23678,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 23636,
											"end": 23678,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23636,
											"end": 23678,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23636,
											"end": 23678,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 23636,
											"end": 23678,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23636,
											"end": 23678,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23636,
											"end": 23678,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 23636,
											"end": 23678,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23636,
											"end": 23678,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 23636,
											"end": 23678,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23636,
											"end": 23678,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23636,
											"end": 23678,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 23636,
											"end": 23689,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23636,
											"end": 23689,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 23636,
											"end": 23689,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23636,
											"end": 23689,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 23636,
											"end": 23689,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 23636,
											"end": 23689,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 23636,
											"end": 23689,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23636,
											"end": 23689,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23636,
											"end": 23689,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 23636,
											"end": 23689,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23636,
											"end": 23689,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23636,
											"end": 23689,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 23705,
											"end": 23753,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23705,
											"end": 23753,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 540,
											"end": 581,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 540,
											"end": 581,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 540,
											"end": 581,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 23636,
											"end": 23678,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23636,
											"end": 23678,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 16135,
											"end": 16145,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23705,
											"end": 23753,
											"name": "PUSH",
											"source": 0,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 23705,
											"end": 23753,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 513,
											"end": 531,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 23705,
											"end": 23753,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23705,
											"end": 23753,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23705,
											"end": 23753,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23705,
											"end": 23753,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23705,
											"end": 23753,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 23705,
											"end": 23753,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23705,
											"end": 23753,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 23466,
											"end": 23761,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23466,
											"end": 23761,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23466,
											"end": 23761,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24661,
											"end": 24946,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 24661,
											"end": 24946,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24793,
											"end": 24834,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 16135,
											"end": 16145,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 24826,
											"end": 24833,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 24793,
											"end": 24811,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 24793,
											"end": 24834,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24793,
											"end": 24834,
											"name": "tag",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 24793,
											"end": 24834,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24785,
											"end": 24888,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 24785,
											"end": 24888,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24785,
											"end": 24888,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24785,
											"end": 24888,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 24785,
											"end": 24888,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24785,
											"end": 24888,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24785,
											"end": 24888,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 24785,
											"end": 24888,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24785,
											"end": 24888,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 24785,
											"end": 24888,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24785,
											"end": 24888,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 24785,
											"end": 24888,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24785,
											"end": 24888,
											"name": "tag",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 24785,
											"end": 24888,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24899,
											"end": 24938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 24913,
											"end": 24917,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 24919,
											"end": 24921,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 24923,
											"end": 24930,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 24932,
											"end": 24937,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 24899,
											"end": 24912,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 24899,
											"end": 24938,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24899,
											"end": 24938,
											"name": "tag",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 24899,
											"end": 24938,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24661,
											"end": 24946,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24661,
											"end": 24946,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24661,
											"end": 24946,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24661,
											"end": 24946,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24661,
											"end": 24946,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 47159,
											"end": 47314,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 47159,
											"end": 47314,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47250,
											"end": 47263,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 47283,
											"end": 47306,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 47298,
											"end": 47305,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 47283,
											"end": 47297,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 47283,
											"end": 47306,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 46539,
											"end": 46839,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 46539,
											"end": 46839,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43745,
											"end": 43751,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 43745,
											"end": 43751,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 46618,
											"end": 46633,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 46618,
											"end": 46633,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 43745,
											"end": 43751,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16135,
											"end": 16145,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 43892,
											"end": 43915,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 43884,
											"end": 43952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 43884,
											"end": 43952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 43884,
											"end": 43952,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 43884,
											"end": 43952,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 43884,
											"end": 43952,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43884,
											"end": 43952,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43884,
											"end": 43952,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 43884,
											"end": 43952,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43884,
											"end": 43952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 43884,
											"end": 43952,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43884,
											"end": 43952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 43884,
											"end": 43952,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43884,
											"end": 43952,
											"name": "tag",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 43884,
											"end": 43952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46646,
											"end": 46673,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 46646,
											"end": 46661,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 45911,
											"end": 45930,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 45911,
											"end": 45930,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 45929,
											"end": 45930,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 45911,
											"end": 45930,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 45911,
											"end": 45930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45911,
											"end": 45930,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 45822,
											"end": 45949,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 46646,
											"end": 46673,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 46646,
											"end": 46673,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46684,
											"end": 46700,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 46703,
											"end": 46728,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 46703,
											"end": 46718,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 45792,
											"end": 45806,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 45792,
											"end": 45806,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45700,
											"end": 45814,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 46703,
											"end": 46728,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 46703,
											"end": 46728,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46684,
											"end": 46728,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46684,
											"end": 46728,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 46739,
											"end": 46762,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 46749,
											"end": 46751,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 46753,
											"end": 46761,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 46739,
											"end": 46748,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 46739,
											"end": 46762,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 46739,
											"end": 46762,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 46739,
											"end": 46762,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46773,
											"end": 46805,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 46786,
											"end": 46794,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 46796,
											"end": 46804,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 46773,
											"end": 46785,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 46773,
											"end": 46805,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 46773,
											"end": 46805,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 46773,
											"end": 46805,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46823,
											"end": 46831,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 46539,
											"end": 46839,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 46539,
											"end": 46839,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 44626,
											"end": 44870,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 44626,
											"end": 44870,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43745,
											"end": 43751,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 43745,
											"end": 43751,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 43745,
											"end": 43751,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16135,
											"end": 16145,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 43892,
											"end": 43915,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 43884,
											"end": 43952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 43884,
											"end": 43952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 43884,
											"end": 43952,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 43884,
											"end": 43952,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 43884,
											"end": 43952,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43884,
											"end": 43952,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43884,
											"end": 43952,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 43884,
											"end": 43952,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43884,
											"end": 43952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 43884,
											"end": 43952,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43884,
											"end": 43952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 43884,
											"end": 43952,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43884,
											"end": 43952,
											"name": "tag",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 43884,
											"end": 43952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 44715,
											"end": 44737,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 44715,
											"end": 44737,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 44707,
											"end": 44780,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 44707,
											"end": 44780,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 44707,
											"end": 44780,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 44707,
											"end": 44780,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 44707,
											"end": 44780,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 44707,
											"end": 44780,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10207,
											"end": 10209,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 44707,
											"end": 44780,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 44707,
											"end": 44780,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 44707,
											"end": 44780,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10189,
											"end": 10210,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10246,
											"end": 10248,
											"name": "PUSH",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 10226,
											"end": 10244,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 10226,
											"end": 10244,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10226,
											"end": 10244,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10219,
											"end": 10249,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10285,
											"end": 10319,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 10265,
											"end": 10283,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 10265,
											"end": 10283,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10265,
											"end": 10283,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10258,
											"end": 10320,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10336,
											"end": 10354,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 10336,
											"end": 10354,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10336,
											"end": 10354,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10329,
											"end": 10365,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10382,
											"end": 10401,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 10382,
											"end": 10401,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 44707,
											"end": 44780,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 10005,
											"end": 10407,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 44707,
											"end": 44780,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 44707,
											"end": 44780,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44817,
											"end": 44823,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 44817,
											"end": 44823,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 44796,
											"end": 44834,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 44796,
											"end": 44834,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 44796,
											"end": 44834,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44796,
											"end": 44834,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 44796,
											"end": 44834,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 44796,
											"end": 44834,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 44817,
											"end": 44823,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 44817,
											"end": 44823,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44796,
											"end": 44834,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 44796,
											"end": 44834,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44817,
											"end": 44823,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 44817,
											"end": 44823,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44796,
											"end": 44834,
											"modifierDepth": 1,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 44845,
											"end": 44851,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 44845,
											"end": 44862,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44845,
											"end": 44862,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 44845,
											"end": 44862,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 44845,
											"end": 44862,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 44845,
											"end": 44862,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44845,
											"end": 44862,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 44845,
											"end": 44862,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 44845,
											"end": 44862,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 44845,
											"end": 44862,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44845,
											"end": 44862,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 44845,
											"end": 44862,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 44845,
											"end": 44862,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44845,
											"end": 44862,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 44626,
											"end": 44870,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34516,
											"end": 34753,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 34516,
											"end": 34753,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34618,
											"end": 34622,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 34642,
											"end": 34692,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 34642,
											"end": 34692,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "780E9D63"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 34642,
											"end": 34692,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 34642,
											"end": 34692,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34642,
											"end": 34745,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 34642,
											"end": 34745,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34642,
											"end": 34745,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34709,
											"end": 34745,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 34733,
											"end": 34744,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 34709,
											"end": 34732,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 34709,
											"end": 34745,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26413,
											"end": 26540,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 26413,
											"end": 26540,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26478,
											"end": 26482,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26502,
											"end": 26518,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26502,
											"end": 26518,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26502,
											"end": 26518,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26502,
											"end": 26509,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 26502,
											"end": 26518,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26502,
											"end": 26518,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26502,
											"end": 26518,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26502,
											"end": 26518,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26502,
											"end": 26518,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 26502,
											"end": 26518,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 26502,
											"end": 26518,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26502,
											"end": 26532,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 26502,
											"end": 26532,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 26502,
											"end": 26532,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26413,
											"end": 26540,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30290,
											"end": 30464,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 30290,
											"end": 30464,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30365,
											"end": 30389,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30365,
											"end": 30389,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30365,
											"end": 30389,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30365,
											"end": 30389,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30365,
											"end": 30380,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 30365,
											"end": 30389,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30365,
											"end": 30389,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30365,
											"end": 30389,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30365,
											"end": 30389,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30365,
											"end": 30389,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 30365,
											"end": 30394,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30365,
											"end": 30394,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 30365,
											"end": 30394,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 30365,
											"end": 30394,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 30365,
											"end": 30394,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30365,
											"end": 30394,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30365,
											"end": 30394,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30365,
											"end": 30394,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 30365,
											"end": 30394,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30365,
											"end": 30394,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30365,
											"end": 30394,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 30365,
											"end": 30389,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30365,
											"end": 30389,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30419,
											"end": 30442,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 30365,
											"end": 30389,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30419,
											"end": 30433,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 30419,
											"end": 30442,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30419,
											"end": 30442,
											"name": "tag",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 30419,
											"end": 30442,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 30410,
											"end": 30456,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30410,
											"end": 30456,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 30410,
											"end": 30456,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30410,
											"end": 30456,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30410,
											"end": 30456,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30410,
											"end": 30456,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30410,
											"end": 30456,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30410,
											"end": 30456,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30410,
											"end": 30456,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 30410,
											"end": 30456,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30410,
											"end": 30456,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 30290,
											"end": 30464,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30290,
											"end": 30464,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30290,
											"end": 30464,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26707,
											"end": 27055,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 26707,
											"end": 27055,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26800,
											"end": 26804,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26825,
											"end": 26841,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 26833,
											"end": 26840,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 26825,
											"end": 26832,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 26825,
											"end": 26841,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26825,
											"end": 26841,
											"name": "tag",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 26825,
											"end": 26841,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26817,
											"end": 26890,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 26817,
											"end": 26890,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26817,
											"end": 26890,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26817,
											"end": 26890,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 26817,
											"end": 26890,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26817,
											"end": 26890,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10614,
											"end": 10616,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 26817,
											"end": 26890,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 26817,
											"end": 26890,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 26817,
											"end": 26890,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10596,
											"end": 10617,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10653,
											"end": 10655,
											"name": "PUSH",
											"source": 1,
											"value": "2C"
										},
										{
											"begin": 10633,
											"end": 10651,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 10633,
											"end": 10651,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10633,
											"end": 10651,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10626,
											"end": 10656,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10692,
											"end": 10726,
											"name": "PUSH",
											"source": 1,
											"value": "4552433732313A206F70657261746F7220717565727920666F72206E6F6E6578"
										},
										{
											"begin": 10672,
											"end": 10690,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 10672,
											"end": 10690,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10672,
											"end": 10690,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10665,
											"end": 10727,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "34B9BA32B73A103A37B5B2B7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10743,
											"end": 10761,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 10743,
											"end": 10761,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10743,
											"end": 10761,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10736,
											"end": 10778,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10795,
											"end": 10814,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 10795,
											"end": 10814,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 26817,
											"end": 26890,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 10412,
											"end": 10820,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 26817,
											"end": 26890,
											"name": "tag",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 26817,
											"end": 26890,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26901,
											"end": 26914,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26917,
											"end": 26940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 26932,
											"end": 26939,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 26917,
											"end": 26931,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 26917,
											"end": 26940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26917,
											"end": 26940,
											"name": "tag",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 26917,
											"end": 26940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26901,
											"end": 26940,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26901,
											"end": 26940,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26970,
											"end": 26975,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 26959,
											"end": 26975,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26959,
											"end": 26966,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 26959,
											"end": 26975,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26959,
											"end": 26975,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 26959,
											"end": 27010,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26959,
											"end": 27010,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 26959,
											"end": 27010,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26959,
											"end": 27010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27003,
											"end": 27010,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 26979,
											"end": 27010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26979,
											"end": 26999,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 26991,
											"end": 26998,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 26979,
											"end": 26990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 26979,
											"end": 26999,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26979,
											"end": 26999,
											"name": "tag",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 26979,
											"end": 26999,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 26979,
											"end": 27010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26979,
											"end": 27010,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 26959,
											"end": 27010,
											"name": "tag",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 26959,
											"end": 27010,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26959,
											"end": 27046,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26959,
											"end": 27046,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 26959,
											"end": 27046,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 23953,
											"end": 23978,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23953,
											"end": 23978,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23953,
											"end": 23978,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23929,
											"end": 23933,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23953,
											"end": 23978,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23953,
											"end": 23978,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23953,
											"end": 23978,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23953,
											"end": 23971,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 23953,
											"end": 23978,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23953,
											"end": 23978,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23953,
											"end": 23978,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23953,
											"end": 23978,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23953,
											"end": 23978,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23953,
											"end": 23978,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23953,
											"end": 23978,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 23953,
											"end": 23978,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 23953,
											"end": 23988,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 23953,
											"end": 23988,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 23953,
											"end": 23988,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23953,
											"end": 23988,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 23953,
											"end": 23988,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23953,
											"end": 23988,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 23953,
											"end": 23988,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23953,
											"end": 23988,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23953,
											"end": 23988,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 23953,
											"end": 23988,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23953,
											"end": 23988,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 23953,
											"end": 23988,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27014,
											"end": 27046,
											"name": "tag",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 27014,
											"end": 27046,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26951,
											"end": 27047,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 26707,
											"end": 27055,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 26707,
											"end": 27055,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29628,
											"end": 30172,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 29628,
											"end": 30172,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29753,
											"end": 29757,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 29726,
											"end": 29757,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29726,
											"end": 29749,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 29741,
											"end": 29748,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29726,
											"end": 29740,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 29726,
											"end": 29749,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29726,
											"end": 29749,
											"name": "tag",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 29726,
											"end": 29749,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 29726,
											"end": 29757,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29726,
											"end": 29757,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 29718,
											"end": 29803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 29718,
											"end": 29803,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29718,
											"end": 29803,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29718,
											"end": 29803,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 29718,
											"end": 29803,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29718,
											"end": 29803,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11027,
											"end": 11029,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 29718,
											"end": 29803,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 29718,
											"end": 29803,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29718,
											"end": 29803,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11009,
											"end": 11030,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11066,
											"end": 11068,
											"name": "PUSH",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 11046,
											"end": 11064,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 11046,
											"end": 11064,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11046,
											"end": 11064,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11039,
											"end": 11069,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11105,
											"end": 11139,
											"name": "PUSH",
											"source": 1,
											"value": "4552433732313A207472616E73666572206F6620746F6B656E20746861742069"
										},
										{
											"begin": 11085,
											"end": 11103,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 11085,
											"end": 11103,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11085,
											"end": 11103,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11078,
											"end": 11140,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "39903737BA1037BBB7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11156,
											"end": 11174,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 11156,
											"end": 11174,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11156,
											"end": 11174,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11149,
											"end": 11188,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11205,
											"end": 11224,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 11205,
											"end": 11224,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 29718,
											"end": 29803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 10825,
											"end": 11230,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 29718,
											"end": 29803,
											"name": "tag",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 29718,
											"end": 29803,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 29822,
											"end": 29838,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29822,
											"end": 29838,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29814,
											"end": 29879,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 29814,
											"end": 29879,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29814,
											"end": 29879,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29814,
											"end": 29879,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 29814,
											"end": 29879,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29814,
											"end": 29879,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11437,
											"end": 11439,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 29814,
											"end": 29879,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 29814,
											"end": 29879,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29814,
											"end": 29879,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11419,
											"end": 11440,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11476,
											"end": 11478,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 11456,
											"end": 11474,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11456,
											"end": 11474,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11456,
											"end": 11474,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11449,
											"end": 11479,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11515,
											"end": 11549,
											"name": "PUSH",
											"source": 1,
											"value": "4552433732313A207472616E7366657220746F20746865207A65726F20616464"
										},
										{
											"begin": 11495,
											"end": 11513,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 11495,
											"end": 11513,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11495,
											"end": 11513,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11488,
											"end": 11550,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11566,
											"end": 11584,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 11566,
											"end": 11584,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11566,
											"end": 11584,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11559,
											"end": 11593,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11610,
											"end": 11629,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 11610,
											"end": 11629,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 29814,
											"end": 29879,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 11235,
											"end": 11635,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 29814,
											"end": 29879,
											"name": "tag",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 29814,
											"end": 29879,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29892,
											"end": 29931,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 29913,
											"end": 29917,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 29919,
											"end": 29921,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 29923,
											"end": 29930,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 29892,
											"end": 29912,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 29892,
											"end": 29931,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29892,
											"end": 29931,
											"name": "tag",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 29892,
											"end": 29931,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29996,
											"end": 30025,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 30013,
											"end": 30014,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30017,
											"end": 30024,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29996,
											"end": 30004,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 29996,
											"end": 30025,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29996,
											"end": 30025,
											"name": "tag",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 29996,
											"end": 30025,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 30038,
											"end": 30053,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 30038,
											"end": 30053,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30038,
											"end": 30053,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30038,
											"end": 30053,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30038,
											"end": 30053,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30038,
											"end": 30053,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30038,
											"end": 30047,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 30038,
											"end": 30053,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30038,
											"end": 30053,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30038,
											"end": 30053,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30038,
											"end": 30053,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30038,
											"end": 30053,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 30038,
											"end": 30058,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30038,
											"end": 30058,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 30057,
											"end": 30058,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 30057,
											"end": 30058,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 30038,
											"end": 30053,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30038,
											"end": 30058,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 30038,
											"end": 30058,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30057,
											"end": 30058,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 30057,
											"end": 30058,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30038,
											"end": 30058,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 30038,
											"end": 30058,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30038,
											"end": 30058,
											"name": "tag",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 30038,
											"end": 30058,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30038,
											"end": 30058,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30038,
											"end": 30058,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30038,
											"end": 30058,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 30069,
											"end": 30082,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30069,
											"end": 30082,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30069,
											"end": 30082,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30069,
											"end": 30082,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30069,
											"end": 30082,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30069,
											"end": 30082,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30069,
											"end": 30078,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 30069,
											"end": 30082,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30069,
											"end": 30082,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30069,
											"end": 30082,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30069,
											"end": 30082,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30069,
											"end": 30082,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 30069,
											"end": 30087,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30069,
											"end": 30087,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 30086,
											"end": 30087,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 30086,
											"end": 30087,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 30069,
											"end": 30082,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30069,
											"end": 30087,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 30069,
											"end": 30087,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30086,
											"end": 30087,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 30086,
											"end": 30087,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30069,
											"end": 30087,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 30069,
											"end": 30087,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30069,
											"end": 30087,
											"name": "tag",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 30069,
											"end": 30087,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30069,
											"end": 30087,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30069,
											"end": 30087,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30069,
											"end": 30087,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 30098,
											"end": 30114,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30098,
											"end": 30114,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30098,
											"end": 30114,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30098,
											"end": 30114,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30098,
											"end": 30105,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 30098,
											"end": 30114,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30098,
											"end": 30114,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30098,
											"end": 30114,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30098,
											"end": 30114,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30098,
											"end": 30114,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30098,
											"end": 30114,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 30098,
											"end": 30119,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30098,
											"end": 30119,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 30098,
											"end": 30119,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 30098,
											"end": 30119,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 30098,
											"end": 30119,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30098,
											"end": 30119,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30098,
											"end": 30119,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30098,
											"end": 30119,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30098,
											"end": 30119,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 30098,
											"end": 30119,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30098,
											"end": 30119,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 30098,
											"end": 30119,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 30137,
											"end": 30164,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30137,
											"end": 30164,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30098,
											"end": 30114,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 30098,
											"end": 30114,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 30137,
											"end": 30164,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30137,
											"end": 30164,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 30137,
											"end": 30164,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30137,
											"end": 30164,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30137,
											"end": 30164,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 30137,
											"end": 30164,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30137,
											"end": 30164,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 29628,
											"end": 30172,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29628,
											"end": 30172,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29628,
											"end": 30172,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29628,
											"end": 30172,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25828,
											"end": 26100,
											"name": "tag",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 25828,
											"end": 26100,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25942,
											"end": 25970,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 25952,
											"end": 25956,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 25958,
											"end": 25960,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 25962,
											"end": 25969,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 25942,
											"end": 25951,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 25942,
											"end": 25970,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25942,
											"end": 25970,
											"name": "tag",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 25942,
											"end": 25970,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25989,
											"end": 26037,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 26012,
											"end": 26016,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 26018,
											"end": 26020,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 26022,
											"end": 26029,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 26031,
											"end": 26036,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 25989,
											"end": 26011,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 25989,
											"end": 26037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25989,
											"end": 26037,
											"name": "tag",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 25989,
											"end": 26037,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25981,
											"end": 26092,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 25981,
											"end": 26092,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25981,
											"end": 26092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25981,
											"end": 26092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 25981,
											"end": 26092,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25981,
											"end": 26092,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25981,
											"end": 26092,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 25981,
											"end": 26092,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25981,
											"end": 26092,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 25981,
											"end": 26092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25981,
											"end": 26092,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 25981,
											"end": 26092,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41078,
											"end": 41757,
											"name": "tag",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 41078,
											"end": 41757,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41151,
											"end": 41164,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 41185,
											"end": 41201,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 41193,
											"end": 41200,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 41185,
											"end": 41192,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 41185,
											"end": 41201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41185,
											"end": 41201,
											"name": "tag",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 41185,
											"end": 41201,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41177,
											"end": 41255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "270"
										},
										{
											"begin": 41177,
											"end": 41255,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 41177,
											"end": 41255,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 41177,
											"end": 41255,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 41177,
											"end": 41255,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41177,
											"end": 41255,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12656,
											"end": 12658,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 41177,
											"end": 41255,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 41177,
											"end": 41255,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 41177,
											"end": 41255,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12638,
											"end": 12659,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12695,
											"end": 12697,
											"name": "PUSH",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 12675,
											"end": 12693,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 12675,
											"end": 12693,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12675,
											"end": 12693,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12668,
											"end": 12698,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12734,
											"end": 12768,
											"name": "PUSH",
											"source": 1,
											"value": "45524337323155524953746F726167653A2055524920717565727920666F7220"
										},
										{
											"begin": 12714,
											"end": 12732,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 12714,
											"end": 12732,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12714,
											"end": 12732,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12707,
											"end": 12769,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3737B732BC34B9BA32B73A103A37B5B2B7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "79"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12785,
											"end": 12803,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 12785,
											"end": 12803,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12785,
											"end": 12803,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12778,
											"end": 12825,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12842,
											"end": 12861,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 12842,
											"end": 12861,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 41177,
											"end": 41255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 12454,
											"end": 12867,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 41177,
											"end": 41255,
											"name": "tag",
											"source": 0,
											"value": "270"
										},
										{
											"begin": 41177,
											"end": 41255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41268,
											"end": 41291,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 41294,
											"end": 41313,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 41294,
											"end": 41313,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41294,
											"end": 41313,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 41294,
											"end": 41304,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 41294,
											"end": 41313,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 41294,
											"end": 41313,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 41294,
											"end": 41313,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 41294,
											"end": 41313,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41294,
											"end": 41313,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 41268,
											"end": 41313,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41268,
											"end": 41313,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 41268,
											"end": 41313,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "273"
										},
										{
											"begin": 41268,
											"end": 41313,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41268,
											"end": 41313,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 41268,
											"end": 41313,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41268,
											"end": 41313,
											"name": "tag",
											"source": 0,
											"value": "273"
										},
										{
											"begin": 41268,
											"end": 41313,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41268,
											"end": 41313,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41268,
											"end": 41313,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 41268,
											"end": 41313,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41268,
											"end": 41313,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 41268,
											"end": 41313,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41268,
											"end": 41313,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41268,
											"end": 41313,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 41268,
											"end": 41313,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 41268,
											"end": 41313,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 41268,
											"end": 41313,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41268,
											"end": 41313,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 41268,
											"end": 41313,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 41268,
											"end": 41313,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41268,
											"end": 41313,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41268,
											"end": 41313,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41268,
											"end": 41313,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 41268,
											"end": 41313,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 41268,
											"end": 41313,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41268,
											"end": 41313,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 41268,
											"end": 41313,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41268,
											"end": 41313,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41268,
											"end": 41313,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41268,
											"end": 41313,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41268,
											"end": 41313,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 41268,
											"end": 41313,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 41268,
											"end": 41313,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41268,
											"end": 41313,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 41268,
											"end": 41313,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41268,
											"end": 41313,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 41268,
											"end": 41313,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "274"
										},
										{
											"begin": 41268,
											"end": 41313,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41268,
											"end": 41313,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 41268,
											"end": 41313,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41268,
											"end": 41313,
											"name": "tag",
											"source": 0,
											"value": "274"
										},
										{
											"begin": 41268,
											"end": 41313,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41268,
											"end": 41313,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41268,
											"end": 41313,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 41268,
											"end": 41313,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "275"
										},
										{
											"begin": 41268,
											"end": 41313,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 41268,
											"end": 41313,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41268,
											"end": 41313,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 41268,
											"end": 41313,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 41268,
											"end": 41313,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "276"
										},
										{
											"begin": 41268,
											"end": 41313,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 41268,
											"end": 41313,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 41268,
											"end": 41313,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41268,
											"end": 41313,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 41268,
											"end": 41313,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 41268,
											"end": 41313,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 41268,
											"end": 41313,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 41268,
											"end": 41313,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 41268,
											"end": 41313,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 41268,
											"end": 41313,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41268,
											"end": 41313,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 41268,
											"end": 41313,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41268,
											"end": 41313,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41268,
											"end": 41313,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "275"
										},
										{
											"begin": 41268,
											"end": 41313,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41268,
											"end": 41313,
											"name": "tag",
											"source": 0,
											"value": "276"
										},
										{
											"begin": 41268,
											"end": 41313,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41268,
											"end": 41313,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 41268,
											"end": 41313,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41268,
											"end": 41313,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41268,
											"end": 41313,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41268,
											"end": 41313,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 41268,
											"end": 41313,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 41268,
											"end": 41313,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 41268,
											"end": 41313,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 41268,
											"end": 41313,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 41268,
											"end": 41313,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41268,
											"end": 41313,
											"name": "tag",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 41268,
											"end": 41313,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41268,
											"end": 41313,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41268,
											"end": 41313,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 41268,
											"end": 41313,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41268,
											"end": 41313,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 41268,
											"end": 41313,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41268,
											"end": 41313,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 41268,
											"end": 41313,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41268,
											"end": 41313,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41268,
											"end": 41313,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 41268,
											"end": 41313,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41268,
											"end": 41313,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41268,
											"end": 41313,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 41268,
											"end": 41313,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 41268,
											"end": 41313,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 41268,
											"end": 41313,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 41268,
											"end": 41313,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 41268,
											"end": 41313,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41268,
											"end": 41313,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 41268,
											"end": 41313,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 41268,
											"end": 41313,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 41268,
											"end": 41313,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 41268,
											"end": 41313,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41268,
											"end": 41313,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41268,
											"end": 41313,
											"name": "tag",
											"source": 0,
											"value": "275"
										},
										{
											"begin": 41268,
											"end": 41313,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41268,
											"end": 41313,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41268,
											"end": 41313,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41268,
											"end": 41313,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41268,
											"end": 41313,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41268,
											"end": 41313,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41268,
											"end": 41313,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41268,
											"end": 41313,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41324,
											"end": 41342,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 41345,
											"end": 41355,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 22631,
											"end": 22640,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22631,
											"end": 22640,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22631,
											"end": 22640,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 22631,
											"end": 22640,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 22631,
											"end": 22640,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22631,
											"end": 22640,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22631,
											"end": 22640,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22631,
											"end": 22640,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22631,
											"end": 22640,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 22631,
											"end": 22640,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22631,
											"end": 22640,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22631,
											"end": 22640,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22554,
											"end": 22648,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41345,
											"end": 41355,
											"name": "tag",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 41345,
											"end": 41355,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41324,
											"end": 41355,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41324,
											"end": 41355,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41437,
											"end": 41441,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41431,
											"end": 41449,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 41453,
											"end": 41454,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 41431,
											"end": 41454,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 41427,
											"end": 41499,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 41427,
											"end": 41499,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 41478,
											"end": 41487,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 41078,
											"end": 41757,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 41078,
											"end": 41757,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41427,
											"end": 41499,
											"name": "tag",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 41427,
											"end": 41499,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41603,
											"end": 41626,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41603,
											"end": 41626,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 41603,
											"end": 41630,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 41599,
											"end": 41707,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "281"
										},
										{
											"begin": 41599,
											"end": 41707,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 41678,
											"end": 41682,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41684,
											"end": 41693,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 41661,
											"end": 41694,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 41661,
											"end": 41694,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 41661,
											"end": 41694,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 41661,
											"end": 41694,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41661,
											"end": 41694,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "282"
										},
										{
											"begin": 41661,
											"end": 41694,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 41661,
											"end": 41694,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41661,
											"end": 41694,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41661,
											"end": 41694,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "283"
										},
										{
											"begin": 41661,
											"end": 41694,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41661,
											"end": 41694,
											"name": "tag",
											"source": 0,
											"value": "282"
										},
										{
											"begin": 41661,
											"end": 41694,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41661,
											"end": 41694,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 41661,
											"end": 41694,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 41661,
											"end": 41694,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 41661,
											"end": 41694,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41661,
											"end": 41694,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 41661,
											"end": 41694,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 41661,
											"end": 41694,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 41661,
											"end": 41694,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41661,
											"end": 41694,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 41661,
											"end": 41694,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41661,
											"end": 41694,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 41661,
											"end": 41694,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 41647,
											"end": 41695,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 41647,
											"end": 41695,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41647,
											"end": 41695,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41647,
											"end": 41695,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41078,
											"end": 41757,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41078,
											"end": 41757,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41078,
											"end": 41757,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41078,
											"end": 41757,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41599,
											"end": 41707,
											"name": "tag",
											"source": 0,
											"value": "281"
										},
										{
											"begin": 41599,
											"end": 41707,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41726,
											"end": 41749,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 41741,
											"end": 41748,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 41726,
											"end": 41740,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "285"
										},
										{
											"begin": 41726,
											"end": 41749,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27397,
											"end": 27507,
											"name": "tag",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 27397,
											"end": 27507,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27473,
											"end": 27499,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "289"
										},
										{
											"begin": 27483,
											"end": 27485,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27487,
											"end": 27494,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27473,
											"end": 27499,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27473,
											"end": 27499,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27473,
											"end": 27499,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27473,
											"end": 27499,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27473,
											"end": 27499,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27473,
											"end": 27499,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27473,
											"end": 27499,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27473,
											"end": 27499,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27473,
											"end": 27499,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27473,
											"end": 27499,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27473,
											"end": 27499,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27473,
											"end": 27499,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27473,
											"end": 27482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "290"
										},
										{
											"begin": 27473,
											"end": 27499,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27473,
											"end": 27499,
											"name": "tag",
											"source": 0,
											"value": "289"
										},
										{
											"begin": 27473,
											"end": 27499,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27397,
											"end": 27507,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27397,
											"end": 27507,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27397,
											"end": 27507,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41913,
											"end": 42130,
											"name": "tag",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 41913,
											"end": 42130,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42013,
											"end": 42029,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "292"
										},
										{
											"begin": 42021,
											"end": 42028,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 42013,
											"end": 42020,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 42013,
											"end": 42029,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42013,
											"end": 42029,
											"name": "tag",
											"source": 0,
											"value": "292"
										},
										{
											"begin": 42013,
											"end": 42029,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42005,
											"end": 42080,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "293"
										},
										{
											"begin": 42005,
											"end": 42080,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 42005,
											"end": 42080,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 42005,
											"end": 42080,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 42005,
											"end": 42080,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42005,
											"end": 42080,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13575,
											"end": 13577,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 42005,
											"end": 42080,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 42005,
											"end": 42080,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 42005,
											"end": 42080,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13557,
											"end": 13578,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13614,
											"end": 13616,
											"name": "PUSH",
											"source": 1,
											"value": "2E"
										},
										{
											"begin": 13594,
											"end": 13612,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 13594,
											"end": 13612,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13594,
											"end": 13612,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13587,
											"end": 13617,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13653,
											"end": 13687,
											"name": "PUSH",
											"source": 1,
											"value": "45524337323155524953746F726167653A2055524920736574206F66206E6F6E"
										},
										{
											"begin": 13633,
											"end": 13651,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 13633,
											"end": 13651,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13633,
											"end": 13651,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13626,
											"end": 13688,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "32BC34B9BA32B73A103A37B5B2B7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "91"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13704,
											"end": 13722,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 13704,
											"end": 13722,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13704,
											"end": 13722,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13697,
											"end": 13741,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13758,
											"end": 13777,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 13758,
											"end": 13777,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 42005,
											"end": 42080,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 13373,
											"end": 13783,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 42005,
											"end": 42080,
											"name": "tag",
											"source": 0,
											"value": "293"
										},
										{
											"begin": 42005,
											"end": 42080,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42091,
											"end": 42110,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 42091,
											"end": 42110,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 42091,
											"end": 42110,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42091,
											"end": 42110,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 42091,
											"end": 42101,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 42091,
											"end": 42110,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 42091,
											"end": 42110,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 42091,
											"end": 42110,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 42091,
											"end": 42110,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42091,
											"end": 42110,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 42091,
											"end": 42122,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 42113,
											"end": 42122,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 42091,
											"end": 42110,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 42091,
											"end": 42122,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "297"
										},
										{
											"begin": 42091,
											"end": 42122,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20781,
											"end": 21073,
											"name": "tag",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 20781,
											"end": 21073,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20883,
											"end": 20887,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 20907,
											"end": 20947,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20907,
											"end": 20947,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80AC58CD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 20907,
											"end": 20947,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 20907,
											"end": 20947,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20907,
											"end": 21012,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "299"
										},
										{
											"begin": 20907,
											"end": 21012,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 20964,
											"end": 21012,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20964,
											"end": 21012,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5B5E139F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 20964,
											"end": 21012,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 20907,
											"end": 21012,
											"name": "tag",
											"source": 0,
											"value": "299"
										},
										{
											"begin": 20907,
											"end": 21012,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20907,
											"end": 21065,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20907,
											"end": 21065,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 20907,
											"end": 21065,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1FFC9A7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 19384,
											"end": 19424,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 19384,
											"end": 19424,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19384,
											"end": 19424,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 21029,
											"end": 21065,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 19275,
											"end": 19432,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 46847,
											"end": 47028,
											"name": "tag",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 46847,
											"end": 47028,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46975,
											"end": 47020,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 47002,
											"end": 47006,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 47008,
											"end": 47010,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 47012,
											"end": 47019,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 46975,
											"end": 47001,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "305"
										},
										{
											"begin": 46975,
											"end": 47020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31029,
											"end": 31872,
											"name": "tag",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 31029,
											"end": 31872,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31150,
											"end": 31154,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 31176,
											"end": 31189,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 31176,
											"end": 31189,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8533,
											"end": 8553,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 8572,
											"end": 8580,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 31172,
											"end": 31865,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "309"
										},
										{
											"begin": 31172,
											"end": 31865,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31212,
											"end": 31284,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31212,
											"end": 31284,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A85BD01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 31212,
											"end": 31284,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31212,
											"end": 31284,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 31212,
											"end": 31248,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 31212,
											"end": 31248,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31212,
											"end": 31248,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31212,
											"end": 31248,
											"name": "PUSH",
											"source": 0,
											"value": "150B7A02"
										},
										{
											"begin": 31212,
											"end": 31248,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31212,
											"end": 31284,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "311"
										},
										{
											"begin": 31212,
											"end": 31284,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16135,
											"end": 16145,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 16135,
											"end": 16145,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31263,
											"end": 31267,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 31263,
											"end": 31267,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31269,
											"end": 31276,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 31269,
											"end": 31276,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31278,
											"end": 31283,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 31278,
											"end": 31283,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31212,
											"end": 31284,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 31212,
											"end": 31284,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31212,
											"end": 31284,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "312"
										},
										{
											"begin": 31212,
											"end": 31284,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31212,
											"end": 31284,
											"name": "tag",
											"source": 0,
											"value": "311"
										},
										{
											"begin": 31212,
											"end": 31284,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31212,
											"end": 31284,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31212,
											"end": 31284,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31212,
											"end": 31284,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31212,
											"end": 31284,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31212,
											"end": 31284,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 31212,
											"end": 31284,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 31212,
											"end": 31284,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31212,
											"end": 31284,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31212,
											"end": 31284,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 31212,
											"end": 31284,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 31212,
											"end": 31284,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 31212,
											"end": 31284,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 31212,
											"end": 31284,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31212,
											"end": 31284,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31212,
											"end": 31284,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31212,
											"end": 31284,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31212,
											"end": 31284,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 31212,
											"end": 31284,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "313"
										},
										{
											"begin": 31212,
											"end": 31284,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 31212,
											"end": 31284,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31212,
											"end": 31284,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31212,
											"end": 31284,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31212,
											"end": 31284,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 31212,
											"end": 31284,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 31212,
											"end": 31284,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31212,
											"end": 31284,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31212,
											"end": 31284,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 31212,
											"end": 31284,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31212,
											"end": 31284,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31212,
											"end": 31284,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31212,
											"end": 31284,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31212,
											"end": 31284,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 31212,
											"end": 31284,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31212,
											"end": 31284,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "314"
										},
										{
											"begin": 31212,
											"end": 31284,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31212,
											"end": 31284,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31212,
											"end": 31284,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31212,
											"end": 31284,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31212,
											"end": 31284,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "315"
										},
										{
											"begin": 31212,
											"end": 31284,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31212,
											"end": 31284,
											"name": "tag",
											"source": 0,
											"value": "314"
										},
										{
											"begin": 31212,
											"end": 31284,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31212,
											"end": 31284,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 31212,
											"end": 31284,
											"name": "tag",
											"source": 0,
											"value": "313"
										},
										{
											"begin": 31212,
											"end": 31284,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31208,
											"end": 31810,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "316"
										},
										{
											"begin": 31208,
											"end": 31810,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31208,
											"end": 31810,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 31208,
											"end": 31810,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31208,
											"end": 31810,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31208,
											"end": 31810,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 31208,
											"end": 31810,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "321"
										},
										{
											"begin": 31208,
											"end": 31810,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31208,
											"end": 31810,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31208,
											"end": 31810,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31208,
											"end": 31810,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31208,
											"end": 31810,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31208,
											"end": 31810,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 31208,
											"end": 31810,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 31208,
											"end": 31810,
											"name": "PUSH",
											"source": 0,
											"value": "3F"
										},
										{
											"begin": 31208,
											"end": 31810,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 31208,
											"end": 31810,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31208,
											"end": 31810,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31208,
											"end": 31810,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31208,
											"end": 31810,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31208,
											"end": 31810,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31208,
											"end": 31810,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31208,
											"end": 31810,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 31208,
											"end": 31810,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31208,
											"end": 31810,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31208,
											"end": 31810,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 31208,
											"end": 31810,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31208,
											"end": 31810,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31208,
											"end": 31810,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 31208,
											"end": 31810,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31208,
											"end": 31810,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 31208,
											"end": 31810,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "320"
										},
										{
											"begin": 31208,
											"end": 31810,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31208,
											"end": 31810,
											"name": "tag",
											"source": 0,
											"value": "321"
										},
										{
											"begin": 31208,
											"end": 31810,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31208,
											"end": 31810,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 31208,
											"end": 31810,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31208,
											"end": 31810,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31208,
											"end": 31810,
											"name": "tag",
											"source": 0,
											"value": "320"
										},
										{
											"begin": 31208,
											"end": 31810,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31208,
											"end": 31810,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31458,
											"end": 31464,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31458,
											"end": 31471,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31475,
											"end": 31476,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31458,
											"end": 31476,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 31454,
											"end": 31795,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "322"
										},
										{
											"begin": 31454,
											"end": 31795,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31501,
											"end": 31561,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31501,
											"end": 31561,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 31501,
											"end": 31561,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31501,
											"end": 31561,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31501,
											"end": 31561,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 31501,
											"end": 31561,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31501,
											"end": 31561,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 31501,
											"end": 31561,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31501,
											"end": 31561,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 31501,
											"end": 31561,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31454,
											"end": 31795,
											"name": "tag",
											"source": 0,
											"value": "322"
										},
										{
											"begin": 31454,
											"end": 31795,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31745,
											"end": 31751,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31739,
											"end": 31752,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31730,
											"end": 31736,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31726,
											"end": 31728,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31722,
											"end": 31737,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31715,
											"end": 31753,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 31208,
											"end": 31810,
											"name": "tag",
											"source": 0,
											"value": "316"
										},
										{
											"begin": 31208,
											"end": 31810,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 31335,
											"end": 31390,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A85BD01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 31335,
											"end": 31390,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 31335,
											"end": 31390,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 31328,
											"end": 31390,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 31328,
											"end": 31390,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31172,
											"end": 31865,
											"name": "tag",
											"source": 0,
											"value": "309"
										},
										{
											"begin": 31172,
											"end": 31865,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 31849,
											"end": 31853,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 31029,
											"end": 31872,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 31029,
											"end": 31872,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 31029,
											"end": 31872,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31029,
											"end": 31872,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31029,
											"end": 31872,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31029,
											"end": 31872,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31029,
											"end": 31872,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22057,
											"end": 22417,
											"name": "tag",
											"source": 0,
											"value": "285"
										},
										{
											"begin": 22057,
											"end": 22417,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22130,
											"end": 22143,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 22164,
											"end": 22180,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "329"
										},
										{
											"begin": 22172,
											"end": 22179,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 22164,
											"end": 22171,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 22164,
											"end": 22180,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22164,
											"end": 22180,
											"name": "tag",
											"source": 0,
											"value": "329"
										},
										{
											"begin": 22164,
											"end": 22180,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22156,
											"end": 22232,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "330"
										},
										{
											"begin": 22156,
											"end": 22232,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22156,
											"end": 22232,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22156,
											"end": 22232,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 22156,
											"end": 22232,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22156,
											"end": 22232,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16942,
											"end": 16944,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 22156,
											"end": 22232,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 22156,
											"end": 22232,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 22156,
											"end": 22232,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16924,
											"end": 16945,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16981,
											"end": 16983,
											"name": "PUSH",
											"source": 1,
											"value": "2F"
										},
										{
											"begin": 16961,
											"end": 16979,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 16961,
											"end": 16979,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16961,
											"end": 16979,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16954,
											"end": 16984,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17020,
											"end": 17054,
											"name": "PUSH",
											"source": 1,
											"value": "4552433732314D657461646174613A2055524920717565727920666F72206E6F"
										},
										{
											"begin": 17000,
											"end": 17018,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 17000,
											"end": 17018,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17000,
											"end": 17018,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16993,
											"end": 17055,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3732BC34B9BA32B73A103A37B5B2B7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "89"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17071,
											"end": 17089,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 17071,
											"end": 17089,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17071,
											"end": 17089,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17064,
											"end": 17109,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17126,
											"end": 17145,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 17126,
											"end": 17145,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 22156,
											"end": 22232,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 16740,
											"end": 17151,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 22156,
											"end": 22232,
											"name": "tag",
											"source": 0,
											"value": "330"
										},
										{
											"begin": 22156,
											"end": 22232,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22245,
											"end": 22266,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22269,
											"end": 22279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "333"
										},
										{
											"begin": 22631,
											"end": 22640,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22631,
											"end": 22640,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22631,
											"end": 22640,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 22631,
											"end": 22640,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 22631,
											"end": 22640,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22631,
											"end": 22640,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22631,
											"end": 22640,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22631,
											"end": 22640,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22631,
											"end": 22640,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 22631,
											"end": 22640,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22631,
											"end": 22640,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22631,
											"end": 22640,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22554,
											"end": 22648,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22269,
											"end": 22279,
											"name": "tag",
											"source": 0,
											"value": "333"
										},
										{
											"begin": 22269,
											"end": 22279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22245,
											"end": 22279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22245,
											"end": 22279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22321,
											"end": 22322,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22303,
											"end": 22310,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22297,
											"end": 22318,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 22297,
											"end": 22322,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 22297,
											"end": 22409,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "334"
										},
										{
											"begin": 22297,
											"end": 22409,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22297,
											"end": 22409,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22297,
											"end": 22409,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 22297,
											"end": 22409,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22297,
											"end": 22409,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 22297,
											"end": 22409,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22297,
											"end": 22409,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22297,
											"end": 22409,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22297,
											"end": 22409,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22297,
											"end": 22409,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22297,
											"end": 22409,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22297,
											"end": 22409,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22297,
											"end": 22409,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22297,
											"end": 22409,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 22297,
											"end": 22409,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22297,
											"end": 22409,
											"name": "tag",
											"source": 0,
											"value": "334"
										},
										{
											"begin": 22297,
											"end": 22409,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22362,
											"end": 22369,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22371,
											"end": 22389,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "336"
										},
										{
											"begin": 22371,
											"end": 22378,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 22371,
											"end": 22387,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "337"
										},
										{
											"begin": 22371,
											"end": 22389,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22371,
											"end": 22389,
											"name": "tag",
											"source": 0,
											"value": "336"
										},
										{
											"begin": 22371,
											"end": 22389,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22345,
											"end": 22390,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22345,
											"end": 22390,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 22345,
											"end": 22390,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 22345,
											"end": 22390,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22345,
											"end": 22390,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "338"
										},
										{
											"begin": 22345,
											"end": 22390,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 22345,
											"end": 22390,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22345,
											"end": 22390,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22345,
											"end": 22390,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "283"
										},
										{
											"begin": 22345,
											"end": 22390,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22345,
											"end": 22390,
											"name": "tag",
											"source": 0,
											"value": "338"
										},
										{
											"begin": 22345,
											"end": 22390,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22345,
											"end": 22390,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22345,
											"end": 22390,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 22345,
											"end": 22390,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 22345,
											"end": 22390,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22345,
											"end": 22390,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 22345,
											"end": 22390,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 22345,
											"end": 22390,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 22345,
											"end": 22390,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22345,
											"end": 22390,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22345,
											"end": 22390,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22345,
											"end": 22390,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22345,
											"end": 22390,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22290,
											"end": 22409,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 22057,
											"end": 22417,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 22057,
											"end": 22417,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27734,
											"end": 27984,
											"name": "tag",
											"source": 0,
											"value": "290"
										},
										{
											"begin": 27734,
											"end": 27984,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27830,
											"end": 27848,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "340"
										},
										{
											"begin": 27836,
											"end": 27838,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 27840,
											"end": 27847,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 27830,
											"end": 27835,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "341"
										},
										{
											"begin": 27830,
											"end": 27848,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27830,
											"end": 27848,
											"name": "tag",
											"source": 0,
											"value": "340"
										},
										{
											"begin": 27830,
											"end": 27848,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27867,
											"end": 27921,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "342"
										},
										{
											"begin": 27898,
											"end": 27899,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27902,
											"end": 27904,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 27906,
											"end": 27913,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 27915,
											"end": 27920,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 27867,
											"end": 27889,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 27867,
											"end": 27921,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27867,
											"end": 27921,
											"name": "tag",
											"source": 0,
											"value": "342"
										},
										{
											"begin": 27867,
											"end": 27921,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27859,
											"end": 27976,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 27859,
											"end": 27976,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27859,
											"end": 27976,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27859,
											"end": 27976,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 27859,
											"end": 27976,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27859,
											"end": 27976,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27859,
											"end": 27976,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 27859,
											"end": 27976,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27859,
											"end": 27976,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 27859,
											"end": 27976,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27859,
											"end": 27976,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 27859,
											"end": 27976,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 36205,
											"end": 36760,
											"name": "tag",
											"source": 0,
											"value": "305"
										},
										{
											"begin": 36205,
											"end": 36760,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 36377,
											"end": 36395,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 36377,
											"end": 36395,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 36373,
											"end": 36560,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "349"
										},
										{
											"begin": 36373,
											"end": 36560,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 36412,
											"end": 36452,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "350"
										},
										{
											"begin": 36444,
											"end": 36451,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37587,
											"end": 37597,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 37587,
											"end": 37604,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37587,
											"end": 37604,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 37560,
											"end": 37584,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37560,
											"end": 37584,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 37560,
											"end": 37584,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37560,
											"end": 37584,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37560,
											"end": 37575,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 37560,
											"end": 37584,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 37560,
											"end": 37584,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37560,
											"end": 37584,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37560,
											"end": 37584,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37560,
											"end": 37584,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 37560,
											"end": 37604,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 37560,
											"end": 37604,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37560,
											"end": 37604,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 37615,
											"end": 37639,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 37615,
											"end": 37639,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 37615,
											"end": 37639,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37615,
											"end": 37639,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 37615,
											"end": 37639,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 37615,
											"end": 37639,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37615,
											"end": 37639,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37615,
											"end": 37639,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37615,
											"end": 37639,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37615,
											"end": 37639,
											"name": "PUSH",
											"source": 0,
											"value": "F3F7A9FE364FAAB93B216DA50A3214154F22A0A2B415B23A84C8169E8B636EE3"
										},
										{
											"begin": 37615,
											"end": 37639,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37615,
											"end": 37639,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 37483,
											"end": 37647,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 36412,
											"end": 36452,
											"name": "tag",
											"source": 0,
											"value": "350"
										},
										{
											"begin": 36412,
											"end": 36452,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36373,
											"end": 36560,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "354"
										},
										{
											"begin": 36373,
											"end": 36560,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 36373,
											"end": 36560,
											"name": "tag",
											"source": 0,
											"value": "349"
										},
										{
											"begin": 36373,
											"end": 36560,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36482,
											"end": 36484,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 36474,
											"end": 36484,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 36474,
											"end": 36478,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 36474,
											"end": 36484,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 36474,
											"end": 36484,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 36470,
											"end": 36560,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "354"
										},
										{
											"begin": 36470,
											"end": 36560,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 36501,
											"end": 36548,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "354"
										},
										{
											"begin": 36534,
											"end": 36538,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 36540,
											"end": 36547,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 36501,
											"end": 36533,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "355"
										},
										{
											"begin": 36501,
											"end": 36548,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 36501,
											"end": 36548,
											"name": "tag",
											"source": 0,
											"value": "354"
										},
										{
											"begin": 36501,
											"end": 36548,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 36574,
											"end": 36590,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 36574,
											"end": 36590,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 36570,
											"end": 36753,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "356"
										},
										{
											"begin": 36570,
											"end": 36753,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 36607,
											"end": 36652,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 36644,
											"end": 36651,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36607,
											"end": 36643,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "358"
										},
										{
											"begin": 36607,
											"end": 36652,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 36570,
											"end": 36753,
											"name": "tag",
											"source": 0,
											"value": "356"
										},
										{
											"begin": 36570,
											"end": 36753,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36680,
											"end": 36684,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 36674,
											"end": 36684,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 36674,
											"end": 36676,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 36674,
											"end": 36684,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 36674,
											"end": 36684,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 36670,
											"end": 36753,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 36670,
											"end": 36753,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 36701,
											"end": 36741,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 36729,
											"end": 36731,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 36733,
											"end": 36740,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 36701,
											"end": 36728,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "362"
										},
										{
											"begin": 36701,
											"end": 36741,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16716,
											"end": 17439,
											"name": "tag",
											"source": 0,
											"value": "337"
										},
										{
											"begin": 16716,
											"end": 17439,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16772,
											"end": 16785,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 16993,
											"end": 16998,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17002,
											"end": 17003,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16993,
											"end": 17003,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16989,
											"end": 17042,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "365"
										},
										{
											"begin": 16989,
											"end": 17042,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17020,
											"end": 17030,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17020,
											"end": 17030,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17020,
											"end": 17030,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17020,
											"end": 17030,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17020,
											"end": 17030,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17020,
											"end": 17030,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17020,
											"end": 17030,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17020,
											"end": 17030,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17020,
											"end": 17030,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17020,
											"end": 17030,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 17020,
											"end": 17030,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17020,
											"end": 17030,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17020,
											"end": 17030,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17020,
											"end": 17030,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17020,
											"end": 17030,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17020,
											"end": 17030,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17020,
											"end": 17030,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16716,
											"end": 17439,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16989,
											"end": 17042,
											"name": "tag",
											"source": 0,
											"value": "365"
										},
										{
											"begin": 16989,
											"end": 17042,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17067,
											"end": 17072,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17052,
											"end": 17064,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17108,
											"end": 17186,
											"name": "tag",
											"source": 0,
											"value": "366"
										},
										{
											"begin": 17108,
											"end": 17186,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17115,
											"end": 17124,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17115,
											"end": 17124,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17108,
											"end": 17186,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "367"
										},
										{
											"begin": 17108,
											"end": 17186,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17141,
											"end": 17149,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17141,
											"end": 17149,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "368"
										},
										{
											"begin": 17141,
											"end": 17149,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17141,
											"end": 17149,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "369"
										},
										{
											"begin": 17141,
											"end": 17149,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17141,
											"end": 17149,
											"name": "tag",
											"source": 0,
											"value": "368"
										},
										{
											"begin": 17141,
											"end": 17149,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17141,
											"end": 17149,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17164,
											"end": 17174,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "370"
										},
										{
											"begin": 17164,
											"end": 17174,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17172,
											"end": 17174,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 17164,
											"end": 17174,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17164,
											"end": 17174,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "371"
										},
										{
											"begin": 17164,
											"end": 17174,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17164,
											"end": 17174,
											"name": "tag",
											"source": 0,
											"value": "370"
										},
										{
											"begin": 17164,
											"end": 17174,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17164,
											"end": 17174,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17164,
											"end": 17174,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17108,
											"end": 17186,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "366"
										},
										{
											"begin": 17108,
											"end": 17186,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17108,
											"end": 17186,
											"name": "tag",
											"source": 0,
											"value": "367"
										},
										{
											"begin": 17108,
											"end": 17186,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17196,
											"end": 17215,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17228,
											"end": 17234,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17218,
											"end": 17235,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17218,
											"end": 17235,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17218,
											"end": 17235,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 17218,
											"end": 17235,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17218,
											"end": 17235,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "373"
										},
										{
											"begin": 17218,
											"end": 17235,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17218,
											"end": 17235,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "373"
										},
										{
											"begin": 17218,
											"end": 17235,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "374"
										},
										{
											"begin": 17218,
											"end": 17235,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17218,
											"end": 17235,
											"name": "tag",
											"source": 0,
											"value": "373"
										},
										{
											"begin": 17218,
											"end": 17235,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17218,
											"end": 17235,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17218,
											"end": 17235,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17218,
											"end": 17235,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17218,
											"end": 17235,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17218,
											"end": 17235,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17218,
											"end": 17235,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17218,
											"end": 17235,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17218,
											"end": 17235,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 17218,
											"end": 17235,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17218,
											"end": 17235,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 17218,
											"end": 17235,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 17218,
											"end": 17235,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17218,
											"end": 17235,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17218,
											"end": 17235,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17218,
											"end": 17235,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17218,
											"end": 17235,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17218,
											"end": 17235,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17218,
											"end": 17235,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17218,
											"end": 17235,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17218,
											"end": 17235,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17218,
											"end": 17235,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "375"
										},
										{
											"begin": 17218,
											"end": 17235,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17218,
											"end": 17235,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17218,
											"end": 17235,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17218,
											"end": 17235,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17218,
											"end": 17235,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17218,
											"end": 17235,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17218,
											"end": 17235,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 17218,
											"end": 17235,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17218,
											"end": 17235,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 17218,
											"end": 17235,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17218,
											"end": 17235,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17218,
											"end": 17235,
											"name": "tag",
											"source": 0,
											"value": "375"
										},
										{
											"begin": 17218,
											"end": 17235,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17218,
											"end": 17235,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17196,
											"end": 17235,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17196,
											"end": 17235,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17246,
											"end": 17400,
											"name": "tag",
											"source": 0,
											"value": "376"
										},
										{
											"begin": 17246,
											"end": 17400,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17253,
											"end": 17263,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 17253,
											"end": 17263,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17246,
											"end": 17400,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 17246,
											"end": 17400,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17280,
											"end": 17291,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "378"
										},
										{
											"begin": 17290,
											"end": 17291,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 17280,
											"end": 17291,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17280,
											"end": 17291,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 17280,
											"end": 17291,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17280,
											"end": 17291,
											"name": "tag",
											"source": 0,
											"value": "378"
										},
										{
											"begin": 17280,
											"end": 17291,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17280,
											"end": 17291,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17349,
											"end": 17359,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "379"
										},
										{
											"begin": 17357,
											"end": 17359,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 17349,
											"end": 17354,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 17349,
											"end": 17359,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "380"
										},
										{
											"begin": 17349,
											"end": 17359,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17349,
											"end": 17359,
											"name": "tag",
											"source": 0,
											"value": "379"
										},
										{
											"begin": 17349,
											"end": 17359,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17336,
											"end": 17360,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "381"
										},
										{
											"begin": 17336,
											"end": 17360,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17336,
											"end": 17338,
											"name": "PUSH",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 17336,
											"end": 17360,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 17336,
											"end": 17360,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17336,
											"end": 17360,
											"name": "tag",
											"source": 0,
											"value": "381"
										},
										{
											"begin": 17336,
											"end": 17360,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17323,
											"end": 17362,
											"name": "PUSH",
											"source": 0,
											"value": "F8"
										},
										{
											"begin": 17323,
											"end": 17362,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 17306,
											"end": 17312,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17313,
											"end": 17319,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17306,
											"end": 17320,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17306,
											"end": 17320,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17306,
											"end": 17320,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17306,
											"end": 17320,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 17306,
											"end": 17320,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "383"
										},
										{
											"begin": 17306,
											"end": 17320,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17306,
											"end": 17320,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "383"
										},
										{
											"begin": 17306,
											"end": 17320,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 17306,
											"end": 17320,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17306,
											"end": 17320,
											"name": "tag",
											"source": 0,
											"value": "383"
										},
										{
											"begin": 17306,
											"end": 17320,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17306,
											"end": 17320,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17306,
											"end": 17320,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17306,
											"end": 17320,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17306,
											"end": 17362,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17306,
											"end": 17362,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 17306,
											"end": 17362,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17306,
											"end": 17362,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17306,
											"end": 17362,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17306,
											"end": 17362,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17306,
											"end": 17362,
											"name": "BYTE",
											"source": 0
										},
										{
											"begin": 17306,
											"end": 17362,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17306,
											"end": 17362,
											"name": "MSTORE8",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17377,
											"end": 17388,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "384"
										},
										{
											"begin": 17386,
											"end": 17388,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 17377,
											"end": 17388,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 17377,
											"end": 17388,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "371"
										},
										{
											"begin": 17377,
											"end": 17388,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17377,
											"end": 17388,
											"name": "tag",
											"source": 0,
											"value": "384"
										},
										{
											"begin": 17377,
											"end": 17388,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17377,
											"end": 17388,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 17377,
											"end": 17388,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17246,
											"end": 17400,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "376"
										},
										{
											"begin": 17246,
											"end": 17400,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28320,
											"end": 28702,
											"name": "tag",
											"source": 0,
											"value": "341"
										},
										{
											"begin": 28320,
											"end": 28702,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 28400,
											"end": 28416,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28400,
											"end": 28416,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28392,
											"end": 28453,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "386"
										},
										{
											"begin": 28392,
											"end": 28453,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28392,
											"end": 28453,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28392,
											"end": 28453,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 28392,
											"end": 28453,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28392,
											"end": 28453,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17872,
											"end": 17874,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 28392,
											"end": 28453,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28392,
											"end": 28453,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28392,
											"end": 28453,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17854,
											"end": 17875,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17854,
											"end": 17875,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17854,
											"end": 17875,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17891,
											"end": 17909,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 17891,
											"end": 17909,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17891,
											"end": 17909,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17884,
											"end": 17914,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17950,
											"end": 17984,
											"name": "PUSH",
											"source": 1,
											"value": "4552433732313A206D696E7420746F20746865207A65726F2061646472657373"
										},
										{
											"begin": 17930,
											"end": 17948,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 17930,
											"end": 17948,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17930,
											"end": 17948,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17923,
											"end": 17985,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 18002,
											"end": 18020,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 18002,
											"end": 18020,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 28392,
											"end": 28453,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 17670,
											"end": 18026,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 28392,
											"end": 28453,
											"name": "tag",
											"source": 0,
											"value": "386"
										},
										{
											"begin": 28392,
											"end": 28453,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28473,
											"end": 28489,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "389"
										},
										{
											"begin": 28481,
											"end": 28488,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28473,
											"end": 28480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 28473,
											"end": 28489,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28473,
											"end": 28489,
											"name": "tag",
											"source": 0,
											"value": "389"
										},
										{
											"begin": 28473,
											"end": 28489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28472,
											"end": 28489,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 28464,
											"end": 28522,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "390"
										},
										{
											"begin": 28464,
											"end": 28522,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28464,
											"end": 28522,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28464,
											"end": 28522,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 28464,
											"end": 28522,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28464,
											"end": 28522,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18233,
											"end": 18235,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 28464,
											"end": 28522,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28464,
											"end": 28522,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28464,
											"end": 28522,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18215,
											"end": 18236,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 18272,
											"end": 18274,
											"name": "PUSH",
											"source": 1,
											"value": "1C"
										},
										{
											"begin": 18252,
											"end": 18270,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 18252,
											"end": 18270,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18252,
											"end": 18270,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18245,
											"end": 18275,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 18311,
											"end": 18341,
											"name": "PUSH",
											"source": 1,
											"value": "4552433732313A20746F6B656E20616C7265616479206D696E74656400000000"
										},
										{
											"begin": 18291,
											"end": 18309,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 18291,
											"end": 18309,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18291,
											"end": 18309,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18284,
											"end": 18342,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 18359,
											"end": 18377,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 18359,
											"end": 18377,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 28464,
											"end": 28522,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 18031,
											"end": 18383,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 28464,
											"end": 28522,
											"name": "tag",
											"source": 0,
											"value": "390"
										},
										{
											"begin": 28464,
											"end": 28522,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28535,
											"end": 28580,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "393"
										},
										{
											"begin": 28564,
											"end": 28565,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28568,
											"end": 28570,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 28572,
											"end": 28579,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 28535,
											"end": 28555,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 28535,
											"end": 28580,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28535,
											"end": 28580,
											"name": "tag",
											"source": 0,
											"value": "393"
										},
										{
											"begin": 28535,
											"end": 28580,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 28593,
											"end": 28606,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28593,
											"end": 28606,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28593,
											"end": 28606,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28593,
											"end": 28606,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28593,
											"end": 28606,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28593,
											"end": 28606,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28593,
											"end": 28602,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 28593,
											"end": 28606,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28593,
											"end": 28606,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28593,
											"end": 28606,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28593,
											"end": 28606,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28593,
											"end": 28606,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 28593,
											"end": 28611,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28593,
											"end": 28611,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 28610,
											"end": 28611,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 28610,
											"end": 28611,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 28593,
											"end": 28606,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28593,
											"end": 28611,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "394"
										},
										{
											"begin": 28593,
											"end": 28611,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28610,
											"end": 28611,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 28610,
											"end": 28611,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28593,
											"end": 28611,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 28593,
											"end": 28611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28593,
											"end": 28611,
											"name": "tag",
											"source": 0,
											"value": "394"
										},
										{
											"begin": 28593,
											"end": 28611,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28593,
											"end": 28611,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28593,
											"end": 28611,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28593,
											"end": 28611,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 28622,
											"end": 28638,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28622,
											"end": 28638,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28622,
											"end": 28638,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28622,
											"end": 28638,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28622,
											"end": 28629,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 28622,
											"end": 28638,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28622,
											"end": 28638,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28622,
											"end": 28638,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28622,
											"end": 28638,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28622,
											"end": 28638,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28622,
											"end": 28638,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 28622,
											"end": 28643,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28622,
											"end": 28643,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 28622,
											"end": 28643,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 28622,
											"end": 28643,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 28622,
											"end": 28643,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28622,
											"end": 28643,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28622,
											"end": 28643,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28622,
											"end": 28643,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 28622,
											"end": 28643,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28622,
											"end": 28643,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28622,
											"end": 28643,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 28661,
											"end": 28694,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28661,
											"end": 28694,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28622,
											"end": 28638,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 28622,
											"end": 28638,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 28622,
											"end": 28638,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28661,
											"end": 28694,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 28661,
											"end": 28694,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28622,
											"end": 28638,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28622,
											"end": 28638,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28661,
											"end": 28694,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 28320,
											"end": 28702,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28320,
											"end": 28702,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28320,
											"end": 28702,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 38274,
											"end": 39262,
											"name": "tag",
											"source": 0,
											"value": "355"
										},
										{
											"begin": 38274,
											"end": 39262,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38540,
											"end": 38562,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38590,
											"end": 38591,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 38565,
											"end": 38587,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "399"
										},
										{
											"begin": 38582,
											"end": 38586,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 38565,
											"end": 38581,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 38565,
											"end": 38587,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 38565,
											"end": 38587,
											"name": "tag",
											"source": 0,
											"value": "399"
										},
										{
											"begin": 38565,
											"end": 38587,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38565,
											"end": 38591,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "400"
										},
										{
											"begin": 38565,
											"end": 38591,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 38565,
											"end": 38591,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38565,
											"end": 38591,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 38565,
											"end": 38591,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 38565,
											"end": 38591,
											"name": "tag",
											"source": 0,
											"value": "400"
										},
										{
											"begin": 38565,
											"end": 38591,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38602,
											"end": 38620,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38623,
											"end": 38649,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 38623,
											"end": 38649,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38623,
											"end": 38649,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38623,
											"end": 38640,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 38623,
											"end": 38649,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 38623,
											"end": 38649,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38623,
											"end": 38649,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38623,
											"end": 38649,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38623,
											"end": 38649,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 38623,
											"end": 38649,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 38540,
											"end": 38591,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38540,
											"end": 38591,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 38756,
											"end": 38784,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38756,
											"end": 38784,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 38756,
											"end": 38784,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 38752,
											"end": 39080,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "401"
										},
										{
											"begin": 38752,
											"end": 39080,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 38823,
											"end": 38841,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 38823,
											"end": 38841,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 38801,
											"end": 38820,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38823,
											"end": 38841,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38823,
											"end": 38841,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38823,
											"end": 38841,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38823,
											"end": 38835,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 38823,
											"end": 38841,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 38823,
											"end": 38841,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38823,
											"end": 38841,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38823,
											"end": 38841,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38823,
											"end": 38841,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38823,
											"end": 38841,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38823,
											"end": 38841,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 38823,
											"end": 38841,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 38823,
											"end": 38857,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 38823,
											"end": 38857,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 38823,
											"end": 38857,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38823,
											"end": 38857,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 38823,
											"end": 38857,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38823,
											"end": 38857,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38823,
											"end": 38857,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 38823,
											"end": 38857,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 38823,
											"end": 38857,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 38874,
											"end": 38904,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 38874,
											"end": 38904,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 38874,
											"end": 38904,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38874,
											"end": 38904,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38874,
											"end": 38904,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 38874,
											"end": 38904,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 38874,
											"end": 38918,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38874,
											"end": 38918,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38874,
											"end": 38918,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 38991,
											"end": 39021,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 38991,
											"end": 39021,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38991,
											"end": 39008,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 38991,
											"end": 39021,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38991,
											"end": 39021,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 38991,
											"end": 39021,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38991,
											"end": 39021,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38991,
											"end": 39021,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 38991,
											"end": 39034,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38991,
											"end": 39034,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38991,
											"end": 39034,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 38752,
											"end": 39080,
											"name": "tag",
											"source": 0,
											"value": "401"
										},
										{
											"begin": 38752,
											"end": 39080,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 39176,
											"end": 39202,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 39176,
											"end": 39202,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 39176,
											"end": 39202,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 39176,
											"end": 39202,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 39176,
											"end": 39193,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 39176,
											"end": 39202,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 39176,
											"end": 39202,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39176,
											"end": 39202,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39176,
											"end": 39202,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 39176,
											"end": 39202,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 39176,
											"end": 39202,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39176,
											"end": 39202,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 39176,
											"end": 39202,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 39169,
											"end": 39202,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 39169,
											"end": 39202,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39169,
											"end": 39202,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 39220,
											"end": 39238,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39220,
											"end": 39238,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 39220,
											"end": 39238,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 39220,
											"end": 39238,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 39220,
											"end": 39238,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 39220,
											"end": 39232,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 39220,
											"end": 39238,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39220,
											"end": 39238,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 39220,
											"end": 39238,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 39220,
											"end": 39238,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 39220,
											"end": 39238,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 39220,
											"end": 39254,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 39220,
											"end": 39254,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 39220,
											"end": 39254,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 39220,
											"end": 39254,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 39220,
											"end": 39254,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39220,
											"end": 39254,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39220,
											"end": 39254,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 39213,
											"end": 39254,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 38274,
											"end": 39262,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 39557,
											"end": 40636,
											"name": "tag",
											"source": 0,
											"value": "358"
										},
										{
											"begin": 39557,
											"end": 40636,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39835,
											"end": 39845,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 39835,
											"end": 39852,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 39810,
											"end": 39832,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 39810,
											"end": 39832,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39835,
											"end": 39856,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "403"
										},
										{
											"begin": 39835,
											"end": 39856,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39855,
											"end": 39856,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 39855,
											"end": 39856,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39835,
											"end": 39856,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 39835,
											"end": 39856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 39835,
											"end": 39856,
											"name": "tag",
											"source": 0,
											"value": "403"
										},
										{
											"begin": 39835,
											"end": 39856,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39867,
											"end": 39885,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 39888,
											"end": 39912,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 39888,
											"end": 39912,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39888,
											"end": 39912,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 39888,
											"end": 39903,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 39888,
											"end": 39912,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 39888,
											"end": 39912,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 39888,
											"end": 39912,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 39888,
											"end": 39912,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39888,
											"end": 39912,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 39888,
											"end": 39912,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 40261,
											"end": 40271,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 40261,
											"end": 40287,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40261,
											"end": 40287,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 39810,
											"end": 39856,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 39810,
											"end": 39856,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 39888,
											"end": 39912,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39888,
											"end": 39912,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 39810,
											"end": 39856,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 39810,
											"end": 39856,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40261,
											"end": 40287,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40261,
											"end": 40287,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 40261,
											"end": 40287,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "405"
										},
										{
											"begin": 40261,
											"end": 40287,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 40261,
											"end": 40287,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "405"
										},
										{
											"begin": 40261,
											"end": 40287,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 40261,
											"end": 40287,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40261,
											"end": 40287,
											"name": "tag",
											"source": 0,
											"value": "405"
										},
										{
											"begin": 40261,
											"end": 40287,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40261,
											"end": 40287,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40261,
											"end": 40287,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40261,
											"end": 40287,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 40261,
											"end": 40287,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 40261,
											"end": 40287,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40261,
											"end": 40287,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 40261,
											"end": 40287,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40261,
											"end": 40287,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 40239,
											"end": 40287,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40239,
											"end": 40287,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40325,
											"end": 40336,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40300,
											"end": 40310,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 40311,
											"end": 40321,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 40300,
											"end": 40322,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40300,
											"end": 40322,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 40300,
											"end": 40322,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40300,
											"end": 40322,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 40300,
											"end": 40322,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "408"
										},
										{
											"begin": 40300,
											"end": 40322,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 40300,
											"end": 40322,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "408"
										},
										{
											"begin": 40300,
											"end": 40322,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 40300,
											"end": 40322,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40300,
											"end": 40322,
											"name": "tag",
											"source": 0,
											"value": "408"
										},
										{
											"begin": 40300,
											"end": 40322,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40300,
											"end": 40322,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40300,
											"end": 40322,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40300,
											"end": 40322,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 40300,
											"end": 40322,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 40300,
											"end": 40322,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 40300,
											"end": 40322,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40300,
											"end": 40322,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 40300,
											"end": 40322,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 40300,
											"end": 40322,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40300,
											"end": 40322,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40300,
											"end": 40322,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40300,
											"end": 40336,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 40300,
											"end": 40336,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40300,
											"end": 40336,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 40300,
											"end": 40336,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 40405,
											"end": 40433,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 40405,
											"end": 40433,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40405,
											"end": 40433,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 40405,
											"end": 40420,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 40405,
											"end": 40433,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40405,
											"end": 40433,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40405,
											"end": 40433,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 40405,
											"end": 40433,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 40405,
											"end": 40433,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40405,
											"end": 40433,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 40405,
											"end": 40433,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 40405,
											"end": 40446,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 40405,
											"end": 40446,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40405,
											"end": 40446,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 40577,
											"end": 40601,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 40577,
											"end": 40601,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 40577,
											"end": 40601,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 40577,
											"end": 40601,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40577,
											"end": 40601,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 40570,
											"end": 40601,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 40612,
											"end": 40622,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 40612,
											"end": 40628,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40612,
											"end": 40628,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 40612,
											"end": 40628,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40612,
											"end": 40628,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "411"
										},
										{
											"begin": 40612,
											"end": 40628,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 40612,
											"end": 40628,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "411"
										},
										{
											"begin": 40612,
											"end": 40628,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "412"
										},
										{
											"begin": 40612,
											"end": 40628,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40612,
											"end": 40628,
											"name": "tag",
											"source": 0,
											"value": "411"
										},
										{
											"begin": 40612,
											"end": 40628,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40612,
											"end": 40628,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 40612,
											"end": 40628,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40612,
											"end": 40628,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 40612,
											"end": 40628,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40612,
											"end": 40628,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40612,
											"end": 40628,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40612,
											"end": 40628,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40612,
											"end": 40628,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 40612,
											"end": 40628,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 40612,
											"end": 40628,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40612,
											"end": 40628,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 40612,
											"end": 40628,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40612,
											"end": 40628,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40612,
											"end": 40628,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40612,
											"end": 40628,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 40612,
											"end": 40628,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40612,
											"end": 40628,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 39628,
											"end": 40636,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39628,
											"end": 40636,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39628,
											"end": 40636,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39557,
											"end": 40636,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39557,
											"end": 40636,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37061,
											"end": 37282,
											"name": "tag",
											"source": 0,
											"value": "362"
										},
										{
											"begin": 37061,
											"end": 37282,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37146,
											"end": 37160,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37163,
											"end": 37183,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "415"
										},
										{
											"begin": 37180,
											"end": 37182,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 37163,
											"end": 37179,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 37163,
											"end": 37183,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37163,
											"end": 37183,
											"name": "tag",
											"source": 0,
											"value": "415"
										},
										{
											"begin": 37163,
											"end": 37183,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 37194,
											"end": 37210,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37194,
											"end": 37210,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 37194,
											"end": 37210,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 37194,
											"end": 37210,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37194,
											"end": 37210,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37194,
											"end": 37210,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37194,
											"end": 37210,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37194,
											"end": 37206,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 37194,
											"end": 37210,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 37194,
											"end": 37210,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37194,
											"end": 37210,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37194,
											"end": 37210,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37194,
											"end": 37210,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37194,
											"end": 37210,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37194,
											"end": 37210,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 37194,
											"end": 37210,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 37194,
											"end": 37218,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 37194,
											"end": 37218,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 37194,
											"end": 37218,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37194,
											"end": 37218,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 37194,
											"end": 37218,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37194,
											"end": 37218,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37194,
											"end": 37218,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 37194,
											"end": 37218,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 37194,
											"end": 37228,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 37194,
											"end": 37228,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37194,
											"end": 37228,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 37239,
											"end": 37265,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 37239,
											"end": 37265,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 37239,
											"end": 37265,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37239,
											"end": 37256,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 37239,
											"end": 37265,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37239,
											"end": 37265,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37239,
											"end": 37265,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37239,
											"end": 37265,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37239,
											"end": 37265,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37239,
											"end": 37265,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 37239,
											"end": 37274,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37239,
											"end": 37274,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37239,
											"end": 37274,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37239,
											"end": 37274,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 37061,
											"end": 37282,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14,
											"end": 145,
											"name": "tag",
											"source": 1,
											"value": "416"
										},
										{
											"begin": 14,
											"end": 145,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 88,
											"end": 120,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 88,
											"end": 120,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 78,
											"end": 121,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 78,
											"end": 121,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 68,
											"end": 139,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "428"
										},
										{
											"begin": 68,
											"end": 139,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 135,
											"end": 136,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 132,
											"end": 133,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 125,
											"end": 137,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 68,
											"end": 139,
											"name": "tag",
											"source": 1,
											"value": "428"
										},
										{
											"begin": 68,
											"end": 139,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14,
											"end": 145,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14,
											"end": 145,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 150,
											"end": 395,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 150,
											"end": 395,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 208,
											"end": 214,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 261,
											"end": 263,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 249,
											"end": 258,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 240,
											"end": 247,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 236,
											"end": 259,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 232,
											"end": 264,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 229,
											"end": 281,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 229,
											"end": 281,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "430"
										},
										{
											"begin": 229,
											"end": 281,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 277,
											"end": 278,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 274,
											"end": 275,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 267,
											"end": 279,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 229,
											"end": 281,
											"name": "tag",
											"source": 1,
											"value": "430"
										},
										{
											"begin": 229,
											"end": 281,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 316,
											"end": 325,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 303,
											"end": 326,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 335,
											"end": 365,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "216"
										},
										{
											"begin": 359,
											"end": 364,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 335,
											"end": 365,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "416"
										},
										{
											"begin": 335,
											"end": 365,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 592,
											"end": 842,
											"name": "tag",
											"source": 1,
											"value": "417"
										},
										{
											"begin": 592,
											"end": 842,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 677,
											"end": 678,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 687,
											"end": 800,
											"name": "tag",
											"source": 1,
											"value": "434"
										},
										{
											"begin": 687,
											"end": 800,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 701,
											"end": 707,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 698,
											"end": 699,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 695,
											"end": 708,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 687,
											"end": 800,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 687,
											"end": 800,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "436"
										},
										{
											"begin": 687,
											"end": 800,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 777,
											"end": 788,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 777,
											"end": 788,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 777,
											"end": 788,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 771,
											"end": 789,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 758,
											"end": 769,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 758,
											"end": 769,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 758,
											"end": 769,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 751,
											"end": 790,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 723,
											"end": 725,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 716,
											"end": 726,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 687,
											"end": 800,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "434"
										},
										{
											"begin": 687,
											"end": 800,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 687,
											"end": 800,
											"name": "tag",
											"source": 1,
											"value": "436"
										},
										{
											"begin": 687,
											"end": 800,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 834,
											"end": 835,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 816,
											"end": 832,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 816,
											"end": 832,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 809,
											"end": 836,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 592,
											"end": 842,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 847,
											"end": 1118,
											"name": "tag",
											"source": 1,
											"value": "418"
										},
										{
											"begin": 847,
											"end": 1118,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 889,
											"end": 892,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 927,
											"end": 932,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 921,
											"end": 933,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 954,
											"end": 960,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 949,
											"end": 952,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 942,
											"end": 961,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 970,
											"end": 1046,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "438"
										},
										{
											"begin": 1039,
											"end": 1045,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1032,
											"end": 1036,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1027,
											"end": 1030,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1023,
											"end": 1037,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1016,
											"end": 1020,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1009,
											"end": 1014,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1005,
											"end": 1021,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 970,
											"end": 1046,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "417"
										},
										{
											"begin": 970,
											"end": 1046,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 970,
											"end": 1046,
											"name": "tag",
											"source": 1,
											"value": "438"
										},
										{
											"begin": 970,
											"end": 1046,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1100,
											"end": 1102,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1079,
											"end": 1094,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1075,
											"end": 1104,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1066,
											"end": 1105,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1066,
											"end": 1105,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1066,
											"end": 1105,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1066,
											"end": 1105,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1107,
											"end": 1111,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1062,
											"end": 1112,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1062,
											"end": 1112,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 847,
											"end": 1118,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 847,
											"end": 1118,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1123,
											"end": 1343,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 1123,
											"end": 1343,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1272,
											"end": 1274,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1261,
											"end": 1270,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1254,
											"end": 1275,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1235,
											"end": 1239,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1292,
											"end": 1337,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "216"
										},
										{
											"begin": 1333,
											"end": 1335,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1322,
											"end": 1331,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1318,
											"end": 1336,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1310,
											"end": 1316,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1292,
											"end": 1337,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "418"
										},
										{
											"begin": 1292,
											"end": 1337,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1348,
											"end": 1528,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 1348,
											"end": 1528,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1407,
											"end": 1413,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1460,
											"end": 1462,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1448,
											"end": 1457,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1439,
											"end": 1446,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1435,
											"end": 1458,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1431,
											"end": 1463,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1428,
											"end": 1480,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1428,
											"end": 1480,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "442"
										},
										{
											"begin": 1428,
											"end": 1480,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1476,
											"end": 1477,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1473,
											"end": 1474,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1466,
											"end": 1478,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1428,
											"end": 1480,
											"name": "tag",
											"source": 1,
											"value": "442"
										},
										{
											"begin": 1428,
											"end": 1480,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1499,
											"end": 1522,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1499,
											"end": 1522,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1348,
											"end": 1528,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1348,
											"end": 1528,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1741,
											"end": 1914,
											"name": "tag",
											"source": 1,
											"value": "419"
										},
										{
											"begin": 1741,
											"end": 1914,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1809,
											"end": 1829,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1809,
											"end": 1829,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1858,
											"end": 1889,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1858,
											"end": 1889,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1848,
											"end": 1890,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1848,
											"end": 1890,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1838,
											"end": 1908,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "445"
										},
										{
											"begin": 1838,
											"end": 1908,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1904,
											"end": 1905,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1901,
											"end": 1902,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1894,
											"end": 1906,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1838,
											"end": 1908,
											"name": "tag",
											"source": 1,
											"value": "445"
										},
										{
											"begin": 1838,
											"end": 1908,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1741,
											"end": 1914,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1741,
											"end": 1914,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1741,
											"end": 1914,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1741,
											"end": 1914,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1919,
											"end": 2173,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1919,
											"end": 2173,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1987,
											"end": 1993,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1995,
											"end": 2001,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2048,
											"end": 2050,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2036,
											"end": 2045,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2027,
											"end": 2034,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2023,
											"end": 2046,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2019,
											"end": 2051,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2016,
											"end": 2068,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2016,
											"end": 2068,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "447"
										},
										{
											"begin": 2016,
											"end": 2068,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2064,
											"end": 2065,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2061,
											"end": 2062,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2054,
											"end": 2066,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2016,
											"end": 2068,
											"name": "tag",
											"source": 1,
											"value": "447"
										},
										{
											"begin": 2016,
											"end": 2068,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2087,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "448"
										},
										{
											"begin": 2106,
											"end": 2115,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2087,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "419"
										},
										{
											"begin": 2087,
											"end": 2116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2087,
											"end": 2116,
											"name": "tag",
											"source": 1,
											"value": "448"
										},
										{
											"begin": 2087,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2077,
											"end": 2116,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 2163,
											"end": 2165,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2148,
											"end": 2166,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 2148,
											"end": 2166,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2148,
											"end": 2166,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 2148,
											"end": 2166,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2135,
											"end": 2167,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2135,
											"end": 2167,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1919,
											"end": 2173,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2360,
											"end": 2688,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 2360,
											"end": 2688,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2437,
											"end": 2443,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2445,
											"end": 2451,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2453,
											"end": 2459,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2506,
											"end": 2508,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2494,
											"end": 2503,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2485,
											"end": 2492,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2481,
											"end": 2504,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2477,
											"end": 2509,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2474,
											"end": 2526,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2474,
											"end": 2526,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "451"
										},
										{
											"begin": 2474,
											"end": 2526,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2522,
											"end": 2523,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2519,
											"end": 2520,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2512,
											"end": 2524,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2474,
											"end": 2526,
											"name": "tag",
											"source": 1,
											"value": "451"
										},
										{
											"begin": 2474,
											"end": 2526,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2545,
											"end": 2574,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "452"
										},
										{
											"begin": 2564,
											"end": 2573,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2545,
											"end": 2574,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "419"
										},
										{
											"begin": 2545,
											"end": 2574,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2545,
											"end": 2574,
											"name": "tag",
											"source": 1,
											"value": "452"
										},
										{
											"begin": 2545,
											"end": 2574,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2535,
											"end": 2574,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2535,
											"end": 2574,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2593,
											"end": 2631,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "453"
										},
										{
											"begin": 2627,
											"end": 2629,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2616,
											"end": 2625,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2612,
											"end": 2630,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2593,
											"end": 2631,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "419"
										},
										{
											"begin": 2593,
											"end": 2631,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2593,
											"end": 2631,
											"name": "tag",
											"source": 1,
											"value": "453"
										},
										{
											"begin": 2593,
											"end": 2631,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2583,
											"end": 2631,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2583,
											"end": 2631,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2678,
											"end": 2680,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2667,
											"end": 2676,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2663,
											"end": 2681,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2650,
											"end": 2682,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2640,
											"end": 2682,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2640,
											"end": 2682,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2360,
											"end": 2688,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2360,
											"end": 2688,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2360,
											"end": 2688,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2360,
											"end": 2688,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2360,
											"end": 2688,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2360,
											"end": 2688,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2693,
											"end": 2879,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 2693,
											"end": 2879,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2752,
											"end": 2758,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2805,
											"end": 2807,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2793,
											"end": 2802,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2784,
											"end": 2791,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2780,
											"end": 2803,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2776,
											"end": 2808,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2773,
											"end": 2825,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2773,
											"end": 2825,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "455"
										},
										{
											"begin": 2773,
											"end": 2825,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2821,
											"end": 2822,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2818,
											"end": 2819,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2811,
											"end": 2823,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2773,
											"end": 2825,
											"name": "tag",
											"source": 1,
											"value": "455"
										},
										{
											"begin": 2773,
											"end": 2825,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2844,
											"end": 2873,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "216"
										},
										{
											"begin": 2863,
											"end": 2872,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2844,
											"end": 2873,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "419"
										},
										{
											"begin": 2844,
											"end": 2873,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2884,
											"end": 3231,
											"name": "tag",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 2884,
											"end": 3231,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2949,
											"end": 2955,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2957,
											"end": 2963,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3010,
											"end": 3012,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2998,
											"end": 3007,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2989,
											"end": 2996,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3008,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2981,
											"end": 3013,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2978,
											"end": 3030,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2978,
											"end": 3030,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "458"
										},
										{
											"begin": 2978,
											"end": 3030,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3026,
											"end": 3027,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3023,
											"end": 3024,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3016,
											"end": 3028,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2978,
											"end": 3030,
											"name": "tag",
											"source": 1,
											"value": "458"
										},
										{
											"begin": 2978,
											"end": 3030,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3049,
											"end": 3078,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "459"
										},
										{
											"begin": 3068,
											"end": 3077,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3049,
											"end": 3078,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "419"
										},
										{
											"begin": 3049,
											"end": 3078,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3049,
											"end": 3078,
											"name": "tag",
											"source": 1,
											"value": "459"
										},
										{
											"begin": 3049,
											"end": 3078,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3039,
											"end": 3078,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3039,
											"end": 3078,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3128,
											"end": 3130,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3117,
											"end": 3126,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3113,
											"end": 3131,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3100,
											"end": 3132,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 3175,
											"end": 3180,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3168,
											"end": 3181,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3161,
											"end": 3182,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3154,
											"end": 3159,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3151,
											"end": 3183,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 3141,
											"end": 3201,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "460"
										},
										{
											"begin": 3141,
											"end": 3201,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3197,
											"end": 3198,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3194,
											"end": 3195,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3187,
											"end": 3199,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3141,
											"end": 3201,
											"name": "tag",
											"source": 1,
											"value": "460"
										},
										{
											"begin": 3141,
											"end": 3201,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3220,
											"end": 3225,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3210,
											"end": 3225,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3210,
											"end": 3225,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3210,
											"end": 3225,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2884,
											"end": 3231,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2884,
											"end": 3231,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2884,
											"end": 3231,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2884,
											"end": 3231,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2884,
											"end": 3231,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2884,
											"end": 3231,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3236,
											"end": 3363,
											"name": "tag",
											"source": 1,
											"value": "374"
										},
										{
											"begin": 3236,
											"end": 3363,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3297,
											"end": 3307,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 3292,
											"end": 3295,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 3288,
											"end": 3308,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 3285,
											"end": 3286,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3278,
											"end": 3309,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3328,
											"end": 3332,
											"name": "PUSH",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 3325,
											"end": 3326,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3318,
											"end": 3333,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3352,
											"end": 3356,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3349,
											"end": 3350,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3342,
											"end": 3357,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3368,
											"end": 3999,
											"name": "tag",
											"source": 1,
											"value": "420"
										},
										{
											"begin": 3368,
											"end": 3999,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3432,
											"end": 3437,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3462,
											"end": 3480,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3503,
											"end": 3505,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3495,
											"end": 3501,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3492,
											"end": 3506,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 3489,
											"end": 3529,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3489,
											"end": 3529,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "464"
										},
										{
											"begin": 3489,
											"end": 3529,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3509,
											"end": 3527,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "464"
										},
										{
											"begin": 3509,
											"end": 3527,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "374"
										},
										{
											"begin": 3509,
											"end": 3527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3509,
											"end": 3527,
											"name": "tag",
											"source": 1,
											"value": "464"
										},
										{
											"begin": 3509,
											"end": 3527,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3584,
											"end": 3586,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3578,
											"end": 3587,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3552,
											"end": 3554,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 3638,
											"end": 3653,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3653,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3634,
											"end": 3658,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3634,
											"end": 3658,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3634,
											"end": 3658,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3660,
											"end": 3662,
											"name": "PUSH",
											"source": 1,
											"value": "3F"
										},
										{
											"begin": 3630,
											"end": 3663,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3626,
											"end": 3668,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3614,
											"end": 3669,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3614,
											"end": 3669,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3614,
											"end": 3669,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3684,
											"end": 3702,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3684,
											"end": 3702,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3684,
											"end": 3702,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 3704,
											"end": 3726,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3704,
											"end": 3726,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3704,
											"end": 3726,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 3681,
											"end": 3727,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 3678,
											"end": 3750,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3678,
											"end": 3750,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "466"
										},
										{
											"begin": 3678,
											"end": 3750,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3730,
											"end": 3748,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "466"
										},
										{
											"begin": 3730,
											"end": 3748,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "374"
										},
										{
											"begin": 3730,
											"end": 3748,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3730,
											"end": 3748,
											"name": "tag",
											"source": 1,
											"value": "466"
										},
										{
											"begin": 3730,
											"end": 3748,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3770,
											"end": 3780,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3766,
											"end": 3768,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3759,
											"end": 3781,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3799,
											"end": 3805,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3790,
											"end": 3805,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3790,
											"end": 3805,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3829,
											"end": 3835,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3821,
											"end": 3827,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3814,
											"end": 3836,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 3872,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3860,
											"end": 3866,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3855,
											"end": 3858,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3851,
											"end": 3867,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3848,
											"end": 3873,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 3845,
											"end": 3890,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3845,
											"end": 3890,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "467"
										},
										{
											"begin": 3845,
											"end": 3890,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3886,
											"end": 3887,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3883,
											"end": 3884,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3876,
											"end": 3888,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3845,
											"end": 3890,
											"name": "tag",
											"source": 1,
											"value": "467"
										},
										{
											"begin": 3845,
											"end": 3890,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3936,
											"end": 3942,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3931,
											"end": 3934,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3924,
											"end": 3928,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3916,
											"end": 3922,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3912,
											"end": 3929,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3899,
											"end": 3943,
											"name": "CALLDATACOPY",
											"source": 1
										},
										{
											"begin": 3991,
											"end": 3992,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3984,
											"end": 3988,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3975,
											"end": 3981,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 3967,
											"end": 3973,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3963,
											"end": 3982,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3959,
											"end": 3989,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3993,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3993,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3993,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3993,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3368,
											"end": 3999,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3368,
											"end": 3999,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3368,
											"end": 3999,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3368,
											"end": 3999,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3368,
											"end": 3999,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3368,
											"end": 3999,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4004,
											"end": 4670,
											"name": "tag",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 4004,
											"end": 4670,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4099,
											"end": 4105,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4107,
											"end": 4113,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4115,
											"end": 4121,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4123,
											"end": 4129,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4176,
											"end": 4179,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 4164,
											"end": 4173,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4155,
											"end": 4162,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 4151,
											"end": 4174,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4147,
											"end": 4180,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 4144,
											"end": 4197,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4144,
											"end": 4197,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "469"
										},
										{
											"begin": 4144,
											"end": 4197,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4193,
											"end": 4194,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4190,
											"end": 4191,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4183,
											"end": 4195,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4144,
											"end": 4197,
											"name": "tag",
											"source": 1,
											"value": "469"
										},
										{
											"begin": 4144,
											"end": 4197,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4216,
											"end": 4245,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "470"
										},
										{
											"begin": 4235,
											"end": 4244,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4216,
											"end": 4245,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "419"
										},
										{
											"begin": 4216,
											"end": 4245,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4216,
											"end": 4245,
											"name": "tag",
											"source": 1,
											"value": "470"
										},
										{
											"begin": 4216,
											"end": 4245,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4206,
											"end": 4245,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4206,
											"end": 4245,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4264,
											"end": 4302,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "471"
										},
										{
											"begin": 4298,
											"end": 4300,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4287,
											"end": 4296,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4283,
											"end": 4301,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4264,
											"end": 4302,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "419"
										},
										{
											"begin": 4264,
											"end": 4302,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4264,
											"end": 4302,
											"name": "tag",
											"source": 1,
											"value": "471"
										},
										{
											"begin": 4264,
											"end": 4302,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4254,
											"end": 4302,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4254,
											"end": 4302,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4349,
											"end": 4351,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4338,
											"end": 4347,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4334,
											"end": 4352,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4321,
											"end": 4353,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 4311,
											"end": 4353,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4311,
											"end": 4353,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4404,
											"end": 4406,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 4393,
											"end": 4402,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4389,
											"end": 4407,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4376,
											"end": 4408,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 4431,
											"end": 4449,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4423,
											"end": 4429,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4420,
											"end": 4450,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 4417,
											"end": 4467,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4417,
											"end": 4467,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "472"
										},
										{
											"begin": 4417,
											"end": 4467,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4463,
											"end": 4464,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4460,
											"end": 4461,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4453,
											"end": 4465,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4417,
											"end": 4467,
											"name": "tag",
											"source": 1,
											"value": "472"
										},
										{
											"begin": 4417,
											"end": 4467,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4486,
											"end": 4508,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4486,
											"end": 4508,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4539,
											"end": 4543,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 4531,
											"end": 4544,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4531,
											"end": 4544,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4527,
											"end": 4554,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SGT",
											"source": -1
										},
										{
											"begin": 4517,
											"end": 4572,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "473"
										},
										{
											"begin": 4517,
											"end": 4572,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4568,
											"end": 4569,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4565,
											"end": 4566,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4558,
											"end": 4570,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4517,
											"end": 4572,
											"name": "tag",
											"source": 1,
											"value": "473"
										},
										{
											"begin": 4517,
											"end": 4572,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4591,
											"end": 4664,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "474"
										},
										{
											"begin": 4656,
											"end": 4663,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 4651,
											"end": 4653,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4638,
											"end": 4654,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 4633,
											"end": 4635,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4629,
											"end": 4631,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4625,
											"end": 4636,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4591,
											"end": 4664,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "420"
										},
										{
											"begin": 4591,
											"end": 4664,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4591,
											"end": 4664,
											"name": "tag",
											"source": 1,
											"value": "474"
										},
										{
											"begin": 4591,
											"end": 4664,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4581,
											"end": 4664,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4581,
											"end": 4664,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4581,
											"end": 4664,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4004,
											"end": 4670,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4004,
											"end": 4670,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 4004,
											"end": 4670,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4004,
											"end": 4670,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 4004,
											"end": 4670,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4004,
											"end": 4670,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4004,
											"end": 4670,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4004,
											"end": 4670,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4675,
											"end": 5199,
											"name": "tag",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 4675,
											"end": 5199,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4753,
											"end": 4759,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4761,
											"end": 4767,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4814,
											"end": 4816,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4802,
											"end": 4811,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4793,
											"end": 4800,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4789,
											"end": 4812,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4785,
											"end": 4817,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 4782,
											"end": 4834,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4782,
											"end": 4834,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "476"
										},
										{
											"begin": 4782,
											"end": 4834,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4830,
											"end": 4831,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4827,
											"end": 4828,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4820,
											"end": 4832,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4782,
											"end": 4834,
											"name": "tag",
											"source": 1,
											"value": "476"
										},
										{
											"begin": 4782,
											"end": 4834,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4853,
											"end": 4882,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "477"
										},
										{
											"begin": 4872,
											"end": 4881,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4853,
											"end": 4882,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "419"
										},
										{
											"begin": 4853,
											"end": 4882,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4853,
											"end": 4882,
											"name": "tag",
											"source": 1,
											"value": "477"
										},
										{
											"begin": 4853,
											"end": 4882,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4843,
											"end": 4882,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4843,
											"end": 4882,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4933,
											"end": 4935,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4922,
											"end": 4931,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4918,
											"end": 4936,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4905,
											"end": 4937,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 4960,
											"end": 4978,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4952,
											"end": 4958,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4949,
											"end": 4979,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 4946,
											"end": 4996,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4946,
											"end": 4996,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "478"
										},
										{
											"begin": 4946,
											"end": 4996,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4992,
											"end": 4993,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4989,
											"end": 4990,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4982,
											"end": 4994,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4946,
											"end": 4996,
											"name": "tag",
											"source": 1,
											"value": "478"
										},
										{
											"begin": 4946,
											"end": 4996,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5015,
											"end": 5037,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5015,
											"end": 5037,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5068,
											"end": 5072,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 5060,
											"end": 5073,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5060,
											"end": 5073,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5056,
											"end": 5083,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SGT",
											"source": -1
										},
										{
											"begin": 5046,
											"end": 5101,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "479"
										},
										{
											"begin": 5046,
											"end": 5101,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5097,
											"end": 5098,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5094,
											"end": 5095,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5087,
											"end": 5099,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5046,
											"end": 5101,
											"name": "tag",
											"source": 1,
											"value": "479"
										},
										{
											"begin": 5046,
											"end": 5101,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5120,
											"end": 5193,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "480"
										},
										{
											"begin": 5185,
											"end": 5192,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5180,
											"end": 5182,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5167,
											"end": 5183,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 5162,
											"end": 5164,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5158,
											"end": 5160,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5154,
											"end": 5165,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5120,
											"end": 5193,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "420"
										},
										{
											"begin": 5120,
											"end": 5193,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5120,
											"end": 5193,
											"name": "tag",
											"source": 1,
											"value": "480"
										},
										{
											"begin": 5120,
											"end": 5193,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5110,
											"end": 5193,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5110,
											"end": 5193,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5110,
											"end": 5193,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4675,
											"end": 5199,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4675,
											"end": 5199,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4675,
											"end": 5199,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4675,
											"end": 5199,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4675,
											"end": 5199,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4675,
											"end": 5199,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5204,
											"end": 5464,
											"name": "tag",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 5204,
											"end": 5464,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5272,
											"end": 5278,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5280,
											"end": 5286,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5333,
											"end": 5335,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5321,
											"end": 5330,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5312,
											"end": 5319,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5308,
											"end": 5331,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5304,
											"end": 5336,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 5301,
											"end": 5353,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5301,
											"end": 5353,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "482"
										},
										{
											"begin": 5301,
											"end": 5353,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5349,
											"end": 5350,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5346,
											"end": 5347,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5339,
											"end": 5351,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5301,
											"end": 5353,
											"name": "tag",
											"source": 1,
											"value": "482"
										},
										{
											"begin": 5301,
											"end": 5353,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5372,
											"end": 5401,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "483"
										},
										{
											"begin": 5391,
											"end": 5400,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5372,
											"end": 5401,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "419"
										},
										{
											"begin": 5372,
											"end": 5401,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5372,
											"end": 5401,
											"name": "tag",
											"source": 1,
											"value": "483"
										},
										{
											"begin": 5372,
											"end": 5401,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5362,
											"end": 5401,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5362,
											"end": 5401,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5420,
											"end": 5458,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "484"
										},
										{
											"begin": 5454,
											"end": 5456,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5443,
											"end": 5452,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5439,
											"end": 5457,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5420,
											"end": 5458,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "419"
										},
										{
											"begin": 5420,
											"end": 5458,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5420,
											"end": 5458,
											"name": "tag",
											"source": 1,
											"value": "484"
										},
										{
											"begin": 5420,
											"end": 5458,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5410,
											"end": 5458,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5410,
											"end": 5458,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5204,
											"end": 5464,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5204,
											"end": 5464,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5204,
											"end": 5464,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5204,
											"end": 5464,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5204,
											"end": 5464,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5204,
											"end": 5464,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5469,
											"end": 5849,
											"name": "tag",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 5469,
											"end": 5849,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5548,
											"end": 5549,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5544,
											"end": 5556,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5544,
											"end": 5556,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5544,
											"end": 5556,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 5544,
											"end": 5556,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5591,
											"end": 5603,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5591,
											"end": 5603,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5591,
											"end": 5603,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5612,
											"end": 5673,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "486"
										},
										{
											"begin": 5612,
											"end": 5673,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5666,
											"end": 5670,
											"name": "PUSH",
											"source": 1,
											"value": "7F"
										},
										{
											"begin": 5658,
											"end": 5664,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5654,
											"end": 5671,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5644,
											"end": 5671,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5644,
											"end": 5671,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5612,
											"end": 5673,
											"name": "tag",
											"source": 1,
											"value": "486"
										},
										{
											"begin": 5612,
											"end": 5673,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5719,
											"end": 5721,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5711,
											"end": 5717,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5708,
											"end": 5722,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 5688,
											"end": 5706,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5685,
											"end": 5723,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5682,
											"end": 5843,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "487"
										},
										{
											"begin": 5682,
											"end": 5843,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5765,
											"end": 5775,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 5760,
											"end": 5763,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 5756,
											"end": 5776,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 5753,
											"end": 5754,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5746,
											"end": 5777,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5800,
											"end": 5804,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 5797,
											"end": 5798,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5790,
											"end": 5805,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5828,
											"end": 5832,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5825,
											"end": 5826,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5818,
											"end": 5833,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5682,
											"end": 5843,
											"name": "tag",
											"source": 1,
											"value": "487"
										},
										{
											"begin": 5682,
											"end": 5843,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5682,
											"end": 5843,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5469,
											"end": 5849,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5469,
											"end": 5849,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5469,
											"end": 5849,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5469,
											"end": 5849,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7094,
											"end": 7507,
											"name": "tag",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 7094,
											"end": 7507,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7296,
											"end": 7298,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7278,
											"end": 7299,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7278,
											"end": 7299,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7278,
											"end": 7299,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7335,
											"end": 7337,
											"name": "PUSH",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 7315,
											"end": 7333,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7315,
											"end": 7333,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7315,
											"end": 7333,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7308,
											"end": 7338,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7374,
											"end": 7408,
											"name": "PUSH",
											"source": 1,
											"value": "4552433732313A207472616E736665722063616C6C6572206973206E6F74206F"
										},
										{
											"begin": 7369,
											"end": 7371,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7354,
											"end": 7372,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7354,
											"end": 7372,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7347,
											"end": 7409,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1DDB995C881B9BDC88185C1C1C9BDD9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7440,
											"end": 7442,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 7425,
											"end": 7443,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7425,
											"end": 7443,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7418,
											"end": 7465,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7497,
											"end": 7500,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 7482,
											"end": 7501,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7482,
											"end": 7501,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7094,
											"end": 7507,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8337,
											"end": 8464,
											"name": "tag",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 8337,
											"end": 8464,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8398,
											"end": 8408,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 8393,
											"end": 8396,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 8389,
											"end": 8409,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 8386,
											"end": 8387,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8379,
											"end": 8410,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8429,
											"end": 8433,
											"name": "PUSH",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 8426,
											"end": 8427,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 8419,
											"end": 8434,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8453,
											"end": 8457,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 8450,
											"end": 8451,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8443,
											"end": 8458,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 9290,
											"end": 9646,
											"name": "tag",
											"source": 1,
											"value": "177"
										},
										{
											"begin": 9290,
											"end": 9646,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9492,
											"end": 9494,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9474,
											"end": 9495,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9474,
											"end": 9495,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9474,
											"end": 9495,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9511,
											"end": 9529,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9511,
											"end": 9529,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9511,
											"end": 9529,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9504,
											"end": 9534,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9570,
											"end": 9604,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 9565,
											"end": 9567,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9550,
											"end": 9568,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9550,
											"end": 9568,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9543,
											"end": 9605,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9637,
											"end": 9639,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 9622,
											"end": 9640,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9622,
											"end": 9640,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9290,
											"end": 9646,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11640,
											"end": 11767,
											"name": "tag",
											"source": 1,
											"value": "421"
										},
										{
											"begin": 11640,
											"end": 11767,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11701,
											"end": 11711,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 11696,
											"end": 11699,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 11692,
											"end": 11712,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 11689,
											"end": 11690,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11682,
											"end": 11713,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11732,
											"end": 11736,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 11729,
											"end": 11730,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 11722,
											"end": 11737,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11756,
											"end": 11760,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 11753,
											"end": 11754,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11746,
											"end": 11761,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 11772,
											"end": 11900,
											"name": "tag",
											"source": 1,
											"value": "258"
										},
										{
											"begin": 11772,
											"end": 11900,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11839,
											"end": 11848,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11839,
											"end": 11848,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11839,
											"end": 11848,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 11860,
											"end": 11871,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11860,
											"end": 11871,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11860,
											"end": 11871,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 11857,
											"end": 11894,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 11857,
											"end": 11894,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 11857,
											"end": 11894,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11874,
											"end": 11892,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 11874,
											"end": 11892,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "421"
										},
										{
											"begin": 11874,
											"end": 11892,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11905,
											"end": 12030,
											"name": "tag",
											"source": 1,
											"value": "260"
										},
										{
											"begin": 11905,
											"end": 12030,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11970,
											"end": 11979,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11970,
											"end": 11979,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11970,
											"end": 11979,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11991,
											"end": 12001,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11991,
											"end": 12001,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11991,
											"end": 12001,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 11988,
											"end": 12024,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 11988,
											"end": 12024,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 11988,
											"end": 12024,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 12004,
											"end": 12022,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 12004,
											"end": 12022,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "421"
										},
										{
											"begin": 12004,
											"end": 12022,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12035,
											"end": 12449,
											"name": "tag",
											"source": 1,
											"value": "267"
										},
										{
											"begin": 12035,
											"end": 12449,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12237,
											"end": 12239,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12219,
											"end": 12240,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12219,
											"end": 12240,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12219,
											"end": 12240,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12276,
											"end": 12278,
											"name": "PUSH",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 12256,
											"end": 12274,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12256,
											"end": 12274,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12256,
											"end": 12274,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12249,
											"end": 12279,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12315,
											"end": 12349,
											"name": "PUSH",
											"source": 1,
											"value": "4552433732313A207472616E7366657220746F206E6F6E204552433732315265"
										},
										{
											"begin": 12310,
											"end": 12312,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 12295,
											"end": 12313,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12295,
											"end": 12313,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12288,
											"end": 12350,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "31B2B4BB32B91034B6B83632B6B2B73A32B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12381,
											"end": 12383,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 12366,
											"end": 12384,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12366,
											"end": 12384,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12359,
											"end": 12407,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12439,
											"end": 12442,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 12424,
											"end": 12443,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12424,
											"end": 12443,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12035,
											"end": 12449,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12872,
											"end": 13368,
											"name": "tag",
											"source": 1,
											"value": "283"
										},
										{
											"begin": 12872,
											"end": 13368,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13051,
											"end": 13054,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13089,
											"end": 13095,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13083,
											"end": 13096,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 13105,
											"end": 13171,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "513"
										},
										{
											"begin": 13164,
											"end": 13170,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13159,
											"end": 13162,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 13152,
											"end": 13156,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13144,
											"end": 13150,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 13140,
											"end": 13157,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13105,
											"end": 13171,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "417"
										},
										{
											"begin": 13105,
											"end": 13171,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13105,
											"end": 13171,
											"name": "tag",
											"source": 1,
											"value": "513"
										},
										{
											"begin": 13105,
											"end": 13171,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13234,
											"end": 13247,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13234,
											"end": 13247,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 13193,
											"end": 13209,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13193,
											"end": 13209,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13193,
											"end": 13209,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13193,
											"end": 13209,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13256,
											"end": 13326,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "514"
										},
										{
											"begin": 13234,
											"end": 13247,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13193,
											"end": 13209,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13303,
											"end": 13307,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13291,
											"end": 13308,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 13291,
											"end": 13308,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13256,
											"end": 13326,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "417"
										},
										{
											"begin": 13256,
											"end": 13326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13256,
											"end": 13326,
											"name": "tag",
											"source": 1,
											"value": "514"
										},
										{
											"begin": 13256,
											"end": 13326,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13342,
											"end": 13362,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13342,
											"end": 13362,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 12872,
											"end": 13368,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12872,
											"end": 13368,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13914,
											"end": 14459,
											"name": "tag",
											"source": 1,
											"value": "423"
										},
										{
											"begin": 13914,
											"end": 14459,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14016,
											"end": 14018,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 14011,
											"end": 14014,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14008,
											"end": 14019,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14453,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14453,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 14005,
											"end": 14453,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 14052,
											"end": 14053,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14077,
											"end": 14082,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14073,
											"end": 14075,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14066,
											"end": 14083,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14122,
											"end": 14126,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14118,
											"end": 14120,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14108,
											"end": 14127,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 14192,
											"end": 14194,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 14180,
											"end": 14190,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 14176,
											"end": 14195,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14173,
											"end": 14174,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 14169,
											"end": 14196,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 14163,
											"end": 14167,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14159,
											"end": 14197,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14228,
											"end": 14232,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14216,
											"end": 14226,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 14213,
											"end": 14233,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 14210,
											"end": 14257,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 14210,
											"end": 14257,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "519"
										},
										{
											"begin": 14210,
											"end": 14257,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14251,
											"end": 14255,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14210,
											"end": 14257,
											"name": "tag",
											"source": 1,
											"value": "519"
										},
										{
											"begin": 14210,
											"end": 14257,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14306,
											"end": 14308,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 14301,
											"end": 14304,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 14297,
											"end": 14309,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14294,
											"end": 14295,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 14290,
											"end": 14310,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 14284,
											"end": 14288,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14280,
											"end": 14311,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14270,
											"end": 14311,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14270,
											"end": 14311,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14361,
											"end": 14443,
											"name": "tag",
											"source": 1,
											"value": "520"
										},
										{
											"begin": 14361,
											"end": 14443,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14379,
											"end": 14381,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14372,
											"end": 14377,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14369,
											"end": 14382,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 14361,
											"end": 14443,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 14361,
											"end": 14443,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "522"
										},
										{
											"begin": 14361,
											"end": 14443,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 14424,
											"end": 14441,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14424,
											"end": 14441,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14424,
											"end": 14441,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 14405,
											"end": 14406,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 14394,
											"end": 14407,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14361,
											"end": 14443,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "520"
										},
										{
											"begin": 14361,
											"end": 14443,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14361,
											"end": 14443,
											"name": "tag",
											"source": 1,
											"value": "522"
										},
										{
											"begin": 14361,
											"end": 14443,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14365,
											"end": 14368,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14365,
											"end": 14368,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14365,
											"end": 14368,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13914,
											"end": 14459,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13914,
											"end": 14459,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13914,
											"end": 14459,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13914,
											"end": 14459,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14635,
											"end": 15987,
											"name": "tag",
											"source": 1,
											"value": "297"
										},
										{
											"begin": 14635,
											"end": 15987,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14761,
											"end": 14764,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14755,
											"end": 14765,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 14788,
											"end": 14806,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14780,
											"end": 14786,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14777,
											"end": 14807,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 14774,
											"end": 14830,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 14774,
											"end": 14830,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "526"
										},
										{
											"begin": 14774,
											"end": 14830,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 14810,
											"end": 14828,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "526"
										},
										{
											"begin": 14810,
											"end": 14828,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "374"
										},
										{
											"begin": 14810,
											"end": 14828,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14810,
											"end": 14828,
											"name": "tag",
											"source": 1,
											"value": "526"
										},
										{
											"begin": 14810,
											"end": 14828,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14839,
											"end": 14936,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "527"
										},
										{
											"begin": 14929,
											"end": 14935,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14889,
											"end": 14927,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "528"
										},
										{
											"begin": 14921,
											"end": 14925,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 14915,
											"end": 14926,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 14889,
											"end": 14927,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 14889,
											"end": 14927,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14889,
											"end": 14927,
											"name": "tag",
											"source": 1,
											"value": "528"
										},
										{
											"begin": 14889,
											"end": 14927,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14883,
											"end": 14887,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 14839,
											"end": 14936,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "423"
										},
										{
											"begin": 14839,
											"end": 14936,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14839,
											"end": 14936,
											"name": "tag",
											"source": 1,
											"value": "527"
										},
										{
											"begin": 14839,
											"end": 14936,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14991,
											"end": 14995,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14991,
											"end": 14995,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15055,
											"end": 15057,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 15044,
											"end": 15058,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15044,
											"end": 15058,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 15072,
											"end": 15073,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 15067,
											"end": 15730,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15067,
											"end": 15730,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 15067,
											"end": 15730,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "530"
										},
										{
											"begin": 15067,
											"end": 15730,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 15774,
											"end": 15775,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15791,
											"end": 15797,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 15788,
											"end": 15877,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 15788,
											"end": 15877,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "531"
										},
										{
											"begin": 15788,
											"end": 15877,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15843,
											"end": 15862,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 15843,
											"end": 15862,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15843,
											"end": 15862,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15837,
											"end": 15863,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 15788,
											"end": 15877,
											"name": "tag",
											"source": 1,
											"value": "531"
										},
										{
											"begin": 15788,
											"end": 15877,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 14592,
											"end": 14593,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 14588,
											"end": 14599,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 14588,
											"end": 14599,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14588,
											"end": 14599,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 14584,
											"end": 14608,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 14580,
											"end": 14609,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 14570,
											"end": 14610,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 14616,
											"end": 14617,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 14612,
											"end": 14623,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 14612,
											"end": 14623,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14612,
											"end": 14623,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 14567,
											"end": 14624,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 15890,
											"end": 15971,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 15890,
											"end": 15971,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 15037,
											"end": 15981,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "522"
										},
										{
											"begin": 15037,
											"end": 15981,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15067,
											"end": 15730,
											"name": "tag",
											"source": 1,
											"value": "530"
										},
										{
											"begin": 15067,
											"end": 15730,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13861,
											"end": 13862,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13854,
											"end": 13868,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 13854,
											"end": 13868,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13854,
											"end": 13868,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13898,
											"end": 13902,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13885,
											"end": 13903,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13885,
											"end": 13903,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 15103,
											"end": 15123,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 15103,
											"end": 15123,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15103,
											"end": 15123,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15221,
											"end": 15457,
											"name": "tag",
											"source": 1,
											"value": "534"
										},
										{
											"begin": 15221,
											"end": 15457,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15235,
											"end": 15242,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15232,
											"end": 15233,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15229,
											"end": 15243,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 15221,
											"end": 15457,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 15221,
											"end": 15457,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "536"
										},
										{
											"begin": 15221,
											"end": 15457,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 15324,
											"end": 15343,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 15324,
											"end": 15343,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 15324,
											"end": 15343,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15318,
											"end": 15344,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 15303,
											"end": 15345,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15303,
											"end": 15345,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 15416,
											"end": 15443,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 15416,
											"end": 15443,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 15416,
											"end": 15443,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15416,
											"end": 15443,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 15384,
											"end": 15385,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 15372,
											"end": 15386,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15372,
											"end": 15386,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15372,
											"end": 15386,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15372,
											"end": 15386,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15251,
											"end": 15270,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 15251,
											"end": 15270,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15221,
											"end": 15457,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "534"
										},
										{
											"begin": 15221,
											"end": 15457,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15221,
											"end": 15457,
											"name": "tag",
											"source": 1,
											"value": "536"
										},
										{
											"begin": 15221,
											"end": 15457,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15225,
											"end": 15228,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15485,
											"end": 15491,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 15476,
											"end": 15483,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15473,
											"end": 15492,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 15470,
											"end": 15671,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 15470,
											"end": 15671,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "537"
										},
										{
											"begin": 15470,
											"end": 15671,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 15546,
											"end": 15565,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 15546,
											"end": 15565,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 15546,
											"end": 15565,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15540,
											"end": 15566,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 15629,
											"end": 15630,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 15625,
											"end": 15639,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 15625,
											"end": 15639,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15625,
											"end": 15639,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 15641,
											"end": 15644,
											"name": "PUSH",
											"source": 1,
											"value": "F8"
										},
										{
											"begin": 15621,
											"end": 15645,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15617,
											"end": 15654,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 15613,
											"end": 15655,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 15598,
											"end": 15656,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15583,
											"end": 15657,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15583,
											"end": 15657,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 15470,
											"end": 15671,
											"name": "tag",
											"source": 1,
											"value": "537"
										},
										{
											"begin": 15470,
											"end": 15671,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15717,
											"end": 15718,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 15701,
											"end": 15715,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15701,
											"end": 15715,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15701,
											"end": 15715,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 15697,
											"end": 15719,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15684,
											"end": 15720,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15684,
											"end": 15720,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14635,
											"end": 15987,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15992,
											"end": 16481,
											"name": "tag",
											"source": 1,
											"value": "312"
										},
										{
											"begin": 15992,
											"end": 16481,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16261,
											"end": 16276,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 16261,
											"end": 16276,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16261,
											"end": 16276,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 16243,
											"end": 16277,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16243,
											"end": 16277,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16313,
											"end": 16328,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 16313,
											"end": 16328,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 16308,
											"end": 16310,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16293,
											"end": 16311,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16293,
											"end": 16311,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16286,
											"end": 16329,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16360,
											"end": 16362,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 16345,
											"end": 16363,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16345,
											"end": 16363,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16338,
											"end": 16372,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 16338,
											"end": 16372,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16338,
											"end": 16372,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16408,
											"end": 16411,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 16403,
											"end": 16405,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 16388,
											"end": 16406,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16388,
											"end": 16406,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16381,
											"end": 16412,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16381,
											"end": 16412,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16381,
											"end": 16412,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16186,
											"end": 16190,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16186,
											"end": 16190,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16429,
											"end": 16475,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "539"
										},
										{
											"begin": 16429,
											"end": 16475,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16455,
											"end": 16474,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 16455,
											"end": 16474,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16447,
											"end": 16453,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 16429,
											"end": 16475,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "418"
										},
										{
											"begin": 16429,
											"end": 16475,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16429,
											"end": 16475,
											"name": "tag",
											"source": 1,
											"value": "539"
										},
										{
											"begin": 16429,
											"end": 16475,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16421,
											"end": 16475,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": 15992,
											"end": 16481,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15992,
											"end": 16481,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16486,
											"end": 16735,
											"name": "tag",
											"source": 1,
											"value": "315"
										},
										{
											"begin": 16486,
											"end": 16735,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16555,
											"end": 16561,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16608,
											"end": 16610,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16596,
											"end": 16605,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16587,
											"end": 16594,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 16583,
											"end": 16606,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 16579,
											"end": 16611,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 16576,
											"end": 16628,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 16576,
											"end": 16628,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "541"
										},
										{
											"begin": 16576,
											"end": 16628,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 16624,
											"end": 16625,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16621,
											"end": 16622,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16614,
											"end": 16626,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 16576,
											"end": 16628,
											"name": "tag",
											"source": 1,
											"value": "541"
										},
										{
											"begin": 16576,
											"end": 16628,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16656,
											"end": 16665,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16650,
											"end": 16666,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 16675,
											"end": 16705,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "216"
										},
										{
											"begin": 16699,
											"end": 16704,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16675,
											"end": 16705,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "416"
										},
										{
											"begin": 16675,
											"end": 16705,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17156,
											"end": 17291,
											"name": "tag",
											"source": 1,
											"value": "369"
										},
										{
											"begin": 17156,
											"end": 17291,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17195,
											"end": 17198,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17216,
											"end": 17233,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 17216,
											"end": 17233,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17216,
											"end": 17233,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17213,
											"end": 17256,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "546"
										},
										{
											"begin": 17213,
											"end": 17256,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 17236,
											"end": 17254,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "546"
										},
										{
											"begin": 17236,
											"end": 17254,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "421"
										},
										{
											"begin": 17236,
											"end": 17254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17236,
											"end": 17254,
											"name": "tag",
											"source": 1,
											"value": "546"
										},
										{
											"begin": 17236,
											"end": 17254,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17283,
											"end": 17284,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 17272,
											"end": 17285,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17272,
											"end": 17285,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17156,
											"end": 17291,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17296,
											"end": 17423,
											"name": "tag",
											"source": 1,
											"value": "425"
										},
										{
											"begin": 17296,
											"end": 17423,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17357,
											"end": 17367,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 17352,
											"end": 17355,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 17348,
											"end": 17368,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 17345,
											"end": 17346,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17338,
											"end": 17369,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17388,
											"end": 17392,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 17385,
											"end": 17386,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 17378,
											"end": 17393,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17412,
											"end": 17416,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 17409,
											"end": 17410,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17402,
											"end": 17417,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 17428,
											"end": 17548,
											"name": "tag",
											"source": 1,
											"value": "371"
										},
										{
											"begin": 17428,
											"end": 17548,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17468,
											"end": 17469,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17494,
											"end": 17495,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17484,
											"end": 17519,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "550"
										},
										{
											"begin": 17484,
											"end": 17519,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 17499,
											"end": 17517,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "550"
										},
										{
											"begin": 17499,
											"end": 17517,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "425"
										},
										{
											"begin": 17499,
											"end": 17517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17499,
											"end": 17517,
											"name": "tag",
											"source": 1,
											"value": "550"
										},
										{
											"begin": 17499,
											"end": 17517,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17533,
											"end": 17542,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 17533,
											"end": 17542,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17428,
											"end": 17548,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17553,
											"end": 17665,
											"name": "tag",
											"source": 1,
											"value": "380"
										},
										{
											"begin": 17553,
											"end": 17665,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17585,
											"end": 17586,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17611,
											"end": 17612,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17601,
											"end": 17636,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "553"
										},
										{
											"begin": 17601,
											"end": 17636,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 17616,
											"end": 17634,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "553"
										},
										{
											"begin": 17616,
											"end": 17634,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "425"
										},
										{
											"begin": 17616,
											"end": 17634,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17616,
											"end": 17634,
											"name": "tag",
											"source": 1,
											"value": "553"
										},
										{
											"begin": 17616,
											"end": 17634,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17650,
											"end": 17659,
											"name": "MOD",
											"source": 1
										},
										{
											"begin": 17650,
											"end": 17659,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17553,
											"end": 17665,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 18388,
											"end": 18515,
											"name": "tag",
											"source": 1,
											"value": "412"
										},
										{
											"begin": 18388,
											"end": 18515,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18449,
											"end": 18459,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 18444,
											"end": 18447,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 18440,
											"end": 18460,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 18437,
											"end": 18438,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18430,
											"end": 18461,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 18480,
											"end": 18484,
											"name": "PUSH",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 18477,
											"end": 18478,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 18470,
											"end": 18485,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 18504,
											"end": 18508,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 18501,
											"end": 18502,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18494,
											"end": 18509,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"MY MainNFT/My_NFT.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"ownerOf(uint256)": "6352211e",
							"renounceOwnership()": "715018a6",
							"safeMint(address,string)": "d204c45e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenByIndex(uint256)": "4f6ccce7",
							"tokenOfOwnerByIndex(address,uint256)": "2f745c59",
							"tokenURI(uint256)": "c87b56dd",
							"totalSupply()": "18160ddd",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"tokenURI\",\"type\":\"string\"}],\"name\":\"safeMint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenByIndex(uint256)\":{\"details\":\"See {IERC721Enumerable-tokenByIndex}.\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"See {IERC721Enumerable-tokenOfOwnerByIndex}.\"},\"totalSupply()\":{\"details\":\"See {IERC721Enumerable-totalSupply}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"MY MainNFT/My_NFT.sol\":\"MinteriumUser\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"MY MainNFT/My_NFT.sol\":{\"keccak256\":\"0xd2db7b35f9f50e024810e13a2b06b9eb1507bea0a4b0749d169e842935029116\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://61d56da57f47a64427d04ea653ccf597b6976ede901fab03ecfb040a3c9ed7ac\",\"dweb:/ipfs/Qmeo8NV2khn8iZRHNUFfnvRoNbjEsvZg3W2C89RmoaAUL5\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 726,
								"contract": "MY MainNFT/My_NFT.sol:MinteriumUser",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 728,
								"contract": "MY MainNFT/My_NFT.sol:MinteriumUser",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 732,
								"contract": "MY MainNFT/My_NFT.sol:MinteriumUser",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 736,
								"contract": "MY MainNFT/My_NFT.sol:MinteriumUser",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 740,
								"contract": "MY MainNFT/My_NFT.sol:MinteriumUser",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 746,
								"contract": "MY MainNFT/My_NFT.sol:MinteriumUser",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 1559,
								"contract": "MY MainNFT/My_NFT.sol:MinteriumUser",
								"label": "_ownedTokens",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))"
							},
							{
								"astId": 1563,
								"contract": "MY MainNFT/My_NFT.sol:MinteriumUser",
								"label": "_ownedTokensIndex",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_uint256,t_uint256)"
							},
							{
								"astId": 1566,
								"contract": "MY MainNFT/My_NFT.sol:MinteriumUser",
								"label": "_allTokens",
								"offset": 0,
								"slot": "8",
								"type": "t_array(t_uint256)dyn_storage"
							},
							{
								"astId": 1570,
								"contract": "MY MainNFT/My_NFT.sol:MinteriumUser",
								"label": "_allTokensIndex",
								"offset": 0,
								"slot": "9",
								"type": "t_mapping(t_uint256,t_uint256)"
							},
							{
								"astId": 1893,
								"contract": "MY MainNFT/My_NFT.sol:MinteriumUser",
								"label": "_tokenURIs",
								"offset": 0,
								"slot": "10",
								"type": "t_mapping(t_uint256,t_string_storage)"
							},
							{
								"astId": 2014,
								"contract": "MY MainNFT/My_NFT.sol:MinteriumUser",
								"label": "_owner",
								"offset": 0,
								"slot": "11",
								"type": "t_address"
							},
							{
								"astId": 2192,
								"contract": "MY MainNFT/My_NFT.sol:MinteriumUser",
								"label": "_tokenIdCounter",
								"offset": 0,
								"slot": "12",
								"type": "t_struct(Counter)2121_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_uint256)dyn_storage": {
								"base": "t_uint256",
								"encoding": "dynamic_array",
								"label": "uint256[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(uint256 => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_uint256,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_uint256,t_string_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => string)",
								"numberOfBytes": "32",
								"value": "t_string_storage"
							},
							"t_mapping(t_uint256,t_uint256)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(Counter)2121_storage": {
								"encoding": "inplace",
								"label": "struct Counters.Counter",
								"members": [
									{
										"astId": 2120,
										"contract": "MY MainNFT/My_NFT.sol:MinteriumUser",
										"label": "_value",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"MY MainNFT/My_NFT.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"MY MainNFT/My_NFT.sol\":{\"keccak256\":\"0xd2db7b35f9f50e024810e13a2b06b9eb1507bea0a4b0749d169e842935029116\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://61d56da57f47a64427d04ea653ccf597b6976ede901fab03ecfb040a3c9ed7ac\",\"dweb:/ipfs/Qmeo8NV2khn8iZRHNUFfnvRoNbjEsvZg3W2C89RmoaAUL5\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 2014,
								"contract": "MY MainNFT/My_NFT.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Strings": {
					"abi": [],
					"devdoc": {
						"details": "String operations.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"MY MainNFT/My_NFT.sol\":16532:18469  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"MY MainNFT/My_NFT.sol\":16532:18469  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122057f823188ede24a24f49693f7418d9dd5ce4031d1e77bcb0b3b77af849ae312564736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122057f823188ede24a24f49693f7418d9dd5ce4031d1e77bcb0b3b77af849ae312564736f6c63430008120033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 JUMPI 0xF8 0x23 XOR DUP15 0xDE 0x24 LOG2 0x4F 0x49 PUSH10 0x3F7418D9DD5CE4031D1E PUSH24 0xBCB0B3B77AF849AE312564736F6C63430008120033000000 ",
							"sourceMap": "16532:1937:0:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;16532:1937:0;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122057f823188ede24a24f49693f7418d9dd5ce4031d1e77bcb0b3b77af849ae312564736f6c63430008120033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 JUMPI 0xF8 0x23 XOR DUP15 0xDE 0x24 LOG2 0x4F 0x49 PUSH10 0x3F7418D9DD5CE4031D1E PUSH24 0xBCB0B3B77AF849AE312564736F6C63430008120033000000 ",
							"sourceMap": "16532:1937:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 16532,
									"end": 18469,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 16532,
									"end": 18469,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 16532,
									"end": 18469,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 16532,
									"end": 18469,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 16532,
									"end": 18469,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 16532,
									"end": 18469,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 16532,
									"end": 18469,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 16532,
									"end": 18469,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 16532,
									"end": 18469,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 16532,
									"end": 18469,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 16532,
									"end": 18469,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 16532,
									"end": 18469,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 16532,
									"end": 18469,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 16532,
									"end": 18469,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 16532,
									"end": 18469,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 16532,
									"end": 18469,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 16532,
									"end": 18469,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 16532,
									"end": 18469,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 16532,
									"end": 18469,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 16532,
									"end": 18469,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 16532,
									"end": 18469,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 16532,
									"end": 18469,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 16532,
									"end": 18469,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 16532,
									"end": 18469,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 16532,
									"end": 18469,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 16532,
									"end": 18469,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 16532,
									"end": 18469,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 16532,
									"end": 18469,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 16532,
									"end": 18469,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 16532,
									"end": 18469,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 16532,
									"end": 18469,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 16532,
									"end": 18469,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 16532,
									"end": 18469,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 16532,
									"end": 18469,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122057f823188ede24a24f49693f7418d9dd5ce4031d1e77bcb0b3b77af849ae312564736f6c63430008120033",
									".code": [
										{
											"begin": 16532,
											"end": 18469,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 16532,
											"end": 18469,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 16532,
											"end": 18469,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 16532,
											"end": 18469,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 16532,
											"end": 18469,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16532,
											"end": 18469,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16532,
											"end": 18469,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16532,
											"end": 18469,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16532,
											"end": 18469,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"MY MainNFT/My_NFT.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"MY MainNFT/My_NFT.sol\":\"Strings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"MY MainNFT/My_NFT.sol\":{\"keccak256\":\"0xd2db7b35f9f50e024810e13a2b06b9eb1507bea0a4b0749d169e842935029116\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://61d56da57f47a64427d04ea653ccf597b6976ede901fab03ecfb040a3c9ed7ac\",\"dweb:/ipfs/Qmeo8NV2khn8iZRHNUFfnvRoNbjEsvZg3W2C89RmoaAUL5\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "2519",
				"formattedMessage": "Warning: This declaration shadows an existing declaration.\n    --> MY MainNFT/My_NFT.sol:1296:35:\n     |\n1296 |     function safeMint(address to, string memory tokenURI) public onlyOwner returns(uint256 tokenId) {\n     |                                   ^^^^^^^^^^^^^^^^^^^^^^\nNote: The shadowed declaration is here:\n    --> MY MainNFT/My_NFT.sol:1312:5:\n     |\n1312 |     function tokenURI(uint256 tokenId) public view override(ERC721, ERC721URIStorage) returns (string memory) {\n     |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "This declaration shadows an existing declaration.",
				"secondarySourceLocations": [
					{
						"end": 47314,
						"file": "MY MainNFT/My_NFT.sol",
						"message": "The shadowed declaration is here:",
						"start": 47159
					}
				],
				"severity": "warning",
				"sourceLocation": {
					"end": 46591,
					"file": "MY MainNFT/My_NFT.sol",
					"start": 46569
				},
				"type": "Warning"
			}
		],
		"sources": {
			"MY MainNFT/My_NFT.sol": {
				"ast": {
					"absolutePath": "MY MainNFT/My_NFT.sol",
					"exportedSymbols": {
						"Address": [
							462
						],
						"Context": [
							484
						],
						"Counters": [
							2176
						],
						"ERC165": [
							708
						],
						"ERC721": [
							1518
						],
						"ERC721Enumerable": [
							1882
						],
						"ERC721URIStorage": [
							2008
						],
						"IERC165": [
							11
						],
						"IERC721": [
							125
						],
						"IERC721Enumerable": [
							1547
						],
						"IERC721Metadata": [
							167
						],
						"IERC721Receiver": [
							142
						],
						"MinteriumUser": [
							2308
						],
						"Ownable": [
							2116
						],
						"Strings": [
							686
						]
					},
					"id": 2309,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "247:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "274:287:0",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 11,
							"linearizedBaseContracts": [
								11
							],
							"name": "IERC165",
							"nameLocation": "573:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "588:347:0",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 10,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "950:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "975:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 10,
												"src": "968:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 4,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "968:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "967:20:0"
									},
									"returnParameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 8,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 10,
												"src": "1011:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 7,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1011:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1010:6:0"
									},
									"scope": 11,
									"src": "941:76:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2309,
							"src": "563:457:0",
							"usedErrors": []
						},
						{
							"id": 12,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "1095:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 14,
										"name": "IERC165",
										"nameLocations": [
											"1214:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 11,
										"src": "1214:7:0"
									},
									"id": 15,
									"nodeType": "InheritanceSpecifier",
									"src": "1214:7:0"
								}
							],
							"canonicalName": "IERC721",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 13,
								"nodeType": "StructuredDocumentation",
								"src": "1122:69:0",
								"text": " @dev Required interface of an ERC721 compliant contract."
							},
							"fullyImplemented": false,
							"id": 125,
							"linearizedBaseContracts": [
								125,
								11
							],
							"name": "IERC721",
							"nameLocation": "1203:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 16,
										"nodeType": "StructuredDocumentation",
										"src": "1229:90:0",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 24,
									"name": "Transfer",
									"nameLocation": "1331:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 18,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1356:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1340:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 17,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1340:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1378:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1362:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1362:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1398:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1382:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 21,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1382:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1339:67:0"
									},
									"src": "1325:82:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1415:96:0",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 33,
									"name": "Approval",
									"nameLocation": "1523:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1548:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 33,
												"src": "1532:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1532:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 29,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "1571:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 33,
												"src": "1555:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1555:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 31,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1597:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 33,
												"src": "1581:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 30,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1531:74:0"
									},
									"src": "1517:89:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 34,
										"nodeType": "StructuredDocumentation",
										"src": "1614:119:0",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 42,
									"name": "ApprovalForAll",
									"nameLocation": "1745:14:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 41,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 36,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1776:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "1760:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 35,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1760:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 38,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1799:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "1783:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 37,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1783:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 40,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "1814:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "1809:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 39,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1809:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1759:64:0"
									},
									"src": "1739:85:0"
								},
								{
									"documentation": {
										"id": 43,
										"nodeType": "StructuredDocumentation",
										"src": "1832:78:0",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 50,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1925:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1943:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1935:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 44,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1935:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1934:15:0"
									},
									"returnParameters": {
										"id": 49,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 48,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "1981:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1973:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 47,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1973:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1972:17:0"
									},
									"scope": 125,
									"src": "1916:74:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1998:137:0",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 58,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "2150:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 54,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 53,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2166:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "2158:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 52,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2158:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2157:17:0"
									},
									"returnParameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2206:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "2198:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 55,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2198:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2197:15:0"
									},
									"scope": 125,
									"src": "2141:72:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "2221:703:0",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 68,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "2939:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 66,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 61,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2964:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 68,
												"src": "2956:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 60,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2956:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2978:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 68,
												"src": "2970:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 62,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2970:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2990:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 68,
												"src": "2982:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 64,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2982:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2955:43:0"
									},
									"returnParameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3007:0:0"
									},
									"scope": 125,
									"src": "2930:78:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 69,
										"nodeType": "StructuredDocumentation",
										"src": "3016:517:0",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 78,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3548:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 76,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3569:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3561:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 70,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3561:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 73,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3583:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3575:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 72,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3575:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 75,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3595:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3587:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 74,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3587:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3560:43:0"
									},
									"returnParameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3612:0:0"
									},
									"scope": 125,
									"src": "3539:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 79,
										"nodeType": "StructuredDocumentation",
										"src": "3621:464:0",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 86,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4100:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 84,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 81,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4116:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 86,
												"src": "4108:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 80,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4108:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4128:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 86,
												"src": "4120:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 82,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4120:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4107:29:0"
									},
									"returnParameters": {
										"id": 85,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4145:0:0"
									},
									"scope": 125,
									"src": "4091:55:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 87,
										"nodeType": "StructuredDocumentation",
										"src": "4154:145:0",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 94,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "4314:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 90,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 89,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4334:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 94,
												"src": "4326:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 88,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4326:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4325:17:0"
									},
									"returnParameters": {
										"id": 93,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 92,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4374:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 94,
												"src": "4366:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 91,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4366:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4365:18:0"
									},
									"scope": 125,
									"src": "4305:79:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 95,
										"nodeType": "StructuredDocumentation",
										"src": "4392:318:0",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 102,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "4725:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4751:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 102,
												"src": "4743:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 96,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4743:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "_approved",
												"nameLocation": "4766:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 102,
												"src": "4761:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 98,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4761:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4742:34:0"
									},
									"returnParameters": {
										"id": 101,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4785:0:0"
									},
									"scope": 125,
									"src": "4716:70:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 103,
										"nodeType": "StructuredDocumentation",
										"src": "4794:142:0",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 112,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "4951:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 105,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4976:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "4968:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 104,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4968:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 107,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4991:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "4983:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 106,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4983:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4967:33:0"
									},
									"returnParameters": {
										"id": 111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 110,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "5024:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 109,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5024:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5023:6:0"
									},
									"scope": 125,
									"src": "4942:88:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 113,
										"nodeType": "StructuredDocumentation",
										"src": "5038:580:0",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 124,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "5633:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 115,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5658:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "5650:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 114,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5650:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 117,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5672:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "5664:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 116,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5664:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 119,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5684:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "5676:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 118,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5676:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 121,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5708:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "5693:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 120,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5693:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5649:64:0"
									},
									"returnParameters": {
										"id": 123,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5722:0:0"
									},
									"scope": 125,
									"src": "5624:99:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2309,
							"src": "1193:4533:0",
							"usedErrors": []
						},
						{
							"id": 126,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "5809:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Receiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 127,
								"nodeType": "StructuredDocumentation",
								"src": "5836:156:0",
								"text": " @title ERC721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC721 asset contracts."
							},
							"fullyImplemented": false,
							"id": 142,
							"linearizedBaseContracts": [
								142
							],
							"name": "IERC721Receiver",
							"nameLocation": "6004:15:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 128,
										"nodeType": "StructuredDocumentation",
										"src": "6027:493:0",
										"text": " @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n The selector can be obtained in Solidity with `IERC721.onERC721Received.selector`."
									},
									"functionSelector": "150b7a02",
									"id": 141,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "6535:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 137,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 130,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6560:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "6552:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 129,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6552:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 132,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6578:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "6570:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 131,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 134,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "6592:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "6584:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 133,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6584:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 136,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6616:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "6601:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 135,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6601:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6551:70:0"
									},
									"returnParameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 139,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "6640:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 138,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "6640:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6639:8:0"
									},
									"scope": 142,
									"src": "6526:122:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2309,
							"src": "5994:657:0",
							"usedErrors": []
						},
						{
							"id": 143,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "6745:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 145,
										"name": "IERC721",
										"nameLocations": [
											"6939:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 125,
										"src": "6939:7:0"
									},
									"id": 146,
									"nodeType": "InheritanceSpecifier",
									"src": "6939:7:0"
								}
							],
							"canonicalName": "IERC721Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 144,
								"nodeType": "StructuredDocumentation",
								"src": "6772:136:0",
								"text": " @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"
							},
							"fullyImplemented": false,
							"id": 167,
							"linearizedBaseContracts": [
								167,
								125,
								11
							],
							"name": "IERC721Metadata",
							"nameLocation": "6920:15:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 147,
										"nodeType": "StructuredDocumentation",
										"src": "6956:60:0",
										"text": " @dev Returns the token collection name."
									},
									"functionSelector": "06fdde03",
									"id": 152,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "7031:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 148,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7035:2:0"
									},
									"returnParameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 152,
												"src": "7061:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 149,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7061:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7060:15:0"
									},
									"scope": 167,
									"src": "7022:54:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 153,
										"nodeType": "StructuredDocumentation",
										"src": "7084:62:0",
										"text": " @dev Returns the token collection symbol."
									},
									"functionSelector": "95d89b41",
									"id": 158,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "7161:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 154,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7167:2:0"
									},
									"returnParameters": {
										"id": 157,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 156,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 158,
												"src": "7193:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 155,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7193:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7192:15:0"
									},
									"scope": 167,
									"src": "7152:56:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 159,
										"nodeType": "StructuredDocumentation",
										"src": "7216:92:0",
										"text": " @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."
									},
									"functionSelector": "c87b56dd",
									"id": 166,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "7323:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 162,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 161,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7340:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "7332:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 160,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7332:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7331:17:0"
									},
									"returnParameters": {
										"id": 165,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 164,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "7372:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 163,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7372:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7371:15:0"
									},
									"scope": 167,
									"src": "7314:73:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2309,
							"src": "6910:480:0",
							"usedErrors": []
						},
						{
							"id": 168,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "7458:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 169,
								"nodeType": "StructuredDocumentation",
								"src": "7485:69:0",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 462,
							"linearizedBaseContracts": [
								462
							],
							"name": "Address",
							"nameLocation": "7564:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 185,
										"nodeType": "Block",
										"src": "8232:356:0",
										"statements": [
											{
												"assignments": [
													178
												],
												"declarations": [
													{
														"constant": false,
														"id": 178,
														"mutability": "mutable",
														"name": "size",
														"nameLocation": "8442:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 185,
														"src": "8434:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 177,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8434:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 179,
												"nodeType": "VariableDeclarationStatement",
												"src": "8434:12:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "8523:32:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8525:28:0",
															"value": {
																"arguments": [
																	{
																		"name": "account",
																		"nodeType": "YulIdentifier",
																		"src": "8545:7:0"
																	}
																],
																"functionName": {
																	"name": "extcodesize",
																	"nodeType": "YulIdentifier",
																	"src": "8533:11:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "8533:20:0"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "8525:4:0"
																}
															]
														}
													]
												},
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 172,
														"isOffset": false,
														"isSlot": false,
														"src": "8545:7:0",
														"valueSize": 1
													},
													{
														"declaration": 178,
														"isOffset": false,
														"isSlot": false,
														"src": "8525:4:0",
														"valueSize": 1
													}
												],
												"id": 180,
												"nodeType": "InlineAssembly",
												"src": "8514:41:0"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 183,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 181,
														"name": "size",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 178,
														"src": "8572:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 182,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8579:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8572:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 176,
												"id": 184,
												"nodeType": "Return",
												"src": "8565:15:0"
											}
										]
									},
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "7579:581:0",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ===="
									},
									"id": 186,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "8175:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8194:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 186,
												"src": "8186:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8186:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8185:17:0"
									},
									"returnParameters": {
										"id": 176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 186,
												"src": "8226:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 174,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8226:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8225:6:0"
									},
									"scope": 462,
									"src": "8166:422:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 219,
										"nodeType": "Block",
										"src": "9594:326:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 201,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 197,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "9621:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$462",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$462",
																				"typeString": "library Address"
																			}
																		],
																		"id": 196,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "9613:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 195,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "9613:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 198,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9613:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 199,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "9627:7:0",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "9613:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 200,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 191,
																"src": "9638:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9613:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 202,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9646:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 194,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9605:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 203,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9605:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 204,
												"nodeType": "ExpressionStatement",
												"src": "9605:73:0"
											},
											{
												"assignments": [
													206,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 206,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "9775:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 219,
														"src": "9770:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 205,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "9770:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 213,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 211,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9820:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 207,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 189,
																"src": "9788:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 208,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9798:4:0",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "9788:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 210,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 209,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 191,
																"src": "9811:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "9788:31:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 212,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9788:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9769:54:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 215,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 206,
															"src": "9842:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 216,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9851:60:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 214,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9834:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 217,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9834:78:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 218,
												"nodeType": "ExpressionStatement",
												"src": "9834:78:0"
											}
										]
									},
									"documentation": {
										"id": 187,
										"nodeType": "StructuredDocumentation",
										"src": "8596:921:0",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 220,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "9532:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 192,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 189,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "9558:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "9542:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 188,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9542:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 191,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "9577:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "9569:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 190,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9569:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9541:43:0"
									},
									"returnParameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9594:0:0"
									},
									"scope": 462,
									"src": "9523:397:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 236,
										"nodeType": "Block",
										"src": "10770:84:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 231,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 223,
															"src": "10799:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 232,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 225,
															"src": "10807:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 233,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10813:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 230,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															237,
															257
														],
														"referencedDeclaration": 257,
														"src": "10786:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 234,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10786:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 229,
												"id": 235,
												"nodeType": "Return",
												"src": "10779:67:0"
											}
										]
									},
									"documentation": {
										"id": 221,
										"nodeType": "StructuredDocumentation",
										"src": "9928:747:0",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain`call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 237,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "10690:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "10711:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "10703:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 222,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10703:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "10732:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "10719:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 224,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "10719:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10702:35:0"
									},
									"returnParameters": {
										"id": 229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 228,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "10756:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 227,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "10756:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10755:14:0"
									},
									"scope": 462,
									"src": "10681:173:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 256,
										"nodeType": "Block",
										"src": "11201:78:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 250,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 240,
															"src": "11241:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 251,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 242,
															"src": "11249:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 252,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11255:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 253,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 244,
															"src": "11258:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 249,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															277,
															327
														],
														"referencedDeclaration": 327,
														"src": "11219:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 254,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11219:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 248,
												"id": 255,
												"nodeType": "Return",
												"src": "11212:59:0"
											}
										]
									},
									"documentation": {
										"id": 238,
										"nodeType": "StructuredDocumentation",
										"src": "10862:216:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 257,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "11093:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 245,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "11114:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "11106:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 239,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11106:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "11135:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "11122:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 241,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11122:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 244,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "11155:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "11141:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 243,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "11141:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11105:63:0"
									},
									"returnParameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "11187:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 246,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11187:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11186:14:0"
									},
									"scope": 462,
									"src": "11084:195:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 276,
										"nodeType": "Block",
										"src": "11767:113:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 270,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 260,
															"src": "11807:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 271,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 262,
															"src": "11815:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 272,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 264,
															"src": "11821:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 273,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11828:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 269,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															277,
															327
														],
														"referencedDeclaration": 327,
														"src": "11785:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 274,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11785:87:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 268,
												"id": 275,
												"nodeType": "Return",
												"src": "11778:94:0"
											}
										]
									},
									"documentation": {
										"id": 258,
										"nodeType": "StructuredDocumentation",
										"src": "11287:361:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 277,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "11663:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 260,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "11693:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 277,
												"src": "11685:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 259,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11685:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "11714:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 277,
												"src": "11701:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 261,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11701:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11728:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 277,
												"src": "11720:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 263,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11720:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11684:50:0"
									},
									"returnParameters": {
										"id": 268,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 267,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 277,
												"src": "11753:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 266,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11753:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11752:14:0"
									},
									"scope": 462,
									"src": "11654:226:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 326,
										"nodeType": "Block",
										"src": "12277:389:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 298,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 294,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "12304:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$462",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$462",
																				"typeString": "library Address"
																			}
																		],
																		"id": 293,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "12296:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 292,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "12296:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 295,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "12296:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 296,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "12310:7:0",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "12296:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 297,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 284,
																"src": "12321:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "12296:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 299,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12328:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 291,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12288:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 300,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12288:81:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 301,
												"nodeType": "ExpressionStatement",
												"src": "12288:81:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 304,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 280,
																	"src": "12399:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 303,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 186,
																"src": "12388:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 305,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12388:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 306,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12408:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 302,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12380:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 307,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12380:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 308,
												"nodeType": "ExpressionStatement",
												"src": "12380:60:0"
											},
											{
												"assignments": [
													310,
													312
												],
												"declarations": [
													{
														"constant": false,
														"id": 310,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "12519:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 326,
														"src": "12514:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 309,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "12514:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 312,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "12541:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 326,
														"src": "12528:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 311,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "12528:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 319,
												"initialValue": {
													"arguments": [
														{
															"id": 317,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 282,
															"src": "12583:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 313,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 280,
																"src": "12555:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 314,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "12562:4:0",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "12555:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 316,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 315,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 284,
																"src": "12575:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "12555:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 318,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12555:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12513:75:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 321,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 310,
															"src": "12624:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 322,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 312,
															"src": "12633:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 323,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 286,
															"src": "12645:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 320,
														"name": "_verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 461,
														"src": "12606:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 324,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12606:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 290,
												"id": 325,
												"nodeType": "Return",
												"src": "12599:59:0"
											}
										]
									},
									"documentation": {
										"id": 278,
										"nodeType": "StructuredDocumentation",
										"src": "11888:242:0",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 327,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "12145:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 287,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 280,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "12175:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "12167:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 279,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12167:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 282,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "12196:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "12183:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 281,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "12183:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 284,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12210:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "12202:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 283,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12202:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 286,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "12231:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "12217:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 285,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "12217:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12166:78:0"
									},
									"returnParameters": {
										"id": 290,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 289,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "12263:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 288,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "12263:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12262:14:0"
									},
									"scope": 462,
									"src": "12136:530:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 343,
										"nodeType": "Block",
										"src": "12951:99:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 338,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 330,
															"src": "12988:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 339,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 332,
															"src": "12996:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 340,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13002:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 337,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															344,
															379
														],
														"referencedDeclaration": 379,
														"src": "12969:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 341,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12969:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 336,
												"id": 342,
												"nodeType": "Return",
												"src": "12962:80:0"
											}
										]
									},
									"documentation": {
										"id": 328,
										"nodeType": "StructuredDocumentation",
										"src": "12674:171:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 344,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "12860:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 333,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 330,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "12887:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 344,
												"src": "12879:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 329,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12879:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 332,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "12908:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 344,
												"src": "12895:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 331,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "12895:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12878:35:0"
									},
									"returnParameters": {
										"id": 336,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 335,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 344,
												"src": "12937:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 334,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "12937:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12936:14:0"
									},
									"scope": 462,
									"src": "12851:199:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 378,
										"nodeType": "Block",
										"src": "13370:294:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 358,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 347,
																	"src": "13400:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 357,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 186,
																"src": "13389:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 359,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13389:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 360,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13409:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 356,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "13381:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 361,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13381:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 362,
												"nodeType": "ExpressionStatement",
												"src": "13381:67:0"
											},
											{
												"assignments": [
													364,
													366
												],
												"declarations": [
													{
														"constant": false,
														"id": 364,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "13527:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 378,
														"src": "13522:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 363,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "13522:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 366,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "13549:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 378,
														"src": "13536:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 365,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "13536:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 371,
												"initialValue": {
													"arguments": [
														{
															"id": 369,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 349,
															"src": "13581:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 367,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 347,
															"src": "13563:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 368,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "13570:10:0",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "13563:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 370,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13563:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13521:65:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 373,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 364,
															"src": "13622:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 374,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 366,
															"src": "13631:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 375,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 351,
															"src": "13643:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 372,
														"name": "_verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 461,
														"src": "13604:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 376,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13604:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 355,
												"id": 377,
												"nodeType": "Return",
												"src": "13597:59:0"
											}
										]
									},
									"documentation": {
										"id": 345,
										"nodeType": "StructuredDocumentation",
										"src": "13058:178:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 379,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "13251:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 352,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 347,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "13278:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 379,
												"src": "13270:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 346,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13270:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "13299:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 379,
												"src": "13286:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 348,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "13286:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 351,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "13319:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 379,
												"src": "13305:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 350,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "13305:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13269:63:0"
									},
									"returnParameters": {
										"id": 355,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 354,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 379,
												"src": "13356:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 353,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "13356:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13355:14:0"
									},
									"scope": 462,
									"src": "13242:422:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 395,
										"nodeType": "Block",
										"src": "13948:103:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 390,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 382,
															"src": "13987:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 391,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 384,
															"src": "13995:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 392,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14001:41:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 389,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															396,
															431
														],
														"referencedDeclaration": 431,
														"src": "13966:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 393,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13966:77:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 388,
												"id": 394,
												"nodeType": "Return",
												"src": "13959:84:0"
											}
										]
									},
									"documentation": {
										"id": 380,
										"nodeType": "StructuredDocumentation",
										"src": "13672:173:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 396,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "13860:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 385,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 382,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "13889:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 396,
												"src": "13881:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 381,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13881:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "13910:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 396,
												"src": "13897:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 383,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "13897:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13880:35:0"
									},
									"returnParameters": {
										"id": 388,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 387,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 396,
												"src": "13934:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 386,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "13934:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13933:14:0"
									},
									"scope": 462,
									"src": "13851:200:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 430,
										"nodeType": "Block",
										"src": "14370:298:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 410,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 399,
																	"src": "14400:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 409,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 186,
																"src": "14389:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 411,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14389:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 412,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14409:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															},
															"value": "Address: delegate call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															}
														],
														"id": 408,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "14381:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 413,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14381:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 414,
												"nodeType": "ExpressionStatement",
												"src": "14381:69:0"
											},
											{
												"assignments": [
													416,
													418
												],
												"declarations": [
													{
														"constant": false,
														"id": 416,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "14529:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 430,
														"src": "14524:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 415,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "14524:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 418,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "14551:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 430,
														"src": "14538:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 417,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "14538:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 423,
												"initialValue": {
													"arguments": [
														{
															"id": 421,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 401,
															"src": "14585:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 419,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 399,
															"src": "14565:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 420,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "14572:12:0",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "14565:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 422,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14565:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14523:67:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 425,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 416,
															"src": "14626:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 426,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 418,
															"src": "14635:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 427,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 403,
															"src": "14647:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 424,
														"name": "_verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 461,
														"src": "14608:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 428,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14608:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 407,
												"id": 429,
												"nodeType": "Return",
												"src": "14601:59:0"
											}
										]
									},
									"documentation": {
										"id": 397,
										"nodeType": "StructuredDocumentation",
										"src": "14059:180:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 431,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "14254:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 404,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 399,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "14283:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 431,
												"src": "14275:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 398,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14275:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 401,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "14304:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 431,
												"src": "14291:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 400,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "14291:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 403,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "14324:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 431,
												"src": "14310:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 402,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "14310:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14274:63:0"
									},
									"returnParameters": {
										"id": 407,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 406,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 431,
												"src": "14356:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 405,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "14356:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14355:14:0"
									},
									"scope": 462,
									"src": "14245:423:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 460,
										"nodeType": "Block",
										"src": "14805:613:0",
										"statements": [
											{
												"condition": {
													"id": 442,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 433,
													"src": "14820:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 458,
													"nodeType": "Block",
													"src": "14879:532:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 449,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 446,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 435,
																		"src": "14965:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 447,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "14976:6:0",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "14965:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 448,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14985:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "14965:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 456,
																"nodeType": "Block",
																"src": "15345:55:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 453,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 437,
																					"src": "15371:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 452,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "15364:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 454,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15364:20:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 455,
																		"nodeType": "ExpressionStatement",
																		"src": "15364:20:0"
																	}
																]
															},
															"id": 457,
															"nodeType": "IfStatement",
															"src": "14961:439:0",
															"trueBody": {
																"id": 451,
																"nodeType": "Block",
																"src": "14988:351:0",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "15176:148:0",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "15199:40:0",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "15228:10:0"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "15222:5:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "15222:17:0"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "15203:15:0",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "15272:2:0",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "15276:10:0"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "15268:3:0"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "15268:19:0"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "15289:15:0"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "15261:6:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "15261:44:0"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "15261:44:0"
																				}
																			]
																		},
																		"evmVersion": "paris",
																		"externalReferences": [
																			{
																				"declaration": 435,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "15228:10:0",
																				"valueSize": 1
																			},
																			{
																				"declaration": 435,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "15276:10:0",
																				"valueSize": 1
																			}
																		],
																		"id": 450,
																		"nodeType": "InlineAssembly",
																		"src": "15167:157:0"
																	}
																]
															}
														}
													]
												},
												"id": 459,
												"nodeType": "IfStatement",
												"src": "14816:595:0",
												"trueBody": {
													"id": 445,
													"nodeType": "Block",
													"src": "14829:44:0",
													"statements": [
														{
															"expression": {
																"id": 443,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 435,
																"src": "14851:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 441,
															"id": 444,
															"nodeType": "Return",
															"src": "14844:17:0"
														}
													]
												}
											}
										]
									},
									"id": 461,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_verifyCallResult",
									"nameLocation": "14685:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 438,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 433,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "14708:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 461,
												"src": "14703:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 432,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14703:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 435,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "14730:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 461,
												"src": "14717:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 434,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "14717:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 437,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "14756:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 461,
												"src": "14742:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 436,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "14742:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14702:67:0"
									},
									"returnParameters": {
										"id": 441,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 440,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 461,
												"src": "14791:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 439,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "14791:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14790:14:0"
									},
									"scope": 462,
									"src": "14676:742:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 2309,
							"src": "7556:7865:0",
							"usedErrors": []
						},
						{
							"id": 463,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "15489:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 484,
							"linearizedBaseContracts": [
								484
							],
							"name": "Context",
							"nameLocation": "16040:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 471,
										"nodeType": "Block",
										"src": "16117:36:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 468,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "16135:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 469,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "16139:6:0",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "16135:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 467,
												"id": 470,
												"nodeType": "Return",
												"src": "16128:17:0"
											}
										]
									},
									"id": 472,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "16064:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16074:2:0"
									},
									"returnParameters": {
										"id": 467,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 466,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 472,
												"src": "16108:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 465,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16108:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16107:9:0"
									},
									"scope": 484,
									"src": "16055:98:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 482,
										"nodeType": "Block",
										"src": "16228:168:0",
										"statements": [
											{
												"expression": {
													"id": 477,
													"name": "this",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 4294967268,
													"src": "16239:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Context_$484",
														"typeString": "contract Context"
													}
												},
												"id": 478,
												"nodeType": "ExpressionStatement",
												"src": "16239:4:0"
											},
											{
												"expression": {
													"expression": {
														"id": 479,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "16380:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 480,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "16384:4:0",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "16380:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 476,
												"id": 481,
												"nodeType": "Return",
												"src": "16373:15:0"
											}
										]
									},
									"id": 483,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "16170:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 473,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16178:2:0"
									},
									"returnParameters": {
										"id": 476,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 475,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 483,
												"src": "16212:14:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 474,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16212:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16211:16:0"
									},
									"scope": 484,
									"src": "16161:235:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 2309,
							"src": "16022:377:0",
							"usedErrors": []
						},
						{
							"id": 485,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "16467:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Strings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 486,
								"nodeType": "StructuredDocumentation",
								"src": "16494:36:0",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 686,
							"linearizedBaseContracts": [
								686
							],
							"name": "Strings",
							"nameLocation": "16540:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 489,
									"mutability": "constant",
									"name": "alphabet",
									"nameLocation": "16580:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 686,
									"src": "16555:54:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 487,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "16555:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 488,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "16591:18:0",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 567,
										"nodeType": "Block",
										"src": "16787:652:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 499,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 497,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 492,
														"src": "16993:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 498,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "17002:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "16993:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 503,
												"nodeType": "IfStatement",
												"src": "16989:53:0",
												"trueBody": {
													"id": 502,
													"nodeType": "Block",
													"src": "17005:37:0",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 500,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "17027:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
																	"typeString": "literal_string \"0\""
																},
																"value": "0"
															},
															"functionReturnParameters": 496,
															"id": 501,
															"nodeType": "Return",
															"src": "17020:10:0"
														}
													]
												}
											},
											{
												"assignments": [
													505
												],
												"declarations": [
													{
														"constant": false,
														"id": 505,
														"mutability": "mutable",
														"name": "temp",
														"nameLocation": "17060:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 567,
														"src": "17052:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 504,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "17052:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 507,
												"initialValue": {
													"id": 506,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 492,
													"src": "17067:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "17052:20:0"
											},
											{
												"assignments": [
													509
												],
												"declarations": [
													{
														"constant": false,
														"id": 509,
														"mutability": "mutable",
														"name": "digits",
														"nameLocation": "17091:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 567,
														"src": "17083:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 508,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "17083:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 510,
												"nodeType": "VariableDeclarationStatement",
												"src": "17083:14:0"
											},
											{
												"body": {
													"id": 521,
													"nodeType": "Block",
													"src": "17126:60:0",
													"statements": [
														{
															"expression": {
																"id": 515,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "17141:8:0",
																"subExpression": {
																	"id": 514,
																	"name": "digits",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 509,
																	"src": "17141:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 516,
															"nodeType": "ExpressionStatement",
															"src": "17141:8:0"
														},
														{
															"expression": {
																"id": 519,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 517,
																	"name": "temp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 505,
																	"src": "17164:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "/=",
																"rightHandSide": {
																	"hexValue": "3130",
																	"id": 518,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "17172:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"src": "17164:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 520,
															"nodeType": "ExpressionStatement",
															"src": "17164:10:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 513,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 511,
														"name": "temp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 505,
														"src": "17115:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 512,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "17123:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "17115:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 522,
												"nodeType": "WhileStatement",
												"src": "17108:78:0"
											},
											{
												"assignments": [
													524
												],
												"declarations": [
													{
														"constant": false,
														"id": 524,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "17209:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 567,
														"src": "17196:19:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 523,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "17196:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 529,
												"initialValue": {
													"arguments": [
														{
															"id": 527,
															"name": "digits",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 509,
															"src": "17228:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 526,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "17218:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 525,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "17222:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 528,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17218:17:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "17196:39:0"
											},
											{
												"body": {
													"id": 560,
													"nodeType": "Block",
													"src": "17265:135:0",
													"statements": [
														{
															"expression": {
																"id": 535,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 533,
																	"name": "digits",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 509,
																	"src": "17280:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 534,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "17290:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "17280:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 536,
															"nodeType": "ExpressionStatement",
															"src": "17280:11:0"
														},
														{
															"expression": {
																"id": 554,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 537,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 524,
																		"src": "17306:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 539,
																	"indexExpression": {
																		"id": 538,
																		"name": "digits",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 509,
																		"src": "17313:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "17306:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 551,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3438",
																						"id": 544,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "17336:2:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_48_by_1",
																							"typeString": "int_const 48"
																						},
																						"value": "48"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "+",
																					"rightExpression": {
																						"arguments": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 549,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 547,
																									"name": "value",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 492,
																									"src": "17349:5:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "%",
																								"rightExpression": {
																									"hexValue": "3130",
																									"id": 548,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "17357:2:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_10_by_1",
																										"typeString": "int_const 10"
																									},
																									"value": "10"
																								},
																								"src": "17349:10:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"id": 546,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "17341:7:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_uint256_$",
																								"typeString": "type(uint256)"
																							},
																							"typeName": {
																								"id": 545,
																								"name": "uint256",
																								"nodeType": "ElementaryTypeName",
																								"src": "17341:7:0",
																								"typeDescriptions": {}
																							}
																						},
																						"id": 550,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "17341:19:0",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "17336:24:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 543,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "17330:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint8_$",
																					"typeString": "type(uint8)"
																				},
																				"typeName": {
																					"id": 542,
																					"name": "uint8",
																					"nodeType": "ElementaryTypeName",
																					"src": "17330:5:0",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 552,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "17330:31:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		],
																		"id": 541,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "17323:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes1_$",
																			"typeString": "type(bytes1)"
																		},
																		"typeName": {
																			"id": 540,
																			"name": "bytes1",
																			"nodeType": "ElementaryTypeName",
																			"src": "17323:6:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 553,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "17323:39:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "17306:56:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 555,
															"nodeType": "ExpressionStatement",
															"src": "17306:56:0"
														},
														{
															"expression": {
																"id": 558,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 556,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 492,
																	"src": "17377:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "/=",
																"rightHandSide": {
																	"hexValue": "3130",
																	"id": 557,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "17386:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"src": "17377:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 559,
															"nodeType": "ExpressionStatement",
															"src": "17377:11:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 532,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 530,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 492,
														"src": "17253:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 531,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "17262:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "17253:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 561,
												"nodeType": "WhileStatement",
												"src": "17246:154:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 564,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 524,
															"src": "17424:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 563,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "17417:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 562,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "17417:6:0",
															"typeDescriptions": {}
														}
													},
													"id": 565,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17417:14:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 496,
												"id": 566,
												"nodeType": "Return",
												"src": "17410:21:0"
											}
										]
									},
									"documentation": {
										"id": 490,
										"nodeType": "StructuredDocumentation",
										"src": "16618:92:0",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 568,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "16725:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 493,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 492,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "16742:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 568,
												"src": "16734:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 491,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16734:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16733:15:0"
									},
									"returnParameters": {
										"id": 496,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 495,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 568,
												"src": "16772:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 494,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "16772:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16771:15:0"
									},
									"scope": 686,
									"src": "16716:723:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 608,
										"nodeType": "Block",
										"src": "17623:266:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 578,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 576,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 571,
														"src": "17638:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 577,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "17647:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "17638:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 582,
												"nodeType": "IfStatement",
												"src": "17634:56:0",
												"trueBody": {
													"id": 581,
													"nodeType": "Block",
													"src": "17650:40:0",
													"statements": [
														{
															"expression": {
																"hexValue": "30783030",
																"id": 579,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "17672:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_27489e20a0060b723a1748bdff5e44570ee9fae64141728105692eac6031e8a4",
																	"typeString": "literal_string \"0x00\""
																},
																"value": "0x00"
															},
															"functionReturnParameters": 575,
															"id": 580,
															"nodeType": "Return",
															"src": "17665:13:0"
														}
													]
												}
											},
											{
												"assignments": [
													584
												],
												"declarations": [
													{
														"constant": false,
														"id": 584,
														"mutability": "mutable",
														"name": "temp",
														"nameLocation": "17708:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 608,
														"src": "17700:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 583,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "17700:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 586,
												"initialValue": {
													"id": 585,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 571,
													"src": "17715:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "17700:20:0"
											},
											{
												"assignments": [
													588
												],
												"declarations": [
													{
														"constant": false,
														"id": 588,
														"mutability": "mutable",
														"name": "length",
														"nameLocation": "17739:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 608,
														"src": "17731:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 587,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "17731:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 590,
												"initialValue": {
													"hexValue": "30",
													"id": 589,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "17748:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "17731:18:0"
											},
											{
												"body": {
													"id": 601,
													"nodeType": "Block",
													"src": "17778:60:0",
													"statements": [
														{
															"expression": {
																"id": 595,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "17793:8:0",
																"subExpression": {
																	"id": 594,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 588,
																	"src": "17793:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 596,
															"nodeType": "ExpressionStatement",
															"src": "17793:8:0"
														},
														{
															"expression": {
																"id": 599,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 597,
																	"name": "temp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 584,
																	"src": "17816:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "38",
																	"id": 598,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "17825:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "17816:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 600,
															"nodeType": "ExpressionStatement",
															"src": "17816:10:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 593,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 591,
														"name": "temp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 584,
														"src": "17767:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 592,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "17775:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "17767:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 602,
												"nodeType": "WhileStatement",
												"src": "17760:78:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 604,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 571,
															"src": "17867:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 605,
															"name": "length",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 588,
															"src": "17874:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 603,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															609,
															685
														],
														"referencedDeclaration": 685,
														"src": "17855:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 606,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17855:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 575,
												"id": 607,
												"nodeType": "Return",
												"src": "17848:33:0"
											}
										]
									},
									"documentation": {
										"id": 569,
										"nodeType": "StructuredDocumentation",
										"src": "17447:96:0",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 609,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "17558:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 572,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 571,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "17578:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 609,
												"src": "17570:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 570,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17570:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17569:15:0"
									},
									"returnParameters": {
										"id": 575,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 574,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 609,
												"src": "17608:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 573,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "17608:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17607:15:0"
									},
									"scope": 686,
									"src": "17549:340:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 684,
										"nodeType": "Block",
										"src": "18107:357:0",
										"statements": [
											{
												"assignments": [
													620
												],
												"declarations": [
													{
														"constant": false,
														"id": 620,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "18131:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 684,
														"src": "18118:19:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 619,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "18118:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 629,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 627,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 625,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 623,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "18150:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 624,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 614,
																	"src": "18154:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "18150:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 626,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "18163:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "18150:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 622,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "18140:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 621,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "18144:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 628,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18140:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "18118:47:0"
											},
											{
												"expression": {
													"id": 634,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 630,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 620,
															"src": "18176:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 632,
														"indexExpression": {
															"hexValue": "30",
															"id": 631,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "18183:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "18176:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 633,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "18188:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "18176:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 635,
												"nodeType": "ExpressionStatement",
												"src": "18176:15:0"
											},
											{
												"expression": {
													"id": 640,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 636,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 620,
															"src": "18202:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 638,
														"indexExpression": {
															"hexValue": "31",
															"id": 637,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "18209:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "18202:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 639,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "18214:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "18202:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 641,
												"nodeType": "ExpressionStatement",
												"src": "18202:15:0"
											},
											{
												"body": {
													"id": 670,
													"nodeType": "Block",
													"src": "18273:86:0",
													"statements": [
														{
															"expression": {
																"id": 664,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 656,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 620,
																		"src": "18288:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 658,
																	"indexExpression": {
																		"id": 657,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 643,
																		"src": "18295:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "18288:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 659,
																		"name": "alphabet",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 489,
																		"src": "18300:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 663,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 662,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 660,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 612,
																			"src": "18309:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 661,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "18317:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "18309:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "18300:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "18288:33:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 665,
															"nodeType": "ExpressionStatement",
															"src": "18288:33:0"
														},
														{
															"expression": {
																"id": 668,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 666,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 612,
																	"src": "18336:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 667,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "18346:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "18336:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 669,
															"nodeType": "ExpressionStatement",
															"src": "18336:11:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 652,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 650,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 643,
														"src": "18261:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 651,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "18265:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "18261:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 671,
												"initializationExpression": {
													"assignments": [
														643
													],
													"declarations": [
														{
															"constant": false,
															"id": 643,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "18241:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 671,
															"src": "18233:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 642,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "18233:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 649,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 648,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 646,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 644,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "18245:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 645,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 614,
																"src": "18249:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "18245:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 647,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "18258:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "18245:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "18233:26:0"
												},
												"loopExpression": {
													"expression": {
														"id": 654,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "18268:3:0",
														"subExpression": {
															"id": 653,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 643,
															"src": "18270:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 655,
													"nodeType": "ExpressionStatement",
													"src": "18268:3:0"
												},
												"nodeType": "ForStatement",
												"src": "18228:131:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 675,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 673,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 612,
																"src": "18377:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 674,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "18386:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "18377:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "537472696e67733a20686578206c656e67746820696e73756666696369656e74",
															"id": 676,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "18389:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															},
															"value": "Strings: hex length insufficient"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															}
														],
														"id": 672,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "18369:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 677,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18369:55:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 678,
												"nodeType": "ExpressionStatement",
												"src": "18369:55:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 681,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 620,
															"src": "18449:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 680,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "18442:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 679,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "18442:6:0",
															"typeDescriptions": {}
														}
													},
													"id": 682,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18442:14:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 618,
												"id": 683,
												"nodeType": "Return",
												"src": "18435:21:0"
											}
										]
									},
									"documentation": {
										"id": 610,
										"nodeType": "StructuredDocumentation",
										"src": "17897:114:0",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 685,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "18026:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 615,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 612,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "18046:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 685,
												"src": "18038:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 611,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18038:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 614,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "18061:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 685,
												"src": "18053:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 613,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18053:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18037:31:0"
									},
									"returnParameters": {
										"id": 618,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 617,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 685,
												"src": "18092:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 616,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "18092:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18091:15:0"
									},
									"scope": 686,
									"src": "18017:447:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2309,
							"src": "16532:1937:0",
							"usedErrors": []
						},
						{
							"id": 687,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "18550:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 689,
										"name": "IERC165",
										"nameLocations": [
											"19196:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 11,
										"src": "19196:7:0"
									},
									"id": 690,
									"nodeType": "InheritanceSpecifier",
									"src": "19196:7:0"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 688,
								"nodeType": "StructuredDocumentation",
								"src": "18577:589:0",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."
							},
							"fullyImplemented": true,
							"id": 708,
							"linearizedBaseContracts": [
								708,
								11
							],
							"name": "ERC165",
							"nameLocation": "19186:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										10
									],
									"body": {
										"id": 706,
										"nodeType": "Block",
										"src": "19366:66:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 704,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 699,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 693,
														"src": "19384:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 701,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 11,
																	"src": "19404:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$11_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$11_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 700,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "19399:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 702,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "19399:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$11",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 703,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "19413:11:0",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "19399:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "19384:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 698,
												"id": 705,
												"nodeType": "Return",
												"src": "19377:47:0"
											}
										]
									},
									"documentation": {
										"id": 691,
										"nodeType": "StructuredDocumentation",
										"src": "19211:58:0",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 707,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "19284:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 695,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "19342:8:0"
									},
									"parameters": {
										"id": 694,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 693,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "19309:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 707,
												"src": "19302:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 692,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "19302:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19301:20:0"
									},
									"returnParameters": {
										"id": 698,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 697,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 707,
												"src": "19360:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 696,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "19360:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19359:6:0"
									},
									"scope": 708,
									"src": "19275:157:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 2309,
							"src": "19168:267:0",
							"usedErrors": []
						},
						{
							"id": 709,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "19509:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 711,
										"name": "Context",
										"nameLocations": [
											"19819:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 484,
										"src": "19819:7:0"
									},
									"id": 712,
									"nodeType": "InheritanceSpecifier",
									"src": "19819:7:0"
								},
								{
									"baseName": {
										"id": 713,
										"name": "ERC165",
										"nameLocations": [
											"19828:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 708,
										"src": "19828:6:0"
									},
									"id": 714,
									"nodeType": "InheritanceSpecifier",
									"src": "19828:6:0"
								},
								{
									"baseName": {
										"id": 715,
										"name": "IERC721",
										"nameLocations": [
											"19836:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 125,
										"src": "19836:7:0"
									},
									"id": 716,
									"nodeType": "InheritanceSpecifier",
									"src": "19836:7:0"
								},
								{
									"baseName": {
										"id": 717,
										"name": "IERC721Metadata",
										"nameLocations": [
											"19845:15:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 167,
										"src": "19845:15:0"
									},
									"id": 718,
									"nodeType": "InheritanceSpecifier",
									"src": "19845:15:0"
								}
							],
							"canonicalName": "ERC721",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 710,
								"nodeType": "StructuredDocumentation",
								"src": "19548:250:0",
								"text": " @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n the Metadata extension, but not including the Enumerable extension, which is available separately as\n {ERC721Enumerable}."
							},
							"fullyImplemented": true,
							"id": 1518,
							"linearizedBaseContracts": [
								1518,
								167,
								125,
								708,
								11,
								484
							],
							"name": "ERC721",
							"nameLocation": "19809:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 721,
									"libraryName": {
										"id": 719,
										"name": "Address",
										"nameLocations": [
											"19874:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 462,
										"src": "19874:7:0"
									},
									"nodeType": "UsingForDirective",
									"src": "19868:26:0",
									"typeName": {
										"id": 720,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "19886:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"global": false,
									"id": 724,
									"libraryName": {
										"id": 722,
										"name": "Strings",
										"nameLocations": [
											"19906:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 686,
										"src": "19906:7:0"
									},
									"nodeType": "UsingForDirective",
									"src": "19900:26:0",
									"typeName": {
										"id": 723,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "19918:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 726,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "19968:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 1518,
									"src": "19953:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 725,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "19953:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 728,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "20018:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 1518,
									"src": "20003:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 727,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "20003:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 732,
									"mutability": "mutable",
									"name": "_owners",
									"nameLocation": "20118:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 1518,
									"src": "20081:44:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 731,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 729,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "20090:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "20081:28:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 730,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "20101:7:0",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 736,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "20216:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 1518,
									"src": "20179:46:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 735,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 733,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "20188:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "20179:28:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 734,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "20199:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 740,
									"mutability": "mutable",
									"name": "_tokenApprovals",
									"nameLocation": "20321:15:0",
									"nodeType": "VariableDeclaration",
									"scope": 1518,
									"src": "20284:52:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 739,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 737,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "20293:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "20284:28:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 738,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "20304:7:0",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 746,
									"mutability": "mutable",
									"name": "_operatorApprovals",
									"nameLocation": "20449:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 1518,
									"src": "20394:73:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 745,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 741,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "20403:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "20394:46:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 744,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 742,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "20423:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "20414:25:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 743,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "20434:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 762,
										"nodeType": "Block",
										"src": "20649:60:0",
										"statements": [
											{
												"expression": {
													"id": 756,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 754,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 726,
														"src": "20660:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 755,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 749,
														"src": "20668:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "20660:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 757,
												"nodeType": "ExpressionStatement",
												"src": "20660:13:0"
											},
											{
												"expression": {
													"id": 760,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 758,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 728,
														"src": "20684:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 759,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 751,
														"src": "20694:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "20684:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 761,
												"nodeType": "ExpressionStatement",
												"src": "20684:17:0"
											}
										]
									},
									"documentation": {
										"id": 747,
										"nodeType": "StructuredDocumentation",
										"src": "20476:110:0",
										"text": " @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."
									},
									"id": 763,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 752,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 749,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "20619:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 763,
												"src": "20605:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 748,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "20605:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 751,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "20640:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 763,
												"src": "20626:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 750,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "20626:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20604:44:0"
									},
									"returnParameters": {
										"id": 753,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20649:0:0"
									},
									"scope": 1518,
									"src": "20592:117:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										10,
										707
									],
									"body": {
										"id": 793,
										"nodeType": "Block",
										"src": "20889:184:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 791,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 786,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 779,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 774,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 766,
																"src": "20907:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 776,
																			"name": "IERC721",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 125,
																			"src": "20927:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$125_$",
																				"typeString": "type(contract IERC721)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$125_$",
																				"typeString": "type(contract IERC721)"
																			}
																		],
																		"id": 775,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "20922:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 777,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "20922:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721_$125",
																		"typeString": "type(contract IERC721)"
																	}
																},
																"id": 778,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "20936:11:0",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "20922:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "20907:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 785,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 780,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 766,
																"src": "20964:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 782,
																			"name": "IERC721Metadata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 167,
																			"src": "20984:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$167_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$167_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		],
																		"id": 781,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "20979:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 783,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "20979:21:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721Metadata_$167",
																		"typeString": "type(contract IERC721Metadata)"
																	}
																},
																"id": 784,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "21001:11:0",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "20979:33:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "20964:48:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "20907:105:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 789,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 766,
																"src": "21053:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 787,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "21029:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC721_$1518_$",
																	"typeString": "type(contract super ERC721)"
																}
															},
															"id": 788,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "21035:17:0",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 707,
															"src": "21029:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 790,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "21029:36:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "20907:158:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 773,
												"id": 792,
												"nodeType": "Return",
												"src": "20900:165:0"
											}
										]
									},
									"documentation": {
										"id": 764,
										"nodeType": "StructuredDocumentation",
										"src": "20717:58:0",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 794,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "20790:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 770,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 768,
												"name": "ERC165",
												"nameLocations": [
													"20857:6:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 708,
												"src": "20857:6:0"
											},
											{
												"id": 769,
												"name": "IERC165",
												"nameLocations": [
													"20865:7:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 11,
												"src": "20865:7:0"
											}
										],
										"src": "20848:25:0"
									},
									"parameters": {
										"id": 767,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 766,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "20815:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 794,
												"src": "20808:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 765,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "20808:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20807:20:0"
									},
									"returnParameters": {
										"id": 773,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 772,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 794,
												"src": "20883:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 771,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "20883:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20882:6:0"
									},
									"scope": 1518,
									"src": "20781:292:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										50
									],
									"body": {
										"id": 817,
										"nodeType": "Block",
										"src": "21218:127:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 809,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 804,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 797,
																"src": "21237:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 807,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "21254:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 806,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "21246:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 805,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "21246:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 808,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "21246:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "21237:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a2062616c616e636520717565727920666f7220746865207a65726f2061646472657373",
															"id": 810,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "21258:44:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba",
																"typeString": "literal_string \"ERC721: balance query for the zero address\""
															},
															"value": "ERC721: balance query for the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba",
																"typeString": "literal_string \"ERC721: balance query for the zero address\""
															}
														],
														"id": 803,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "21229:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 811,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21229:74:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 812,
												"nodeType": "ExpressionStatement",
												"src": "21229:74:0"
											},
											{
												"expression": {
													"baseExpression": {
														"id": 813,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 736,
														"src": "21321:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 815,
													"indexExpression": {
														"id": 814,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 797,
														"src": "21331:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "21321:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 802,
												"id": 816,
												"nodeType": "Return",
												"src": "21314:23:0"
											}
										]
									},
									"documentation": {
										"id": 795,
										"nodeType": "StructuredDocumentation",
										"src": "21081:50:0",
										"text": " @dev See {IERC721-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 818,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "21146:9:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 799,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "21191:8:0"
									},
									"parameters": {
										"id": 798,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 797,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "21164:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 818,
												"src": "21156:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 796,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21156:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21155:15:0"
									},
									"returnParameters": {
										"id": 802,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 801,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 818,
												"src": "21209:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 800,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21209:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21208:9:0"
									},
									"scope": 1518,
									"src": "21137:208:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										58
									],
									"body": {
										"id": 845,
										"nodeType": "Block",
										"src": "21488:158:0",
										"statements": [
											{
												"assignments": [
													828
												],
												"declarations": [
													{
														"constant": false,
														"id": 828,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "21507:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 845,
														"src": "21499:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 827,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "21499:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 832,
												"initialValue": {
													"baseExpression": {
														"id": 829,
														"name": "_owners",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 732,
														"src": "21515:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 831,
													"indexExpression": {
														"id": 830,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 821,
														"src": "21523:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "21515:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "21499:32:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 839,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 834,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 828,
																"src": "21550:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 837,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "21567:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 836,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "21559:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 835,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "21559:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 838,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "21559:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "21550:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a206f776e657220717565727920666f72206e6f6e6578697374656e7420746f6b656e",
															"id": 840,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "21571:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397",
																"typeString": "literal_string \"ERC721: owner query for nonexistent token\""
															},
															"value": "ERC721: owner query for nonexistent token"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397",
																"typeString": "literal_string \"ERC721: owner query for nonexistent token\""
															}
														],
														"id": 833,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "21542:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 841,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21542:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 842,
												"nodeType": "ExpressionStatement",
												"src": "21542:73:0"
											},
											{
												"expression": {
													"id": 843,
													"name": "owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 828,
													"src": "21633:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 826,
												"id": 844,
												"nodeType": "Return",
												"src": "21626:12:0"
											}
										]
									},
									"documentation": {
										"id": 819,
										"nodeType": "StructuredDocumentation",
										"src": "21353:48:0",
										"text": " @dev See {IERC721-ownerOf}."
									},
									"functionSelector": "6352211e",
									"id": 846,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "21416:7:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 823,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "21461:8:0"
									},
									"parameters": {
										"id": 822,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 821,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "21432:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 846,
												"src": "21424:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 820,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21424:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21423:17:0"
									},
									"returnParameters": {
										"id": 826,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 825,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 846,
												"src": "21479:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 824,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21479:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21478:9:0"
									},
									"scope": 1518,
									"src": "21407:239:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										152
									],
									"body": {
										"id": 855,
										"nodeType": "Block",
										"src": "21782:31:0",
										"statements": [
											{
												"expression": {
													"id": 853,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 726,
													"src": "21800:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 852,
												"id": 854,
												"nodeType": "Return",
												"src": "21793:12:0"
											}
										]
									},
									"documentation": {
										"id": 847,
										"nodeType": "StructuredDocumentation",
										"src": "21654:53:0",
										"text": " @dev See {IERC721Metadata-name}."
									},
									"functionSelector": "06fdde03",
									"id": 856,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "21722:4:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 849,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "21749:8:0"
									},
									"parameters": {
										"id": 848,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "21726:2:0"
									},
									"returnParameters": {
										"id": 852,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 851,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 856,
												"src": "21767:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 850,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "21767:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21766:15:0"
									},
									"scope": 1518,
									"src": "21713:100:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										158
									],
									"body": {
										"id": 865,
										"nodeType": "Block",
										"src": "21953:33:0",
										"statements": [
											{
												"expression": {
													"id": 863,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 728,
													"src": "21971:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 862,
												"id": 864,
												"nodeType": "Return",
												"src": "21964:14:0"
											}
										]
									},
									"documentation": {
										"id": 857,
										"nodeType": "StructuredDocumentation",
										"src": "21821:55:0",
										"text": " @dev See {IERC721Metadata-symbol}."
									},
									"functionSelector": "95d89b41",
									"id": 866,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "21891:6:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 859,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "21920:8:0"
									},
									"parameters": {
										"id": 858,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "21897:2:0"
									},
									"returnParameters": {
										"id": 862,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 861,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 866,
												"src": "21938:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 860,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "21938:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21937:15:0"
									},
									"scope": 1518,
									"src": "21882:104:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										166
									],
									"body": {
										"id": 907,
										"nodeType": "Block",
										"src": "22145:272:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 877,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 869,
																	"src": "22172:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 876,
																"name": "_exists",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1156,
																"src": "22164:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (uint256) view returns (bool)"
																}
															},
															"id": 878,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "22164:16:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732314d657461646174613a2055524920717565727920666f72206e6f6e6578697374656e7420746f6b656e",
															"id": 879,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "22182:49:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb",
																"typeString": "literal_string \"ERC721Metadata: URI query for nonexistent token\""
															},
															"value": "ERC721Metadata: URI query for nonexistent token"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb",
																"typeString": "literal_string \"ERC721Metadata: URI query for nonexistent token\""
															}
														],
														"id": 875,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "22156:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 880,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22156:76:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 881,
												"nodeType": "ExpressionStatement",
												"src": "22156:76:0"
											},
											{
												"assignments": [
													883
												],
												"declarations": [
													{
														"constant": false,
														"id": 883,
														"mutability": "mutable",
														"name": "baseURI",
														"nameLocation": "22259:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 907,
														"src": "22245:21:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 882,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "22245:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 886,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 884,
														"name": "_baseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 917,
														"src": "22269:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () view returns (string memory)"
														}
													},
													"id": 885,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22269:10:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "22245:34:0"
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 893,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 889,
																		"name": "baseURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 883,
																		"src": "22303:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 888,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "22297:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 887,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "22297:5:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 890,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "22297:14:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 891,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "22312:6:0",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "22297:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 892,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "22321:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "22297:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "",
														"id": 904,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "22407:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
															"typeString": "literal_string \"\""
														},
														"value": ""
													},
													"id": 905,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "22297:112:0",
													"trueExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 898,
																		"name": "baseURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 883,
																		"src": "22362:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"expression": {
																				"id": 899,
																				"name": "tokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 869,
																				"src": "22371:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 900,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "22379:8:0",
																			"memberName": "toString",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 568,
																			"src": "22371:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (string memory)"
																			}
																		},
																		"id": 901,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "22371:18:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"expression": {
																		"id": 896,
																		"name": "abi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967295,
																		"src": "22345:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_abi",
																			"typeString": "abi"
																		}
																	},
																	"id": 897,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "22349:12:0",
																	"memberName": "encodePacked",
																	"nodeType": "MemberAccess",
																	"src": "22345:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function () pure returns (bytes memory)"
																	}
																},
																"id": 902,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "22345:45:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 895,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "22338:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															},
															"typeName": {
																"id": 894,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "22338:6:0",
																"typeDescriptions": {}
															}
														},
														"id": 903,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "22338:53:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 874,
												"id": 906,
												"nodeType": "Return",
												"src": "22290:119:0"
											}
										]
									},
									"documentation": {
										"id": 867,
										"nodeType": "StructuredDocumentation",
										"src": "21994:57:0",
										"text": " @dev See {IERC721Metadata-tokenURI}."
									},
									"functionSelector": "c87b56dd",
									"id": 908,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "22066:8:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 871,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "22112:8:0"
									},
									"parameters": {
										"id": 870,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 869,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "22083:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 908,
												"src": "22075:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 868,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22075:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22074:17:0"
									},
									"returnParameters": {
										"id": 874,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 873,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 908,
												"src": "22130:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 872,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "22130:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22129:15:0"
									},
									"scope": 1518,
									"src": "22057:360:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 916,
										"nodeType": "Block",
										"src": "22620:28:0",
										"statements": [
											{
												"expression": {
													"hexValue": "",
													"id": 914,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "22638:2:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
														"typeString": "literal_string \"\""
													},
													"value": ""
												},
												"functionReturnParameters": 913,
												"id": 915,
												"nodeType": "Return",
												"src": "22631:9:0"
											}
										]
									},
									"documentation": {
										"id": 909,
										"nodeType": "StructuredDocumentation",
										"src": "22425:123:0",
										"text": " @dev Base URI for computing {tokenURI}. Empty by default, can be overriden\n in child contracts."
									},
									"id": 917,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_baseURI",
									"nameLocation": "22563:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 910,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22571:2:0"
									},
									"returnParameters": {
										"id": 913,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 912,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 917,
												"src": "22605:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 911,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "22605:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22604:15:0"
									},
									"scope": 1518,
									"src": "22554:94:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										86
									],
									"body": {
										"id": 959,
										"nodeType": "Block",
										"src": "22780:327:0",
										"statements": [
											{
												"assignments": [
													927
												],
												"declarations": [
													{
														"constant": false,
														"id": 927,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "22799:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 959,
														"src": "22791:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 926,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "22791:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 932,
												"initialValue": {
													"arguments": [
														{
															"id": 930,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 922,
															"src": "22822:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 928,
															"name": "ERC721",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1518,
															"src": "22807:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ERC721_$1518_$",
																"typeString": "type(contract ERC721)"
															}
														},
														"id": 929,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "22814:7:0",
														"memberName": "ownerOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 846,
														"src": "22807:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 931,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22807:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "22791:39:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 936,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 934,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 920,
																"src": "22849:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 935,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 927,
																"src": "22855:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "22849:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a20617070726f76616c20746f2063757272656e74206f776e6572",
															"id": 937,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "22862:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942",
																"typeString": "literal_string \"ERC721: approval to current owner\""
															},
															"value": "ERC721: approval to current owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942",
																"typeString": "literal_string \"ERC721: approval to current owner\""
															}
														],
														"id": 933,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "22841:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 938,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22841:57:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 939,
												"nodeType": "ExpressionStatement",
												"src": "22841:57:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 950,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 944,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 941,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 472,
																		"src": "22919:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 942,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "22919:12:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 943,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 927,
																	"src": "22935:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "22919:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 946,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 927,
																		"src": "22961:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 947,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 472,
																			"src": "22968:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 948,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "22968:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 945,
																	"name": "isApprovedForAll",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1033,
																	"src": "22944:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																		"typeString": "function (address,address) view returns (bool)"
																	}
																},
																"id": 949,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "22944:37:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "22919:62:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a20617070726f76652063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f76656420666f7220616c6c",
															"id": 951,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "22996:58:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d",
																"typeString": "literal_string \"ERC721: approve caller is not owner nor approved for all\""
															},
															"value": "ERC721: approve caller is not owner nor approved for all"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d",
																"typeString": "literal_string \"ERC721: approve caller is not owner nor approved for all\""
															}
														],
														"id": 940,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "22911:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 952,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22911:154:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 953,
												"nodeType": "ExpressionStatement",
												"src": "22911:154:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 955,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 920,
															"src": "23087:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 956,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 922,
															"src": "23091:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 954,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1442,
														"src": "23078:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 957,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23078:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 958,
												"nodeType": "ExpressionStatement",
												"src": "23078:21:0"
											}
										]
									},
									"documentation": {
										"id": 918,
										"nodeType": "StructuredDocumentation",
										"src": "22656:48:0",
										"text": " @dev See {IERC721-approve}."
									},
									"functionSelector": "095ea7b3",
									"id": 960,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "22719:7:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 924,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "22771:8:0"
									},
									"parameters": {
										"id": 923,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 920,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "22735:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 960,
												"src": "22727:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 919,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22727:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 922,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "22747:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 960,
												"src": "22739:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 921,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22739:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22726:29:0"
									},
									"returnParameters": {
										"id": 925,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22780:0:0"
									},
									"scope": 1518,
									"src": "22710:397:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										94
									],
									"body": {
										"id": 980,
										"nodeType": "Block",
										"src": "23258:136:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 971,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 963,
																	"src": "23285:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 970,
																"name": "_exists",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1156,
																"src": "23277:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (uint256) view returns (bool)"
																}
															},
															"id": 972,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "23277:16:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a20617070726f76656420717565727920666f72206e6f6e6578697374656e7420746f6b656e",
															"id": 973,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "23295:46:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d",
																"typeString": "literal_string \"ERC721: approved query for nonexistent token\""
															},
															"value": "ERC721: approved query for nonexistent token"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d",
																"typeString": "literal_string \"ERC721: approved query for nonexistent token\""
															}
														],
														"id": 969,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "23269:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 974,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23269:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 975,
												"nodeType": "ExpressionStatement",
												"src": "23269:73:0"
											},
											{
												"expression": {
													"baseExpression": {
														"id": 976,
														"name": "_tokenApprovals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 740,
														"src": "23362:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 978,
													"indexExpression": {
														"id": 977,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 963,
														"src": "23378:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "23362:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 968,
												"id": 979,
												"nodeType": "Return",
												"src": "23355:31:0"
											}
										]
									},
									"documentation": {
										"id": 961,
										"nodeType": "StructuredDocumentation",
										"src": "23115:52:0",
										"text": " @dev See {IERC721-getApproved}."
									},
									"functionSelector": "081812fc",
									"id": 981,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "23182:11:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 965,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "23231:8:0"
									},
									"parameters": {
										"id": 964,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 963,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "23202:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 981,
												"src": "23194:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 962,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23194:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23193:17:0"
									},
									"returnParameters": {
										"id": 968,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 967,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 981,
												"src": "23249:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 966,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23249:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23248:9:0"
									},
									"scope": 1518,
									"src": "23173:221:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										102
									],
									"body": {
										"id": 1014,
										"nodeType": "Block",
										"src": "23550:211:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 994,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 991,
																"name": "operator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 984,
																"src": "23569:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 992,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 472,
																	"src": "23581:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 993,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "23581:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "23569:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a20617070726f766520746f2063616c6c6572",
															"id": 995,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "23595:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05",
																"typeString": "literal_string \"ERC721: approve to caller\""
															},
															"value": "ERC721: approve to caller"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05",
																"typeString": "literal_string \"ERC721: approve to caller\""
															}
														],
														"id": 990,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "23561:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 996,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23561:62:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 997,
												"nodeType": "ExpressionStatement",
												"src": "23561:62:0"
											},
											{
												"expression": {
													"id": 1005,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 998,
																"name": "_operatorApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 746,
																"src": "23636:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 1002,
															"indexExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 999,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 472,
																	"src": "23655:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 1000,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "23655:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "23636:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1003,
														"indexExpression": {
															"id": 1001,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 984,
															"src": "23669:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "23636:42:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1004,
														"name": "approved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 986,
														"src": "23681:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "23636:53:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1006,
												"nodeType": "ExpressionStatement",
												"src": "23636:53:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1008,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 472,
																"src": "23720:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1009,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "23720:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1010,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 984,
															"src": "23734:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1011,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 986,
															"src": "23744:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1007,
														"name": "ApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 42,
														"src": "23705:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 1012,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23705:48:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1013,
												"nodeType": "EmitStatement",
												"src": "23700:53:0"
											}
										]
									},
									"documentation": {
										"id": 982,
										"nodeType": "StructuredDocumentation",
										"src": "23402:58:0",
										"text": " @dev See {IERC721-setApprovalForAll}."
									},
									"functionSelector": "a22cb465",
									"id": 1015,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "23475:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 988,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "23541:8:0"
									},
									"parameters": {
										"id": 987,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 984,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "23501:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1015,
												"src": "23493:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 983,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23493:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 986,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "23516:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1015,
												"src": "23511:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 985,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "23511:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23492:33:0"
									},
									"returnParameters": {
										"id": 989,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23550:0:0"
									},
									"scope": 1518,
									"src": "23466:295:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										112
									],
									"body": {
										"id": 1032,
										"nodeType": "Block",
										"src": "23935:61:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 1026,
															"name": "_operatorApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 746,
															"src": "23953:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(address => bool))"
															}
														},
														"id": 1028,
														"indexExpression": {
															"id": 1027,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1018,
															"src": "23972:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "23953:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 1030,
													"indexExpression": {
														"id": 1029,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1020,
														"src": "23979:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "23953:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1025,
												"id": 1031,
												"nodeType": "Return",
												"src": "23946:42:0"
											}
										]
									},
									"documentation": {
										"id": 1016,
										"nodeType": "StructuredDocumentation",
										"src": "23769:57:0",
										"text": " @dev See {IERC721-isApprovedForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 1033,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "23841:16:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1022,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "23911:8:0"
									},
									"parameters": {
										"id": 1021,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1018,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "23866:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1033,
												"src": "23858:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1017,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1020,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "23881:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1033,
												"src": "23873:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1019,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23873:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23857:33:0"
									},
									"returnParameters": {
										"id": 1025,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1024,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1033,
												"src": "23929:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1023,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "23929:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23928:6:0"
									},
									"scope": 1518,
									"src": "23832:164:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										78
									],
									"body": {
										"id": 1059,
										"nodeType": "Block",
										"src": "24152:216:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1046,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 472,
																		"src": "24243:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 1047,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "24243:12:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1048,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1040,
																	"src": "24257:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1045,
																"name": "_isApprovedOrOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1197,
																"src": "24224:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,uint256) view returns (bool)"
																}
															},
															"id": 1049,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "24224:41:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564",
															"id": 1050,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "24267:51:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2",
																"typeString": "literal_string \"ERC721: transfer caller is not owner nor approved\""
															},
															"value": "ERC721: transfer caller is not owner nor approved"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2",
																"typeString": "literal_string \"ERC721: transfer caller is not owner nor approved\""
															}
														],
														"id": 1044,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "24216:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1051,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24216:103:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1052,
												"nodeType": "ExpressionStatement",
												"src": "24216:103:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1054,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1036,
															"src": "24342:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1055,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1038,
															"src": "24348:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1056,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1040,
															"src": "24352:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1053,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1418,
														"src": "24332:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1057,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24332:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1058,
												"nodeType": "ExpressionStatement",
												"src": "24332:28:0"
											}
										]
									},
									"documentation": {
										"id": 1034,
										"nodeType": "StructuredDocumentation",
										"src": "24004:53:0",
										"text": " @dev See {IERC721-transferFrom}."
									},
									"functionSelector": "23b872dd",
									"id": 1060,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "24072:12:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1042,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "24143:8:0"
									},
									"parameters": {
										"id": 1041,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1036,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "24093:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1060,
												"src": "24085:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1035,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24085:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1038,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "24107:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1060,
												"src": "24099:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1037,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24099:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1040,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "24119:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1060,
												"src": "24111:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1039,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24111:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24084:43:0"
									},
									"returnParameters": {
										"id": 1043,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24152:0:0"
									},
									"scope": 1518,
									"src": "24063:305:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										68
									],
									"body": {
										"id": 1078,
										"nodeType": "Block",
										"src": "24532:58:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1072,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1063,
															"src": "24560:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1073,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1065,
															"src": "24566:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1074,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1067,
															"src": "24570:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 1075,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "24579:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1071,
														"name": "safeTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1079,
															1109
														],
														"referencedDeclaration": 1109,
														"src": "24543:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 1076,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24543:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1077,
												"nodeType": "ExpressionStatement",
												"src": "24543:39:0"
											}
										]
									},
									"documentation": {
										"id": 1061,
										"nodeType": "StructuredDocumentation",
										"src": "24376:57:0",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "42842e0e",
									"id": 1079,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "24448:16:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1069,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "24523:8:0"
									},
									"parameters": {
										"id": 1068,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1063,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "24473:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1079,
												"src": "24465:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1062,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24465:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1065,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "24487:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1079,
												"src": "24479:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1064,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24479:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1067,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "24499:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1079,
												"src": "24491:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1066,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24491:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24464:43:0"
									},
									"returnParameters": {
										"id": 1070,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24532:0:0"
									},
									"scope": 1518,
									"src": "24439:151:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										124
									],
									"body": {
										"id": 1108,
										"nodeType": "Block",
										"src": "24774:172:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1094,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 472,
																		"src": "24812:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 1095,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "24812:12:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1096,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1086,
																	"src": "24826:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1093,
																"name": "_isApprovedOrOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1197,
																"src": "24793:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,uint256) view returns (bool)"
																}
															},
															"id": 1097,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "24793:41:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564",
															"id": 1098,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "24836:51:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2",
																"typeString": "literal_string \"ERC721: transfer caller is not owner nor approved\""
															},
															"value": "ERC721: transfer caller is not owner nor approved"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2",
																"typeString": "literal_string \"ERC721: transfer caller is not owner nor approved\""
															}
														],
														"id": 1092,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "24785:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1099,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24785:103:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1100,
												"nodeType": "ExpressionStatement",
												"src": "24785:103:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1102,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1082,
															"src": "24913:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1103,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1084,
															"src": "24919:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1104,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1086,
															"src": "24923:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1105,
															"name": "_data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1088,
															"src": "24932:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1101,
														"name": "_safeTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1138,
														"src": "24899:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 1106,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24899:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1107,
												"nodeType": "ExpressionStatement",
												"src": "24899:39:0"
											}
										]
									},
									"documentation": {
										"id": 1080,
										"nodeType": "StructuredDocumentation",
										"src": "24598:57:0",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "b88d4fde",
									"id": 1109,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "24670:16:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1090,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "24765:8:0"
									},
									"parameters": {
										"id": 1089,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1082,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "24695:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1109,
												"src": "24687:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1081,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24687:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1084,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "24709:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1109,
												"src": "24701:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1083,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24701:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1086,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "24721:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1109,
												"src": "24713:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1085,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24713:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1088,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "24743:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1109,
												"src": "24730:18:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1087,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "24730:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24686:63:0"
									},
									"returnParameters": {
										"id": 1091,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24774:0:0"
									},
									"scope": 1518,
									"src": "24661:285:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1137,
										"nodeType": "Block",
										"src": "25931:169:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1122,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1112,
															"src": "25952:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1123,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1114,
															"src": "25958:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1124,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1116,
															"src": "25962:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1121,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1418,
														"src": "25942:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1125,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25942:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1126,
												"nodeType": "ExpressionStatement",
												"src": "25942:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1129,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1112,
																	"src": "26012:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1130,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1114,
																	"src": "26018:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1131,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1116,
																	"src": "26022:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1132,
																	"name": "_data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1118,
																	"src": "26031:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1128,
																"name": "_checkOnERC721Received",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1506,
																"src": "25989:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256,bytes memory) returns (bool)"
																}
															},
															"id": 1133,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "25989:48:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572",
															"id": 1134,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "26039:52:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
																"typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
															},
															"value": "ERC721: transfer to non ERC721Receiver implementer"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
																"typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
															}
														],
														"id": 1127,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "25981:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1135,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25981:111:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1136,
												"nodeType": "ExpressionStatement",
												"src": "25981:111:0"
											}
										]
									},
									"documentation": {
										"id": 1110,
										"nodeType": "StructuredDocumentation",
										"src": "24954:868:0",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n `_data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"id": 1138,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransfer",
									"nameLocation": "25837:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1112,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "25859:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1138,
												"src": "25851:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1111,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25851:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1114,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "25873:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1138,
												"src": "25865:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1113,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25865:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1116,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "25885:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1138,
												"src": "25877:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1115,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25877:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1118,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "25907:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1138,
												"src": "25894:18:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1117,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "25894:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25850:63:0"
									},
									"returnParameters": {
										"id": 1120,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25931:0:0"
									},
									"scope": 1518,
									"src": "25828:272:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1155,
										"nodeType": "Block",
										"src": "26484:56:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1153,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 1146,
															"name": "_owners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 732,
															"src": "26502:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 1148,
														"indexExpression": {
															"id": 1147,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1141,
															"src": "26510:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "26502:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1151,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "26530:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1150,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "26522:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1149,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "26522:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 1152,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "26522:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "26502:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1145,
												"id": 1154,
												"nodeType": "Return",
												"src": "26495:37:0"
											}
										]
									},
									"documentation": {
										"id": 1139,
										"nodeType": "StructuredDocumentation",
										"src": "26108:299:0",
										"text": " @dev Returns whether `tokenId` exists.\n Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n Tokens start existing when they are minted (`_mint`),\n and stop existing when they are burned (`_burn`)."
									},
									"id": 1156,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_exists",
									"nameLocation": "26422:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1142,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1141,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "26438:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1156,
												"src": "26430:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1140,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26430:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26429:17:0"
									},
									"returnParameters": {
										"id": 1145,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1144,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1156,
												"src": "26478:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1143,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "26478:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26477:6:0"
									},
									"scope": 1518,
									"src": "26413:127:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1196,
										"nodeType": "Block",
										"src": "26806:249:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1168,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1161,
																	"src": "26833:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1167,
																"name": "_exists",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1156,
																"src": "26825:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (uint256) view returns (bool)"
																}
															},
															"id": 1169,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "26825:16:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a206f70657261746f7220717565727920666f72206e6f6e6578697374656e7420746f6b656e",
															"id": 1170,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "26843:46:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c",
																"typeString": "literal_string \"ERC721: operator query for nonexistent token\""
															},
															"value": "ERC721: operator query for nonexistent token"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c",
																"typeString": "literal_string \"ERC721: operator query for nonexistent token\""
															}
														],
														"id": 1166,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "26817:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1171,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26817:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1172,
												"nodeType": "ExpressionStatement",
												"src": "26817:73:0"
											},
											{
												"assignments": [
													1174
												],
												"declarations": [
													{
														"constant": false,
														"id": 1174,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "26909:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 1196,
														"src": "26901:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1173,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "26901:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1179,
												"initialValue": {
													"arguments": [
														{
															"id": 1177,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1161,
															"src": "26932:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1175,
															"name": "ERC721",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1518,
															"src": "26917:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ERC721_$1518_$",
																"typeString": "type(contract ERC721)"
															}
														},
														"id": 1176,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "26924:7:0",
														"memberName": "ownerOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 846,
														"src": "26917:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 1178,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26917:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "26901:39:0"
											},
											{
												"expression": {
													"components": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1193,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1188,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 1182,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1180,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1159,
																		"src": "26959:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"id": 1181,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1174,
																		"src": "26970:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "26959:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "||",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 1187,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 1184,
																				"name": "tokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1161,
																				"src": "26991:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 1183,
																			"name": "getApproved",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 981,
																			"src": "26979:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																				"typeString": "function (uint256) view returns (address)"
																			}
																		},
																		"id": 1185,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "26979:20:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"id": 1186,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1159,
																		"src": "27003:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "26979:31:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "26959:51:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 1190,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1174,
																		"src": "27031:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1191,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1159,
																		"src": "27038:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1189,
																	"name": "isApprovedForAll",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1033,
																	"src": "27014:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																		"typeString": "function (address,address) view returns (bool)"
																	}
																},
																"id": 1192,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "27014:32:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "26959:87:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"id": 1194,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "26958:89:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1165,
												"id": 1195,
												"nodeType": "Return",
												"src": "26951:96:0"
											}
										]
									},
									"documentation": {
										"id": 1157,
										"nodeType": "StructuredDocumentation",
										"src": "26548:153:0",
										"text": " @dev Returns whether `spender` is allowed to manage `tokenId`.\n Requirements:\n - `tokenId` must exist."
									},
									"id": 1197,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isApprovedOrOwner",
									"nameLocation": "26716:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1162,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1159,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "26743:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1197,
												"src": "26735:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1158,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26735:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1161,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "26760:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1197,
												"src": "26752:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1160,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26752:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26734:34:0"
									},
									"returnParameters": {
										"id": 1165,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1164,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1197,
												"src": "26800:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1163,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "26800:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26799:6:0"
									},
									"scope": 1518,
									"src": "26707:348:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1211,
										"nodeType": "Block",
										"src": "27462:45:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1206,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1200,
															"src": "27483:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1207,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1202,
															"src": "27487:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 1208,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "27496:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1205,
														"name": "_safeMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1212,
															1241
														],
														"referencedDeclaration": 1241,
														"src": "27473:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,bytes memory)"
														}
													},
													"id": 1209,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "27473:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1210,
												"nodeType": "ExpressionStatement",
												"src": "27473:26:0"
											}
										]
									},
									"documentation": {
										"id": 1198,
										"nodeType": "StructuredDocumentation",
										"src": "27063:328:0",
										"text": " @dev Safely mints `tokenId` and transfers it to `to`.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"id": 1212,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "27406:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1203,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1200,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "27424:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1212,
												"src": "27416:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1199,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27416:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1202,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "27436:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1212,
												"src": "27428:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1201,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27428:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27415:29:0"
									},
									"returnParameters": {
										"id": 1204,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "27462:0:0"
									},
									"scope": 1518,
									"src": "27397:110:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1240,
										"nodeType": "Block",
										"src": "27819:165:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1223,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1215,
															"src": "27836:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1224,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1217,
															"src": "27840:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1222,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1298,
														"src": "27830:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1225,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "27830:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1226,
												"nodeType": "ExpressionStatement",
												"src": "27830:18:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 1231,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "27898:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 1230,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "27890:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1229,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "27890:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1232,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "27890:10:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1233,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1215,
																	"src": "27902:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1234,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1217,
																	"src": "27906:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1235,
																	"name": "_data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1219,
																	"src": "27915:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1228,
																"name": "_checkOnERC721Received",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1506,
																"src": "27867:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256,bytes memory) returns (bool)"
																}
															},
															"id": 1236,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "27867:54:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572",
															"id": 1237,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "27923:52:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
																"typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
															},
															"value": "ERC721: transfer to non ERC721Receiver implementer"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
																"typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
															}
														],
														"id": 1227,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "27859:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1238,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "27859:117:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1239,
												"nodeType": "ExpressionStatement",
												"src": "27859:117:0"
											}
										]
									},
									"documentation": {
										"id": 1213,
										"nodeType": "StructuredDocumentation",
										"src": "27515:213:0",
										"text": " @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."
									},
									"id": 1241,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "27743:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1215,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "27761:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1241,
												"src": "27753:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1214,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27753:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1217,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "27773:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1241,
												"src": "27765:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1216,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27765:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1219,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "27795:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1241,
												"src": "27782:18:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1218,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "27782:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27752:49:0"
									},
									"returnParameters": {
										"id": 1221,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "27819:0:0"
									},
									"scope": 1518,
									"src": "27734:250:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1297,
										"nodeType": "Block",
										"src": "28381:321:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1255,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1250,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1244,
																"src": "28400:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1253,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "28414:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1252,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "28406:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1251,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "28406:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1254,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "28406:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "28400:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 1256,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "28418:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6",
																"typeString": "literal_string \"ERC721: mint to the zero address\""
															},
															"value": "ERC721: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6",
																"typeString": "literal_string \"ERC721: mint to the zero address\""
															}
														],
														"id": 1249,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "28392:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1257,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28392:61:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1258,
												"nodeType": "ExpressionStatement",
												"src": "28392:61:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1263,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "28472:17:0",
															"subExpression": {
																"arguments": [
																	{
																		"id": 1261,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1246,
																		"src": "28481:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1260,
																	"name": "_exists",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1156,
																	"src": "28473:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (uint256) view returns (bool)"
																	}
																},
																"id": 1262,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "28473:16:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a20746f6b656e20616c7265616479206d696e746564",
															"id": 1264,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "28491:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57",
																"typeString": "literal_string \"ERC721: token already minted\""
															},
															"value": "ERC721: token already minted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57",
																"typeString": "literal_string \"ERC721: token already minted\""
															}
														],
														"id": 1259,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "28464:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1265,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28464:58:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1266,
												"nodeType": "ExpressionStatement",
												"src": "28464:58:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1270,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "28564:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1269,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "28556:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1268,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "28556:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1271,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "28556:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1272,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1244,
															"src": "28568:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1273,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1246,
															"src": "28572:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1267,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1517,
														"src": "28535:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1274,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28535:45:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1275,
												"nodeType": "ExpressionStatement",
												"src": "28535:45:0"
											},
											{
												"expression": {
													"id": 1280,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1276,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 736,
															"src": "28593:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1278,
														"indexExpression": {
															"id": 1277,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1244,
															"src": "28603:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "28593:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 1279,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "28610:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "28593:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1281,
												"nodeType": "ExpressionStatement",
												"src": "28593:18:0"
											},
											{
												"expression": {
													"id": 1286,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1282,
															"name": "_owners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 732,
															"src": "28622:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 1284,
														"indexExpression": {
															"id": 1283,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1246,
															"src": "28630:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "28622:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1285,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1244,
														"src": "28641:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "28622:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1287,
												"nodeType": "ExpressionStatement",
												"src": "28622:21:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1291,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "28678:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1290,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "28670:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1289,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "28670:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1292,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "28670:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1293,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1244,
															"src": "28682:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1294,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1246,
															"src": "28686:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1288,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "28661:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1295,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28661:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1296,
												"nodeType": "EmitStatement",
												"src": "28656:38:0"
											}
										]
									},
									"documentation": {
										"id": 1242,
										"nodeType": "StructuredDocumentation",
										"src": "27992:322:0",
										"text": " @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."
									},
									"id": 1298,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "28329:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1247,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1244,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "28343:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1298,
												"src": "28335:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1243,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "28335:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1246,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "28355:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1298,
												"src": "28347:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1245,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28347:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28334:29:0"
									},
									"returnParameters": {
										"id": 1248,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28381:0:0"
									},
									"scope": 1518,
									"src": "28320:382:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1348,
										"nodeType": "Block",
										"src": "28980:311:0",
										"statements": [
											{
												"assignments": [
													1305
												],
												"declarations": [
													{
														"constant": false,
														"id": 1305,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "28999:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 1348,
														"src": "28991:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1304,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "28991:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1310,
												"initialValue": {
													"arguments": [
														{
															"id": 1308,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1301,
															"src": "29022:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1306,
															"name": "ERC721",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1518,
															"src": "29007:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ERC721_$1518_$",
																"typeString": "type(contract ERC721)"
															}
														},
														"id": 1307,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "29014:7:0",
														"memberName": "ownerOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 846,
														"src": "29007:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 1309,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "29007:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "28991:39:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1312,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1305,
															"src": "29064:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1315,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "29079:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1314,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "29071:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1313,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "29071:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1316,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "29071:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1317,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1301,
															"src": "29083:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1311,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1517,
														"src": "29043:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1318,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "29043:48:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1319,
												"nodeType": "ExpressionStatement",
												"src": "29043:48:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1323,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "29149:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1322,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "29141:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1321,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "29141:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1324,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "29141:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1325,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1301,
															"src": "29153:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1320,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1442,
														"src": "29132:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1326,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "29132:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1327,
												"nodeType": "ExpressionStatement",
												"src": "29132:29:0"
											},
											{
												"expression": {
													"id": 1332,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1328,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 736,
															"src": "29174:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1330,
														"indexExpression": {
															"id": 1329,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1305,
															"src": "29184:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "29174:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 1331,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "29194:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "29174:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1333,
												"nodeType": "ExpressionStatement",
												"src": "29174:21:0"
											},
											{
												"expression": {
													"id": 1337,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "29206:23:0",
													"subExpression": {
														"baseExpression": {
															"id": 1334,
															"name": "_owners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 732,
															"src": "29213:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 1336,
														"indexExpression": {
															"id": 1335,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1301,
															"src": "29221:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "29213:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1338,
												"nodeType": "ExpressionStatement",
												"src": "29206:23:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1340,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1305,
															"src": "29256:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1343,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "29271:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1342,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "29263:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1341,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "29263:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1344,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "29263:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1345,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1301,
															"src": "29275:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1339,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "29247:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1346,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "29247:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1347,
												"nodeType": "EmitStatement",
												"src": "29242:41:0"
											}
										]
									},
									"documentation": {
										"id": 1299,
										"nodeType": "StructuredDocumentation",
										"src": "28710:215:0",
										"text": " @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."
									},
									"id": 1349,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "28940:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1302,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1301,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "28954:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1349,
												"src": "28946:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1300,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28946:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28945:17:0"
									},
									"returnParameters": {
										"id": 1303,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28980:0:0"
									},
									"scope": 1518,
									"src": "28931:360:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1417,
										"nodeType": "Block",
										"src": "29707:465:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1365,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 1362,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1356,
																		"src": "29741:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1360,
																		"name": "ERC721",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1518,
																		"src": "29726:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_ERC721_$1518_$",
																			"typeString": "type(contract ERC721)"
																		}
																	},
																	"id": 1361,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "29733:7:0",
																	"memberName": "ownerOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 846,
																	"src": "29726:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																		"typeString": "function (uint256) view returns (address)"
																	}
																},
																"id": 1363,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "29726:23:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 1364,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1352,
																"src": "29753:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "29726:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a207472616e73666572206f6620746f6b656e2074686174206973206e6f74206f776e",
															"id": 1366,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "29759:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a01073130a885d6c1c1af6ac75fc3b1c4f9403c235362962bbf528e2bd87d950",
																"typeString": "literal_string \"ERC721: transfer of token that is not own\""
															},
															"value": "ERC721: transfer of token that is not own"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a01073130a885d6c1c1af6ac75fc3b1c4f9403c235362962bbf528e2bd87d950",
																"typeString": "literal_string \"ERC721: transfer of token that is not own\""
															}
														],
														"id": 1359,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "29718:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1367,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "29718:85:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1368,
												"nodeType": "ExpressionStatement",
												"src": "29718:85:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1375,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1370,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1354,
																"src": "29822:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1373,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "29836:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1372,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "29828:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1371,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "29828:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1374,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "29828:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "29822:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 1376,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "29840:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4",
																"typeString": "literal_string \"ERC721: transfer to the zero address\""
															},
															"value": "ERC721: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4",
																"typeString": "literal_string \"ERC721: transfer to the zero address\""
															}
														],
														"id": 1369,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "29814:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1377,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "29814:65:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1378,
												"nodeType": "ExpressionStatement",
												"src": "29814:65:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1380,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1352,
															"src": "29913:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1381,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1354,
															"src": "29919:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1382,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1356,
															"src": "29923:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1379,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1517,
														"src": "29892:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1383,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "29892:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1384,
												"nodeType": "ExpressionStatement",
												"src": "29892:39:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1388,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "30013:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1387,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "30005:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1386,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "30005:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1389,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "30005:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1390,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1356,
															"src": "30017:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1385,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1442,
														"src": "29996:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1391,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "29996:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1392,
												"nodeType": "ExpressionStatement",
												"src": "29996:29:0"
											},
											{
												"expression": {
													"id": 1397,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1393,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 736,
															"src": "30038:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1395,
														"indexExpression": {
															"id": 1394,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1352,
															"src": "30048:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "30038:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 1396,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "30057:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "30038:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1398,
												"nodeType": "ExpressionStatement",
												"src": "30038:20:0"
											},
											{
												"expression": {
													"id": 1403,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1399,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 736,
															"src": "30069:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1401,
														"indexExpression": {
															"id": 1400,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1354,
															"src": "30079:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "30069:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 1402,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "30086:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "30069:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1404,
												"nodeType": "ExpressionStatement",
												"src": "30069:18:0"
											},
											{
												"expression": {
													"id": 1409,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1405,
															"name": "_owners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 732,
															"src": "30098:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 1407,
														"indexExpression": {
															"id": 1406,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1356,
															"src": "30106:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "30098:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1408,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1354,
														"src": "30117:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "30098:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1410,
												"nodeType": "ExpressionStatement",
												"src": "30098:21:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1412,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1352,
															"src": "30146:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1413,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1354,
															"src": "30152:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1414,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1356,
															"src": "30156:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1411,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "30137:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1415,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "30137:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1416,
												"nodeType": "EmitStatement",
												"src": "30132:32:0"
											}
										]
									},
									"documentation": {
										"id": 1350,
										"nodeType": "StructuredDocumentation",
										"src": "29299:323:0",
										"text": " @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."
									},
									"id": 1418,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "29637:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1357,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1352,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "29655:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1418,
												"src": "29647:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1351,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "29647:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1354,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "29669:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1418,
												"src": "29661:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1353,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "29661:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1356,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "29681:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1418,
												"src": "29673:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1355,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29673:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29646:43:0"
									},
									"returnParameters": {
										"id": 1358,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "29707:0:0"
									},
									"scope": 1518,
									"src": "29628:544:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1441,
										"nodeType": "Block",
										"src": "30354:110:0",
										"statements": [
											{
												"expression": {
													"id": 1430,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1426,
															"name": "_tokenApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 740,
															"src": "30365:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 1428,
														"indexExpression": {
															"id": 1427,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1423,
															"src": "30381:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "30365:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1429,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1421,
														"src": "30392:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "30365:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1431,
												"nodeType": "ExpressionStatement",
												"src": "30365:29:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1435,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1423,
																	"src": "30434:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1433,
																	"name": "ERC721",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1518,
																	"src": "30419:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_ERC721_$1518_$",
																		"typeString": "type(contract ERC721)"
																	}
																},
																"id": 1434,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "30426:7:0",
																"memberName": "ownerOf",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 846,
																"src": "30419:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																	"typeString": "function (uint256) view returns (address)"
																}
															},
															"id": 1436,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "30419:23:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1437,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1421,
															"src": "30444:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1438,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1423,
															"src": "30448:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1432,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 33,
														"src": "30410:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "30410:46:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1440,
												"nodeType": "EmitStatement",
												"src": "30405:51:0"
											}
										]
									},
									"documentation": {
										"id": 1419,
										"nodeType": "StructuredDocumentation",
										"src": "30180:104:0",
										"text": " @dev Approve `to` to operate on `tokenId`\n Emits a {Approval} event."
									},
									"id": 1442,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "30299:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1424,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1421,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "30316:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1442,
												"src": "30308:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1420,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "30308:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1423,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "30328:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1442,
												"src": "30320:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1422,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30320:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30307:29:0"
									},
									"returnParameters": {
										"id": 1425,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "30354:0:0"
									},
									"scope": 1518,
									"src": "30290:174:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1505,
										"nodeType": "Block",
										"src": "31161:711:0",
										"statements": [
											{
												"condition": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1456,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1447,
															"src": "31176:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1457,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "31179:10:0",
														"memberName": "isContract",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 186,
														"src": "31176:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$attached_to$_t_address_$",
															"typeString": "function (address) view returns (bool)"
														}
													},
													"id": 1458,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31176:15:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1503,
													"nodeType": "Block",
													"src": "31827:38:0",
													"statements": [
														{
															"expression": {
																"hexValue": "74727565",
																"id": 1501,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "31849:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 1455,
															"id": 1502,
															"nodeType": "Return",
															"src": "31842:11:0"
														}
													]
												},
												"id": 1504,
												"nodeType": "IfStatement",
												"src": "31172:693:0",
												"trueBody": {
													"id": 1500,
													"nodeType": "Block",
													"src": "31193:628:0",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 1480,
																		"nodeType": "Block",
																		"src": "31309:97:0",
																		"statements": [
																			{
																				"expression": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 1478,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1472,
																						"name": "retval",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1470,
																						"src": "31335:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"arguments": [
																									{
																										"id": 1474,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1447,
																										"src": "31361:2:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 1473,
																									"name": "IERC721Receiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 142,
																									"src": "31345:15:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$142_$",
																										"typeString": "type(contract IERC721Receiver)"
																									}
																								},
																								"id": 1475,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "typeConversion",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "31345:19:0",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_contract$_IERC721Receiver_$142",
																									"typeString": "contract IERC721Receiver"
																								}
																							},
																							"id": 1476,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "31365:16:0",
																							"memberName": "onERC721Received",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 141,
																							"src": "31345:36:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																								"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
																							}
																						},
																						"id": 1477,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "31382:8:0",
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "31345:45:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "31335:55:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"functionReturnParameters": 1455,
																				"id": 1479,
																				"nodeType": "Return",
																				"src": "31328:62:0"
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1481,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1471,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1470,
																				"mutability": "mutable",
																				"name": "retval",
																				"nameLocation": "31301:6:0",
																				"nodeType": "VariableDeclaration",
																				"scope": 1481,
																				"src": "31294:13:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 1469,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "31294:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "31293:15:0"
																	},
																	"src": "31285:121:0"
																},
																{
																	"block": {
																		"id": 1497,
																		"nodeType": "Block",
																		"src": "31435:375:0",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1488,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 1485,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1483,
																							"src": "31458:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes_memory_ptr",
																								"typeString": "bytes memory"
																							}
																						},
																						"id": 1486,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "31465:6:0",
																						"memberName": "length",
																						"nodeType": "MemberAccess",
																						"src": "31458:13:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"hexValue": "30",
																						"id": 1487,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "31475:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					"src": "31458:18:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"falseBody": {
																					"id": 1495,
																					"nodeType": "Block",
																					"src": "31587:208:0",
																					"statements": [
																						{
																							"AST": {
																								"nodeType": "YulBlock",
																								"src": "31688:88:0",
																								"statements": [
																									{
																										"expression": {
																											"arguments": [
																												{
																													"arguments": [
																														{
																															"kind": "number",
																															"nodeType": "YulLiteral",
																															"src": "31726:2:0",
																															"type": "",
																															"value": "32"
																														},
																														{
																															"name": "reason",
																															"nodeType": "YulIdentifier",
																															"src": "31730:6:0"
																														}
																													],
																													"functionName": {
																														"name": "add",
																														"nodeType": "YulIdentifier",
																														"src": "31722:3:0"
																													},
																													"nodeType": "YulFunctionCall",
																													"src": "31722:15:0"
																												},
																												{
																													"arguments": [
																														{
																															"name": "reason",
																															"nodeType": "YulIdentifier",
																															"src": "31745:6:0"
																														}
																													],
																													"functionName": {
																														"name": "mload",
																														"nodeType": "YulIdentifier",
																														"src": "31739:5:0"
																													},
																													"nodeType": "YulFunctionCall",
																													"src": "31739:13:0"
																												}
																											],
																											"functionName": {
																												"name": "revert",
																												"nodeType": "YulIdentifier",
																												"src": "31715:6:0"
																											},
																											"nodeType": "YulFunctionCall",
																											"src": "31715:38:0"
																										},
																										"nodeType": "YulExpressionStatement",
																										"src": "31715:38:0"
																									}
																								]
																							},
																							"evmVersion": "paris",
																							"externalReferences": [
																								{
																									"declaration": 1483,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "31730:6:0",
																									"valueSize": 1
																								},
																								{
																									"declaration": 1483,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "31745:6:0",
																									"valueSize": 1
																								}
																							],
																							"id": 1494,
																							"nodeType": "InlineAssembly",
																							"src": "31679:97:0"
																						}
																					]
																				},
																				"id": 1496,
																				"nodeType": "IfStatement",
																				"src": "31454:341:0",
																				"trueBody": {
																					"id": 1493,
																					"nodeType": "Block",
																					"src": "31478:103:0",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"hexValue": "4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572",
																										"id": 1490,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "string",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "31508:52:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
																											"typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
																										},
																										"value": "ERC721: transfer to non ERC721Receiver implementer"
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
																											"typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
																										}
																									],
																									"id": 1489,
																									"name": "revert",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [
																										4294967277,
																										4294967277
																									],
																									"referencedDeclaration": 4294967277,
																									"src": "31501:6:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																										"typeString": "function (string memory) pure"
																									}
																								},
																								"id": 1491,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "31501:60:0",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1492,
																							"nodeType": "ExpressionStatement",
																							"src": "31501:60:0"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1498,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1484,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1483,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "31427:6:0",
																				"nodeType": "VariableDeclaration",
																				"scope": 1498,
																				"src": "31414:19:0",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes"
																				},
																				"typeName": {
																					"id": 1482,
																					"name": "bytes",
																					"nodeType": "ElementaryTypeName",
																					"src": "31414:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_storage_ptr",
																						"typeString": "bytes"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "31413:21:0"
																	},
																	"src": "31407:403:0"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1463,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 472,
																			"src": "31249:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 1464,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "31249:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1465,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1445,
																		"src": "31263:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1466,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1449,
																		"src": "31269:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1467,
																		"name": "_data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1451,
																		"src": "31278:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1460,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1447,
																				"src": "31228:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1459,
																			"name": "IERC721Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 142,
																			"src": "31212:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$142_$",
																				"typeString": "type(contract IERC721Receiver)"
																			}
																		},
																		"id": 1461,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "31212:19:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC721Receiver_$142",
																			"typeString": "contract IERC721Receiver"
																		}
																	},
																	"id": 1462,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "31232:16:0",
																	"memberName": "onERC721Received",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 141,
																	"src": "31212:36:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 1468,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "31212:72:0",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 1499,
															"nodeType": "TryStatement",
															"src": "31208:602:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1443,
										"nodeType": "StructuredDocumentation",
										"src": "30472:551:0",
										"text": " @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\n The call is not executed if the target address is not a contract.\n @param from address representing the previous owner of the given token ID\n @param to target address that will receive the tokens\n @param tokenId uint256 ID of the token to be transferred\n @param _data bytes optional data to send along with the call\n @return bool whether the call correctly returned the expected magic value"
									},
									"id": 1506,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOnERC721Received",
									"nameLocation": "31038:22:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1452,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1445,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "31069:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1506,
												"src": "31061:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1444,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "31061:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1447,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "31083:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1506,
												"src": "31075:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1446,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "31075:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1449,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "31095:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1506,
												"src": "31087:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1448,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "31087:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1451,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "31117:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1506,
												"src": "31104:18:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1450,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "31104:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31060:63:0"
									},
									"returnParameters": {
										"id": 1455,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1454,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1506,
												"src": "31150:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1453,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "31150:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31149:6:0"
									},
									"scope": 1518,
									"src": "31029:843:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1516,
										"nodeType": "Block",
										"src": "32575:3:0",
										"statements": []
									},
									"documentation": {
										"id": 1507,
										"nodeType": "StructuredDocumentation",
										"src": "31880:599:0",
										"text": " @dev Hook that is called before any token transfer. This includes minting\n and burning.\n Calling conditions:\n - When `from` and `to` are both non-zero, ``from``'s `tokenId` will be\n transferred to `to`.\n - When `from` is zero, `tokenId` will be minted for `to`.\n - When `to` is zero, ``from``'s `tokenId` will be burned.\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 1517,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nameLocation": "32494:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1514,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1509,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "32523:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1517,
												"src": "32515:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1508,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "32515:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1511,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "32537:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1517,
												"src": "32529:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1510,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "32529:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1513,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "32549:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1517,
												"src": "32541:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1512,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32541:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32514:43:0"
									},
									"returnParameters": {
										"id": 1515,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "32575:0:0"
									},
									"scope": 1518,
									"src": "32485:93:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 2309,
							"src": "19800:12781:0",
							"usedErrors": []
						},
						{
							"id": 1519,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32677:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1521,
										"name": "IERC721",
										"nameLocations": [
											"32876:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 125,
										"src": "32876:7:0"
									},
									"id": 1522,
									"nodeType": "InheritanceSpecifier",
									"src": "32876:7:0"
								}
							],
							"canonicalName": "IERC721Enumerable",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1520,
								"nodeType": "StructuredDocumentation",
								"src": "32704:139:0",
								"text": " @title ERC-721 Non-Fungible Token Standard, optional enumeration extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"
							},
							"fullyImplemented": false,
							"id": 1547,
							"linearizedBaseContracts": [
								1547,
								125,
								11
							],
							"name": "IERC721Enumerable",
							"nameLocation": "32855:17:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1523,
										"nodeType": "StructuredDocumentation",
										"src": "32893:84:0",
										"text": " @dev Returns the total amount of tokens stored by the contract."
									},
									"functionSelector": "18160ddd",
									"id": 1528,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "32992:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1524,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "33003:2:0"
									},
									"returnParameters": {
										"id": 1527,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1526,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1528,
												"src": "33029:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1525,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "33029:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33028:9:0"
									},
									"scope": 1547,
									"src": "32983:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1529,
										"nodeType": "StructuredDocumentation",
										"src": "33046:174:0",
										"text": " @dev Returns a token ID owned by `owner` at a given `index` of its token list.\n Use along with {balanceOf} to enumerate all of ``owner``'s tokens."
									},
									"functionSelector": "2f745c59",
									"id": 1538,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenOfOwnerByIndex",
									"nameLocation": "33235:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1534,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1531,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "33263:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1538,
												"src": "33255:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1530,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "33255:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1533,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "33278:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1538,
												"src": "33270:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1532,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "33270:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33254:30:0"
									},
									"returnParameters": {
										"id": 1537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1536,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "33316:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1538,
												"src": "33308:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1535,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "33308:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33307:17:0"
									},
									"scope": 1547,
									"src": "33226:99:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1539,
										"nodeType": "StructuredDocumentation",
										"src": "33333:167:0",
										"text": " @dev Returns a token ID at a given `index` of all the tokens stored by the contract.\n Use along with {totalSupply} to enumerate all tokens."
									},
									"functionSelector": "4f6ccce7",
									"id": 1546,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenByIndex",
									"nameLocation": "33515:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1542,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1541,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "33536:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1546,
												"src": "33528:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1540,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "33528:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33527:15:0"
									},
									"returnParameters": {
										"id": 1545,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1544,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1546,
												"src": "33566:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1543,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "33566:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33565:9:0"
									},
									"scope": 1547,
									"src": "33506:69:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2309,
							"src": "32845:733:0",
							"usedErrors": []
						},
						{
							"id": 1548,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33673:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1550,
										"name": "ERC721",
										"nameLocations": [
											"33945:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1518,
										"src": "33945:6:0"
									},
									"id": 1551,
									"nodeType": "InheritanceSpecifier",
									"src": "33945:6:0"
								},
								{
									"baseName": {
										"id": 1552,
										"name": "IERC721Enumerable",
										"nameLocations": [
											"33953:17:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1547,
										"src": "33953:17:0"
									},
									"id": 1553,
									"nodeType": "InheritanceSpecifier",
									"src": "33953:17:0"
								}
							],
							"canonicalName": "ERC721Enumerable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1549,
								"nodeType": "StructuredDocumentation",
								"src": "33702:203:0",
								"text": " @dev This implements an optional extension of {ERC721} defined in the EIP that adds\n enumerability of all the token ids in the contract as well as all token ids owned by each\n account."
							},
							"fullyImplemented": false,
							"id": 1882,
							"linearizedBaseContracts": [
								1882,
								1547,
								1518,
								167,
								125,
								708,
								11,
								484
							],
							"name": "ERC721Enumerable",
							"nameLocation": "33925:16:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 1559,
									"mutability": "mutable",
									"name": "_ownedTokens",
									"nameLocation": "34088:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 1882,
									"src": "34032:68:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(uint256 => uint256))"
									},
									"typeName": {
										"id": 1558,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1554,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "34040:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "34032:47:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(uint256 => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1557,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 1555,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "34059:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"nodeType": "Mapping",
											"src": "34051:27:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
												"typeString": "mapping(uint256 => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 1556,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "34070:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1563,
									"mutability": "mutable",
									"name": "_ownedTokensIndex",
									"nameLocation": "34209:17:0",
									"nodeType": "VariableDeclaration",
									"scope": 1882,
									"src": "34173:53:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
										"typeString": "mapping(uint256 => uint256)"
									},
									"typeName": {
										"id": 1562,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1560,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "34181:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "34173:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
											"typeString": "mapping(uint256 => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1561,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "34192:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1566,
									"mutability": "mutable",
									"name": "_allTokens",
									"nameLocation": "34308:10:0",
									"nodeType": "VariableDeclaration",
									"scope": 1882,
									"src": "34290:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
										"typeString": "uint256[]"
									},
									"typeName": {
										"baseType": {
											"id": 1564,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "34290:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 1565,
										"nodeType": "ArrayTypeName",
										"src": "34290:9:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
											"typeString": "uint256[]"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1570,
									"mutability": "mutable",
									"name": "_allTokensIndex",
									"nameLocation": "34428:15:0",
									"nodeType": "VariableDeclaration",
									"scope": 1882,
									"src": "34392:51:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
										"typeString": "mapping(uint256 => uint256)"
									},
									"typeName": {
										"id": 1569,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1567,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "34400:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "34392:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
											"typeString": "mapping(uint256 => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1568,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "34411:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"baseFunctions": [
										10,
										794
									],
									"body": {
										"id": 1593,
										"nodeType": "Block",
										"src": "34624:129:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1591,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 1586,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1581,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1573,
															"src": "34642:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1583,
																		"name": "IERC721Enumerable",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1547,
																		"src": "34662:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IERC721Enumerable_$1547_$",
																			"typeString": "type(contract IERC721Enumerable)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_contract$_IERC721Enumerable_$1547_$",
																			"typeString": "type(contract IERC721Enumerable)"
																		}
																	],
																	"id": 1582,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "34657:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1584,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "34657:23:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721Enumerable_$1547",
																	"typeString": "type(contract IERC721Enumerable)"
																}
															},
															"id": 1585,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "34681:11:0",
															"memberName": "interfaceId",
															"nodeType": "MemberAccess",
															"src": "34657:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "34642:50:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 1589,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1573,
																"src": "34733:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 1587,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "34709:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC721Enumerable_$1882_$",
																	"typeString": "type(contract super ERC721Enumerable)"
																}
															},
															"id": 1588,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "34715:17:0",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 794,
															"src": "34709:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 1590,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "34709:36:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "34642:103:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1580,
												"id": 1592,
												"nodeType": "Return",
												"src": "34635:110:0"
											}
										]
									},
									"documentation": {
										"id": 1571,
										"nodeType": "StructuredDocumentation",
										"src": "34452:58:0",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 1594,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "34525:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1577,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 1575,
												"name": "IERC165",
												"nameLocations": [
													"34592:7:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 11,
												"src": "34592:7:0"
											},
											{
												"id": 1576,
												"name": "ERC721",
												"nameLocations": [
													"34601:6:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1518,
												"src": "34601:6:0"
											}
										],
										"src": "34583:25:0"
									},
									"parameters": {
										"id": 1574,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1573,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "34550:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 1594,
												"src": "34543:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1572,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "34543:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34542:20:0"
									},
									"returnParameters": {
										"id": 1580,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1579,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1594,
												"src": "34618:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1578,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "34618:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34617:6:0"
									},
									"scope": 1882,
									"src": "34516:237:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1538
									],
									"body": {
										"id": 1621,
										"nodeType": "Block",
										"src": "34943:150:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1611,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1606,
																"name": "index",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1599,
																"src": "34962:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 1609,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1597,
																		"src": "34987:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 1607,
																		"name": "ERC721",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1518,
																		"src": "34970:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_ERC721_$1518_$",
																			"typeString": "type(contract ERC721)"
																		}
																	},
																	"id": 1608,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "34977:9:0",
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 818,
																	"src": "34970:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view returns (uint256)"
																	}
																},
																"id": 1610,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "34970:23:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "34962:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243373231456e756d657261626c653a206f776e657220696e646578206f7574206f6620626f756e6473",
															"id": 1612,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "34995:45:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1d7f5dcf03a65f41ee49b0ab593e3851cfbe3fd7da53b6cf4eddd83c7df5734c",
																"typeString": "literal_string \"ERC721Enumerable: owner index out of bounds\""
															},
															"value": "ERC721Enumerable: owner index out of bounds"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1d7f5dcf03a65f41ee49b0ab593e3851cfbe3fd7da53b6cf4eddd83c7df5734c",
																"typeString": "literal_string \"ERC721Enumerable: owner index out of bounds\""
															}
														],
														"id": 1605,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "34954:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1613,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "34954:87:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1614,
												"nodeType": "ExpressionStatement",
												"src": "34954:87:0"
											},
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 1615,
															"name": "_ownedTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1559,
															"src": "35059:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(uint256 => uint256))"
															}
														},
														"id": 1617,
														"indexExpression": {
															"id": 1616,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1597,
															"src": "35072:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "35059:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
															"typeString": "mapping(uint256 => uint256)"
														}
													},
													"id": 1619,
													"indexExpression": {
														"id": 1618,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1599,
														"src": "35079:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "35059:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1604,
												"id": 1620,
												"nodeType": "Return",
												"src": "35052:33:0"
											}
										]
									},
									"documentation": {
										"id": 1595,
										"nodeType": "StructuredDocumentation",
										"src": "34761:70:0",
										"text": " @dev See {IERC721Enumerable-tokenOfOwnerByIndex}."
									},
									"functionSelector": "2f745c59",
									"id": 1622,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenOfOwnerByIndex",
									"nameLocation": "34846:19:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1601,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "34916:8:0"
									},
									"parameters": {
										"id": 1600,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1597,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "34874:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1622,
												"src": "34866:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1596,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "34866:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1599,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "34889:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1622,
												"src": "34881:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1598,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "34881:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34865:30:0"
									},
									"returnParameters": {
										"id": 1604,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1603,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1622,
												"src": "34934:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1602,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "34934:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34933:9:0"
									},
									"scope": 1882,
									"src": "34837:256:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1528
									],
									"body": {
										"id": 1632,
										"nodeType": "Block",
										"src": "35239:43:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1629,
														"name": "_allTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1566,
														"src": "35257:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
															"typeString": "uint256[] storage ref"
														}
													},
													"id": 1630,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "35268:6:0",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "35257:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1628,
												"id": 1631,
												"nodeType": "Return",
												"src": "35250:24:0"
											}
										]
									},
									"documentation": {
										"id": 1623,
										"nodeType": "StructuredDocumentation",
										"src": "35101:62:0",
										"text": " @dev See {IERC721Enumerable-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 1633,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "35178:11:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1625,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "35212:8:0"
									},
									"parameters": {
										"id": 1624,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "35189:2:0"
									},
									"returnParameters": {
										"id": 1628,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1627,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1633,
												"src": "35230:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1626,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "35230:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "35229:9:0"
									},
									"scope": 1882,
									"src": "35169:113:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1546
									],
									"body": {
										"id": 1655,
										"nodeType": "Block",
										"src": "35443:149:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1647,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1643,
																"name": "index",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1636,
																"src": "35462:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 1644,
																		"name": "ERC721Enumerable",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1882,
																		"src": "35470:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_ERC721Enumerable_$1882_$",
																			"typeString": "type(contract ERC721Enumerable)"
																		}
																	},
																	"id": 1645,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "35487:11:0",
																	"memberName": "totalSupply",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1633,
																	"src": "35470:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 1646,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "35470:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "35462:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243373231456e756d657261626c653a20676c6f62616c20696e646578206f7574206f6620626f756e6473",
															"id": 1648,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "35502:46:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d269a4e9f5820dcdb69ea21f528512eb9b927c8d846d48aa51c9219f461d4dcc",
																"typeString": "literal_string \"ERC721Enumerable: global index out of bounds\""
															},
															"value": "ERC721Enumerable: global index out of bounds"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d269a4e9f5820dcdb69ea21f528512eb9b927c8d846d48aa51c9219f461d4dcc",
																"typeString": "literal_string \"ERC721Enumerable: global index out of bounds\""
															}
														],
														"id": 1642,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "35454:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1649,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "35454:95:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1650,
												"nodeType": "ExpressionStatement",
												"src": "35454:95:0"
											},
											{
												"expression": {
													"baseExpression": {
														"id": 1651,
														"name": "_allTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1566,
														"src": "35567:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
															"typeString": "uint256[] storage ref"
														}
													},
													"id": 1653,
													"indexExpression": {
														"id": 1652,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1636,
														"src": "35578:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "35567:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1641,
												"id": 1654,
												"nodeType": "Return",
												"src": "35560:24:0"
											}
										]
									},
									"documentation": {
										"id": 1634,
										"nodeType": "StructuredDocumentation",
										"src": "35290:63:0",
										"text": " @dev See {IERC721Enumerable-tokenByIndex}."
									},
									"functionSelector": "4f6ccce7",
									"id": 1656,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenByIndex",
									"nameLocation": "35368:12:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1638,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "35416:8:0"
									},
									"parameters": {
										"id": 1637,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1636,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "35389:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1656,
												"src": "35381:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1635,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "35381:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "35380:15:0"
									},
									"returnParameters": {
										"id": 1641,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1640,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1656,
												"src": "35434:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1639,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "35434:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "35433:9:0"
									},
									"scope": 1882,
									"src": "35359:233:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1517
									],
									"body": {
										"id": 1719,
										"nodeType": "Block",
										"src": "36304:456:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1670,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1659,
															"src": "36342:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1671,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1661,
															"src": "36348:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1672,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1663,
															"src": "36352:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1667,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "36315:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_ERC721Enumerable_$1882_$",
																"typeString": "type(contract super ERC721Enumerable)"
															}
														},
														"id": 1669,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "36321:20:0",
														"memberName": "_beforeTokenTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1517,
														"src": "36315:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1673,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "36315:45:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1674,
												"nodeType": "ExpressionStatement",
												"src": "36315:45:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1680,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1675,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1659,
														"src": "36377:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1678,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "36393:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1677,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "36385:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1676,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "36385:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 1679,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "36385:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "36377:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1688,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1686,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1659,
															"src": "36474:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 1687,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1661,
															"src": "36482:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "36474:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1695,
													"nodeType": "IfStatement",
													"src": "36470:90:0",
													"trueBody": {
														"id": 1694,
														"nodeType": "Block",
														"src": "36486:74:0",
														"statements": [
															{
																"expression": {
																	"arguments": [
																		{
																			"id": 1690,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1659,
																			"src": "36534:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1691,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1663,
																			"src": "36540:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1689,
																		"name": "_removeTokenFromOwnerEnumeration",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1833,
																		"src": "36501:32:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																			"typeString": "function (address,uint256)"
																		}
																	},
																	"id": 1692,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "36501:47:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 1693,
																"nodeType": "ExpressionStatement",
																"src": "36501:47:0"
															}
														]
													}
												},
												"id": 1696,
												"nodeType": "IfStatement",
												"src": "36373:187:0",
												"trueBody": {
													"id": 1685,
													"nodeType": "Block",
													"src": "36397:67:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1682,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1663,
																		"src": "36444:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1681,
																	"name": "_addTokenToAllTokensEnumeration",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1770,
																	"src": "36412:31:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 1683,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "36412:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1684,
															"nodeType": "ExpressionStatement",
															"src": "36412:40:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1702,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1697,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1661,
														"src": "36574:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1700,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "36588:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1699,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "36580:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1698,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "36580:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 1701,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "36580:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "36574:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1710,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1708,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1661,
															"src": "36674:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 1709,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1659,
															"src": "36680:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "36674:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1717,
													"nodeType": "IfStatement",
													"src": "36670:83:0",
													"trueBody": {
														"id": 1716,
														"nodeType": "Block",
														"src": "36686:67:0",
														"statements": [
															{
																"expression": {
																	"arguments": [
																		{
																			"id": 1712,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1661,
																			"src": "36729:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1713,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1663,
																			"src": "36733:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1711,
																		"name": "_addTokenToOwnerEnumeration",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1750,
																		"src": "36701:27:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																			"typeString": "function (address,uint256)"
																		}
																	},
																	"id": 1714,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "36701:40:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 1715,
																"nodeType": "ExpressionStatement",
																"src": "36701:40:0"
															}
														]
													}
												},
												"id": 1718,
												"nodeType": "IfStatement",
												"src": "36570:183:0",
												"trueBody": {
													"id": 1707,
													"nodeType": "Block",
													"src": "36592:72:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1704,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1663,
																		"src": "36644:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1703,
																	"name": "_removeTokenFromAllTokensEnumeration",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1881,
																	"src": "36607:36:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 1705,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "36607:45:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1706,
															"nodeType": "ExpressionStatement",
															"src": "36607:45:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1657,
										"nodeType": "StructuredDocumentation",
										"src": "35600:599:0",
										"text": " @dev Hook that is called before any token transfer. This includes minting\n and burning.\n Calling conditions:\n - When `from` and `to` are both non-zero, ``from``'s `tokenId` will be\n transferred to `to`.\n - When `from` is zero, `tokenId` will be minted for `to`.\n - When `to` is zero, ``from``'s `tokenId` will be burned.\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 1720,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nameLocation": "36214:20:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1665,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "36295:8:0"
									},
									"parameters": {
										"id": 1664,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1659,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "36243:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1720,
												"src": "36235:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1658,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "36235:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1661,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "36257:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1720,
												"src": "36249:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1660,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "36249:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1663,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "36269:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1720,
												"src": "36261:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1662,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "36261:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "36234:43:0"
									},
									"returnParameters": {
										"id": 1666,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "36304:0:0"
									},
									"scope": 1882,
									"src": "36205:555:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1749,
										"nodeType": "Block",
										"src": "37135:147:0",
										"statements": [
											{
												"assignments": [
													1729
												],
												"declarations": [
													{
														"constant": false,
														"id": 1729,
														"mutability": "mutable",
														"name": "length",
														"nameLocation": "37154:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 1749,
														"src": "37146:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1728,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "37146:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1734,
												"initialValue": {
													"arguments": [
														{
															"id": 1732,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1723,
															"src": "37180:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1730,
															"name": "ERC721",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1518,
															"src": "37163:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ERC721_$1518_$",
																"typeString": "type(contract ERC721)"
															}
														},
														"id": 1731,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "37170:9:0",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 818,
														"src": "37163:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 1733,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "37163:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "37146:37:0"
											},
											{
												"expression": {
													"id": 1741,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1735,
																"name": "_ownedTokens",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1559,
																"src": "37194:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(uint256 => uint256))"
																}
															},
															"id": 1738,
															"indexExpression": {
																"id": 1736,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1723,
																"src": "37207:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "37194:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1739,
														"indexExpression": {
															"id": 1737,
															"name": "length",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1729,
															"src": "37211:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "37194:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1740,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1725,
														"src": "37221:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "37194:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1742,
												"nodeType": "ExpressionStatement",
												"src": "37194:34:0"
											},
											{
												"expression": {
													"id": 1747,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1743,
															"name": "_ownedTokensIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1563,
															"src": "37239:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1745,
														"indexExpression": {
															"id": 1744,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1725,
															"src": "37257:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "37239:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1746,
														"name": "length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1729,
														"src": "37268:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "37239:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1748,
												"nodeType": "ExpressionStatement",
												"src": "37239:35:0"
											}
										]
									},
									"documentation": {
										"id": 1721,
										"nodeType": "StructuredDocumentation",
										"src": "36768:287:0",
										"text": " @dev Private function to add a token to this extension's ownership-tracking data structures.\n @param to address representing the new owner of the given token ID\n @param tokenId uint256 ID of the token to be added to the tokens list of the given address"
									},
									"id": 1750,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_addTokenToOwnerEnumeration",
									"nameLocation": "37070:27:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1726,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1723,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "37106:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1750,
												"src": "37098:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1722,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "37098:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1725,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "37118:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1750,
												"src": "37110:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1724,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "37110:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "37097:29:0"
									},
									"returnParameters": {
										"id": 1727,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "37135:0:0"
									},
									"scope": 1882,
									"src": "37061:221:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1769,
										"nodeType": "Block",
										"src": "37549:98:0",
										"statements": [
											{
												"expression": {
													"id": 1761,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1756,
															"name": "_allTokensIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1570,
															"src": "37560:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1758,
														"indexExpression": {
															"id": 1757,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1753,
															"src": "37576:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "37560:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1759,
															"name": "_allTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1566,
															"src": "37587:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														"id": 1760,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "37598:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "37587:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "37560:44:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1762,
												"nodeType": "ExpressionStatement",
												"src": "37560:44:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1766,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1753,
															"src": "37631:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1763,
															"name": "_allTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1566,
															"src": "37615:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														"id": 1765,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "37626:4:0",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "37615:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$attached_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
															"typeString": "function (uint256[] storage pointer,uint256)"
														}
													},
													"id": 1767,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "37615:24:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1768,
												"nodeType": "ExpressionStatement",
												"src": "37615:24:0"
											}
										]
									},
									"documentation": {
										"id": 1751,
										"nodeType": "StructuredDocumentation",
										"src": "37290:187:0",
										"text": " @dev Private function to add a token to this extension's token tracking data structures.\n @param tokenId uint256 ID of the token to be added to the tokens list"
									},
									"id": 1770,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_addTokenToAllTokensEnumeration",
									"nameLocation": "37492:31:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1754,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1753,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "37532:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1770,
												"src": "37524:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1752,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "37524:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "37523:17:0"
									},
									"returnParameters": {
										"id": 1755,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "37549:0:0"
									},
									"scope": 1882,
									"src": "37483:164:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1832,
										"nodeType": "Block",
										"src": "38355:907:0",
										"statements": [
											{
												"assignments": [
													1779
												],
												"declarations": [
													{
														"constant": false,
														"id": 1779,
														"mutability": "mutable",
														"name": "lastTokenIndex",
														"nameLocation": "38548:14:0",
														"nodeType": "VariableDeclaration",
														"scope": 1832,
														"src": "38540:22:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1778,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "38540:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1786,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1785,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 1782,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1773,
																"src": "38582:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 1780,
																"name": "ERC721",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1518,
																"src": "38565:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ERC721_$1518_$",
																	"typeString": "type(contract ERC721)"
																}
															},
															"id": 1781,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "38572:9:0",
															"memberName": "balanceOf",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 818,
															"src": "38565:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view returns (uint256)"
															}
														},
														"id": 1783,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "38565:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"hexValue": "31",
														"id": 1784,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "38590:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "38565:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "38540:51:0"
											},
											{
												"assignments": [
													1788
												],
												"declarations": [
													{
														"constant": false,
														"id": 1788,
														"mutability": "mutable",
														"name": "tokenIndex",
														"nameLocation": "38610:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 1832,
														"src": "38602:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1787,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "38602:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1792,
												"initialValue": {
													"baseExpression": {
														"id": 1789,
														"name": "_ownedTokensIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1563,
														"src": "38623:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
															"typeString": "mapping(uint256 => uint256)"
														}
													},
													"id": 1791,
													"indexExpression": {
														"id": 1790,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1775,
														"src": "38641:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "38623:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "38602:47:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1795,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1793,
														"name": "tokenIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1788,
														"src": "38756:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 1794,
														"name": "lastTokenIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1779,
														"src": "38770:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "38756:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1819,
												"nodeType": "IfStatement",
												"src": "38752:328:0",
												"trueBody": {
													"id": 1818,
													"nodeType": "Block",
													"src": "38786:294:0",
													"statements": [
														{
															"assignments": [
																1797
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1797,
																	"mutability": "mutable",
																	"name": "lastTokenId",
																	"nameLocation": "38809:11:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 1818,
																	"src": "38801:19:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1796,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "38801:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1803,
															"initialValue": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 1798,
																		"name": "_ownedTokens",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1559,
																		"src": "38823:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																			"typeString": "mapping(address => mapping(uint256 => uint256))"
																		}
																	},
																	"id": 1800,
																	"indexExpression": {
																		"id": 1799,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1773,
																		"src": "38836:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "38823:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																		"typeString": "mapping(uint256 => uint256)"
																	}
																},
																"id": 1802,
																"indexExpression": {
																	"id": 1801,
																	"name": "lastTokenIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1779,
																	"src": "38842:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "38823:34:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "38801:56:0"
														},
														{
															"expression": {
																"id": 1810,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 1804,
																			"name": "_ownedTokens",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1559,
																			"src": "38874:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(uint256 => uint256))"
																			}
																		},
																		"id": 1807,
																		"indexExpression": {
																			"id": 1805,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1773,
																			"src": "38887:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "38874:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																			"typeString": "mapping(uint256 => uint256)"
																		}
																	},
																	"id": 1808,
																	"indexExpression": {
																		"id": 1806,
																		"name": "tokenIndex",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1788,
																		"src": "38893:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "38874:30:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1809,
																	"name": "lastTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1797,
																	"src": "38907:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "38874:44:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1811,
															"nodeType": "ExpressionStatement",
															"src": "38874:44:0"
														},
														{
															"expression": {
																"id": 1816,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1812,
																		"name": "_ownedTokensIndex",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1563,
																		"src": "38991:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																			"typeString": "mapping(uint256 => uint256)"
																		}
																	},
																	"id": 1814,
																	"indexExpression": {
																		"id": 1813,
																		"name": "lastTokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1797,
																		"src": "39009:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "38991:30:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1815,
																	"name": "tokenIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1788,
																	"src": "39024:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "38991:43:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1817,
															"nodeType": "ExpressionStatement",
															"src": "38991:43:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1823,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "39169:33:0",
													"subExpression": {
														"baseExpression": {
															"id": 1820,
															"name": "_ownedTokensIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1563,
															"src": "39176:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1822,
														"indexExpression": {
															"id": 1821,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1775,
															"src": "39194:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "39176:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1824,
												"nodeType": "ExpressionStatement",
												"src": "39169:33:0"
											},
											{
												"expression": {
													"id": 1830,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "39213:41:0",
													"subExpression": {
														"baseExpression": {
															"baseExpression": {
																"id": 1825,
																"name": "_ownedTokens",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1559,
																"src": "39220:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(uint256 => uint256))"
																}
															},
															"id": 1827,
															"indexExpression": {
																"id": 1826,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1773,
																"src": "39233:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "39220:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1829,
														"indexExpression": {
															"id": 1828,
															"name": "lastTokenIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1779,
															"src": "39239:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "39220:34:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1831,
												"nodeType": "ExpressionStatement",
												"src": "39213:41:0"
											}
										]
									},
									"documentation": {
										"id": 1771,
										"nodeType": "StructuredDocumentation",
										"src": "37655:613:0",
										"text": " @dev Private function to remove a token from this extension's ownership-tracking data structures. Note that\n while the token is not assigned a new owner, the `_ownedTokensIndex` mapping is _not_ updated: this allows for\n gas optimizations e.g. when performing a transfer operation (avoiding double writes).\n This has O(1) time complexity, but alters the order of the _ownedTokens array.\n @param from address representing the previous owner of the given token ID\n @param tokenId uint256 ID of the token to be removed from the tokens list of the given address"
									},
									"id": 1833,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_removeTokenFromOwnerEnumeration",
									"nameLocation": "38283:32:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1776,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1773,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "38324:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1833,
												"src": "38316:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1772,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "38316:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1775,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "38338:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1833,
												"src": "38330:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1774,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "38330:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "38315:31:0"
									},
									"returnParameters": {
										"id": 1777,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "38355:0:0"
									},
									"scope": 1882,
									"src": "38274:988:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1880,
										"nodeType": "Block",
										"src": "39628:1008:0",
										"statements": [
											{
												"assignments": [
													1840
												],
												"declarations": [
													{
														"constant": false,
														"id": 1840,
														"mutability": "mutable",
														"name": "lastTokenIndex",
														"nameLocation": "39818:14:0",
														"nodeType": "VariableDeclaration",
														"scope": 1880,
														"src": "39810:22:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1839,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "39810:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1845,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1844,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1841,
															"name": "_allTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1566,
															"src": "39835:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														"id": 1842,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "39846:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "39835:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"hexValue": "31",
														"id": 1843,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "39855:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "39835:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "39810:46:0"
											},
											{
												"assignments": [
													1847
												],
												"declarations": [
													{
														"constant": false,
														"id": 1847,
														"mutability": "mutable",
														"name": "tokenIndex",
														"nameLocation": "39875:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 1880,
														"src": "39867:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1846,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "39867:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1851,
												"initialValue": {
													"baseExpression": {
														"id": 1848,
														"name": "_allTokensIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1570,
														"src": "39888:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
															"typeString": "mapping(uint256 => uint256)"
														}
													},
													"id": 1850,
													"indexExpression": {
														"id": 1849,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1836,
														"src": "39904:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "39888:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "39867:45:0"
											},
											{
												"assignments": [
													1853
												],
												"declarations": [
													{
														"constant": false,
														"id": 1853,
														"mutability": "mutable",
														"name": "lastTokenId",
														"nameLocation": "40247:11:0",
														"nodeType": "VariableDeclaration",
														"scope": 1880,
														"src": "40239:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1852,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "40239:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1857,
												"initialValue": {
													"baseExpression": {
														"id": 1854,
														"name": "_allTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1566,
														"src": "40261:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
															"typeString": "uint256[] storage ref"
														}
													},
													"id": 1856,
													"indexExpression": {
														"id": 1855,
														"name": "lastTokenIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1840,
														"src": "40272:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "40261:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "40239:48:0"
											},
											{
												"expression": {
													"id": 1862,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1858,
															"name": "_allTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1566,
															"src": "40300:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														"id": 1860,
														"indexExpression": {
															"id": 1859,
															"name": "tokenIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1847,
															"src": "40311:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "40300:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1861,
														"name": "lastTokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1853,
														"src": "40325:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "40300:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1863,
												"nodeType": "ExpressionStatement",
												"src": "40300:36:0"
											},
											{
												"expression": {
													"id": 1868,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1864,
															"name": "_allTokensIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1570,
															"src": "40405:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1866,
														"indexExpression": {
															"id": 1865,
															"name": "lastTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1853,
															"src": "40421:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "40405:28:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1867,
														"name": "tokenIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1847,
														"src": "40436:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "40405:41:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1869,
												"nodeType": "ExpressionStatement",
												"src": "40405:41:0"
											},
											{
												"expression": {
													"id": 1873,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "40570:31:0",
													"subExpression": {
														"baseExpression": {
															"id": 1870,
															"name": "_allTokensIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1570,
															"src": "40577:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1872,
														"indexExpression": {
															"id": 1871,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1836,
															"src": "40593:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "40577:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1874,
												"nodeType": "ExpressionStatement",
												"src": "40570:31:0"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1875,
															"name": "_allTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1566,
															"src": "40612:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														"id": 1877,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "40623:3:0",
														"memberName": "pop",
														"nodeType": "MemberAccess",
														"src": "40612:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypop_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$returns$__$attached_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
															"typeString": "function (uint256[] storage pointer)"
														}
													},
													"id": 1878,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "40612:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1879,
												"nodeType": "ExpressionStatement",
												"src": "40612:16:0"
											}
										]
									},
									"documentation": {
										"id": 1834,
										"nodeType": "StructuredDocumentation",
										"src": "39270:281:0",
										"text": " @dev Private function to remove a token from this extension's token tracking data structures.\n This has O(1) time complexity, but alters the order of the _allTokens array.\n @param tokenId uint256 ID of the token to be removed from the tokens list"
									},
									"id": 1881,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_removeTokenFromAllTokensEnumeration",
									"nameLocation": "39566:36:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1837,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1836,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "39611:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1881,
												"src": "39603:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1835,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "39603:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "39602:17:0"
									},
									"returnParameters": {
										"id": 1838,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "39628:0:0"
									},
									"scope": 1882,
									"src": "39557:1079:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 2309,
							"src": "33907:6732:0",
							"usedErrors": []
						},
						{
							"id": 1883,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "40734:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1885,
										"name": "ERC721",
										"nameLocations": [
											"40872:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1518,
										"src": "40872:6:0"
									},
									"id": 1886,
									"nodeType": "InheritanceSpecifier",
									"src": "40872:6:0"
								}
							],
							"canonicalName": "ERC721URIStorage",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1884,
								"nodeType": "StructuredDocumentation",
								"src": "40761:71:0",
								"text": " @dev ERC721 token with storage based token URI management."
							},
							"fullyImplemented": false,
							"id": 2008,
							"linearizedBaseContracts": [
								2008,
								1518,
								167,
								125,
								708,
								11,
								484
							],
							"name": "ERC721URIStorage",
							"nameLocation": "40852:16:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1889,
									"libraryName": {
										"id": 1887,
										"name": "Strings",
										"nameLocations": [
											"40892:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 686,
										"src": "40892:7:0"
									},
									"nodeType": "UsingForDirective",
									"src": "40886:26:0",
									"typeName": {
										"id": 1888,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "40904:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 1893,
									"mutability": "mutable",
									"name": "_tokenURIs",
									"nameLocation": "40996:10:0",
									"nodeType": "VariableDeclaration",
									"scope": 2008,
									"src": "40960:46:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
										"typeString": "mapping(uint256 => string)"
									},
									"typeName": {
										"id": 1892,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1890,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "40969:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "40960:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
											"typeString": "mapping(uint256 => string)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1891,
											"name": "string",
											"nodeType": "ElementaryTypeName",
											"src": "40980:6:0",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											}
										}
									},
									"visibility": "private"
								},
								{
									"baseFunctions": [
										908
									],
									"body": {
										"id": 1954,
										"nodeType": "Block",
										"src": "41166:591:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1904,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1896,
																	"src": "41193:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1903,
																"name": "_exists",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1156,
																"src": "41185:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (uint256) view returns (bool)"
																}
															},
															"id": 1905,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "41185:16:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524337323155524953746f726167653a2055524920717565727920666f72206e6f6e6578697374656e7420746f6b656e",
															"id": 1906,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "41203:51:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8e9ed1638ba7e2d59e03d0957c9339381732ac84d73f65c86c45db1467eafa2a",
																"typeString": "literal_string \"ERC721URIStorage: URI query for nonexistent token\""
															},
															"value": "ERC721URIStorage: URI query for nonexistent token"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8e9ed1638ba7e2d59e03d0957c9339381732ac84d73f65c86c45db1467eafa2a",
																"typeString": "literal_string \"ERC721URIStorage: URI query for nonexistent token\""
															}
														],
														"id": 1902,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "41177:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1907,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "41177:78:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1908,
												"nodeType": "ExpressionStatement",
												"src": "41177:78:0"
											},
											{
												"assignments": [
													1910
												],
												"declarations": [
													{
														"constant": false,
														"id": 1910,
														"mutability": "mutable",
														"name": "_tokenURI",
														"nameLocation": "41282:9:0",
														"nodeType": "VariableDeclaration",
														"scope": 1954,
														"src": "41268:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 1909,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "41268:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1914,
												"initialValue": {
													"baseExpression": {
														"id": 1911,
														"name": "_tokenURIs",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1893,
														"src": "41294:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
															"typeString": "mapping(uint256 => string storage ref)"
														}
													},
													"id": 1913,
													"indexExpression": {
														"id": 1912,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1896,
														"src": "41305:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "41294:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "41268:45:0"
											},
											{
												"assignments": [
													1916
												],
												"declarations": [
													{
														"constant": false,
														"id": 1916,
														"mutability": "mutable",
														"name": "base",
														"nameLocation": "41338:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 1954,
														"src": "41324:18:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 1915,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "41324:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1919,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1917,
														"name": "_baseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 917,
														"src": "41345:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () view returns (string memory)"
														}
													},
													"id": 1918,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "41345:10:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "41324:31:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1926,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1922,
																	"name": "base",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1916,
																	"src": "41437:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1921,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "41431:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																	"typeString": "type(bytes storage pointer)"
																},
																"typeName": {
																	"id": 1920,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "41431:5:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1923,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "41431:11:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1924,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "41443:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "41431:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1925,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "41453:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "41431:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1930,
												"nodeType": "IfStatement",
												"src": "41427:72:0",
												"trueBody": {
													"id": 1929,
													"nodeType": "Block",
													"src": "41456:43:0",
													"statements": [
														{
															"expression": {
																"id": 1927,
																"name": "_tokenURI",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1910,
																"src": "41478:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															"functionReturnParameters": 1901,
															"id": 1928,
															"nodeType": "Return",
															"src": "41471:16:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1937,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1933,
																	"name": "_tokenURI",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1910,
																	"src": "41609:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1932,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "41603:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																	"typeString": "type(bytes storage pointer)"
																},
																"typeName": {
																	"id": 1931,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "41603:5:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1934,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "41603:16:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1935,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "41620:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "41603:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1936,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "41629:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "41603:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1948,
												"nodeType": "IfStatement",
												"src": "41599:108:0",
												"trueBody": {
													"id": 1947,
													"nodeType": "Block",
													"src": "41632:75:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1942,
																				"name": "base",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1916,
																				"src": "41678:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string memory"
																				}
																			},
																			{
																				"id": 1943,
																				"name": "_tokenURI",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1910,
																				"src": "41684:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string memory"
																				},
																				{
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string memory"
																				}
																			],
																			"expression": {
																				"id": 1940,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "41661:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 1941,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "41665:12:0",
																			"memberName": "encodePacked",
																			"nodeType": "MemberAccess",
																			"src": "41661:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 1944,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "41661:33:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1939,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "41654:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																		"typeString": "type(string storage pointer)"
																	},
																	"typeName": {
																		"id": 1938,
																		"name": "string",
																		"nodeType": "ElementaryTypeName",
																		"src": "41654:6:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1945,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "41654:41:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															"functionReturnParameters": 1901,
															"id": 1946,
															"nodeType": "Return",
															"src": "41647:48:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1951,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1896,
															"src": "41741:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1949,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "41726:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_ERC721URIStorage_$2008_$",
																"typeString": "type(contract super ERC721URIStorage)"
															}
														},
														"id": 1950,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "41732:8:0",
														"memberName": "tokenURI",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 908,
														"src": "41726:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256) view returns (string memory)"
														}
													},
													"id": 1952,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "41726:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1901,
												"id": 1953,
												"nodeType": "Return",
												"src": "41719:30:0"
											}
										]
									},
									"documentation": {
										"id": 1894,
										"nodeType": "StructuredDocumentation",
										"src": "41015:57:0",
										"text": " @dev See {IERC721Metadata-tokenURI}."
									},
									"functionSelector": "c87b56dd",
									"id": 1955,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "41087:8:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1898,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "41133:8:0"
									},
									"parameters": {
										"id": 1897,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1896,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "41104:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1955,
												"src": "41096:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1895,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "41096:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "41095:17:0"
									},
									"returnParameters": {
										"id": 1901,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1900,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1955,
												"src": "41151:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1899,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "41151:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "41150:15:0"
									},
									"scope": 2008,
									"src": "41078:679:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1976,
										"nodeType": "Block",
										"src": "41994:136:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1965,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1958,
																	"src": "42021:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1964,
																"name": "_exists",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1156,
																"src": "42013:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (uint256) view returns (bool)"
																}
															},
															"id": 1966,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "42013:16:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524337323155524953746f726167653a2055524920736574206f66206e6f6e6578697374656e7420746f6b656e",
															"id": 1967,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "42031:48:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4",
																"typeString": "literal_string \"ERC721URIStorage: URI set of nonexistent token\""
															},
															"value": "ERC721URIStorage: URI set of nonexistent token"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4",
																"typeString": "literal_string \"ERC721URIStorage: URI set of nonexistent token\""
															}
														],
														"id": 1963,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "42005:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1968,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "42005:75:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1969,
												"nodeType": "ExpressionStatement",
												"src": "42005:75:0"
											},
											{
												"expression": {
													"id": 1974,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1970,
															"name": "_tokenURIs",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1893,
															"src": "42091:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
																"typeString": "mapping(uint256 => string storage ref)"
															}
														},
														"id": 1972,
														"indexExpression": {
															"id": 1971,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1958,
															"src": "42102:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "42091:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1973,
														"name": "_tokenURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1960,
														"src": "42113:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "42091:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 1975,
												"nodeType": "ExpressionStatement",
												"src": "42091:31:0"
											}
										]
									},
									"documentation": {
										"id": 1956,
										"nodeType": "StructuredDocumentation",
										"src": "41765:142:0",
										"text": " @dev Sets `_tokenURI` as the tokenURI of `tokenId`.\n Requirements:\n - `tokenId` must exist."
									},
									"id": 1977,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setTokenURI",
									"nameLocation": "41922:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1961,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1958,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "41943:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1977,
												"src": "41935:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1957,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "41935:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1960,
												"mutability": "mutable",
												"name": "_tokenURI",
												"nameLocation": "41966:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1977,
												"src": "41952:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1959,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "41952:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "41934:42:0"
									},
									"returnParameters": {
										"id": 1962,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "41994:0:0"
									},
									"scope": 2008,
									"src": "41913:217:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1349
									],
									"body": {
										"id": 2006,
										"nodeType": "Block",
										"src": "42417:148:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1987,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1980,
															"src": "42440:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1984,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "42428:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_ERC721URIStorage_$2008_$",
																"typeString": "type(contract super ERC721URIStorage)"
															}
														},
														"id": 1986,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "42434:5:0",
														"memberName": "_burn",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1349,
														"src": "42428:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1988,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "42428:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1989,
												"nodeType": "ExpressionStatement",
												"src": "42428:20:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1998,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"baseExpression": {
																		"id": 1992,
																		"name": "_tokenURIs",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1893,
																		"src": "42471:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
																			"typeString": "mapping(uint256 => string storage ref)"
																		}
																	},
																	"id": 1994,
																	"indexExpression": {
																		"id": 1993,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1980,
																		"src": "42482:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "42471:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage",
																		"typeString": "string storage ref"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_storage",
																		"typeString": "string storage ref"
																	}
																],
																"id": 1991,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "42465:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																	"typeString": "type(bytes storage pointer)"
																},
																"typeName": {
																	"id": 1990,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "42465:5:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1995,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "42465:26:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes storage pointer"
															}
														},
														"id": 1996,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "42492:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "42465:33:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1997,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "42502:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "42465:38:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2005,
												"nodeType": "IfStatement",
												"src": "42461:97:0",
												"trueBody": {
													"id": 2004,
													"nodeType": "Block",
													"src": "42505:53:0",
													"statements": [
														{
															"expression": {
																"id": 2002,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "delete",
																"prefix": true,
																"src": "42520:26:0",
																"subExpression": {
																	"baseExpression": {
																		"id": 1999,
																		"name": "_tokenURIs",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1893,
																		"src": "42527:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
																			"typeString": "mapping(uint256 => string storage ref)"
																		}
																	},
																	"id": 2001,
																	"indexExpression": {
																		"id": 2000,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1980,
																		"src": "42538:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "42527:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage",
																		"typeString": "string storage ref"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2003,
															"nodeType": "ExpressionStatement",
															"src": "42520:26:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1978,
										"nodeType": "StructuredDocumentation",
										"src": "42138:215:0",
										"text": " @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."
									},
									"id": 2007,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "42368:5:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1982,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "42408:8:0"
									},
									"parameters": {
										"id": 1981,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1980,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "42382:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2007,
												"src": "42374:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1979,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "42374:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "42373:17:0"
									},
									"returnParameters": {
										"id": 1983,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "42417:0:0"
									},
									"scope": 2008,
									"src": "42359:206:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 2309,
							"src": "40834:1734:0",
							"usedErrors": []
						},
						{
							"id": 2009,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "42637:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 2011,
										"name": "Context",
										"nameLocations": [
											"43200:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 484,
										"src": "43200:7:0"
									},
									"id": 2012,
									"nodeType": "InheritanceSpecifier",
									"src": "43200:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2010,
								"nodeType": "StructuredDocumentation",
								"src": "42664:505:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 2116,
							"linearizedBaseContracts": [
								2116,
								484
							],
							"name": "Ownable",
							"nameLocation": "43189:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 2014,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "43231:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 2116,
									"src": "43215:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2013,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "43215:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 2020,
									"name": "OwnershipTransferred",
									"nameLocation": "43252:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2019,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2016,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "43289:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 2020,
												"src": "43273:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2015,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "43273:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2018,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "43320:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 2020,
												"src": "43304:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2017,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "43304:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "43272:57:0"
									},
									"src": "43246:84:0"
								},
								{
									"body": {
										"id": 2041,
										"nodeType": "Block",
										"src": "43452:139:0",
										"statements": [
											{
												"assignments": [
													2025
												],
												"declarations": [
													{
														"constant": false,
														"id": 2025,
														"mutability": "mutable",
														"name": "msgSender",
														"nameLocation": "43471:9:0",
														"nodeType": "VariableDeclaration",
														"scope": 2041,
														"src": "43463:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2024,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "43463:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2028,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2026,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 472,
														"src": "43483:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 2027,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "43483:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "43463:32:0"
											},
											{
												"expression": {
													"id": 2031,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2029,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2014,
														"src": "43506:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2030,
														"name": "msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2025,
														"src": "43515:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "43506:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2032,
												"nodeType": "ExpressionStatement",
												"src": "43506:18:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2036,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "43569:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2035,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "43561:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2034,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "43561:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 2037,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "43561:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2038,
															"name": "msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2025,
															"src": "43573:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2033,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2020,
														"src": "43540:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 2039,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "43540:43:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2040,
												"nodeType": "EmitStatement",
												"src": "43535:48:0"
											}
										]
									},
									"documentation": {
										"id": 2021,
										"nodeType": "StructuredDocumentation",
										"src": "43338:93:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 2042,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2022,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "43449:2:0"
									},
									"returnParameters": {
										"id": 2023,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "43452:0:0"
									},
									"scope": 2116,
									"src": "43437:154:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2050,
										"nodeType": "Block",
										"src": "43727:32:0",
										"statements": [
											{
												"expression": {
													"id": 2048,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2014,
													"src": "43745:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2047,
												"id": 2049,
												"nodeType": "Return",
												"src": "43738:13:0"
											}
										]
									},
									"documentation": {
										"id": 2043,
										"nodeType": "StructuredDocumentation",
										"src": "43599:67:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 2051,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "43681:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2044,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "43686:2:0"
									},
									"returnParameters": {
										"id": 2047,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2046,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2051,
												"src": "43718:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2045,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "43718:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "43717:9:0"
									},
									"scope": 2116,
									"src": "43672:87:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2064,
										"nodeType": "Block",
										"src": "43873:99:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2059,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 2055,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2051,
																	"src": "43892:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 2056,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "43892:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 2057,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 472,
																	"src": "43903:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 2058,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "43903:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "43892:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 2060,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "43917:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 2054,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "43884:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2061,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "43884:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2062,
												"nodeType": "ExpressionStatement",
												"src": "43884:68:0"
											},
											{
												"id": 2063,
												"nodeType": "PlaceholderStatement",
												"src": "43963:1:0"
											}
										]
									},
									"documentation": {
										"id": 2052,
										"nodeType": "StructuredDocumentation",
										"src": "43767:79:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 2065,
									"name": "onlyOwner",
									"nameLocation": "43861:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 2053,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "43870:2:0"
									},
									"src": "43852:120:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2086,
										"nodeType": "Block",
										"src": "44377:94:0",
										"statements": [
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2072,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2014,
															"src": "44414:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2075,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "44430:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2074,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "44422:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2073,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "44422:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 2076,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "44422:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2071,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2020,
														"src": "44393:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 2077,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "44393:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2078,
												"nodeType": "EmitStatement",
												"src": "44388:45:0"
											},
											{
												"expression": {
													"id": 2084,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2079,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2014,
														"src": "44444:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2082,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "44461:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2081,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "44453:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2080,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "44453:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 2083,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "44453:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "44444:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2085,
												"nodeType": "ExpressionStatement",
												"src": "44444:19:0"
											}
										]
									},
									"documentation": {
										"id": 2066,
										"nodeType": "StructuredDocumentation",
										"src": "43980:337:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 2087,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2069,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2068,
												"name": "onlyOwner",
												"nameLocations": [
													"44367:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2065,
												"src": "44367:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "44367:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "44332:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2067,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "44349:2:0"
									},
									"returnParameters": {
										"id": 2070,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "44377:0:0"
									},
									"scope": 2116,
									"src": "44323:148:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2114,
										"nodeType": "Block",
										"src": "44696:174:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2101,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2096,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2090,
																"src": "44715:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2099,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "44735:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2098,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "44727:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2097,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "44727:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 2100,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "44727:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "44715:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 2102,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "44739:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 2095,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "44707:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "44707:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2104,
												"nodeType": "ExpressionStatement",
												"src": "44707:73:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2106,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2014,
															"src": "44817:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2107,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2090,
															"src": "44825:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2105,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2020,
														"src": "44796:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 2108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "44796:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2109,
												"nodeType": "EmitStatement",
												"src": "44791:43:0"
											},
											{
												"expression": {
													"id": 2112,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2110,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2014,
														"src": "44845:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2111,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2090,
														"src": "44854:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "44845:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2113,
												"nodeType": "ExpressionStatement",
												"src": "44845:17:0"
											}
										]
									},
									"documentation": {
										"id": 2088,
										"nodeType": "StructuredDocumentation",
										"src": "44479:141:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 2115,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2093,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2092,
												"name": "onlyOwner",
												"nameLocations": [
													"44686:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2065,
												"src": "44686:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "44686:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "44635:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2091,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2090,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "44661:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 2115,
												"src": "44653:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2089,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "44653:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "44652:18:0"
									},
									"returnParameters": {
										"id": 2094,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "44696:0:0"
									},
									"scope": 2116,
									"src": "44626:244:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 2309,
							"src": "43171:1702:0",
							"usedErrors": []
						},
						{
							"id": 2117,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "44942:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Counters",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2118,
								"nodeType": "StructuredDocumentation",
								"src": "44969:318:0",
								"text": " @title Counters\n @author Matt Condon (@shrugs)\n @dev Provides counters that can only be incremented or decremented by one. This can be used e.g. to track the number\n of elements in a mapping, issuing ERC721 ids, or counting request ids.\n Include with `using Counters for Counters.Counter;`"
							},
							"fullyImplemented": true,
							"id": 2176,
							"linearizedBaseContracts": [
								2176
							],
							"name": "Counters",
							"nameLocation": "45297:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Counters.Counter",
									"id": 2121,
									"members": [
										{
											"constant": false,
											"id": 2120,
											"mutability": "mutable",
											"name": "_value",
											"nameLocation": "45664:6:0",
											"nodeType": "VariableDeclaration",
											"scope": 2121,
											"src": "45656:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2119,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "45656:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Counter",
									"nameLocation": "45320:7:0",
									"nodeType": "StructDefinition",
									"scope": 2176,
									"src": "45313:379:0",
									"visibility": "public"
								},
								{
									"body": {
										"id": 2132,
										"nodeType": "Block",
										"src": "45774:40:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 2129,
														"name": "counter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2124,
														"src": "45792:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Counter_$2121_storage_ptr",
															"typeString": "struct Counters.Counter storage pointer"
														}
													},
													"id": 2130,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "45800:6:0",
													"memberName": "_value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 2120,
													"src": "45792:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2128,
												"id": 2131,
												"nodeType": "Return",
												"src": "45785:21:0"
											}
										]
									},
									"id": 2133,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "current",
									"nameLocation": "45709:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2125,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2124,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "45733:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2133,
												"src": "45717:23:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$2121_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 2123,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2122,
														"name": "Counter",
														"nameLocations": [
															"45717:7:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2121,
														"src": "45717:7:0"
													},
													"referencedDeclaration": 2121,
													"src": "45717:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$2121_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "45716:25:0"
									},
									"returnParameters": {
										"id": 2128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2127,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2133,
												"src": "45765:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2126,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "45765:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "45764:9:0"
									},
									"scope": 2176,
									"src": "45700:114:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2146,
										"nodeType": "Block",
										"src": "45875:74:0",
										"statements": [
											{
												"id": 2145,
												"nodeType": "UncheckedBlock",
												"src": "45886:56:0",
												"statements": [
													{
														"expression": {
															"id": 2143,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"id": 2139,
																	"name": "counter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2136,
																	"src": "45911:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Counter_$2121_storage_ptr",
																		"typeString": "struct Counters.Counter storage pointer"
																	}
																},
																"id": 2141,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "45919:6:0",
																"memberName": "_value",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2120,
																"src": "45911:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"hexValue": "31",
																"id": 2142,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "45929:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "45911:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2144,
														"nodeType": "ExpressionStatement",
														"src": "45911:19:0"
													}
												]
											}
										]
									},
									"id": 2147,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increment",
									"nameLocation": "45831:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2137,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2136,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "45857:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2147,
												"src": "45841:23:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$2121_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 2135,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2134,
														"name": "Counter",
														"nameLocations": [
															"45841:7:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2121,
														"src": "45841:7:0"
													},
													"referencedDeclaration": 2121,
													"src": "45841:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$2121_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "45840:25:0"
									},
									"returnParameters": {
										"id": 2138,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "45875:0:0"
									},
									"scope": 2176,
									"src": "45822:127:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2174,
										"nodeType": "Block",
										"src": "46010:182:0",
										"statements": [
											{
												"assignments": [
													2154
												],
												"declarations": [
													{
														"constant": false,
														"id": 2154,
														"mutability": "mutable",
														"name": "value",
														"nameLocation": "46029:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 2174,
														"src": "46021:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2153,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "46021:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2157,
												"initialValue": {
													"expression": {
														"id": 2155,
														"name": "counter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2150,
														"src": "46037:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Counter_$2121_storage_ptr",
															"typeString": "struct Counters.Counter storage pointer"
														}
													},
													"id": 2156,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "46045:6:0",
													"memberName": "_value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 2120,
													"src": "46037:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "46021:30:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2161,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2159,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2154,
																"src": "46070:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2160,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "46078:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "46070:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "436f756e7465723a2064656372656d656e74206f766572666c6f77",
															"id": 2162,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "46081:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f",
																"typeString": "literal_string \"Counter: decrement overflow\""
															},
															"value": "Counter: decrement overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f",
																"typeString": "literal_string \"Counter: decrement overflow\""
															}
														],
														"id": 2158,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "46062:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2163,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "46062:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2164,
												"nodeType": "ExpressionStatement",
												"src": "46062:49:0"
											},
											{
												"id": 2173,
												"nodeType": "UncheckedBlock",
												"src": "46122:63:0",
												"statements": [
													{
														"expression": {
															"id": 2171,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"id": 2165,
																	"name": "counter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2150,
																	"src": "46147:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Counter_$2121_storage_ptr",
																		"typeString": "struct Counters.Counter storage pointer"
																	}
																},
																"id": 2167,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "46155:6:0",
																"memberName": "_value",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2120,
																"src": "46147:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2170,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2168,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2154,
																	"src": "46164:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2169,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "46172:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "46164:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "46147:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2172,
														"nodeType": "ExpressionStatement",
														"src": "46147:26:0"
													}
												]
											}
										]
									},
									"id": 2175,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decrement",
									"nameLocation": "45966:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2150,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "45992:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2175,
												"src": "45976:23:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$2121_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 2149,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2148,
														"name": "Counter",
														"nameLocations": [
															"45976:7:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2121,
														"src": "45976:7:0"
													},
													"referencedDeclaration": 2121,
													"src": "45976:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$2121_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "45975:25:0"
									},
									"returnParameters": {
										"id": 2152,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "46010:0:0"
									},
									"scope": 2176,
									"src": "45957:235:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2309,
							"src": "45289:906:0",
							"usedErrors": []
						},
						{
							"id": 2177,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "46237:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 2178,
										"name": "ERC721",
										"nameLocations": [
											"46298:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1518,
										"src": "46298:6:0"
									},
									"id": 2179,
									"nodeType": "InheritanceSpecifier",
									"src": "46298:6:0"
								},
								{
									"baseName": {
										"id": 2180,
										"name": "ERC721Enumerable",
										"nameLocations": [
											"46306:16:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1882,
										"src": "46306:16:0"
									},
									"id": 2181,
									"nodeType": "InheritanceSpecifier",
									"src": "46306:16:0"
								},
								{
									"baseName": {
										"id": 2182,
										"name": "ERC721URIStorage",
										"nameLocations": [
											"46324:16:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2008,
										"src": "46324:16:0"
									},
									"id": 2183,
									"nodeType": "InheritanceSpecifier",
									"src": "46324:16:0"
								},
								{
									"baseName": {
										"id": 2184,
										"name": "Ownable",
										"nameLocations": [
											"46342:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2116,
										"src": "46342:7:0"
									},
									"id": 2185,
									"nodeType": "InheritanceSpecifier",
									"src": "46342:7:0"
								}
							],
							"canonicalName": "MinteriumUser",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2308,
							"linearizedBaseContracts": [
								2308,
								2116,
								2008,
								1882,
								1547,
								1518,
								167,
								125,
								708,
								11,
								484
							],
							"name": "MinteriumUser",
							"nameLocation": "46281:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 2189,
									"libraryName": {
										"id": 2186,
										"name": "Counters",
										"nameLocations": [
											"46363:8:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2176,
										"src": "46363:8:0"
									},
									"nodeType": "UsingForDirective",
									"src": "46357:36:0",
									"typeName": {
										"id": 2188,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 2187,
											"name": "Counters.Counter",
											"nameLocations": [
												"46376:8:0",
												"46385:7:0"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 2121,
											"src": "46376:16:0"
										},
										"referencedDeclaration": 2121,
										"src": "46376:16:0",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Counter_$2121_storage_ptr",
											"typeString": "struct Counters.Counter"
										}
									}
								},
								{
									"constant": false,
									"id": 2192,
									"mutability": "mutable",
									"name": "_tokenIdCounter",
									"nameLocation": "46426:15:0",
									"nodeType": "VariableDeclaration",
									"scope": 2308,
									"src": "46401:40:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_Counter_$2121_storage",
										"typeString": "struct Counters.Counter"
									},
									"typeName": {
										"id": 2191,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 2190,
											"name": "Counters.Counter",
											"nameLocations": [
												"46401:8:0",
												"46410:7:0"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 2121,
											"src": "46401:16:0"
										},
										"referencedDeclaration": 2121,
										"src": "46401:16:0",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Counter_$2121_storage_ptr",
											"typeString": "struct Counters.Counter"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 2203,
										"nodeType": "Block",
										"src": "46529:2:0",
										"statements": []
									},
									"id": 2204,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 2199,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2194,
													"src": "46513:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												{
													"id": 2200,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2196,
													"src": "46520:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												}
											],
											"id": 2201,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 2198,
												"name": "ERC721",
												"nameLocations": [
													"46506:6:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1518,
												"src": "46506:6:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "46506:22:0"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2197,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2194,
												"mutability": "mutable",
												"name": "_name",
												"nameLocation": "46476:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2204,
												"src": "46462:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2193,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "46462:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2196,
												"mutability": "mutable",
												"name": "_symbol",
												"nameLocation": "46497:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2204,
												"src": "46483:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2195,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "46483:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "46461:44:0"
									},
									"returnParameters": {
										"id": 2202,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "46529:0:0"
									},
									"scope": 2308,
									"src": "46450:81:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2238,
										"nodeType": "Block",
										"src": "46635:204:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 2215,
															"name": "_tokenIdCounter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2192,
															"src": "46646:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$2121_storage",
																"typeString": "struct Counters.Counter storage ref"
															}
														},
														"id": 2217,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "46662:9:0",
														"memberName": "increment",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2147,
														"src": "46646:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$2121_storage_ptr_$returns$__$attached_to$_t_struct$_Counter_$2121_storage_ptr_$",
															"typeString": "function (struct Counters.Counter storage pointer)"
														}
													},
													"id": 2218,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "46646:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2219,
												"nodeType": "ExpressionStatement",
												"src": "46646:27:0"
											},
											{
												"assignments": [
													2221
												],
												"declarations": [
													{
														"constant": false,
														"id": 2221,
														"mutability": "mutable",
														"name": "_current",
														"nameLocation": "46692:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 2238,
														"src": "46684:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2220,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "46684:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2225,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 2222,
															"name": "_tokenIdCounter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2192,
															"src": "46703:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$2121_storage",
																"typeString": "struct Counters.Counter storage ref"
															}
														},
														"id": 2223,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "46719:7:0",
														"memberName": "current",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2133,
														"src": "46703:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$2121_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Counter_$2121_storage_ptr_$",
															"typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
														}
													},
													"id": 2224,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "46703:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "46684:44:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2227,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2206,
															"src": "46749:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2228,
															"name": "_current",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2221,
															"src": "46753:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2226,
														"name": "_safeMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1212,
															1241
														],
														"referencedDeclaration": 1212,
														"src": "46739:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2229,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "46739:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2230,
												"nodeType": "ExpressionStatement",
												"src": "46739:23:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2232,
															"name": "_current",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2221,
															"src": "46786:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2233,
															"name": "tokenURI",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2208,
															"src": "46796:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 2231,
														"name": "_setTokenURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1977,
														"src": "46773:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (uint256,string memory)"
														}
													},
													"id": 2234,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "46773:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2235,
												"nodeType": "ExpressionStatement",
												"src": "46773:32:0"
											},
											{
												"expression": {
													"id": 2236,
													"name": "_current",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2221,
													"src": "46823:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2214,
												"id": 2237,
												"nodeType": "Return",
												"src": "46816:15:0"
											}
										]
									},
									"functionSelector": "d204c45e",
									"id": 2239,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2211,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2210,
												"name": "onlyOwner",
												"nameLocations": [
													"46600:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2065,
												"src": "46600:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "46600:9:0"
										}
									],
									"name": "safeMint",
									"nameLocation": "46548:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2209,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2206,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "46565:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2239,
												"src": "46557:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2205,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "46557:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2208,
												"mutability": "mutable",
												"name": "tokenURI",
												"nameLocation": "46583:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 2239,
												"src": "46569:22:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2207,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "46569:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "46556:36:0"
									},
									"returnParameters": {
										"id": 2214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2213,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "46626:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2239,
												"src": "46618:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2212,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "46618:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "46617:17:0"
									},
									"scope": 2308,
									"src": "46539:300:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1517,
										1720
									],
									"body": {
										"id": 2259,
										"nodeType": "Block",
										"src": "46964:64:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2254,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2241,
															"src": "47002:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2255,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2243,
															"src": "47008:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2256,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2245,
															"src": "47012:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2251,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "46975:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_MinteriumUser_$2308_$",
																"typeString": "type(contract super MinteriumUser)"
															}
														},
														"id": 2253,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "46981:20:0",
														"memberName": "_beforeTokenTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1720,
														"src": "46975:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2257,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "46975:45:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2258,
												"nodeType": "ExpressionStatement",
												"src": "46975:45:0"
											}
										]
									},
									"id": 2260,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nameLocation": "46856:20:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2249,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 2247,
												"name": "ERC721",
												"nameLocations": [
													"46938:6:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1518,
												"src": "46938:6:0"
											},
											{
												"id": 2248,
												"name": "ERC721Enumerable",
												"nameLocations": [
													"46946:16:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1882,
												"src": "46946:16:0"
											}
										],
										"src": "46929:34:0"
									},
									"parameters": {
										"id": 2246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2241,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "46885:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2260,
												"src": "46877:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "46877:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2243,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "46899:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2260,
												"src": "46891:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2242,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "46891:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2245,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "46911:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2260,
												"src": "46903:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "46903:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "46876:43:0"
									},
									"returnParameters": {
										"id": 2250,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "46964:0:0"
									},
									"scope": 2308,
									"src": "46847:181:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1349,
										2007
									],
									"body": {
										"id": 2274,
										"nodeType": "Block",
										"src": "47112:39:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2271,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2262,
															"src": "47135:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2268,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "47123:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_MinteriumUser_$2308_$",
																"typeString": "type(contract super MinteriumUser)"
															}
														},
														"id": 2270,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "47129:5:0",
														"memberName": "_burn",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2007,
														"src": "47123:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 2272,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "47123:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2273,
												"nodeType": "ExpressionStatement",
												"src": "47123:20:0"
											}
										]
									},
									"id": 2275,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "47045:5:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2266,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 2264,
												"name": "ERC721",
												"nameLocations": [
													"47086:6:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1518,
												"src": "47086:6:0"
											},
											{
												"id": 2265,
												"name": "ERC721URIStorage",
												"nameLocations": [
													"47094:16:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2008,
												"src": "47094:16:0"
											}
										],
										"src": "47077:34:0"
									},
									"parameters": {
										"id": 2263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2262,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "47059:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2275,
												"src": "47051:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2261,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "47051:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "47050:17:0"
									},
									"returnParameters": {
										"id": 2267,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "47112:0:0"
									},
									"scope": 2308,
									"src": "47036:115:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										908,
										1955
									],
									"body": {
										"id": 2290,
										"nodeType": "Block",
										"src": "47265:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2287,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2277,
															"src": "47298:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2285,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "47283:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_MinteriumUser_$2308_$",
																"typeString": "type(contract super MinteriumUser)"
															}
														},
														"id": 2286,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "47289:8:0",
														"memberName": "tokenURI",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1955,
														"src": "47283:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256) view returns (string memory)"
														}
													},
													"id": 2288,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "47283:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 2284,
												"id": 2289,
												"nodeType": "Return",
												"src": "47276:30:0"
											}
										]
									},
									"functionSelector": "c87b56dd",
									"id": 2291,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "47168:8:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2281,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 2279,
												"name": "ERC721",
												"nameLocations": [
													"47215:6:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1518,
												"src": "47215:6:0"
											},
											{
												"id": 2280,
												"name": "ERC721URIStorage",
												"nameLocations": [
													"47223:16:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2008,
												"src": "47223:16:0"
											}
										],
										"src": "47206:34:0"
									},
									"parameters": {
										"id": 2278,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2277,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "47185:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2291,
												"src": "47177:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2276,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "47177:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "47176:17:0"
									},
									"returnParameters": {
										"id": 2284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2283,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2291,
												"src": "47250:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2282,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "47250:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "47249:15:0"
									},
									"scope": 2308,
									"src": "47159:155:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										794,
										1594
									],
									"body": {
										"id": 2306,
										"nodeType": "Block",
										"src": "47431:62:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2303,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2293,
															"src": "47473:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														],
														"expression": {
															"id": 2301,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "47449:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_MinteriumUser_$2308_$",
																"typeString": "type(contract super MinteriumUser)"
															}
														},
														"id": 2302,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "47455:17:0",
														"memberName": "supportsInterface",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1594,
														"src": "47449:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
															"typeString": "function (bytes4) view returns (bool)"
														}
													},
													"id": 2304,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "47449:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2300,
												"id": 2305,
												"nodeType": "Return",
												"src": "47442:43:0"
											}
										]
									},
									"functionSelector": "01ffc9a7",
									"id": 2307,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "47331:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2297,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 2295,
												"name": "ERC721",
												"nameLocations": [
													"47390:6:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1518,
												"src": "47390:6:0"
											},
											{
												"id": 2296,
												"name": "ERC721Enumerable",
												"nameLocations": [
													"47398:16:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1882,
												"src": "47398:16:0"
											}
										],
										"src": "47381:34:0"
									},
									"parameters": {
										"id": 2294,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2293,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "47356:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 2307,
												"src": "47349:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 2292,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "47349:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "47348:20:0"
									},
									"returnParameters": {
										"id": 2300,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2299,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2307,
												"src": "47425:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2298,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "47425:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "47424:6:0"
									},
									"scope": 2308,
									"src": "47322:171:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 2309,
							"src": "46272:1224:0",
							"usedErrors": []
						}
					],
					"src": "247:47249:0"
				},
				"id": 0
			}
		}
	}
}